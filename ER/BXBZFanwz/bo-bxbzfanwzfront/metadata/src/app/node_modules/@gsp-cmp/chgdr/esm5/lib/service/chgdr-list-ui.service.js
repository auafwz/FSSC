/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, ComponentFactoryResolver, Injector } from '@angular/core';
import { MessagerService } from '@farris/ui-messager';
import { BsModalService } from '@farris/ui-modal';
import { ChgdrListDialogContentComponent } from '../chgdr-list-dialog-content/chgdr-list-dialog-content.component';
import * as i0 from "@angular/core";
import * as i1 from "@farris/ui-modal";
import * as i2 from "@farris/ui-messager";
var ChgdrListUiService = /** @class */ (function () {
    function ChgdrListUiService(resolver, injector, modalService, messagerService) {
        this.resolver = resolver;
        this.injector = injector;
        this.modalService = modalService;
        this.messagerService = messagerService;
    }
    /**
     * @param {?} entityId
     * @param {?} dataId
     * @return {?}
     */
    ChgdrListUiService.prototype.showDialog = /**
     * @param {?} entityId
     * @param {?} dataId
     * @return {?}
     */
    function (entityId, dataId) {
        return this.create(entityId, dataId);
    };
    /**
     * @private
     * @param {?} entityId
     * @param {?} dataId
     * @return {?}
     */
    ChgdrListUiService.prototype.create = /**
     * @private
     * @param {?} entityId
     * @param {?} dataId
     * @return {?}
     */
    function (entityId, dataId) {
        if (!entityId) {
            console.error("创建业务变更日志列表组件失败，业务实体不能为空，请检查", entityId, dataId);
            return;
        }
        /** @type {?} */
        var fac = this.resolver.resolveComponentFactory(ChgdrListDialogContentComponent);
        /** @type {?} */
        var cmpRef = fac.create(this.injector);
        /** @type {?} */
        var modalConfig = {
            title: '变更日志列表',
            width: 1000,
            height: 550,
            resizable: true,
            showButtons: false,
            showMaxButton: true
        };
        cmpRef.instance.entityId = entityId;
        cmpRef.instance.dataId = dataId;
        /** @type {?} */
        var dialog = this.modalService.show(cmpRef, modalConfig);
    };
    ChgdrListUiService.decorators = [
        { type: Injectable, args: [{ providedIn: 'root' },] }
    ];
    /** @nocollapse */
    ChgdrListUiService.ctorParameters = function () { return [
        { type: ComponentFactoryResolver },
        { type: Injector },
        { type: BsModalService },
        { type: MessagerService }
    ]; };
    /** @nocollapse */ ChgdrListUiService.ngInjectableDef = i0.defineInjectable({ factory: function ChgdrListUiService_Factory() { return new ChgdrListUiService(i0.inject(i0.ComponentFactoryResolver), i0.inject(i0.INJECTOR), i0.inject(i1.BsModalService), i0.inject(i2.MessagerService)); }, token: ChgdrListUiService, providedIn: "root" });
    return ChgdrListUiService;
}());
export { ChgdrListUiService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    ChgdrListUiService.prototype.resolver;
    /**
     * @type {?}
     * @private
     */
    ChgdrListUiService.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    ChgdrListUiService.prototype.modalService;
    /**
     * @type {?}
     * @private
     */
    ChgdrListUiService.prototype.messagerService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hnZHItbGlzdC11aS5zZXJ2aWNlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1jbXAvY2hnZHIvIiwic291cmNlcyI6WyJsaWIvc2VydmljZS9jaGdkci1saXN0LXVpLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsd0JBQXdCLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQy9FLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN0RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDbEQsT0FBTyxFQUFFLCtCQUErQixFQUFFLE1BQU0sa0VBQWtFLENBQUM7Ozs7QUFFbkg7SUFHSSw0QkFDWSxRQUFrQyxFQUNsQyxRQUFrQixFQUNsQixZQUE0QixFQUM1QixlQUFnQztRQUhoQyxhQUFRLEdBQVIsUUFBUSxDQUEwQjtRQUNsQyxhQUFRLEdBQVIsUUFBUSxDQUFVO1FBQ2xCLGlCQUFZLEdBQVosWUFBWSxDQUFnQjtRQUM1QixvQkFBZSxHQUFmLGVBQWUsQ0FBaUI7SUFDeEMsQ0FBQzs7Ozs7O0lBRUwsdUNBQVU7Ozs7O0lBQVYsVUFBVyxRQUFnQixFQUFFLE1BQWM7UUFDdkMsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztJQUN6QyxDQUFDOzs7Ozs7O0lBRU8sbUNBQU07Ozs7OztJQUFkLFVBQWUsUUFBZ0IsRUFBRSxNQUFjO1FBQzNDLElBQUcsQ0FBQyxRQUFRLEVBQUM7WUFDVCxPQUFPLENBQUMsS0FBSyxDQUFDLDZCQUE2QixFQUFFLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztZQUMvRCxPQUFPO1NBQ1Y7O1lBRUcsR0FBRyxHQUFHLElBQUksQ0FBQyxRQUFRLENBQUMsdUJBQXVCLENBQUMsK0JBQStCLENBQUM7O1lBQzVFLE1BQU0sR0FBRyxHQUFHLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxRQUFRLENBQUM7O1lBQ2xDLFdBQVcsR0FBRztZQUNkLEtBQUssRUFBRSxRQUFRO1lBQ2YsS0FBSyxFQUFFLElBQUk7WUFDWCxNQUFNLEVBQUUsR0FBRztZQUNYLFNBQVMsRUFBRSxJQUFJO1lBQ2YsV0FBVyxFQUFFLEtBQUs7WUFDbEIsYUFBYSxFQUFFLElBQUk7U0FDdEI7UUFFRCxNQUFNLENBQUMsUUFBUSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7UUFDcEMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDOztZQUM1QixNQUFNLEdBQUcsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLFdBQVcsQ0FBQztJQUM1RCxDQUFDOztnQkFsQ0osVUFBVSxTQUFDLEVBQUUsVUFBVSxFQUFFLE1BQU0sRUFBRTs7OztnQkFMYix3QkFBd0I7Z0JBQUUsUUFBUTtnQkFFOUMsY0FBYztnQkFEZCxlQUFlOzs7NkJBRHhCO0NBeUNDLEFBcENELElBb0NDO1NBbkNZLGtCQUFrQjs7Ozs7O0lBR3ZCLHNDQUEwQzs7Ozs7SUFDMUMsc0NBQTBCOzs7OztJQUMxQiwwQ0FBb0M7Ozs7O0lBQ3BDLDZDQUF3QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUsIENvbXBvbmVudEZhY3RvcnlSZXNvbHZlciwgSW5qZWN0b3IgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgTWVzc2FnZXJTZXJ2aWNlIH0gZnJvbSAnQGZhcnJpcy91aS1tZXNzYWdlcic7XHJcbmltcG9ydCB7IEJzTW9kYWxTZXJ2aWNlIH0gZnJvbSAnQGZhcnJpcy91aS1tb2RhbCc7XHJcbmltcG9ydCB7IENoZ2RyTGlzdERpYWxvZ0NvbnRlbnRDb21wb25lbnQgfSBmcm9tICcuLi9jaGdkci1saXN0LWRpYWxvZy1jb250ZW50L2NoZ2RyLWxpc3QtZGlhbG9nLWNvbnRlbnQuY29tcG9uZW50JztcclxuXHJcbkBJbmplY3RhYmxlKHsgcHJvdmlkZWRJbjogJ3Jvb3QnIH0pXHJcbmV4cG9ydCBjbGFzcyBDaGdkckxpc3RVaVNlcnZpY2Uge1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIHByaXZhdGUgcmVzb2x2ZXI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcixcclxuICAgICAgICBwcml2YXRlIGluamVjdG9yOiBJbmplY3RvcixcclxuICAgICAgICBwcml2YXRlIG1vZGFsU2VydmljZTogQnNNb2RhbFNlcnZpY2UsXHJcbiAgICAgICAgcHJpdmF0ZSBtZXNzYWdlclNlcnZpY2U6IE1lc3NhZ2VyU2VydmljZVxyXG4gICAgKSB7IH1cclxuXHJcbiAgICBzaG93RGlhbG9nKGVudGl0eUlkOiBzdHJpbmcsIGRhdGFJZDogc3RyaW5nKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY3JlYXRlKGVudGl0eUlkLCBkYXRhSWQpO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgY3JlYXRlKGVudGl0eUlkOiBzdHJpbmcsIGRhdGFJZDogc3RyaW5nKSB7XHJcbiAgICAgICAgaWYoIWVudGl0eUlkKXtcclxuICAgICAgICAgICAgY29uc29sZS5lcnJvcihcIuWIm+W7uuS4muWKoeWPmOabtOaXpeW/l+WIl+ihqOe7hOS7tuWksei0pe+8jOS4muWKoeWunuS9k+S4jeiDveS4uuepuu+8jOivt+ajgOafpVwiLCBlbnRpdHlJZCwgZGF0YUlkKTtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IGZhYyA9IHRoaXMucmVzb2x2ZXIucmVzb2x2ZUNvbXBvbmVudEZhY3RvcnkoQ2hnZHJMaXN0RGlhbG9nQ29udGVudENvbXBvbmVudCk7XHJcbiAgICAgICAgbGV0IGNtcFJlZiA9IGZhYy5jcmVhdGUodGhpcy5pbmplY3Rvcik7XHJcbiAgICAgICAgbGV0IG1vZGFsQ29uZmlnID0ge1xyXG4gICAgICAgICAgICB0aXRsZTogJ+WPmOabtOaXpeW/l+WIl+ihqCcsXHJcbiAgICAgICAgICAgIHdpZHRoOiAxMDAwLFxyXG4gICAgICAgICAgICBoZWlnaHQ6IDU1MCxcclxuICAgICAgICAgICAgcmVzaXphYmxlOiB0cnVlLFxyXG4gICAgICAgICAgICBzaG93QnV0dG9uczogZmFsc2UsXHJcbiAgICAgICAgICAgIHNob3dNYXhCdXR0b246IHRydWVcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGNtcFJlZi5pbnN0YW5jZS5lbnRpdHlJZCA9IGVudGl0eUlkO1xyXG4gICAgICAgIGNtcFJlZi5pbnN0YW5jZS5kYXRhSWQgPSBkYXRhSWQ7XHJcbiAgICAgICAgbGV0IGRpYWxvZyA9IHRoaXMubW9kYWxTZXJ2aWNlLnNob3coY21wUmVmLCBtb2RhbENvbmZpZyk7XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ==