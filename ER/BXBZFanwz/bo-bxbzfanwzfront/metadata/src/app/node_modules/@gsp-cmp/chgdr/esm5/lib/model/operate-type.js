/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var OperateType = /** @class */ (function () {
    function OperateType(ordinal, code, name) {
        this.ordinal = ordinal;
        this.code = code;
        this.name = name;
    }
    /**
     * @return {?}
     */
    OperateType.prototype.getOrdinal = /**
     * @return {?}
     */
    function () {
        return this.ordinal;
    };
    /**
     * @return {?}
     */
    OperateType.prototype.getCode = /**
     * @return {?}
     */
    function () {
        return this.code;
    };
    /**
     * @return {?}
     */
    OperateType.prototype.getName = /**
     * @return {?}
     */
    function () {
        return this.name;
    };
    /**
     * @return {?}
     */
    OperateType.values = /**
     * @return {?}
     */
    function () {
        return [OperateType.ADD, OperateType.MODIFY, OperateType.DELETE];
    };
    /**
     * @return {?}
     */
    OperateType.prototype.toJson = /**
     * @return {?}
     */
    function () {
        return this.code;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    OperateType.parse = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        if (obj === undefined || obj === null) {
            return null;
        }
        if (obj instanceof OperateType) {
            return obj;
        }
        if (typeof obj === "string") {
            return OperateType.values().find((/**
             * @param {?} ot
             * @return {?}
             */
            function (ot) { return ot.code == obj; }));
        }
        if (typeof obj === "number") {
            return OperateType.values().find((/**
             * @param {?} ot
             * @return {?}
             */
            function (ot) { return ot.ordinal == obj; }));
        }
        if (!!obj.code) {
            return OperateType.values().find((/**
             * @param {?} ot
             * @return {?}
             */
            function (ot) { return ot.code == obj.code; }));
        }
        return null;
    };
    /**
     * 新增
     */
    OperateType.ADD = new OperateType(0, "ADD", "新增");
    /**
     * 修改
     */
    OperateType.MODIFY = new OperateType(1, "MODIFY", "修改");
    /**
     * 删除
     */
    OperateType.DELETE = new OperateType(2, "DELETE", "删除");
    return OperateType;
}());
export { OperateType };
if (false) {
    /**
     * 新增
     * @type {?}
     */
    OperateType.ADD;
    /**
     * 修改
     * @type {?}
     */
    OperateType.MODIFY;
    /**
     * 删除
     * @type {?}
     */
    OperateType.DELETE;
    /** @type {?} */
    OperateType.prototype.ordinal;
    /** @type {?} */
    OperateType.prototype.code;
    /** @type {?} */
    OperateType.prototype.name;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoib3BlcmF0ZS10eXBlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1jbXAvY2hnZHIvIiwic291cmNlcyI6WyJsaWIvbW9kZWwvb3BlcmF0ZS10eXBlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQTtJQVFJLHFCQUEyQixPQUFlLEVBQVMsSUFBWSxFQUFTLElBQVk7UUFBekQsWUFBTyxHQUFQLE9BQU8sQ0FBUTtRQUFTLFNBQUksR0FBSixJQUFJLENBQVE7UUFBUyxTQUFJLEdBQUosSUFBSSxDQUFRO0lBQ3BGLENBQUM7Ozs7SUFFTSxnQ0FBVTs7O0lBQWpCO1FBQ0ksT0FBTyxJQUFJLENBQUMsT0FBTyxDQUFDO0lBQ3hCLENBQUM7Ozs7SUFFTSw2QkFBTzs7O0lBQWQ7UUFDSSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDckIsQ0FBQzs7OztJQUVNLDZCQUFPOzs7SUFBZDtRQUNJLE9BQU8sSUFBSSxDQUFDLElBQUksQ0FBQztJQUNyQixDQUFDOzs7O0lBRWEsa0JBQU07OztJQUFwQjtRQUNJLE9BQU8sQ0FBQyxXQUFXLENBQUMsR0FBRyxFQUFFLFdBQVcsQ0FBQyxNQUFNLEVBQUUsV0FBVyxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ3JFLENBQUM7Ozs7SUFFTSw0QkFBTTs7O0lBQWI7UUFDSSxPQUFPLElBQUksQ0FBQyxJQUFJLENBQUM7SUFDckIsQ0FBQzs7Ozs7SUFFYSxpQkFBSzs7OztJQUFuQixVQUFvQixHQUFRO1FBQ3hCLElBQUksR0FBRyxLQUFLLFNBQVMsSUFBSSxHQUFHLEtBQUssSUFBSSxFQUFFO1lBQ25DLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7UUFDRCxJQUFJLEdBQUcsWUFBWSxXQUFXLEVBQUU7WUFDNUIsT0FBTyxHQUFHLENBQUM7U0FDZDtRQUNELElBQUksT0FBTyxHQUFHLEtBQUssUUFBUSxFQUFFO1lBQ3pCLE9BQU8sV0FBVyxDQUFDLE1BQU0sRUFBRSxDQUFDLElBQUk7Ozs7WUFBQyxVQUFBLEVBQUUsSUFBSSxPQUFBLEVBQUUsQ0FBQyxJQUFJLElBQUksR0FBRyxFQUFkLENBQWMsRUFBQyxDQUFDO1NBQzFEO1FBQ0QsSUFBSSxPQUFPLEdBQUcsS0FBSyxRQUFRLEVBQUU7WUFDekIsT0FBTyxXQUFXLENBQUMsTUFBTSxFQUFFLENBQUMsSUFBSTs7OztZQUFDLFVBQUEsRUFBRSxJQUFJLE9BQUEsRUFBRSxDQUFDLE9BQU8sSUFBSSxHQUFHLEVBQWpCLENBQWlCLEVBQUMsQ0FBQztTQUM3RDtRQUNELElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxJQUFJLEVBQUU7WUFDWixPQUFPLFdBQVcsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxJQUFJOzs7O1lBQUMsVUFBQSxFQUFFLElBQUksT0FBQSxFQUFFLENBQUMsSUFBSSxJQUFJLEdBQUcsQ0FBQyxJQUFJLEVBQW5CLENBQW1CLEVBQUMsQ0FBQztTQUMvRDtRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7Ozs7SUE5Q00sZUFBRyxHQUFnQixJQUFJLFdBQVcsQ0FBQyxDQUFDLEVBQUUsS0FBSyxFQUFFLElBQUksQ0FBQyxDQUFDOzs7O0lBRW5ELGtCQUFNLEdBQWdCLElBQUksV0FBVyxDQUFDLENBQUMsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLENBQUM7Ozs7SUFFekQsa0JBQU0sR0FBZ0IsSUFBSSxXQUFXLENBQUMsQ0FBQyxFQUFFLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztJQTJDcEUsa0JBQUM7Q0FBQSxBQWpERCxJQWlEQztTQWpEWSxXQUFXOzs7Ozs7SUFFcEIsZ0JBQTBEOzs7OztJQUUxRCxtQkFBZ0U7Ozs7O0lBRWhFLG1CQUFnRTs7SUFFNUMsOEJBQXNCOztJQUFFLDJCQUFtQjs7SUFBRSwyQkFBbUIiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgT3BlcmF0ZVR5cGUge1xyXG4gICAgLyoqIOaWsOWiniAqL1xyXG4gICAgc3RhdGljIEFERDogT3BlcmF0ZVR5cGUgPSBuZXcgT3BlcmF0ZVR5cGUoMCwgXCJBRERcIiwgXCLmlrDlop5cIik7XHJcbiAgICAvKiog5L+u5pS5ICovXHJcbiAgICBzdGF0aWMgTU9ESUZZOiBPcGVyYXRlVHlwZSA9IG5ldyBPcGVyYXRlVHlwZSgxLCBcIk1PRElGWVwiLCBcIuS/ruaUuVwiKTtcclxuICAgIC8qKiDliKDpmaQgKi9cclxuICAgIHN0YXRpYyBERUxFVEU6IE9wZXJhdGVUeXBlID0gbmV3IE9wZXJhdGVUeXBlKDIsIFwiREVMRVRFXCIsIFwi5Yig6ZmkXCIpO1xyXG5cclxuICAgIHByaXZhdGUgY29uc3RydWN0b3IocHVibGljIG9yZGluYWw6IG51bWJlciwgcHVibGljIGNvZGU6IHN0cmluZywgcHVibGljIG5hbWU6IHN0cmluZykge1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBnZXRPcmRpbmFsKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLm9yZGluYWw7XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIGdldENvZGUoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY29kZTtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgZ2V0TmFtZSgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5uYW1lO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgdmFsdWVzKCk6IE9wZXJhdGVUeXBlW10ge1xyXG4gICAgICAgIHJldHVybiBbT3BlcmF0ZVR5cGUuQURELCBPcGVyYXRlVHlwZS5NT0RJRlksIE9wZXJhdGVUeXBlLkRFTEVURV07XHJcbiAgICB9XHJcblxyXG4gICAgcHVibGljIHRvSnNvbigpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5jb2RlO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBzdGF0aWMgcGFyc2Uob2JqOiBhbnkpOiBPcGVyYXRlVHlwZSB7XHJcbiAgICAgICAgaWYgKG9iaiA9PT0gdW5kZWZpbmVkIHx8IG9iaiA9PT0gbnVsbCkge1xyXG4gICAgICAgICAgICByZXR1cm4gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKG9iaiBpbnN0YW5jZW9mIE9wZXJhdGVUeXBlKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBvYmo7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGlmICh0eXBlb2Ygb2JqID09PSBcInN0cmluZ1wiKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBPcGVyYXRlVHlwZS52YWx1ZXMoKS5maW5kKG90ID0+IG90LmNvZGUgPT0gb2JqKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHR5cGVvZiBvYmogPT09IFwibnVtYmVyXCIpIHtcclxuICAgICAgICAgICAgcmV0dXJuIE9wZXJhdGVUeXBlLnZhbHVlcygpLmZpbmQob3QgPT4gb3Qub3JkaW5hbCA9PSBvYmopO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoISFvYmouY29kZSkge1xyXG4gICAgICAgICAgICByZXR1cm4gT3BlcmF0ZVR5cGUudmFsdWVzKCkuZmluZChvdCA9PiBvdC5jb2RlID09IG9iai5jb2RlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICB9XHJcbn0iXX0=