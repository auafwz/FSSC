/**
 * @fileoverview added by tsickle
 * Generated from: lib/webcmp/bif-manual-creation-target.webcmp.service.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Injectable, Optional } from '@angular/core';
import { MessagerService } from '@farris/ui-messager';
import { BindingData, ViewModel, FrameContext } from '@farris/devkit';
import { StateMachineService, CardDataService } from '@farris/command-services';
import { FormCreateArgs, FormUpdateArgs } from '../ref';
import { BifTargetUiService } from '../bif-manual-creation/service/bif-target-ui.service';
import { BifDataService } from '../bif-manual-creation/service/bif-data.service';
import { FormBillCreationProcessExecutorArgs } from '../entity/form-rest/FormBillCreationProcessExecutorArgs';
/**
 * 手工生单目标端服务类
 */
var BifManualCreationTargetWebCmpService = /** @class */ (function () {
    function BifManualCreationTargetWebCmpService(dataService, targetUiService, stateMachineService, bindingData, messagerService, cardDataService, viewModel, frameContext) {
        this.dataService = dataService;
        this.targetUiService = targetUiService;
        this.stateMachineService = stateMachineService;
        this.bindingData = bindingData;
        this.messagerService = messagerService;
        this.cardDataService = cardDataService;
        this.viewModel = viewModel;
        this.frameContext = frameContext;
    }
    /**
     * 加载单据流生单流程执行后数据
     * @param formVoId 表单绑定视图对象 Id
     */
    /**
     * 加载单据流生单流程执行后数据
     * @param {?} formVoId 表单绑定视图对象 Id
     * @return {?}
     */
    BifManualCreationTargetWebCmpService.prototype.bifLoad = /**
     * 加载单据流生单流程执行后数据
     * @param {?} formVoId 表单绑定视图对象 Id
     * @return {?}
     */
    function (formVoId) {
        var _this = this;
        /** @type {?} */
        var args = new FormCreateArgs();
        args.formVoId = formVoId;
        //获取生单流程执行结果
        /** @type {?} */
        var res = this.targetUiService.getFormBillCreationProcessExecutorResult();
        args.rpcCreationRuleExecutorResult = res.creationRuleExecutorResult.ConvertToJson();
        //创建实体数据
        this.dataService.createEntityDatas(args).subscribe((/**
         * @param {?} result
         * @return {?}
         */
        function (result) {
            //切换状态机至 “新增”
            _this.stateMachineService.transit("Create");
        }));
    };
    /**
     * 参照，根据目标VO Id打开生单流程选择器并执行选中的生单流程
     *
     * @param targetVoId 单据流目标视图对象 Id
     * @param targetDataIds 目标单据主表Id列表
     * @param bizFlowchartId 业务场景图Id
     * @param modalOptions1 生单流程选择器模态框配置
     * @param customSelectorModuleUrl 生单流程选择器自定义选择器url
     * @param modalOptions2 来源单据选择器模态框配置
     * @param extParams1 打开生单流程选择器弹窗扩展参数
     * @param extParams2 打开来源单据选择器扩展参数
     */
    /**
     * 参照，根据目标VO Id打开生单流程选择器并执行选中的生单流程
     *
     * @param {?} targetVoId 单据流目标视图对象 Id
     * @param {?=} targetDataIds 目标单据主表Id列表
     * @param {?=} bizFlowchartId 业务场景图Id
     * @param {?=} modalOptions1 生单流程选择器模态框配置
     * @param {?=} customSelectorModuleUrl 生单流程选择器自定义选择器url
     * @param {?=} modalOptions2 来源单据选择器模态框配置
     * @param {?=} extParams1 打开生单流程选择器弹窗扩展参数
     * @param {?=} extParams2 打开来源单据选择器扩展参数
     * @return {?}
     */
    BifManualCreationTargetWebCmpService.prototype.referByTargetVoId = /**
     * 参照，根据目标VO Id打开生单流程选择器并执行选中的生单流程
     *
     * @param {?} targetVoId 单据流目标视图对象 Id
     * @param {?=} targetDataIds 目标单据主表Id列表
     * @param {?=} bizFlowchartId 业务场景图Id
     * @param {?=} modalOptions1 生单流程选择器模态框配置
     * @param {?=} customSelectorModuleUrl 生单流程选择器自定义选择器url
     * @param {?=} modalOptions2 来源单据选择器模态框配置
     * @param {?=} extParams1 打开生单流程选择器弹窗扩展参数
     * @param {?=} extParams2 打开来源单据选择器扩展参数
     * @return {?}
     */
    function (targetVoId, targetDataIds, bizFlowchartId, modalOptions1, customSelectorModuleUrl, modalOptions2, extParams1, extParams2) {
        var _this = this;
        bizFlowchartId = bizFlowchartId === "" || bizFlowchartId == null ? undefined : bizFlowchartId;
        targetDataIds = (/** @type {?} */ (targetDataIds)) === "" || targetDataIds == null ? [this.bindingData.getObject().id] : targetDataIds;
        modalOptions1 = (/** @type {?} */ (modalOptions1)) === "" || modalOptions1 == null ? undefined : modalOptions1;
        customSelectorModuleUrl = customSelectorModuleUrl === "" || customSelectorModuleUrl == null ? undefined : customSelectorModuleUrl;
        modalOptions2 = (/** @type {?} */ (modalOptions2)) === "" || modalOptions2 == null ? {
            title: "来源单据选择器",
            width: 1100,
            height: 550,
        } : modalOptions2;
        extParams1 = extParams1 === "" || extParams1 == null ? undefined : extParams1;
        extParams2 = (/** @type {?} */ (extParams2)) === "" || extParams2 == null ? undefined : extParams2;
        //更新表单现有变更集
        this.cardDataService.update().subscribe((/**
         * @return {?}
         */
        function () {
            //打开生单流程选择器
            _this.targetUiService.openBillCreationProcessSelector4Pull(targetVoId, bizFlowchartId, modalOptions1, customSelectorModuleUrl, extParams1).subscribe((/**
             * @param {?} cp
             * @return {?}
             */
            function (cp) {
                //获取表单配置
                _this.dataService.getFormSettingsById(cp.formSettingsId).subscribe((/**
                 * @param {?} formSettings
                 * @return {?}
                 */
                function (formSettings) {
                    //打开来源单据选择器模态框
                    _this.targetUiService.openSourceDataSelector4Pull(formSettings, modalOptions2, extParams2).subscribe((/**
                     * @param {?} entities
                     * @return {?}
                     */
                    function (entities) {
                        //构造生单流程执行参数实体
                        /** @type {?} */
                        var args = new FormBillCreationProcessExecutorArgs();
                        args.billCreationProcessId = cp.id;
                        args.creationRuleId = cp.creationRuleId;
                        //FormBillCreationProcessExecutorArgs的sourceVoEntityDatas属性为前端实体序列化后的字符串列表
                        //sourceVoEntityDatas列表中的每个字符串，在结构上应与单据流定义中所选中的上游视图对象一致。
                        args.sourceVoEntityDatas = entities.map((/**
                         * @param {?} item
                         * @return {?}
                         */
                        function (item) { return JSON.stringify(item.toJSON(false, true)); }));
                        args.targetVoDataIds = targetDataIds;
                        //执行生单流程
                        _this.dataService.executeBillCreationProcess(args).subscribe((/**
                         * @param {?} result
                         * @return {?}
                         */
                        function (result) {
                            /** @type {?} */
                            var args = new FormUpdateArgs();
                            //Mapping执行条件判断结果为true时才会执行生单流程得到生单结果
                            if (result.conditionResult.conditionExecutionResult == true) {
                                //生单结果不为空
                                if (result.creationRuleExecutorResult && result.creationRuleExecutorResult.mappingResults && result.creationRuleExecutorResult.mappingResults.length > 0) {
                                    args.rpcCreationRuleExecutorResult = result.creationRuleExecutorResult.ConvertToJson();
                                    //更新表单数据
                                    _this.dataService.updateEntityDatas(args).subscribe((/**
                                     * @param {?} res
                                     * @return {?}
                                     */
                                    function (res) {
                                        //重新加载表单数据
                                        _this.cardDataService.load(targetDataIds[0]).subscribe();
                                    }));
                                }
                                else {
                                    _this.messagerService.error("生单结果为空");
                                }
                            }
                            else {
                                //为false时可得到配置的错误提示信息
                                _this.messagerService.error(result.conditionResult.message || "生单流程执行出错");
                            }
                        }));
                    }));
                }));
            }));
        }));
    };
    /**
     * 特定参照，根据来源VO Id和目标VO Id打开生单流程选择器并执行选中的生单流程
     *
     * @param sourceVoId 单据流来源视图对象 Id
     * @param targetVoId 单据流目标视图对象 Id
     * @param targetDataIds 目标单据主表Id列表
     * @param bizFlowchartId 业务场景图Id
     * @param modalOptions1 生单流程选择器模态框配置
     * @param customSelectorModuleUrl 生单流程选择器自定义选择器url
     * @param modalOptions2 来源单据选择器模态框配置
     * @param extParams1 打开生单流程选择器弹窗扩展参数
     * @param extParams2 打开来源单据选择器扩展参数
     */
    /**
     * 特定参照，根据来源VO Id和目标VO Id打开生单流程选择器并执行选中的生单流程
     *
     * @param {?} sourceVoId 单据流来源视图对象 Id
     * @param {?} targetVoId 单据流目标视图对象 Id
     * @param {?=} targetDataIds 目标单据主表Id列表
     * @param {?=} bizFlowchartId 业务场景图Id
     * @param {?=} modalOptions1 生单流程选择器模态框配置
     * @param {?=} customSelectorModuleUrl 生单流程选择器自定义选择器url
     * @param {?=} modalOptions2 来源单据选择器模态框配置
     * @param {?=} extParams1 打开生单流程选择器弹窗扩展参数
     * @param {?=} extParams2 打开来源单据选择器扩展参数
     * @return {?}
     */
    BifManualCreationTargetWebCmpService.prototype.referBySourceVoIdAndTargetVoId = /**
     * 特定参照，根据来源VO Id和目标VO Id打开生单流程选择器并执行选中的生单流程
     *
     * @param {?} sourceVoId 单据流来源视图对象 Id
     * @param {?} targetVoId 单据流目标视图对象 Id
     * @param {?=} targetDataIds 目标单据主表Id列表
     * @param {?=} bizFlowchartId 业务场景图Id
     * @param {?=} modalOptions1 生单流程选择器模态框配置
     * @param {?=} customSelectorModuleUrl 生单流程选择器自定义选择器url
     * @param {?=} modalOptions2 来源单据选择器模态框配置
     * @param {?=} extParams1 打开生单流程选择器弹窗扩展参数
     * @param {?=} extParams2 打开来源单据选择器扩展参数
     * @return {?}
     */
    function (sourceVoId, targetVoId, targetDataIds, bizFlowchartId, modalOptions1, customSelectorModuleUrl, modalOptions2, extParams1, extParams2) {
        var _this = this;
        bizFlowchartId = bizFlowchartId === "" || bizFlowchartId == null ? undefined : bizFlowchartId;
        targetDataIds = (/** @type {?} */ (targetDataIds)) === "" || targetDataIds == null ? [this.bindingData.getObject().id] : targetDataIds;
        modalOptions1 = (/** @type {?} */ (modalOptions1)) === "" || modalOptions1 == null ? undefined : modalOptions1;
        customSelectorModuleUrl = customSelectorModuleUrl === "" || customSelectorModuleUrl == null ? undefined : customSelectorModuleUrl;
        modalOptions2 = (/** @type {?} */ (modalOptions2)) === "" || modalOptions2 == null ? {
            title: "来源单据选择器",
            width: 1100,
            height: 550,
        } : modalOptions2;
        extParams1 = extParams1 === "" || extParams1 == null ? undefined : extParams1;
        extParams2 = (/** @type {?} */ (extParams2)) === "" || extParams2 == null ? undefined : extParams2;
        //更新表单现有变更集
        this.cardDataService.update().subscribe((/**
         * @return {?}
         */
        function () {
            //打开生单流程选择器
            _this.targetUiService.openBillCreationProcessSelector4SpecificPull(sourceVoId, targetVoId, bizFlowchartId, modalOptions1, customSelectorModuleUrl, extParams1).subscribe((/**
             * @param {?} cp
             * @return {?}
             */
            function (cp) {
                //获取表单配置
                _this.dataService.getFormSettingsById(cp.formSettingsId).subscribe((/**
                 * @param {?} formSettings
                 * @return {?}
                 */
                function (formSettings) {
                    //打开来源单据选择器模态框
                    _this.targetUiService.openSourceDataSelector4Pull(formSettings, modalOptions2, extParams2).subscribe((/**
                     * @param {?} entities
                     * @return {?}
                     */
                    function (entities) {
                        //构造生单流程执行参数实体
                        /** @type {?} */
                        var args = new FormBillCreationProcessExecutorArgs();
                        args.billCreationProcessId = cp.id;
                        args.creationRuleId = cp.creationRuleId;
                        //FormBillCreationProcessExecutorArgs的sourceVoEntityDatas属性为前端实体序列化后的字符串列表
                        //sourceVoEntityDatas列表中的每个字符串，在结构上应与单据流定义中所选中的上游视图对象一致。
                        args.sourceVoEntityDatas = entities.map((/**
                         * @param {?} item
                         * @return {?}
                         */
                        function (item) { return JSON.stringify(item.toJSON(false, true)); }));
                        args.targetVoDataIds = targetDataIds;
                        //执行生单流程
                        _this.dataService.executeBillCreationProcess(args).subscribe((/**
                         * @param {?} result
                         * @return {?}
                         */
                        function (result) {
                            /** @type {?} */
                            var args = new FormUpdateArgs();
                            //Mapping执行条件判断结果为true时才会执行生单流程得到生单结果
                            if (result.conditionResult.conditionExecutionResult == true) {
                                //生单结果不为空
                                if (result.creationRuleExecutorResult && result.creationRuleExecutorResult.mappingResults && result.creationRuleExecutorResult.mappingResults.length > 0) {
                                    args.rpcCreationRuleExecutorResult = result.creationRuleExecutorResult.ConvertToJson();
                                    //更新表单数据
                                    _this.dataService.updateEntityDatas(args).subscribe((/**
                                     * @param {?} res
                                     * @return {?}
                                     */
                                    function (res) {
                                        //重新加载表单数据
                                        _this.cardDataService.load(targetDataIds[0]).subscribe();
                                    }));
                                }
                                else {
                                    _this.messagerService.error("生单结果为空");
                                }
                            }
                            else {
                                //为false时可得到配置的错误提示信息
                                _this.messagerService.error(result.conditionResult.message || "生单流程执行出错");
                            }
                        }));
                    }));
                }));
            }));
        }));
    };
    /**
     * 特定参照，根据生单流程ID执行选中的生单流程
     *
     * @param processId 单据流生单流程 Id
     * @param targetDataIds 目标单据主表Id列表
     * @param modalOptions 来源单据选择器模态框配置
     * @param extParams 打开来源单据选择器扩展参数
     */
    /**
     * 特定参照，根据生单流程ID执行选中的生单流程
     *
     * @param {?} processId 单据流生单流程 Id
     * @param {?=} targetDataIds 目标单据主表Id列表
     * @param {?=} modalOptions 来源单据选择器模态框配置
     * @param {?=} extParams 打开来源单据选择器扩展参数
     * @return {?}
     */
    BifManualCreationTargetWebCmpService.prototype.referByCreationProcessId = /**
     * 特定参照，根据生单流程ID执行选中的生单流程
     *
     * @param {?} processId 单据流生单流程 Id
     * @param {?=} targetDataIds 目标单据主表Id列表
     * @param {?=} modalOptions 来源单据选择器模态框配置
     * @param {?=} extParams 打开来源单据选择器扩展参数
     * @return {?}
     */
    function (processId, targetDataIds, modalOptions, extParams) {
        var _this = this;
        targetDataIds = (/** @type {?} */ (targetDataIds)) === "" || targetDataIds == null ? [this.bindingData.getObject().id] : targetDataIds;
        modalOptions = (/** @type {?} */ (modalOptions)) === "" || modalOptions == null ? {
            title: "来源单据选择器",
            width: 1100,
            height: 550,
        } : modalOptions;
        extParams = (/** @type {?} */ (extParams)) === "" || extParams == null ? undefined : extParams;
        //更新表单现有变更集
        this.cardDataService.update().subscribe((/**
         * @return {?}
         */
        function () {
            //打开生单流程选择器
            _this.dataService.getSlimBillCreationProcessEntityExById(processId).subscribe((/**
             * @param {?} cp
             * @return {?}
             */
            function (cp) {
                //获取表单配置
                _this.dataService.getFormSettingsById(cp.formSettingsId).subscribe((/**
                 * @param {?} formSettings
                 * @return {?}
                 */
                function (formSettings) {
                    //打开来源单据选择器模态框
                    _this.targetUiService.openSourceDataSelector4Pull(formSettings, modalOptions, extParams).subscribe((/**
                     * @param {?} entities
                     * @return {?}
                     */
                    function (entities) {
                        //构造生单流程执行参数实体
                        /** @type {?} */
                        var args = new FormBillCreationProcessExecutorArgs();
                        args.billCreationProcessId = cp.id;
                        args.creationRuleId = cp.creationRuleId;
                        //FormBillCreationProcessExecutorArgs的sourceVoEntityDatas属性为前端实体序列化后的字符串列表
                        //sourceVoEntityDatas列表中的每个字符串，在结构上应与单据流定义中所选中的上游视图对象一致。
                        args.sourceVoEntityDatas = entities.map((/**
                         * @param {?} item
                         * @return {?}
                         */
                        function (item) { return JSON.stringify(item.toJSON(false, true)); }));
                        args.targetVoDataIds = targetDataIds;
                        //执行生单流程
                        _this.dataService.executeBillCreationProcess(args).subscribe((/**
                         * @param {?} result
                         * @return {?}
                         */
                        function (result) {
                            /** @type {?} */
                            var args = new FormUpdateArgs();
                            //Mapping执行条件判断结果为true时才会执行生单流程得到生单结果
                            if (result.conditionResult.conditionExecutionResult == true) {
                                //生单结果不为空
                                if (result.creationRuleExecutorResult && result.creationRuleExecutorResult.mappingResults && result.creationRuleExecutorResult.mappingResults.length > 0) {
                                    args.rpcCreationRuleExecutorResult = result.creationRuleExecutorResult.ConvertToJson();
                                    //更新表单数据
                                    _this.dataService.updateEntityDatas(args).subscribe((/**
                                     * @param {?} res
                                     * @return {?}
                                     */
                                    function (res) {
                                        //重新加载表单数据
                                        _this.cardDataService.load(targetDataIds[0]).subscribe();
                                    }));
                                }
                                else {
                                    _this.messagerService.error("生单结果为空");
                                }
                            }
                            else {
                                //为false时可得到配置的错误提示信息
                                _this.messagerService.error(result.conditionResult.message || "生单流程执行出错");
                            }
                        }));
                    }));
                }));
            }));
        }));
    };
    /**
     * 获取来源界面传入的生单流程执行结果
     * @returns creationResult 生单流程执行结果 @type { FormBillCreationProcessExecutorResult }
     */
    /**
     * 获取来源界面传入的生单流程执行结果
     * @return {?} creationResult 生单流程执行结果 \@type { FormBillCreationProcessExecutorResult }
     */
    BifManualCreationTargetWebCmpService.prototype.getFormBillCreationProcessExecutorResult = /**
     * 获取来源界面传入的生单流程执行结果
     * @return {?} creationResult 生单流程执行结果 \@type { FormBillCreationProcessExecutorResult }
     */
    function () {
        return this.targetUiService.getFormBillCreationProcessExecutorResult();
    };
    /**
     * 根据目标VO Id打开生单流程选择器查找生单流程
     * @param targetVoId 目标VO Id
     * @param bizFlowchartId 业务场景图Id
     * @param modalOptions 模态框配置
     * @param customSelectorModuleUrl 自定义选择器Url
     * @param extParams 扩展参数
     * @returns creationProcess 生单流程 @type { Observable<IRtSlimBillCreationProcessEntityEx> }
     */
    /**
     * 根据目标VO Id打开生单流程选择器查找生单流程
     * @param {?} targetVoId 目标VO Id
     * @param {?=} bizFlowchartId 业务场景图Id
     * @param {?=} modalOptions 模态框配置
     * @param {?=} customSelectorModuleUrl 自定义选择器Url
     * @param {?=} extParams 扩展参数
     * @return {?} creationProcess 生单流程 \@type { Observable<IRtSlimBillCreationProcessEntityEx> }
     */
    BifManualCreationTargetWebCmpService.prototype.openBillCreationProcessSelector4Pull = /**
     * 根据目标VO Id打开生单流程选择器查找生单流程
     * @param {?} targetVoId 目标VO Id
     * @param {?=} bizFlowchartId 业务场景图Id
     * @param {?=} modalOptions 模态框配置
     * @param {?=} customSelectorModuleUrl 自定义选择器Url
     * @param {?=} extParams 扩展参数
     * @return {?} creationProcess 生单流程 \@type { Observable<IRtSlimBillCreationProcessEntityEx> }
     */
    function (targetVoId, bizFlowchartId, modalOptions, customSelectorModuleUrl, extParams) {
        bizFlowchartId = bizFlowchartId === "" || bizFlowchartId == null ? undefined : bizFlowchartId;
        modalOptions = (/** @type {?} */ (modalOptions)) === "" || modalOptions == null ? undefined : modalOptions;
        customSelectorModuleUrl = customSelectorModuleUrl === "" || customSelectorModuleUrl == null ? undefined : customSelectorModuleUrl;
        extParams = extParams === "" || extParams == null ? undefined : extParams;
        //打开生单流程选择器
        return this.targetUiService.openBillCreationProcessSelector4Pull(targetVoId, bizFlowchartId, modalOptions, customSelectorModuleUrl, extParams);
    };
    /**
     * 根据来源VO Id和目标VO Id打开生单流程选择器查找生单流程
     * @param sourceVoId 来源VO Id
     * @param targetVoId 目标VO Id
     * @param bizFlowchartId 业务场景图Id
     * @param modalOptions 模态框配置
     * @param customSelectorModuleUrl 自定义选择器Url
     * @param extParams 扩展参数
     * @returns creationProcess 生单流程 @type { Observable<IRtSlimBillCreationProcessEntityEx> }
     */
    /**
     * 根据来源VO Id和目标VO Id打开生单流程选择器查找生单流程
     * @param {?} sourceVoId 来源VO Id
     * @param {?} targetVoId 目标VO Id
     * @param {?=} bizFlowchartId 业务场景图Id
     * @param {?=} modalOptions 模态框配置
     * @param {?=} customSelectorModuleUrl 自定义选择器Url
     * @param {?=} extParams 扩展参数
     * @return {?} creationProcess 生单流程 \@type { Observable<IRtSlimBillCreationProcessEntityEx> }
     */
    BifManualCreationTargetWebCmpService.prototype.openBillCreationProcessSelector4SpecificPull = /**
     * 根据来源VO Id和目标VO Id打开生单流程选择器查找生单流程
     * @param {?} sourceVoId 来源VO Id
     * @param {?} targetVoId 目标VO Id
     * @param {?=} bizFlowchartId 业务场景图Id
     * @param {?=} modalOptions 模态框配置
     * @param {?=} customSelectorModuleUrl 自定义选择器Url
     * @param {?=} extParams 扩展参数
     * @return {?} creationProcess 生单流程 \@type { Observable<IRtSlimBillCreationProcessEntityEx> }
     */
    function (sourceVoId, targetVoId, bizFlowchartId, modalOptions, customSelectorModuleUrl, extParams) {
        bizFlowchartId = bizFlowchartId === "" || bizFlowchartId == null ? undefined : bizFlowchartId;
        modalOptions = (/** @type {?} */ (modalOptions)) === "" || modalOptions == null ? undefined : modalOptions;
        customSelectorModuleUrl = customSelectorModuleUrl === "" || customSelectorModuleUrl == null ? undefined : customSelectorModuleUrl;
        extParams = (/** @type {?} */ (extParams)) === "" || extParams == null ? undefined : extParams;
        return this.targetUiService.openBillCreationProcessSelector4SpecificPull(sourceVoId, targetVoId, bizFlowchartId, modalOptions, customSelectorModuleUrl, extParams);
    };
    /**
     * 打开来源单据选择器选择数据
     * @param formSettings 表单配置
     * @param modalOptions 模态框配置
     * @param extParams 扩展参数
     * @returns entities 数据列表 @type { Observable<Entity[]> }
     */
    /**
     * 打开来源单据选择器选择数据
     * @param {?} formSettings 表单配置
     * @param {?=} modalOptions 模态框配置
     * @param {?=} extParams 扩展参数
     * @return {?} entities 数据列表 \@type { Observable<Entity[]> }
     */
    BifManualCreationTargetWebCmpService.prototype.openSourceDataSelector4Pull = /**
     * 打开来源单据选择器选择数据
     * @param {?} formSettings 表单配置
     * @param {?=} modalOptions 模态框配置
     * @param {?=} extParams 扩展参数
     * @return {?} entities 数据列表 \@type { Observable<Entity[]> }
     */
    function (formSettings, modalOptions, extParams) {
        modalOptions = (/** @type {?} */ (modalOptions)) === "" || modalOptions == null ? {
            title: "来源单据选择器",
            width: 1100,
            height: 550,
        } : modalOptions;
        extParams = (/** @type {?} */ (extParams)) === "" || extParams == null ? undefined : extParams;
        //打开来源单据选择器模态框
        return this.targetUiService.openSourceDataSelector4Pull(formSettings, modalOptions, extParams);
    };
    BifManualCreationTargetWebCmpService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    BifManualCreationTargetWebCmpService.ctorParameters = function () { return [
        { type: BifDataService },
        { type: BifTargetUiService },
        { type: StateMachineService },
        { type: BindingData },
        { type: MessagerService },
        { type: CardDataService },
        { type: ViewModel, decorators: [{ type: Optional }] },
        { type: FrameContext, decorators: [{ type: Optional }] }
    ]; };
    return BifManualCreationTargetWebCmpService;
}());
export { BifManualCreationTargetWebCmpService };
if (false) {
    /** @type {?} */
    BifManualCreationTargetWebCmpService.prototype.dataService;
    /** @type {?} */
    BifManualCreationTargetWebCmpService.prototype.targetUiService;
    /** @type {?} */
    BifManualCreationTargetWebCmpService.prototype.stateMachineService;
    /** @type {?} */
    BifManualCreationTargetWebCmpService.prototype.bindingData;
    /** @type {?} */
    BifManualCreationTargetWebCmpService.prototype.messagerService;
    /** @type {?} */
    BifManualCreationTargetWebCmpService.prototype.cardDataService;
    /** @type {?} */
    BifManualCreationTargetWebCmpService.prototype.viewModel;
    /** @type {?} */
    BifManualCreationTargetWebCmpService.prototype.frameContext;
}
//# sourceMappingURL=data:application/json;base64,