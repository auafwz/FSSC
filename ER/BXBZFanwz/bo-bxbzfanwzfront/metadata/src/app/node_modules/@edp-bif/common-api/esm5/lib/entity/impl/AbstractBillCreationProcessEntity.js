/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/impl/AbstractBillCreationProcessEntity.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelJsonHelper } from '../../ref';
import { AbstractBillProcessEntity } from './AbstractBillProcessEntity';
/**
 * 单据生单流实体类。
 */
var /**
 * 单据生单流实体类。
 */
AbstractBillCreationProcessEntity = /** @class */ (function (_super) {
    tslib_1.__extends(AbstractBillCreationProcessEntity, _super);
    function AbstractBillCreationProcessEntity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @protected
     * @return {?}
     */
    AbstractBillCreationProcessEntity.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.isSupportPull = false;
        this.isSupportPush = false;
        this.creationRuleId = null;
        this.creationProcessId = null;
        this.downBillVoProxyMetadataId = null;
        this.downBillVoProxyId = null;
        this.downBillVoProxyMetadataRootId = null;
        this.downBillVoProxyMetadataParId = null;
        this.downBillVoProxyMetadataIdPath = null;
        this.downBillVoProxyRootId = null;
        this.downBillVoProxyParentId = null;
        this.downBillVoProxyIdPath = null;
    };
    /**
     * @return {?}
     */
    AbstractBillCreationProcessEntity.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "isSupportPull", this.isSupportPull);
        BpmnModelJsonHelper.SetAttributeValue(obj, "isSupportPush", this.isSupportPush);
        BpmnModelJsonHelper.SetAttributeValue(obj, "creationRuleId", this.creationRuleId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "creationProcessId", this.creationProcessId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downBillVoProxyMetadataId", this.downBillVoProxyMetadataId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downBillVoProxyId", this.downBillVoProxyId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downBillVoProxyMetadataRootId", this.downBillVoProxyMetadataRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downBillVoProxyMetadataParId", this.downBillVoProxyMetadataParId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downBillVoProxyMetadataIdPath", this.downBillVoProxyMetadataIdPath);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downBillVoProxyRootId", this.downBillVoProxyRootId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downBillVoProxyParentId", this.downBillVoProxyParentId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downBillVoProxyIdPath", this.downBillVoProxyIdPath);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    AbstractBillCreationProcessEntity.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.isSupportPull = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "isSupportPull");
        this.isSupportPush = BpmnModelJsonHelper.GetAttributeValueAsBoolean(obj, "isSupportPush");
        this.creationRuleId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creationRuleId");
        this.creationProcessId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "creationProcessId");
        this.downBillVoProxyMetadataId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downBillVoProxyMetadataId");
        this.downBillVoProxyId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downBillVoProxyId");
        this.downBillVoProxyMetadataRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downBillVoProxyMetadataRootId");
        this.downBillVoProxyMetadataParId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downBillVoProxyMetadataParId");
        this.downBillVoProxyMetadataIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downBillVoProxyMetadataIdPath");
        this.downBillVoProxyRootId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downBillVoProxyRootId");
        this.downBillVoProxyParentId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downBillVoProxyParentId");
        this.downBillVoProxyIdPath = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downBillVoProxyIdPath");
    };
    return AbstractBillCreationProcessEntity;
}(AbstractBillProcessEntity));
/**
 * 单据生单流实体类。
 */
export { AbstractBillCreationProcessEntity };
if (false) {
    /** @type {?} */
    AbstractBillCreationProcessEntity.prototype.downBillVoProxyMetadataRootId;
    /** @type {?} */
    AbstractBillCreationProcessEntity.prototype.downBillVoProxyMetadataParId;
    /** @type {?} */
    AbstractBillCreationProcessEntity.prototype.downBillVoProxyMetadataIdPath;
    /** @type {?} */
    AbstractBillCreationProcessEntity.prototype.downBillVoProxyRootId;
    /** @type {?} */
    AbstractBillCreationProcessEntity.prototype.downBillVoProxyParentId;
    /** @type {?} */
    AbstractBillCreationProcessEntity.prototype.downBillVoProxyIdPath;
    /** @type {?} */
    AbstractBillCreationProcessEntity.prototype.downBillVoProxyMetadataId;
    /** @type {?} */
    AbstractBillCreationProcessEntity.prototype.downBillVoProxyId;
    /** @type {?} */
    AbstractBillCreationProcessEntity.prototype.isSupportPull;
    /** @type {?} */
    AbstractBillCreationProcessEntity.prototype.isSupportPush;
    /** @type {?} */
    AbstractBillCreationProcessEntity.prototype.creationRuleId;
    /** @type {?} */
    AbstractBillCreationProcessEntity.prototype.creationProcessId;
}
//# sourceMappingURL=data:application/json;base64,