/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/** @type {?} */
export var defaultModules = {
    toolbar: [
        // ['bold', 'italic', 'underline', 'strike'], // toggled buttons
        ['bold', 'italic', 'code-block', { header: 1 }, { header: 2 }, { list: 'ordered' }, { list: 'bullet' }, 'image']
        // ['blockquote', 'code-block'],
        // [{ header: 1 }, { header: 2 }], // custom button values
        // [{ list: 'ordered' }, { list: 'bullet' }],
        // [{ script: 'sub' }, { script: 'super' }], // superscript/subscript
        // [{ indent: '-1' }, { indent: '+1' }], // outdent/indent
        // [{ direction: 'rtl' }], // text direction
        // [{ size: ['small', false, 'large', 'huge'] }], // custom dropdown
        // [{ header: [1, 2, 3, 4, 5, 6, false] }],
        // [{ color: [] }, { background: [] }], // dropdown with defaults from theme
        // [
        //     {
        //         font: [
        //             'Microsoft-YaHei',
        //             'SimSun',
        //             'SimHei',
        //             'KaiTi',
        //             'FangSong',
        //             'Arial',
        //             'Times',
        //             'sans-serif'
        //         ]
        //     }
        // ],
        // [{ align: [] }],
        // ['clean'], // remove formatting button
        // ['link', 'image', 'video'] // link and image, video,
    ],
    imageDrop: true,
    imageResize: true,
    tooltip: true
};
/** @type {?} */
export var toolbarOptions = {
    fontBar: [
        {
            font: ['Microsoft-YaHei', 'SimSun', 'SimHei', 'KaiTi', 'FangSong', 'Arial', 'Times', 'sans-serif']
        }
    ],
    headerBar: [{ header: [1, 2, 3, 4, 5, 6, false] }],
    sizeBar: [{ size: ['small', false, 'large', 'huge'] }],
    fontStyleBar: ['bold', 'italic', 'underline', 'strike', 'link'],
    indentBar: [{ indent: '-1' }, { indent: '+1' }],
    listBar: [{ list: 'ordered' }, { list: 'bullet' }],
    BlockBar: ['code-block', 'blockquote'],
    superAndSubscriptBar: [{ script: 'sub' }, { script: 'super' }],
    colorBar: [{ color: [] }, { background: [] }],
    mediaBar: ['image', 'video'],
    imageBar: ['image'],
    videoBar: ['video'],
    cleanBar: ['clean']
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaHRtbC1lZGl0b3ItZGVmYXVsdHMuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWh0bWwtZWRpdG9yLyIsInNvdXJjZXMiOlsibGliL2h0bWwtZWRpdG9yLWRlZmF1bHRzLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUEsTUFBTSxLQUFPLGNBQWMsR0FBRztJQUMxQixPQUFPLEVBQUU7UUFDTCxnRUFBZ0U7UUFDaEUsQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLFlBQVksRUFBRSxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLE1BQU0sRUFBRSxDQUFDLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxTQUFTLEVBQUUsRUFBRSxFQUFFLElBQUksRUFBRSxRQUFRLEVBQUUsRUFBRSxPQUFPLENBQUM7UUFDaEgsZ0NBQWdDO1FBRWhDLDBEQUEwRDtRQUMxRCw2Q0FBNkM7UUFDN0MscUVBQXFFO1FBQ3JFLDBEQUEwRDtRQUMxRCw0Q0FBNEM7UUFFNUMsb0VBQW9FO1FBQ3BFLDJDQUEyQztRQUUzQyw0RUFBNEU7UUFDNUUsSUFBSTtRQUNKLFFBQVE7UUFDUixrQkFBa0I7UUFDbEIsaUNBQWlDO1FBQ2pDLHdCQUF3QjtRQUN4Qix3QkFBd0I7UUFDeEIsdUJBQXVCO1FBQ3ZCLDBCQUEwQjtRQUMxQix1QkFBdUI7UUFDdkIsdUJBQXVCO1FBQ3ZCLDJCQUEyQjtRQUMzQixZQUFZO1FBQ1osUUFBUTtRQUNSLEtBQUs7UUFDTCxtQkFBbUI7UUFFbkIseUNBQXlDO1FBRXpDLHVEQUF1RDtLQUMxRDtJQUNELFNBQVMsRUFBRSxJQUFJO0lBQ2YsV0FBVyxFQUFFLElBQUk7SUFDakIsT0FBTyxFQUFFLElBQUk7Q0FDaEI7O0FBQ0QsTUFBTSxLQUFPLGNBQWMsR0FBRztJQUMxQixPQUFPLEVBQUU7UUFDTDtZQUNJLElBQUksRUFBRSxDQUFDLGlCQUFpQixFQUFFLFFBQVEsRUFBRSxRQUFRLEVBQUUsT0FBTyxFQUFFLFVBQVUsRUFBRSxPQUFPLEVBQUUsT0FBTyxFQUFFLFlBQVksQ0FBQztTQUNyRztLQUNKO0lBQ0QsU0FBUyxFQUFFLENBQUMsRUFBRSxNQUFNLEVBQUUsQ0FBQyxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLEVBQUUsQ0FBQyxFQUFFLENBQUMsRUFBRSxLQUFLLENBQUMsRUFBRSxDQUFDO0lBQ2xELE9BQU8sRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLENBQUMsT0FBTyxFQUFFLEtBQUssRUFBRSxPQUFPLEVBQUUsTUFBTSxDQUFDLEVBQUUsQ0FBQztJQUN0RCxZQUFZLEVBQUUsQ0FBQyxNQUFNLEVBQUUsUUFBUSxFQUFFLFdBQVcsRUFBRSxRQUFRLEVBQUUsTUFBTSxDQUFDO0lBQy9ELFNBQVMsRUFBRSxDQUFDLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxFQUFFLEVBQUUsTUFBTSxFQUFFLElBQUksRUFBRSxDQUFDO0lBQy9DLE9BQU8sRUFBRSxDQUFDLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRSxFQUFFLEVBQUUsSUFBSSxFQUFFLFFBQVEsRUFBRSxDQUFDO0lBQ2xELFFBQVEsRUFBRSxDQUFDLFlBQVksRUFBRSxZQUFZLENBQUM7SUFDdEMsb0JBQW9CLEVBQUUsQ0FBQyxFQUFFLE1BQU0sRUFBRSxLQUFLLEVBQUUsRUFBRSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsQ0FBQztJQUM5RCxRQUFRLEVBQUUsQ0FBQyxFQUFFLEtBQUssRUFBRSxFQUFFLEVBQUUsRUFBRSxFQUFFLFVBQVUsRUFBRSxFQUFFLEVBQUUsQ0FBQztJQUM3QyxRQUFRLEVBQUUsQ0FBQyxPQUFPLEVBQUUsT0FBTyxDQUFDO0lBQzVCLFFBQVEsRUFBRSxDQUFDLE9BQU8sQ0FBQztJQUNuQixRQUFRLEVBQUUsQ0FBQyxPQUFPLENBQUM7SUFDbkIsUUFBUSxFQUFFLENBQUMsT0FBTyxDQUFDO0NBQ3RCIiwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNvbnN0IGRlZmF1bHRNb2R1bGVzID0ge1xyXG4gICAgdG9vbGJhcjogW1xyXG4gICAgICAgIC8vIFsnYm9sZCcsICdpdGFsaWMnLCAndW5kZXJsaW5lJywgJ3N0cmlrZSddLCAvLyB0b2dnbGVkIGJ1dHRvbnNcclxuICAgICAgICBbJ2JvbGQnLCAnaXRhbGljJywgJ2NvZGUtYmxvY2snLCB7IGhlYWRlcjogMSB9LCB7IGhlYWRlcjogMiB9LCB7IGxpc3Q6ICdvcmRlcmVkJyB9LCB7IGxpc3Q6ICdidWxsZXQnIH0sICdpbWFnZSddXHJcbiAgICAgICAgLy8gWydibG9ja3F1b3RlJywgJ2NvZGUtYmxvY2snXSxcclxuXHJcbiAgICAgICAgLy8gW3sgaGVhZGVyOiAxIH0sIHsgaGVhZGVyOiAyIH1dLCAvLyBjdXN0b20gYnV0dG9uIHZhbHVlc1xyXG4gICAgICAgIC8vIFt7IGxpc3Q6ICdvcmRlcmVkJyB9LCB7IGxpc3Q6ICdidWxsZXQnIH1dLFxyXG4gICAgICAgIC8vIFt7IHNjcmlwdDogJ3N1YicgfSwgeyBzY3JpcHQ6ICdzdXBlcicgfV0sIC8vIHN1cGVyc2NyaXB0L3N1YnNjcmlwdFxyXG4gICAgICAgIC8vIFt7IGluZGVudDogJy0xJyB9LCB7IGluZGVudDogJysxJyB9XSwgLy8gb3V0ZGVudC9pbmRlbnRcclxuICAgICAgICAvLyBbeyBkaXJlY3Rpb246ICdydGwnIH1dLCAvLyB0ZXh0IGRpcmVjdGlvblxyXG5cclxuICAgICAgICAvLyBbeyBzaXplOiBbJ3NtYWxsJywgZmFsc2UsICdsYXJnZScsICdodWdlJ10gfV0sIC8vIGN1c3RvbSBkcm9wZG93blxyXG4gICAgICAgIC8vIFt7IGhlYWRlcjogWzEsIDIsIDMsIDQsIDUsIDYsIGZhbHNlXSB9XSxcclxuXHJcbiAgICAgICAgLy8gW3sgY29sb3I6IFtdIH0sIHsgYmFja2dyb3VuZDogW10gfV0sIC8vIGRyb3Bkb3duIHdpdGggZGVmYXVsdHMgZnJvbSB0aGVtZVxyXG4gICAgICAgIC8vIFtcclxuICAgICAgICAvLyAgICAge1xyXG4gICAgICAgIC8vICAgICAgICAgZm9udDogW1xyXG4gICAgICAgIC8vICAgICAgICAgICAgICdNaWNyb3NvZnQtWWFIZWknLFxyXG4gICAgICAgIC8vICAgICAgICAgICAgICdTaW1TdW4nLFxyXG4gICAgICAgIC8vICAgICAgICAgICAgICdTaW1IZWknLFxyXG4gICAgICAgIC8vICAgICAgICAgICAgICdLYWlUaScsXHJcbiAgICAgICAgLy8gICAgICAgICAgICAgJ0ZhbmdTb25nJyxcclxuICAgICAgICAvLyAgICAgICAgICAgICAnQXJpYWwnLFxyXG4gICAgICAgIC8vICAgICAgICAgICAgICdUaW1lcycsXHJcbiAgICAgICAgLy8gICAgICAgICAgICAgJ3NhbnMtc2VyaWYnXHJcbiAgICAgICAgLy8gICAgICAgICBdXHJcbiAgICAgICAgLy8gICAgIH1cclxuICAgICAgICAvLyBdLFxyXG4gICAgICAgIC8vIFt7IGFsaWduOiBbXSB9XSxcclxuXHJcbiAgICAgICAgLy8gWydjbGVhbiddLCAvLyByZW1vdmUgZm9ybWF0dGluZyBidXR0b25cclxuXHJcbiAgICAgICAgLy8gWydsaW5rJywgJ2ltYWdlJywgJ3ZpZGVvJ10gLy8gbGluayBhbmQgaW1hZ2UsIHZpZGVvLFxyXG4gICAgXSxcclxuICAgIGltYWdlRHJvcDogdHJ1ZSxcclxuICAgIGltYWdlUmVzaXplOiB0cnVlLFxyXG4gICAgdG9vbHRpcDogdHJ1ZVxyXG59O1xyXG5leHBvcnQgY29uc3QgdG9vbGJhck9wdGlvbnMgPSB7XHJcbiAgICBmb250QmFyOiBbXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBmb250OiBbJ01pY3Jvc29mdC1ZYUhlaScsICdTaW1TdW4nLCAnU2ltSGVpJywgJ0thaVRpJywgJ0ZhbmdTb25nJywgJ0FyaWFsJywgJ1RpbWVzJywgJ3NhbnMtc2VyaWYnXVxyXG4gICAgICAgIH1cclxuICAgIF0sXHJcbiAgICBoZWFkZXJCYXI6IFt7IGhlYWRlcjogWzEsIDIsIDMsIDQsIDUsIDYsIGZhbHNlXSB9XSxcclxuICAgIHNpemVCYXI6IFt7IHNpemU6IFsnc21hbGwnLCBmYWxzZSwgJ2xhcmdlJywgJ2h1Z2UnXSB9XSxcclxuICAgIGZvbnRTdHlsZUJhcjogWydib2xkJywgJ2l0YWxpYycsICd1bmRlcmxpbmUnLCAnc3RyaWtlJywgJ2xpbmsnXSxcclxuICAgIGluZGVudEJhcjogW3sgaW5kZW50OiAnLTEnIH0sIHsgaW5kZW50OiAnKzEnIH1dLFxyXG4gICAgbGlzdEJhcjogW3sgbGlzdDogJ29yZGVyZWQnIH0sIHsgbGlzdDogJ2J1bGxldCcgfV0sXHJcbiAgICBCbG9ja0JhcjogWydjb2RlLWJsb2NrJywgJ2Jsb2NrcXVvdGUnXSxcclxuICAgIHN1cGVyQW5kU3Vic2NyaXB0QmFyOiBbeyBzY3JpcHQ6ICdzdWInIH0sIHsgc2NyaXB0OiAnc3VwZXInIH1dLFxyXG4gICAgY29sb3JCYXI6IFt7IGNvbG9yOiBbXSB9LCB7IGJhY2tncm91bmQ6IFtdIH1dLFxyXG4gICAgbWVkaWFCYXI6IFsnaW1hZ2UnLCAndmlkZW8nXSxcclxuICAgIGltYWdlQmFyOiBbJ2ltYWdlJ10sXHJcbiAgICB2aWRlb0JhcjogWyd2aWRlbyddLFxyXG4gICAgY2xlYW5CYXI6IFsnY2xlYW4nXVxyXG59OyJdfQ==