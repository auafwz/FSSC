/**
 * @fileoverview added by tsickle
 * Generated from: lib/controlcomponent/input/input.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output } from '@angular/core';
import { SolutionService } from '../../service/solution.service';
var InputComponent = /** @class */ (function () {
    function InputComponent(solutionService) {
        this.solutionService = solutionService;
        this.conditionChange = new EventEmitter();
    }
    Object.defineProperty(InputComponent.prototype, "item", {
        get: /**
         * @return {?}
         */
        function () {
            return this.constructTextItem(this._inputItem);
        },
        set: /**
         * @param {?} textItem
         * @return {?}
         */
        function (textItem) {
            this._inputItem = textItem;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} textItem
     * @return {?}
     */
    InputComponent.prototype.constructTextItem = /**
     * @param {?} textItem
     * @return {?}
     */
    function (textItem) {
        /** @type {?} */
        var textValueObj = (/** @type {?} */ (textItem.value));
        textValueObj.value = textValueObj.value && textValueObj.value.trim();
        textItem.value = textValueObj;
        return textItem;
    };
    /**
     * @return {?}
     */
    InputComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.testId = this.solutionService.getGuid();
        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);
    };
    /**
     * @param {?} field
     * @return {?}
     */
    InputComponent.prototype.getConditionItemTitle = /**
     * @param {?} field
     * @return {?}
     */
    function (field) {
        return this.solutionService.getConditionItemTitle(field);
    };
    /**
     * @return {?}
     */
    InputComponent.prototype.onBlur = /**
     * @return {?}
     */
    function () {
        this.conditionChange.emit();
    };
    InputComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-solution-input',
                    template: "<div class=\"farris-group-wrap\" id=\"{{item.id}}\">\r\n    <div class=\"form-group farris-form-group  common-group\"  [ngClass]=\"{'q-state-readonly':item.readonly}\">\r\n        <label class=\"col-form-label\" *ngIf=\"item\" title=\"{{getConditionItemTitle(item)}}\">\r\n            <span class=\"farris-label-info text-danger\" *ngIf=\"item.control.isRequired()\">*</span>\r\n            <span class=\"farris-label-text\">{{item.fieldName}}</span>\r\n        </label>\r\n        <div class=\"farris-input-wrap\">\r\n            <input-group \r\n                [(ngModel)]=\"item.value.value\" \r\n                name=\"{{item.fieldName}}\" \r\n                id=\"{{testId}}\"\r\n                (blurHandle)=\"onBlur()\"\r\n                [placeholder]=\"placeholder\"\r\n                [readonly]=\"item.readonly\">\r\n            </input-group>\r\n        </div>\r\n    </div>\r\n</div>"
                }] }
    ];
    /** @nocollapse */
    InputComponent.ctorParameters = function () { return [
        { type: SolutionService }
    ]; };
    InputComponent.propDecorators = {
        item: [{ type: Input }],
        conditionChange: [{ type: Output, args: ['conditionChange',] }]
    };
    return InputComponent;
}());
export { InputComponent };
if (false) {
    /**
     * QueryCondition类型
     * @type {?}
     */
    InputComponent.prototype._inputItem;
    /** @type {?} */
    InputComponent.prototype.placeholder;
    /** @type {?} */
    InputComponent.prototype.testId;
    /** @type {?} */
    InputComponent.prototype.conditionChange;
    /**
     * @type {?}
     * @private
     */
    InputComponent.prototype.solutionService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9jb21wb25lbnQtcXVlcnljb25kaXRpb24vIiwic291cmNlcyI6WyJsaWIvY29udHJvbGNvbXBvbmVudC9pbnB1dC9pbnB1dC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBcUIsWUFBWSxFQUFFLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUV6RixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFHakU7SUErQkksd0JBQW9CLGVBQStCO1FBQS9CLG9CQUFlLEdBQWYsZUFBZSxDQUFnQjtRQVR4QixvQkFBZSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFTWCxDQUFDO0lBbEJ0RCxzQkFDSSxnQ0FBSTs7OztRQUdSO1lBQ0ksT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ25ELENBQUM7Ozs7O1FBTkQsVUFDUyxRQUFhO1lBQ2xCLElBQUksQ0FBQyxVQUFVLEdBQUcsUUFBUSxDQUFDO1FBQy9CLENBQUM7OztPQUFBOzs7OztJQVFELDBDQUFpQjs7OztJQUFqQixVQUFrQixRQUF3Qjs7WUFDaEMsWUFBWSxHQUFHLG1CQUFBLFFBQVEsQ0FBQyxLQUFLLEVBQWE7UUFDaEQsWUFBWSxDQUFDLEtBQUssR0FBRyxZQUFZLENBQUMsS0FBSyxJQUFJLFlBQVksQ0FBQyxLQUFLLENBQUMsSUFBSSxFQUFFLENBQUM7UUFDckUsUUFBUSxDQUFDLEtBQUssR0FBRyxZQUFZLENBQUM7UUFDOUIsT0FBTyxRQUFRLENBQUM7SUFDcEIsQ0FBQzs7OztJQUlELGlDQUFROzs7SUFBUjtRQUNJLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUM3QyxJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQzNHLENBQUM7Ozs7O0lBRUQsOENBQXFCOzs7O0lBQXJCLFVBQXNCLEtBQW9CO1FBQ3RDLE9BQU8sSUFBSSxDQUFDLGVBQWUsQ0FBQyxxQkFBcUIsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUM3RCxDQUFDOzs7O0lBRUQsK0JBQU07OztJQUFOO1FBQ0ksSUFBSSxDQUFDLGVBQWUsQ0FBQyxJQUFJLEVBQUUsQ0FBQztJQUNoQyxDQUFDOztnQkE1Q0osU0FBUyxTQUFDO29CQUNQLFFBQVEsRUFBRSxvQkFBb0I7b0JBQzlCLDY0QkFBcUM7aUJBQ3hDOzs7O2dCQU5RLGVBQWU7Ozt1QkFnQm5CLEtBQUs7a0NBU0wsTUFBTSxTQUFDLGlCQUFpQjs7SUF1QjdCLHFCQUFDO0NBQUEsQUE3Q0QsSUE2Q0M7U0F4Q1ksY0FBYzs7Ozs7O0lBSXZCLG9DQUEyQjs7SUFFM0IscUNBQW9COztJQVNwQixnQ0FBZTs7SUFFZix5Q0FBZ0U7Ozs7O0lBU3BELHlDQUF1QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIE9uSW5pdCwgT25DaGFuZ2VzLCBFdmVudEVtaXR0ZXIsIE91dHB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFF1ZXJ5Q29uZGl0aW9uIH0gZnJvbSAnLi4vLi4vZW50aXR5L3F1ZXJ5Y29uZGl0aW9uJztcclxuaW1wb3J0IHsgU29sdXRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZS9zb2x1dGlvbi5zZXJ2aWNlJztcclxuaW1wb3J0IHsgVGV4dFZhbHVlIH0gZnJvbSAnLi4vLi4vZW50aXR5L2NvbmRpdGlvbnZhbHVlL3RleHR2YWx1ZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnYXBwLXNvbHV0aW9uLWlucHV0JyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi9pbnB1dC5jb21wb25lbnQuaHRtbCcsXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgSW5wdXRDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXR7XHJcbiAgICAvKipcclxuICAgICAqIFF1ZXJ5Q29uZGl0aW9u57G75Z6LXHJcbiAgICAgKi9cclxuICAgIF9pbnB1dEl0ZW06IFF1ZXJ5Q29uZGl0aW9uO1xyXG5cclxuICAgIHBsYWNlaG9sZGVyOiBzdHJpbmc7XHJcblxyXG4gICAgQElucHV0KClcclxuICAgIHNldCBpdGVtKHRleHRJdGVtOiBhbnkpIHtcclxuICAgICAgICB0aGlzLl9pbnB1dEl0ZW0gPSB0ZXh0SXRlbTtcclxuICAgIH1cclxuICAgIGdldCBpdGVtKCk6IGFueXtcclxuICAgICAgICByZXR1cm4gdGhpcy5jb25zdHJ1Y3RUZXh0SXRlbSh0aGlzLl9pbnB1dEl0ZW0pO1xyXG4gICAgfVxyXG4gICAgdGVzdElkOiBzdHJpbmc7XHJcblxyXG4gICAgQE91dHB1dCgnY29uZGl0aW9uQ2hhbmdlJykgY29uZGl0aW9uQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG5cclxuICAgIGNvbnN0cnVjdFRleHRJdGVtKHRleHRJdGVtOiBRdWVyeUNvbmRpdGlvbik6IFF1ZXJ5Q29uZGl0aW9uIHtcclxuICAgICAgICBjb25zdCB0ZXh0VmFsdWVPYmogPSB0ZXh0SXRlbS52YWx1ZSBhcyBUZXh0VmFsdWU7XHJcbiAgICAgICAgdGV4dFZhbHVlT2JqLnZhbHVlID0gdGV4dFZhbHVlT2JqLnZhbHVlICYmIHRleHRWYWx1ZU9iai52YWx1ZS50cmltKCk7XHJcbiAgICAgICAgdGV4dEl0ZW0udmFsdWUgPSB0ZXh0VmFsdWVPYmo7XHJcbiAgICAgICAgcmV0dXJuIHRleHRJdGVtO1xyXG4gICAgfVxyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgc29sdXRpb25TZXJ2aWNlOlNvbHV0aW9uU2VydmljZSl7fVxyXG5cclxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMudGVzdElkID0gdGhpcy5zb2x1dGlvblNlcnZpY2UuZ2V0R3VpZCgpO1xyXG4gICAgICAgIHRoaXMucGxhY2Vob2xkZXIgPSAodGhpcy5pdGVtLnBsYWNlSG9sZGVyKSA/ICh0aGlzLml0ZW0ucGxhY2VIb2xkZXIpIDogKHRoaXMuaXRlbS5jb250cm9sLnBsYWNlaG9sZGVyKTtcclxuICAgIH1cclxuXHJcbiAgICBnZXRDb25kaXRpb25JdGVtVGl0bGUoZmllbGQ6UXVlcnlDb25kaXRpb24pe1xyXG4gICAgICAgIHJldHVybiB0aGlzLnNvbHV0aW9uU2VydmljZS5nZXRDb25kaXRpb25JdGVtVGl0bGUoZmllbGQpO1xyXG4gICAgfVxyXG4gICAgXHJcbiAgICBvbkJsdXIoKXtcclxuICAgICAgICB0aGlzLmNvbmRpdGlvbkNoYW5nZS5lbWl0KCk7XHJcbiAgICB9XHJcbn0iXX0=