/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2018-12-04 10:43:42
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-09-26 13:33:30
 * @Company: Inspur
 * @Version: v0.0.1
 */
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { FarrisCommonModule } from '@farris/ui-common';
import { InputGroupModule } from '@farris/ui-input-group';
import { LayoutModule } from '@farris/ui-layout';
import { LocaleModule } from '@farris/ui-locale';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { MessagerModule } from '@farris/ui-messager';
import { DataTableModule, DataTableComponent } from '@farris/ui-datatable';
import { TreeTableModule, TreeTableComponent } from '@farris/ui-treetable';
import { LoadingModule } from '@farris/ui-loading';
import { LookupGridComponent } from './lookup-grid.component';
import { LookupComponent } from './lookup.component';
import { LookupLeftComponent } from './lookup-left.component';
import { LookupTabsComponent } from './lookup-tabs.component';
import { LookupTipDirective } from './lookup-tip.directive';
import { NotifyModule } from '@farris/ui-notify';
var LookupModule = /** @class */ (function () {
    function LookupModule() {
    }
    LookupModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        FarrisCommonModule.forRoot(),
                        FarrisDialogModule.forRoot(),
                        MessagerModule.forRoot(),
                        NotifyModule.forRoot(),
                        LoadingModule.forRoot({ delay: 1000 }),
                        InputGroupModule,
                        LayoutModule,
                        DataTableModule,
                        TreeTableModule,
                        LocaleModule.forRoot()
                    ],
                    exports: [LookupGridComponent, LookupComponent],
                    declarations: [LookupGridComponent, LookupComponent, LookupLeftComponent, LookupTabsComponent, LookupTipDirective],
                    providers: [],
                    entryComponents: [DataTableComponent, TreeTableComponent, LookupLeftComponent, LookupTabsComponent]
                },] }
    ];
    return LookupModule;
}());
export { LookupModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibG9va3VwLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktbG9va3VwLyIsInNvdXJjZXMiOlsibGliL2xvb2t1cC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBUUEsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRTdDLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzFELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsWUFBWSxFQUFDLE1BQU0sbUJBQW1CLENBQUM7QUFDaEQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxlQUFlLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUMzRSxPQUFPLEVBQUUsZUFBZSxFQUFFLGtCQUFrQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDM0UsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBRW5ELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzlELE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNyRCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUM5RCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM1RCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFFakQ7SUFBQTtJQW9CMkIsQ0FBQzs7Z0JBcEIzQixRQUFRLFNBQUM7b0JBQ04sT0FBTyxFQUFFO3dCQUNMLFlBQVk7d0JBQ1osV0FBVzt3QkFDWCxrQkFBa0IsQ0FBQyxPQUFPLEVBQUU7d0JBQzVCLGtCQUFrQixDQUFDLE9BQU8sRUFBRTt3QkFDNUIsY0FBYyxDQUFDLE9BQU8sRUFBRTt3QkFDeEIsWUFBWSxDQUFDLE9BQU8sRUFBRTt3QkFDdEIsYUFBYSxDQUFDLE9BQU8sQ0FBQyxFQUFDLEtBQUssRUFBRSxJQUFJLEVBQUMsQ0FBQzt3QkFDcEMsZ0JBQWdCO3dCQUNoQixZQUFZO3dCQUNaLGVBQWU7d0JBQ2YsZUFBZTt3QkFDZixZQUFZLENBQUMsT0FBTyxFQUFFO3FCQUN6QjtvQkFDRCxPQUFPLEVBQUUsQ0FBQyxtQkFBbUIsRUFBRSxlQUFlLENBQUM7b0JBQy9DLFlBQVksRUFBRSxDQUFDLG1CQUFtQixFQUFFLGVBQWUsRUFBRSxtQkFBbUIsRUFBRSxtQkFBbUIsRUFBRSxrQkFBa0IsQ0FBQztvQkFDbEgsU0FBUyxFQUFFLEVBQUU7b0JBQ2IsZUFBZSxFQUFFLENBQUMsa0JBQWtCLEVBQUUsa0JBQWtCLEVBQUUsbUJBQW1CLEVBQUUsbUJBQW1CLENBQUM7aUJBQ3RHOztJQUMwQixtQkFBQztDQUFBLEFBcEI1QixJQW9CNEI7U0FBZixZQUFZIiwic291cmNlc0NvbnRlbnQiOlsiLypcclxuICogQEF1dGhvcjog55av54uC56eA5omNKEx1Y2FzIEh1YW5nKVxyXG4gKiBARGF0ZTogMjAxOC0xMi0wNCAxMDo0Mzo0MlxyXG4gKiBATGFzdEVkaXRvcnM6IOeWr+eLguengOaJjShMdWNhcyBIdWFuZylcclxuICogQExhc3RFZGl0VGltZTogMjAxOS0wOS0yNiAxMzozMzozMFxyXG4gKiBAQ29tcGFueTogSW5zcHVyXHJcbiAqIEBWZXJzaW9uOiB2MC4wLjFcclxuICovXHJcbmltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IEZvcm1zTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5cclxuaW1wb3J0IHsgRmFycmlzQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1jb21tb24nO1xyXG5pbXBvcnQgeyBJbnB1dEdyb3VwTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1pbnB1dC1ncm91cCc7XHJcbmltcG9ydCB7IExheW91dE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbGF5b3V0JztcclxuaW1wb3J0IHsgTG9jYWxlTW9kdWxlfSBmcm9tICdAZmFycmlzL3VpLWxvY2FsZSc7XHJcbmltcG9ydCB7IEZhcnJpc0RpYWxvZ01vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktZGlhbG9nJztcclxuaW1wb3J0IHsgTWVzc2FnZXJNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLW1lc3NhZ2VyJztcclxuaW1wb3J0IHsgRGF0YVRhYmxlTW9kdWxlLCBEYXRhVGFibGVDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL3VpLWRhdGF0YWJsZSc7XHJcbmltcG9ydCB7IFRyZWVUYWJsZU1vZHVsZSwgVHJlZVRhYmxlQ29tcG9uZW50IH0gZnJvbSAnQGZhcnJpcy91aS10cmVldGFibGUnO1xyXG5pbXBvcnQgeyBMb2FkaW5nTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1sb2FkaW5nJztcclxuXHJcbmltcG9ydCB7IExvb2t1cEdyaWRDb21wb25lbnQgfSBmcm9tICcuL2xvb2t1cC1ncmlkLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IExvb2t1cENvbXBvbmVudCB9IGZyb20gJy4vbG9va3VwLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IExvb2t1cExlZnRDb21wb25lbnQgfSBmcm9tICcuL2xvb2t1cC1sZWZ0LmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IExvb2t1cFRhYnNDb21wb25lbnQgfSBmcm9tICcuL2xvb2t1cC10YWJzLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IExvb2t1cFRpcERpcmVjdGl2ZSB9IGZyb20gJy4vbG9va3VwLXRpcC5kaXJlY3RpdmUnO1xyXG5pbXBvcnQgeyBOb3RpZnlNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLW5vdGlmeSc7XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gICAgaW1wb3J0czogW1xyXG4gICAgICAgIENvbW1vbk1vZHVsZSxcclxuICAgICAgICBGb3Jtc01vZHVsZSxcclxuICAgICAgICBGYXJyaXNDb21tb25Nb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgICAgIEZhcnJpc0RpYWxvZ01vZHVsZS5mb3JSb290KCksXHJcbiAgICAgICAgTWVzc2FnZXJNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgICAgIE5vdGlmeU1vZHVsZS5mb3JSb290KCksXHJcbiAgICAgICAgTG9hZGluZ01vZHVsZS5mb3JSb290KHtkZWxheTogMTAwMH0pLFxyXG4gICAgICAgIElucHV0R3JvdXBNb2R1bGUsXHJcbiAgICAgICAgTGF5b3V0TW9kdWxlLFxyXG4gICAgICAgIERhdGFUYWJsZU1vZHVsZSxcclxuICAgICAgICBUcmVlVGFibGVNb2R1bGUsXHJcbiAgICAgICAgTG9jYWxlTW9kdWxlLmZvclJvb3QoKVxyXG4gICAgXSxcclxuICAgIGV4cG9ydHM6IFtMb29rdXBHcmlkQ29tcG9uZW50LCBMb29rdXBDb21wb25lbnRdLFxyXG4gICAgZGVjbGFyYXRpb25zOiBbTG9va3VwR3JpZENvbXBvbmVudCwgTG9va3VwQ29tcG9uZW50LCBMb29rdXBMZWZ0Q29tcG9uZW50LCBMb29rdXBUYWJzQ29tcG9uZW50LCBMb29rdXBUaXBEaXJlY3RpdmVdLFxyXG4gICAgcHJvdmlkZXJzOiBbXSxcclxuICAgIGVudHJ5Q29tcG9uZW50czogW0RhdGFUYWJsZUNvbXBvbmVudCwgVHJlZVRhYmxlQ29tcG9uZW50LCBMb29rdXBMZWZ0Q29tcG9uZW50LCBMb29rdXBUYWJzQ29tcG9uZW50XVxyXG59KVxyXG5leHBvcnQgY2xhc3MgTG9va3VwTW9kdWxlIHt9XHJcbiJdfQ==