/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, ChangeDetectorRef, Component, ElementRef, EventEmitter, Input, Output, Renderer2, TemplateRef, ViewChild, ViewEncapsulation, HostBinding, ViewContainerRef, ComponentFactoryResolver, HostListener } from '@angular/core';
import { NG_VALUE_ACCESSOR } from '@angular/forms';
import { UpdateHostClassService as UpdateCls } from './services/update-host-class.service';
import { slideMotion } from './animations/slide';
import { toBoolean, convertToDate, convertToStr } from './utils/convert';
import { TimePickerPanelComponent } from './time-picker-panel.component';
import { TimePickerLocaleService } from './services/time-picker.locale.service';
/** @type {?} */
var num = 0;
var TimePickerComponent = /** @class */ (function () {
    function TimePickerComponent(element, renderer, vcRef, cfr, cdr, localeService) {
        this.element = element;
        this.renderer = renderer;
        this.vcRef = vcRef;
        this.cfr = cfr;
        this.cdr = cdr;
        this.localeService = localeService;
        this.hostCls = true;
        this._disabled = false;
        this._readonly = false;
        this._editable = true;
        this._allowEmpty = true;
        this._autoFocus = false;
        this._hideDisabledOptions = false;
        this.cRef = null;
        this.isInit = false;
        this.groupIcon = '<i class="f-icon f-icon-timepicker"></i>';
        this.display = 'block';
        this.hourStep = 1;
        this.minuteStep = 1;
        this.secondStep = 1;
        this.clearText = 'clear';
        this.popupClassName = '';
        this.defaultOpenValue = new Date();
        this.format = 'HH:mm:ss';
        this.isOpen = false;
        this.openChange = new EventEmitter();
        this.valueChange = new EventEmitter();
        this.clear = new EventEmitter();
        this._use12Hours = false;
        this.changeFlag = false;
        if (this.localeService) {
            /** @type {?} */
            var localConfig = this.localeService.getLocaleConfig();
            this.placeholder = this.placeholder !== undefined ?
                this.placeholder :
                localConfig.placeholder ? localConfig.placeholder : '请选择时间';
        }
    }
    Object.defineProperty(TimePickerComponent.prototype, "use12Hours", {
        get: /**
         * @return {?}
         */
        function () {
            return this._use12Hours;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._use12Hours = !!value;
            if (value && this.format) {
                this.format = this.format.replace(/H/g, 'h');
            }
            else if (!value && this.format) {
                this.format = this.format.replace(/h/g, 'H');
            }
            if (this._use12Hours) {
                if (!this.format || this.format.indexOf('a') === -1) {
                    this.format = 'hh:mm:ss a';
                }
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimePickerComponent.prototype, "hideDisabledOptions", {
        get: /**
         * @return {?}
         */
        function () {
            return this._hideDisabledOptions;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._hideDisabledOptions = toBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimePickerComponent.prototype, "allowEmpty", {
        get: /**
         * @return {?}
         */
        function () {
            return this._allowEmpty;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._allowEmpty = toBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimePickerComponent.prototype, "autoFocus", {
        get: /**
         * @return {?}
         */
        function () {
            return this._autoFocus;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._autoFocus = toBoolean(value);
            this.updateAutoFocus();
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimePickerComponent.prototype, "disabled", {
        get: /**
         * @return {?}
         */
        function () {
            return this._disabled;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._disabled = toBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimePickerComponent.prototype, "readonly", {
        get: /**
         * @return {?}
         */
        function () {
            return this._readonly;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._readonly = toBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimePickerComponent.prototype, "editable", {
        get: /**
         * @return {?}
         */
        function () {
            return this._editable;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._editable = toBoolean(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(TimePickerComponent.prototype, "value", {
        get: /**
         * @return {?}
         */
        function () {
            return this._value;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._value = value;
            if (this._onChange) {
                this._onChange(this.value);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    TimePickerComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    TimePickerComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        var use12Hours = changes.use12Hours;
        if (use12Hours && (!this.format || this.format.indexOf('a') === -1)) {
            this.format = 'hh:mm:ss a';
        }
    };
    /**
     * @return {?}
     */
    TimePickerComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        this.isInit = true;
        this.updateAutoFocus();
        if (!document.body.querySelector('.time-picker-overlay')) {
            this.overlayRef = this.renderer.createElement('div');
            this.overlayPanelRef = this.renderer.createElement('div');
            this.renderer.addClass(this.overlayRef, 'time-picker-overlay');
            this.renderer.addClass(this.overlayPanelRef, "overlay-panel-" + num++);
            this.renderer.appendChild(this.overlayRef, this.overlayPanelRef);
            document.body.appendChild(this.overlayRef);
        }
        else {
            this.overlayRef = document.body.querySelector('.time-picker-overlay');
            this.overlayPanelRef = this.renderer.createElement('div');
            this.renderer.addClass(this.overlayPanelRef, "overlay-panel-" + num++);
            this.renderer.appendChild(this.overlayRef, this.overlayPanelRef);
        }
        this.overlayRef.addEventListener('click', (/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            e.stopPropagation();
        }));
        this.timeInput.nativeElement.addEventListener('blur', (/**
         * @return {?}
         */
        function () {
            _this.onBlur();
        }));
    };
    // tslint:disable-next-line:use-life-cycle-interface
    // tslint:disable-next-line:use-life-cycle-interface
    /**
     * @return {?}
     */
    TimePickerComponent.prototype.ngOnDestroy = 
    // tslint:disable-next-line:use-life-cycle-interface
    /**
     * @return {?}
     */
    function () {
        this.timeInput.nativeElement.removeEventListener('blur', this.onBlur);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    TimePickerComponent.prototype.onMouseEnter = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.timeInput.nativeElement.value &&
            !this.readonly &&
            !this.disabled) {
            event.target.querySelector('.input-group-clear').style.display = '';
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    TimePickerComponent.prototype.onMouseLeave = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (!this.readonly && !this.disabled) {
            event.target.querySelector('.input-group-clear').style.display = 'none';
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    TimePickerComponent.prototype.open = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        event.stopPropagation();
        if (this.disabled || (!this.editable && this.readonly)) {
            return;
        }
        if (this.isOpen) {
            this.close();
            return;
        }
        this.creatPanel();
        this.isOpen = true;
        this.openChange.emit(this.isOpen);
        this.renderer.appendChild(this.overlayPanelRef, this.cRef.location.nativeElement);
        this.renderer.setStyle(this.overlayRef, 'display', 'block');
        this.documentClickEvent = this.registerMouseDownEvent();
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.setPosition();
            _this.renderer.addClass(_this.cRef.location.nativeElement, 'f-area-show');
        }), 10);
    };
    /**
     * @return {?}
     */
    TimePickerComponent.prototype.close = /**
     * @return {?}
     */
    function () {
        this.isOpen = false;
        this.cRef.instance.opened = false;
        this.renderer.removeClass(this.cRef.location.nativeElement, 'f-area-show');
        while (this.overlayPanelRef.lastChild) {
            this.overlayPanelRef.removeChild(this.overlayPanelRef.lastChild);
        }
        this.openChange.emit(this.isOpen);
        this.focus();
        this.removeDocumentListener();
        if (this.cRef) {
            this.cRef.destroy();
            this.cRef = null;
        }
    };
    /**
     * @private
     * @return {?}
     */
    TimePickerComponent.prototype.registerMouseDownEvent = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var mousedownEvent = (/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            if (e.target === _this.overlayPanelRef.parentElement) {
                _this.renderer.setStyle(_this.overlayRef, 'display', 'none');
                _this.close();
            }
        });
        document.body.addEventListener('mousedown', mousedownEvent, true);
        document.body.addEventListener('mousewheel', mousedownEvent, true);
        return (/**
         * @return {?}
         */
        function () {
            document.body.removeEventListener('mousedown', mousedownEvent, true);
            document.body.removeEventListener('mousewheel', mousedownEvent, true);
        });
    };
    /**
     * @private
     * @return {?}
     */
    TimePickerComponent.prototype.removeDocumentListener = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.documentClickEvent) {
            this.documentClickEvent();
            this.documentClickEvent = null;
        }
    };
    /**
     * @return {?}
     */
    TimePickerComponent.prototype.creatPanel = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.cRef === null) {
            this.vcRef.clear();
            this.cRef = this.vcRef.createComponent(this.cfr.resolveComponentFactory(TimePickerPanelComponent));
            this.cRef.location.nativeElement.classList.add('f-area-hide');
            // 解决在grid懒加载中，没有刷新视图的问题
            this.cRef.changeDetectorRef.detectChanges();
            this.cRef.instance.format = this.format;
            this.cRef.instance.hourStep = this.hourStep;
            this.cRef.instance.minuteStep = this.minuteStep;
            this.cRef.instance.secondStep = this.secondStep;
            this.cRef.instance.disabledHours = this.disabledHours;
            this.cRef.instance.disabledMinutes = this.disabledMinutes;
            this.cRef.instance.disabledSeconds = this.disabledSeconds;
            this.cRef.instance.hideDisabledOptions = this.hideDisabledOptions;
            this.cRef.instance.use12Hours = this.use12Hours;
            this.cRef.instance.opened = this.isOpen;
            this.cRef.instance.defaultOpenValue = this.defaultOpenValue;
            this.cRef.instance.value = this.value;
            this.cRef.instance.valueChange.subscribe((/**
             * @param {?} val
             * @return {?}
             */
            function (val) {
                _this.value = val;
                _this.cdr.detectChanges();
                _this.valueChange.emit(val);
            }));
        }
        else {
            this.cRef.instance.value = this.value;
        }
    };
    /**
     * @return {?}
     */
    TimePickerComponent.prototype.setPosition = /**
     * @return {?}
     */
    function () {
        var _a = this.element.nativeElement.getBoundingClientRect(), elTop = _a.top, elLeft = _a.left, elHeight = _a.height, elWidth = _a.width;
        /** @type {?} */
        var panelHeight = 194;
        if (elTop + panelHeight + 30 > window.innerHeight) {
            this.renderer.setStyle(this.cRef.location.nativeElement, 'top', elTop - panelHeight + "px");
        }
        else {
            this.renderer.setStyle(this.cRef.location.nativeElement, 'top', elTop + elHeight + "px");
        }
        /** @type {?} */
        var panelWidth = this.cRef.instance.panelWidth;
        if (window.innerWidth - elLeft < panelWidth) {
            /** @type {?} */
            var r = window.innerWidth - elLeft - elWidth;
            this.renderer.setStyle(this.cRef.location.nativeElement, 'right', r + "px");
        }
        else {
            this.renderer.setStyle(this.cRef.location.nativeElement, 'left', elLeft + "px");
        }
        this.cRef.instance.opened = true;
    };
    /**
     * @return {?}
     */
    TimePickerComponent.prototype.updateAutoFocus = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    TimePickerComponent.prototype.onClickClearBtn = /**
     * @return {?}
     */
    function () {
        this.value = null;
        this.cRef.instance.time.clear();
    };
    /**
     * @return {?}
     */
    TimePickerComponent.prototype.focus = /**
     * @return {?}
     */
    function () {
        if (this.timeInput.nativeElement) {
            this.timeInput.nativeElement.focus();
        }
    };
    /**
     * @return {?}
     */
    TimePickerComponent.prototype.blur = /**
     * @return {?}
     */
    function () {
        if (this.timeInput.nativeElement) {
            this.timeInput.nativeElement.blur();
        }
    };
    /**
     * @return {?}
     */
    TimePickerComponent.prototype.onBlur = /**
     * @return {?}
     */
    function () {
        if (this.value) {
            /** @type {?} */
            var date = convertToDate(this.value, this.format);
            if (this.cRef) {
                this.cRef.instance.value = this.value;
            }
            this.value = convertToStr(date, this.format);
            if (this.changeFlag) {
                this.valueChange.emit(this.value);
                this.changeFlag = false;
            }
            if (this._onTouched) {
                this._onTouched(this.value);
            }
        }
    };
    /**
     * @param {?} val
     * @return {?}
     */
    TimePickerComponent.prototype.onValueChange = /**
     * @param {?} val
     * @return {?}
     */
    function (val) {
        this.changeFlag = true;
    };
    /**
     * @return {?}
     */
    TimePickerComponent.prototype.onClear = /**
     * @return {?}
     */
    function () {
        this.clear.emit();
        this.value = '';
        if (this.cRef && this.cRef.instance) {
            this.cRef.instance.time.clear();
        }
        if (this._onTouched) {
            this._onTouched(this.value);
        }
        this.cdr.detectChanges();
    };
    /**
     * @param {?} time
     * @return {?}
     */
    TimePickerComponent.prototype.writeValue = /**
     * @param {?} time
     * @return {?}
     */
    function (time) {
        this._value = time;
        this.cdr.markForCheck();
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    TimePickerComponent.prototype.registerOnChange = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this._onChange = fn;
    };
    /**
     * @param {?} fn
     * @return {?}
     */
    TimePickerComponent.prototype.registerOnTouched = /**
     * @param {?} fn
     * @return {?}
     */
    function (fn) {
        this._onTouched = fn;
    };
    /**
     * @param {?} isDisabled
     * @return {?}
     */
    TimePickerComponent.prototype.setDisabledState = /**
     * @param {?} isDisabled
     * @return {?}
     */
    function (isDisabled) {
        this.disabled = isDisabled;
        this.cdr.markForCheck();
    };
    TimePickerComponent.decorators = [
        { type: Component, args: [{
                    encapsulation: ViewEncapsulation.None,
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    // tslint:disable-next-line:component-selector
                    selector: 'farris-time-picker',
                    exportAs: 'timePicker',
                    // styleUrls: ['./style/index.scss'],
                    template: "<!-- <input-group\r\n    [groupText]=\"groupIcon\"\r\n    #inputgroup\r\n    [disabled]=\"disabled\"\r\n    [readonly]=\"readonly\"\r\n    [editable]=\"editable\"\r\n    [(ngModel)]=\"value\"\r\n    (valueChange)=\"onValueChange($event)\"\r\n    [enableClear]=\"true\"\r\n    (clickHandle)=\"open()\"\r\n    (clear)=\"onClear()\"\r\n    [placeholder]=\"placeholder\"\r\n></input-group> -->\r\n<div\r\n    class=\"input-group\"\r\n    [ngClass]=\"{\r\n        'f-state-disabled': disabled,\r\n        'f-state-readonly': readonly && !disabled,\r\n        'f-state-editable': editable && !disabled && !readonly\r\n    }\"\r\n>\r\n    <input\r\n        type=\"text\"\r\n        class=\"form-control\"\r\n        [attr.placeholder]=\"disabled || readonly?'':placeholder\"\r\n        name=\"farris-time-picker\"\r\n        [(ngModel)]=\"value\"\r\n        (ngModelChange)=\"onValueChange($event)\"\r\n        #timeInput\r\n        autocomplete=\"off\"\r\n        [readonly]=\"readonly || !editable\"\r\n        [disabled]=\"disabled\"\r\n        (click)=\"open($event)\"\r\n    />\r\n    <div class=\"input-group-append f-cmp-iconbtn-wrapper\" *ngIf=\"!readonly && !disabled\">\r\n        <span class=\"input-group-text input-group-clear f-cmp-iconbtn\" (click)=\"onClear()\"  style=\"display: none;padding:0px 4px;\">\r\n            <i class=\"f-icon modal_close\"></i>\r\n        </span>\r\n\r\n        <span class=\"input-group-text f-cmp-iconbtn\" (click)=\"open($event)\" style=\"padding:0px 4px;padding-top: 2px;\">\r\n            <i class=\"f-icon f-icon-timepicker\" style=\"font-size:0.85rem\"></i>\r\n        </span>\r\n    </div>\r\n</div>\r\n",
                    animations: [slideMotion],
                    providers: [
                        UpdateCls,
                        {
                            provide: NG_VALUE_ACCESSOR,
                            useExisting: TimePickerComponent,
                            multi: true
                        }
                    ]
                }] }
    ];
    /** @nocollapse */
    TimePickerComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 },
        { type: ViewContainerRef },
        { type: ComponentFactoryResolver },
        { type: ChangeDetectorRef },
        { type: TimePickerLocaleService }
    ]; };
    TimePickerComponent.propDecorators = {
        timeInput: [{ type: ViewChild, args: ['timeInput',] }],
        hostCls: [{ type: HostBinding, args: ['class.f-component-timepicker',] }],
        display: [{ type: HostBinding, args: ['style.display',] }],
        hourStep: [{ type: Input }],
        minuteStep: [{ type: Input }],
        secondStep: [{ type: Input }],
        clearText: [{ type: Input }],
        popupClassName: [{ type: Input }],
        placeholder: [{ type: Input }],
        addOn: [{ type: Input }],
        defaultOpenValue: [{ type: Input }],
        disabledHours: [{ type: Input }],
        disabledMinutes: [{ type: Input }],
        disabledSeconds: [{ type: Input }],
        format: [{ type: Input }],
        isOpen: [{ type: Input }],
        use12Hours: [{ type: Input }],
        openChange: [{ type: Output }],
        valueChange: [{ type: Output }],
        clear: [{ type: Output }],
        hideDisabledOptions: [{ type: Input }],
        allowEmpty: [{ type: Input }],
        autoFocus: [{ type: Input }],
        disabled: [{ type: Input }],
        readonly: [{ type: Input }],
        editable: [{ type: Input }],
        onMouseEnter: [{ type: HostListener, args: ['mouseenter', ['$event'],] }],
        onMouseLeave: [{ type: HostListener, args: ['mouseleave', ['$event'],] }]
    };
    return TimePickerComponent;
}());
export { TimePickerComponent };
if (false) {
    /** @type {?} */
    TimePickerComponent.prototype.timeInput;
    /** @type {?} */
    TimePickerComponent.prototype.hostCls;
    /**
     * @type {?}
     * @private
     */
    TimePickerComponent.prototype._disabled;
    /**
     * @type {?}
     * @private
     */
    TimePickerComponent.prototype._readonly;
    /**
     * @type {?}
     * @private
     */
    TimePickerComponent.prototype._editable;
    /**
     * @type {?}
     * @private
     */
    TimePickerComponent.prototype._value;
    /**
     * @type {?}
     * @private
     */
    TimePickerComponent.prototype._allowEmpty;
    /**
     * @type {?}
     * @private
     */
    TimePickerComponent.prototype._autoFocus;
    /**
     * @type {?}
     * @private
     */
    TimePickerComponent.prototype._onChange;
    /**
     * @type {?}
     * @private
     */
    TimePickerComponent.prototype._onTouched;
    /**
     * @type {?}
     * @private
     */
    TimePickerComponent.prototype._hideDisabledOptions;
    /**
     * @type {?}
     * @private
     */
    TimePickerComponent.prototype.cRef;
    /** @type {?} */
    TimePickerComponent.prototype.isInit;
    /** @type {?} */
    TimePickerComponent.prototype.groupIcon;
    /** @type {?} */
    TimePickerComponent.prototype.display;
    /** @type {?} */
    TimePickerComponent.prototype.hourStep;
    /** @type {?} */
    TimePickerComponent.prototype.minuteStep;
    /** @type {?} */
    TimePickerComponent.prototype.secondStep;
    /** @type {?} */
    TimePickerComponent.prototype.clearText;
    /** @type {?} */
    TimePickerComponent.prototype.popupClassName;
    /** @type {?} */
    TimePickerComponent.prototype.placeholder;
    /** @type {?} */
    TimePickerComponent.prototype.addOn;
    /** @type {?} */
    TimePickerComponent.prototype.defaultOpenValue;
    /** @type {?} */
    TimePickerComponent.prototype.disabledHours;
    /** @type {?} */
    TimePickerComponent.prototype.disabledMinutes;
    /** @type {?} */
    TimePickerComponent.prototype.disabledSeconds;
    /** @type {?} */
    TimePickerComponent.prototype.format;
    /** @type {?} */
    TimePickerComponent.prototype.isOpen;
    /** @type {?} */
    TimePickerComponent.prototype.openChange;
    /** @type {?} */
    TimePickerComponent.prototype.valueChange;
    /** @type {?} */
    TimePickerComponent.prototype.clear;
    /**
     * @type {?}
     * @private
     */
    TimePickerComponent.prototype._use12Hours;
    /**
     * @type {?}
     * @private
     */
    TimePickerComponent.prototype.overlayRef;
    /**
     * @type {?}
     * @private
     */
    TimePickerComponent.prototype.overlayPanelRef;
    /**
     * @type {?}
     * @private
     */
    TimePickerComponent.prototype.documentClickEvent;
    /**
     * @type {?}
     * @private
     */
    TimePickerComponent.prototype.changeFlag;
    /**
     * @type {?}
     * @private
     */
    TimePickerComponent.prototype.element;
    /**
     * @type {?}
     * @private
     */
    TimePickerComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    TimePickerComponent.prototype.vcRef;
    /**
     * @type {?}
     * @private
     */
    TimePickerComponent.prototype.cfr;
    /** @type {?} */
    TimePickerComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    TimePickerComponent.prototype.localeService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidGltZS1waWNrZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS10aW1lLXBpY2tlci8iLCJzb3VyY2VzIjpbImxpYi90aW1lLXBpY2tlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFDWSx1QkFBdUIsRUFBRSxpQkFBaUIsRUFBRSxTQUFTLEVBQUUsVUFBVSxFQUFFLFlBQVksRUFBRSxLQUFLLEVBQzdGLE1BQU0sRUFBRSxTQUFTLEVBQWlCLFdBQVcsRUFBRSxTQUFTLEVBQUUsaUJBQWlCLEVBQUUsV0FBVyxFQUNsRixnQkFBZ0IsRUFBRSx3QkFBd0IsRUFBRSxZQUFZLEVBQ3pFLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBd0IsaUJBQWlCLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUN6RSxPQUFPLEVBQUUsc0JBQXNCLElBQUksU0FBUyxFQUFFLE1BQU0sc0NBQXNDLENBQUM7QUFDM0YsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxTQUFTLEVBQUUsYUFBYSxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ3pFLE9BQU8sRUFBRSx3QkFBd0IsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ3pFLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLHVDQUF1QyxDQUFDOztJQUU1RSxHQUFHLEdBQUcsQ0FBQztBQUNYO0lBK0lJLDZCQUNZLE9BQW1CLEVBQ25CLFFBQW1CLEVBQ25CLEtBQXVCLEVBQ3ZCLEdBQTZCLEVBQzlCLEdBQXNCLEVBQ3JCLGFBQXNDO1FBTHRDLFlBQU8sR0FBUCxPQUFPLENBQVk7UUFDbkIsYUFBUSxHQUFSLFFBQVEsQ0FBVztRQUNuQixVQUFLLEdBQUwsS0FBSyxDQUFrQjtRQUN2QixRQUFHLEdBQUgsR0FBRyxDQUEwQjtRQUM5QixRQUFHLEdBQUgsR0FBRyxDQUFtQjtRQUNyQixrQkFB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LFFBQVEsQ0FBQzsrQkFXckMsWUFBWSxTQUFDLFlBQVksRUFBRSxDQUFDLFFBQVEsQ0FBQzs7SUErTTFDLDBCQUFDO0NBQUEsQUEzYUQsSUEyYUM7U0F6WlksbUJBQW1COzs7SUFDNUIsd0NBQzZCOztJQUU3QixzQ0FBNEQ7Ozs7O0lBQzVELHdDQUEwQjs7Ozs7SUFDMUIsd0NBQTBCOzs7OztJQUMxQix3Q0FBeUI7Ozs7O0lBQ3pCLHFDQUF1Qjs7Ozs7SUFDdkIsMENBQTJCOzs7OztJQUMzQix5Q0FBMkI7Ozs7O0lBQzNCLHdDQUEyQzs7Ozs7SUFDM0MseUNBQTRDOzs7OztJQUM1QyxtREFBcUM7Ozs7O0lBQ3JDLG1DQUE0RDs7SUFDNUQscUNBQWU7O0lBQ2Ysd0NBQXVEOztJQUV2RCxzQ0FBZ0Q7O0lBQ2hELHVDQUFzQjs7SUFDdEIseUNBQXdCOztJQUN4Qix5Q0FBd0I7O0lBQ3hCLHdDQUE2Qjs7SUFDN0IsNkNBQTZCOztJQUM3QiwwQ0FBcUI7O0lBQ3JCLG9DQUFrQzs7SUFDbEMsK0NBQXVDOztJQUN2Qyw0Q0FBdUM7O0lBQ3ZDLDhDQUFxRDs7SUFDckQsOENBQXFFOztJQUNyRSxxQ0FBNkI7O0lBQzdCLHFDQUF3Qjs7SUFvQnhCLHlDQUE0RDs7SUFDNUQsMENBQW1EOztJQUNuRCxvQ0FBcUM7Ozs7O0lBa0VyQywwQ0FBNEI7Ozs7O0lBQzVCLHlDQUE0Qjs7Ozs7SUFDNUIsOENBQWlDOzs7OztJQUNqQyxpREFBZ0M7Ozs7O0lBQ2hDLHlDQUEyQjs7Ozs7SUFHdkIsc0NBQTJCOzs7OztJQUMzQix1Q0FBMkI7Ozs7O0lBQzNCLG9DQUErQjs7Ozs7SUFDL0Isa0NBQXFDOztJQUNyQyxrQ0FBNkI7Ozs7O0lBQzdCLDRDQUE4QyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XHJcbiAgICBBZnRlclZpZXdJbml0LCBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneSwgQ2hhbmdlRGV0ZWN0b3JSZWYsIENvbXBvbmVudCwgRWxlbWVudFJlZiwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25DaGFuZ2VzLFxyXG4gICAgT25Jbml0LCBPdXRwdXQsIFJlbmRlcmVyMiwgU2ltcGxlQ2hhbmdlcywgVGVtcGxhdGVSZWYsIFZpZXdDaGlsZCwgVmlld0VuY2Fwc3VsYXRpb24sIEhvc3RCaW5kaW5nLFxyXG4gICAgQ29tcG9uZW50UmVmLCBWaWV3Q29udGFpbmVyUmVmLCBDb21wb25lbnRGYWN0b3J5UmVzb2x2ZXIsIEhvc3RMaXN0ZW5lciwgSW5qZWN0b3JcclxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29udHJvbFZhbHVlQWNjZXNzb3IsIE5HX1ZBTFVFX0FDQ0VTU09SIH0gZnJvbSAnQGFuZ3VsYXIvZm9ybXMnO1xyXG5pbXBvcnQgeyBVcGRhdGVIb3N0Q2xhc3NTZXJ2aWNlIGFzIFVwZGF0ZUNscyB9IGZyb20gJy4vc2VydmljZXMvdXBkYXRlLWhvc3QtY2xhc3Muc2VydmljZSc7XHJcbmltcG9ydCB7IHNsaWRlTW90aW9uIH0gZnJvbSAnLi9hbmltYXRpb25zL3NsaWRlJztcclxuaW1wb3J0IHsgdG9Cb29sZWFuLCBjb252ZXJ0VG9EYXRlLCBjb252ZXJ0VG9TdHIgfSBmcm9tICcuL3V0aWxzL2NvbnZlcnQnO1xyXG5pbXBvcnQgeyBUaW1lUGlja2VyUGFuZWxDb21wb25lbnQgfSBmcm9tICcuL3RpbWUtcGlja2VyLXBhbmVsLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFRpbWVQaWNrZXJMb2NhbGVTZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlcy90aW1lLXBpY2tlci5sb2NhbGUuc2VydmljZSc7XHJcblxyXG5sZXQgbnVtID0gMDtcclxuQENvbXBvbmVudCh7XHJcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxyXG4gICAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXHJcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6Y29tcG9uZW50LXNlbGVjdG9yXHJcbiAgICBzZWxlY3RvcjogJ2ZhcnJpcy10aW1lLXBpY2tlcicsXHJcbiAgICBleHBvcnRBczogJ3RpbWVQaWNrZXInLFxyXG4gICAgLy8gc3R5bGVVcmxzOiBbJy4vc3R5bGUvaW5kZXguc2NzcyddLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcuL3RpbWUtcGlja2VyLmNvbXBvbmVudC5odG1sJyxcclxuICAgIGFuaW1hdGlvbnM6IFtzbGlkZU1vdGlvbl0sXHJcbiAgICBwcm92aWRlcnM6IFtcclxuICAgICAgICBVcGRhdGVDbHMsXHJcbiAgICAgICAge1xyXG4gICAgICAgICAgICBwcm92aWRlOiBOR19WQUxVRV9BQ0NFU1NPUixcclxuICAgICAgICAgICAgdXNlRXhpc3Rpbmc6IFRpbWVQaWNrZXJDb21wb25lbnQsXHJcbiAgICAgICAgICAgIG11bHRpOiB0cnVlXHJcbiAgICAgICAgfVxyXG4gICAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgVGltZVBpY2tlckNvbXBvbmVudCBpbXBsZW1lbnRzIENvbnRyb2xWYWx1ZUFjY2Vzc29yLCBPbkluaXQsIEFmdGVyVmlld0luaXQsIE9uQ2hhbmdlcyB7XHJcbiAgICBAVmlld0NoaWxkKCd0aW1lSW5wdXQnKVxyXG4gICAgcHVibGljIHRpbWVJbnB1dDogRWxlbWVudFJlZjtcclxuXHJcbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmYtY29tcG9uZW50LXRpbWVwaWNrZXInKSBob3N0Q2xzID0gdHJ1ZTtcclxuICAgIHByaXZhdGUgX2Rpc2FibGVkID0gZmFsc2U7XHJcbiAgICBwcml2YXRlIF9yZWFkb25seSA9IGZhbHNlO1xyXG4gICAgcHJpdmF0ZSBfZWRpdGFibGUgPSB0cnVlO1xyXG4gICAgcHJpdmF0ZSBfdmFsdWU6IHN0cmluZztcclxuICAgIHByaXZhdGUgX2FsbG93RW1wdHkgPSB0cnVlO1xyXG4gICAgcHJpdmF0ZSBfYXV0b0ZvY3VzID0gZmFsc2U7XHJcbiAgICBwcml2YXRlIF9vbkNoYW5nZTogKHZhbHVlOiBzdHJpbmcpID0+IHZvaWQ7XHJcbiAgICBwcml2YXRlIF9vblRvdWNoZWQ6ICh2YWx1ZTogc3RyaW5nKSA9PiB2b2lkO1xyXG4gICAgcHJpdmF0ZSBfaGlkZURpc2FibGVkT3B0aW9ucyA9IGZhbHNlO1xyXG4gICAgcHJpdmF0ZSBjUmVmOiBDb21wb25lbnRSZWY8VGltZVBpY2tlclBhbmVsQ29tcG9uZW50PiA9IG51bGw7XHJcbiAgICBpc0luaXQgPSBmYWxzZTtcclxuICAgIGdyb3VwSWNvbiA9ICc8aSBjbGFzcz1cImYtaWNvbiBmLWljb24tdGltZXBpY2tlclwiPjwvaT4nO1xyXG5cclxuICAgIEBIb3N0QmluZGluZygnc3R5bGUuZGlzcGxheScpIGRpc3BsYXkgPSAnYmxvY2snO1xyXG4gICAgQElucHV0KCkgaG91clN0ZXAgPSAxO1xyXG4gICAgQElucHV0KCkgbWludXRlU3RlcCA9IDE7XHJcbiAgICBASW5wdXQoKSBzZWNvbmRTdGVwID0gMTtcclxuICAgIEBJbnB1dCgpIGNsZWFyVGV4dCA9ICdjbGVhcic7XHJcbiAgICBASW5wdXQoKSBwb3B1cENsYXNzTmFtZSA9ICcnO1xyXG4gICAgQElucHV0KCkgcGxhY2Vob2xkZXI7XHJcbiAgICBASW5wdXQoKSBhZGRPbjogVGVtcGxhdGVSZWY8dm9pZD47XHJcbiAgICBASW5wdXQoKSBkZWZhdWx0T3BlblZhbHVlID0gbmV3IERhdGUoKTtcclxuICAgIEBJbnB1dCgpIGRpc2FibGVkSG91cnM6ICgpID0+IG51bWJlcltdO1xyXG4gICAgQElucHV0KCkgZGlzYWJsZWRNaW51dGVzOiAoaG91cjogbnVtYmVyKSA9PiBudW1iZXJbXTtcclxuICAgIEBJbnB1dCgpIGRpc2FibGVkU2Vjb25kczogKGhvdXI6IG51bWJlciwgbWludXRlOiBudW1iZXIpID0+IG51bWJlcltdO1xyXG4gICAgQElucHV0KCkgZm9ybWF0ID0gJ0hIOm1tOnNzJztcclxuICAgIEBJbnB1dCgpIGlzT3BlbiA9IGZhbHNlO1xyXG4gICAgQElucHV0KClcclxuICAgIHNldCB1c2UxMkhvdXJzKHZhbHVlOiBib29sZWFuKSB7XHJcbiAgICAgICAgdGhpcy5fdXNlMTJIb3VycyA9ICEhdmFsdWU7XHJcbiAgICAgICAgaWYgKHZhbHVlICYmIHRoaXMuZm9ybWF0KSB7XHJcbiAgICAgICAgICAgIHRoaXMuZm9ybWF0ID0gdGhpcy5mb3JtYXQucmVwbGFjZSgvSC9nLCAnaCcpO1xyXG4gICAgICAgIH0gZWxzZSBpZiAoIXZhbHVlICYmIHRoaXMuZm9ybWF0KSB7XHJcbiAgICAgICAgICAgIHRoaXMuZm9ybWF0ID0gdGhpcy5mb3JtYXQucmVwbGFjZSgvaC9nLCAnSCcpO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHRoaXMuX3VzZTEySG91cnMpIHtcclxuICAgICAgICAgICAgaWYgKCF0aGlzLmZvcm1hdCB8fCB0aGlzLmZvcm1hdC5pbmRleE9mKCdhJykgPT09IC0xICkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5mb3JtYXQgPSAnaGg6bW06c3MgYSc7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgfVxyXG4gICAgZ2V0IHVzZTEySG91cnMoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3VzZTEySG91cnM7XHJcbiAgICB9XHJcbiAgICBAT3V0cHV0KCkgcmVhZG9ubHkgb3BlbkNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8Ym9vbGVhbj4oKTtcclxuICAgIEBPdXRwdXQoKSB2YWx1ZUNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXI8c3RyaW5nPigpO1xyXG4gICAgQE91dHB1dCgpIGNsZWFyID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG5cclxuICAgIEBJbnB1dCgpXHJcbiAgICBzZXQgaGlkZURpc2FibGVkT3B0aW9ucyh2YWx1ZTogYm9vbGVhbikge1xyXG4gICAgICAgIHRoaXMuX2hpZGVEaXNhYmxlZE9wdGlvbnMgPSB0b0Jvb2xlYW4odmFsdWUpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBoaWRlRGlzYWJsZWRPcHRpb25zKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9oaWRlRGlzYWJsZWRPcHRpb25zO1xyXG4gICAgfVxyXG5cclxuICAgIEBJbnB1dCgpXHJcbiAgICBzZXQgYWxsb3dFbXB0eSh2YWx1ZTogYm9vbGVhbikge1xyXG4gICAgICAgIHRoaXMuX2FsbG93RW1wdHkgPSB0b0Jvb2xlYW4odmFsdWUpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBhbGxvd0VtcHR5KCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9hbGxvd0VtcHR5O1xyXG4gICAgfVxyXG5cclxuICAgIEBJbnB1dCgpXHJcbiAgICBzZXQgYXV0b0ZvY3VzKHZhbHVlOiBib29sZWFuKSB7XHJcbiAgICAgICAgdGhpcy5fYXV0b0ZvY3VzID0gdG9Cb29sZWFuKHZhbHVlKTtcclxuICAgICAgICB0aGlzLnVwZGF0ZUF1dG9Gb2N1cygpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBhdXRvRm9jdXMoKTogYm9vbGVhbiB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2F1dG9Gb2N1cztcclxuICAgIH1cclxuXHJcbiAgICBASW5wdXQoKVxyXG4gICAgc2V0IGRpc2FibGVkKHZhbHVlOiBib29sZWFuIHwgc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5fZGlzYWJsZWQgPSB0b0Jvb2xlYW4odmFsdWUpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBkaXNhYmxlZCgpOiBib29sZWFuIHwgc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZGlzYWJsZWQ7XHJcbiAgICB9XHJcbiAgICBASW5wdXQoKVxyXG4gICAgc2V0IHJlYWRvbmx5KHZhbHVlOiBib29sZWFuIHwgc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5fcmVhZG9ubHkgPSB0b0Jvb2xlYW4odmFsdWUpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCByZWFkb25seSgpOiBib29sZWFuIHwgc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fcmVhZG9ubHk7XHJcbiAgICB9XHJcbiAgICBASW5wdXQoKVxyXG4gICAgc2V0IGVkaXRhYmxlKHZhbHVlOiBib29sZWFuIHwgc3RyaW5nKSB7XHJcbiAgICAgICAgdGhpcy5fZWRpdGFibGUgPSB0b0Jvb2xlYW4odmFsdWUpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldCBlZGl0YWJsZSgpOiBib29sZWFuIHwgc3RyaW5nIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5fZWRpdGFibGU7XHJcbiAgICB9XHJcblxyXG4gICAgc2V0IHZhbHVlKHZhbHVlOiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLl92YWx1ZSA9IHZhbHVlO1xyXG4gICAgICAgIGlmICh0aGlzLl9vbkNoYW5nZSkge1xyXG4gICAgICAgICAgICB0aGlzLl9vbkNoYW5nZSh0aGlzLnZhbHVlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0IHZhbHVlKCk6IHN0cmluZyB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3ZhbHVlO1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgX3VzZTEySG91cnMgPSBmYWxzZTtcclxuICAgIHByaXZhdGUgb3ZlcmxheVJlZjogRWxlbWVudDtcclxuICAgIHByaXZhdGUgb3ZlcmxheVBhbmVsUmVmOiBFbGVtZW50O1xyXG4gICAgcHJpdmF0ZSBkb2N1bWVudENsaWNrRXZlbnQ6IGFueTtcclxuICAgIHByaXZhdGUgY2hhbmdlRmxhZyA9IGZhbHNlO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKFxyXG4gICAgICAgIHByaXZhdGUgZWxlbWVudDogRWxlbWVudFJlZixcclxuICAgICAgICBwcml2YXRlIHJlbmRlcmVyOiBSZW5kZXJlcjIsXHJcbiAgICAgICAgcHJpdmF0ZSB2Y1JlZjogVmlld0NvbnRhaW5lclJlZixcclxuICAgICAgICBwcml2YXRlIGNmcjogQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLFxyXG4gICAgICAgIHB1YmxpYyBjZHI6IENoYW5nZURldGVjdG9yUmVmLFxyXG4gICAgICAgIHByaXZhdGUgbG9jYWxlU2VydmljZTogVGltZVBpY2tlckxvY2FsZVNlcnZpY2VcclxuICAgICkge1xyXG4gICAgICAgIGlmICh0aGlzLmxvY2FsZVNlcnZpY2UpIHtcclxuICAgICAgICAgICAgY29uc3QgbG9jYWxDb25maWcgPSB0aGlzLmxvY2FsZVNlcnZpY2UuZ2V0TG9jYWxlQ29uZmlnKCk7XHJcbiAgICAgICAgICAgIHRoaXMucGxhY2Vob2xkZXIgPSB0aGlzLnBsYWNlaG9sZGVyICE9PSB1bmRlZmluZWQgP1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wbGFjZWhvbGRlciA6XHJcbiAgICAgICAgICAgICAgICBsb2NhbENvbmZpZy5wbGFjZWhvbGRlciA/IGxvY2FsQ29uZmlnLnBsYWNlaG9sZGVyIDogJ+ivt+mAieaLqeaXtumXtCc7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgfVxyXG5cclxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpOiB2b2lkIHtcclxuICAgICAgICBjb25zdCB7IHVzZTEySG91cnN9ID0gY2hhbmdlcztcclxuICAgICAgICBpZiAodXNlMTJIb3VycyAmJiAoIXRoaXMuZm9ybWF0IHx8IHRoaXMuZm9ybWF0LmluZGV4T2YoJ2EnKSA9PT0gLTEgKSkge1xyXG4gICAgICAgICAgICB0aGlzLmZvcm1hdCA9ICdoaDptbTpzcyBhJztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgbmdBZnRlclZpZXdJbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuaXNJbml0ID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLnVwZGF0ZUF1dG9Gb2N1cygpO1xyXG4gICAgICAgIGlmICghZG9jdW1lbnQuYm9keS5xdWVyeVNlbGVjdG9yKCcudGltZS1waWNrZXItb3ZlcmxheScpKSB7XHJcbiAgICAgICAgICAgIHRoaXMub3ZlcmxheVJlZiA9IHRoaXMucmVuZGVyZXIuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgICAgIHRoaXMub3ZlcmxheVBhbmVsUmVmID0gdGhpcy5yZW5kZXJlci5jcmVhdGVFbGVtZW50KCdkaXYnKTtcclxuICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5hZGRDbGFzcyh0aGlzLm92ZXJsYXlSZWYsICd0aW1lLXBpY2tlci1vdmVybGF5Jyk7XHJcbiAgICAgICAgICAgIHRoaXMucmVuZGVyZXIuYWRkQ2xhc3MoXHJcbiAgICAgICAgICAgICAgICB0aGlzLm92ZXJsYXlQYW5lbFJlZixcclxuICAgICAgICAgICAgICAgIGBvdmVybGF5LXBhbmVsLSR7bnVtKyt9YFxyXG4gICAgICAgICAgICApO1xyXG4gICAgICAgICAgICB0aGlzLnJlbmRlcmVyLmFwcGVuZENoaWxkKHRoaXMub3ZlcmxheVJlZiwgdGhpcy5vdmVybGF5UGFuZWxSZWYpO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LmFwcGVuZENoaWxkKHRoaXMub3ZlcmxheVJlZik7XHJcblxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMub3ZlcmxheVJlZiA9IGRvY3VtZW50LmJvZHkucXVlcnlTZWxlY3RvcihcclxuICAgICAgICAgICAgICAgICcudGltZS1waWNrZXItb3ZlcmxheSdcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgdGhpcy5vdmVybGF5UGFuZWxSZWYgPSB0aGlzLnJlbmRlcmVyLmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xyXG4gICAgICAgICAgICB0aGlzLnJlbmRlcmVyLmFkZENsYXNzKFxyXG4gICAgICAgICAgICAgICAgdGhpcy5vdmVybGF5UGFuZWxSZWYsXHJcbiAgICAgICAgICAgICAgICBgb3ZlcmxheS1wYW5lbC0ke251bSsrfWBcclxuICAgICAgICAgICAgKTtcclxuICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5hcHBlbmRDaGlsZCh0aGlzLm92ZXJsYXlSZWYsIHRoaXMub3ZlcmxheVBhbmVsUmVmKTtcclxuXHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLm92ZXJsYXlSZWYuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLCAoZSkgPT4ge1xyXG4gICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgIH0pO1xyXG5cclxuICAgICAgICB0aGlzLnRpbWVJbnB1dC5uYXRpdmVFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ2JsdXInLCAoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMub25CbHVyKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6dXNlLWxpZmUtY3ljbGUtaW50ZXJmYWNlXHJcbiAgICBuZ09uRGVzdHJveSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnRpbWVJbnB1dC5uYXRpdmVFbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2JsdXInLCB0aGlzLm9uQmx1cik7XHJcbiAgICB9XHJcblxyXG4gICAgQEhvc3RMaXN0ZW5lcignbW91c2VlbnRlcicsIFsnJGV2ZW50J10pXHJcbiAgICBvbk1vdXNlRW50ZXIoZXZlbnQpIHtcclxuICAgICAgICBpZiAoXHJcbiAgICAgICAgICAgIHRoaXMudGltZUlucHV0Lm5hdGl2ZUVsZW1lbnQudmFsdWUgJiZcclxuICAgICAgICAgICAgIXRoaXMucmVhZG9ubHkgJiZcclxuICAgICAgICAgICAgIXRoaXMuZGlzYWJsZWRcclxuICAgICAgICApIHtcclxuICAgICAgICAgICAgZXZlbnQudGFyZ2V0LnF1ZXJ5U2VsZWN0b3IoJy5pbnB1dC1ncm91cC1jbGVhcicpLnN0eWxlLmRpc3BsYXkgPSAnJztcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgQEhvc3RMaXN0ZW5lcignbW91c2VsZWF2ZScsIFsnJGV2ZW50J10pXHJcbiAgICBvbk1vdXNlTGVhdmUoZXZlbnQpIHtcclxuICAgICAgICBpZiAoIXRoaXMucmVhZG9ubHkgJiYgIXRoaXMuZGlzYWJsZWQpIHtcclxuICAgICAgICAgICAgZXZlbnQudGFyZ2V0LnF1ZXJ5U2VsZWN0b3IoJy5pbnB1dC1ncm91cC1jbGVhcicpLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuXHJcbiAgICBvcGVuKGV2ZW50OiBNb3VzZUV2ZW50KSB7XHJcbiAgICAgICAgZXZlbnQuc3RvcFByb3BhZ2F0aW9uKCk7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmRpc2FibGVkIHx8ICghdGhpcy5lZGl0YWJsZSAmJiB0aGlzLnJlYWRvbmx5KSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAodGhpcy5pc09wZW4pIHtcclxuICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLmNyZWF0UGFuZWwoKTtcclxuICAgICAgICB0aGlzLmlzT3BlbiA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5vcGVuQ2hhbmdlLmVtaXQodGhpcy5pc09wZW4pO1xyXG4gICAgICAgIHRoaXMucmVuZGVyZXIuYXBwZW5kQ2hpbGQoXHJcbiAgICAgICAgICAgIHRoaXMub3ZlcmxheVBhbmVsUmVmLFxyXG4gICAgICAgICAgICB0aGlzLmNSZWYubG9jYXRpb24ubmF0aXZlRWxlbWVudFxyXG4gICAgICAgICk7XHJcblxyXG4gICAgICAgIHRoaXMucmVuZGVyZXIuc2V0U3R5bGUodGhpcy5vdmVybGF5UmVmLCAnZGlzcGxheScsICdibG9jaycpO1xyXG4gICAgICAgIHRoaXMuZG9jdW1lbnRDbGlja0V2ZW50ID0gdGhpcy5yZWdpc3Rlck1vdXNlRG93bkV2ZW50KCk7XHJcblxyXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnNldFBvc2l0aW9uKCk7XHJcbiAgICAgICAgICAgIHRoaXMucmVuZGVyZXIuYWRkQ2xhc3ModGhpcy5jUmVmLmxvY2F0aW9uLm5hdGl2ZUVsZW1lbnQsICdmLWFyZWEtc2hvdycpO1xyXG4gICAgICAgIH0sIDEwKTtcclxuICAgIH1cclxuXHJcbiAgICBjbG9zZSgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLmlzT3BlbiA9IGZhbHNlO1xyXG4gICAgICAgIHRoaXMuY1JlZi5pbnN0YW5jZS5vcGVuZWQgPSBmYWxzZTtcclxuICAgICAgICB0aGlzLnJlbmRlcmVyLnJlbW92ZUNsYXNzKHRoaXMuY1JlZi5sb2NhdGlvbi5uYXRpdmVFbGVtZW50LCAnZi1hcmVhLXNob3cnKTtcclxuICAgICAgICB3aGlsZSAodGhpcy5vdmVybGF5UGFuZWxSZWYubGFzdENoaWxkKSB7XHJcbiAgICAgICAgICAgIHRoaXMub3ZlcmxheVBhbmVsUmVmLnJlbW92ZUNoaWxkKHRoaXMub3ZlcmxheVBhbmVsUmVmLmxhc3RDaGlsZCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMub3BlbkNoYW5nZS5lbWl0KHRoaXMuaXNPcGVuKTtcclxuICAgICAgICB0aGlzLmZvY3VzKCk7XHJcbiAgICAgICAgdGhpcy5yZW1vdmVEb2N1bWVudExpc3RlbmVyKCk7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmNSZWYpIHtcclxuICAgICAgICAgICAgdGhpcy5jUmVmLmRlc3Ryb3koKTtcclxuICAgICAgICAgICAgdGhpcy5jUmVmID0gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSByZWdpc3Rlck1vdXNlRG93bkV2ZW50KCkge1xyXG4gICAgICAgIGNvbnN0IG1vdXNlZG93bkV2ZW50ID0gKGUpID0+IHtcclxuICAgICAgICAgICAgaWYgKGUudGFyZ2V0ID09PSB0aGlzLm92ZXJsYXlQYW5lbFJlZi5wYXJlbnRFbGVtZW50KSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnJlbmRlcmVyLnNldFN0eWxlKHRoaXMub3ZlcmxheVJlZiwgJ2Rpc3BsYXknLCAnbm9uZScpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jbG9zZSgpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuICAgICAgICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZG93bicsIG1vdXNlZG93bkV2ZW50LCB0cnVlKTtcclxuICAgICAgICBkb2N1bWVudC5ib2R5LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNld2hlZWwnLCBtb3VzZWRvd25FdmVudCwgdHJ1ZSk7XHJcblxyXG4gICAgICAgIHJldHVybiAoKSA9PiB7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlRXZlbnRMaXN0ZW5lcignbW91c2Vkb3duJywgbW91c2Vkb3duRXZlbnQsIHRydWUpO1xyXG4gICAgICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNld2hlZWwnLCBtb3VzZWRvd25FdmVudCwgdHJ1ZSk7XHJcbiAgICAgICAgfTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHJlbW92ZURvY3VtZW50TGlzdGVuZXIoKSB7XHJcbiAgICAgICAgaWYgKHRoaXMuZG9jdW1lbnRDbGlja0V2ZW50KSB7XHJcbiAgICAgICAgICAgIHRoaXMuZG9jdW1lbnRDbGlja0V2ZW50KCk7XHJcbiAgICAgICAgICAgIHRoaXMuZG9jdW1lbnRDbGlja0V2ZW50ID0gbnVsbDtcclxuICAgICAgICB9XHJcbiAgICB9XHJcbiAgICBjcmVhdFBhbmVsKCkge1xyXG4gICAgICAgIGlmICh0aGlzLmNSZWYgPT09IG51bGwpIHtcclxuICAgICAgICAgICAgdGhpcy52Y1JlZi5jbGVhcigpO1xyXG4gICAgICAgICAgICB0aGlzLmNSZWYgPSB0aGlzLnZjUmVmLmNyZWF0ZUNvbXBvbmVudChcclxuICAgICAgICAgICAgICAgIHRoaXMuY2ZyLnJlc29sdmVDb21wb25lbnRGYWN0b3J5KFRpbWVQaWNrZXJQYW5lbENvbXBvbmVudClcclxuICAgICAgICAgICAgKTtcclxuXHJcbiAgICAgICAgICAgIHRoaXMuY1JlZi5sb2NhdGlvbi5uYXRpdmVFbGVtZW50LmNsYXNzTGlzdC5hZGQoJ2YtYXJlYS1oaWRlJyk7XHJcblxyXG4gICAgICAgICAgICAvLyDop6PlhrPlnKhncmlk5oeS5Yqg6L295Lit77yM5rKh5pyJ5Yi35paw6KeG5Zu+55qE6Zeu6aKYXHJcbiAgICAgICAgICAgIHRoaXMuY1JlZi5jaGFuZ2VEZXRlY3RvclJlZi5kZXRlY3RDaGFuZ2VzKCk7XHJcblxyXG4gICAgICAgICAgICB0aGlzLmNSZWYuaW5zdGFuY2UuZm9ybWF0ID0gdGhpcy5mb3JtYXQ7XHJcbiAgICAgICAgICAgIHRoaXMuY1JlZi5pbnN0YW5jZS5ob3VyU3RlcCA9IHRoaXMuaG91clN0ZXA7XHJcbiAgICAgICAgICAgIHRoaXMuY1JlZi5pbnN0YW5jZS5taW51dGVTdGVwID0gdGhpcy5taW51dGVTdGVwO1xyXG4gICAgICAgICAgICB0aGlzLmNSZWYuaW5zdGFuY2Uuc2Vjb25kU3RlcCA9IHRoaXMuc2Vjb25kU3RlcDtcclxuICAgICAgICAgICAgdGhpcy5jUmVmLmluc3RhbmNlLmRpc2FibGVkSG91cnMgPSB0aGlzLmRpc2FibGVkSG91cnM7XHJcbiAgICAgICAgICAgIHRoaXMuY1JlZi5pbnN0YW5jZS5kaXNhYmxlZE1pbnV0ZXMgPSB0aGlzLmRpc2FibGVkTWludXRlcztcclxuICAgICAgICAgICAgdGhpcy5jUmVmLmluc3RhbmNlLmRpc2FibGVkU2Vjb25kcyA9IHRoaXMuZGlzYWJsZWRTZWNvbmRzO1xyXG4gICAgICAgICAgICB0aGlzLmNSZWYuaW5zdGFuY2UuaGlkZURpc2FibGVkT3B0aW9ucyA9IHRoaXMuaGlkZURpc2FibGVkT3B0aW9ucztcclxuICAgICAgICAgICAgdGhpcy5jUmVmLmluc3RhbmNlLnVzZTEySG91cnMgPSB0aGlzLnVzZTEySG91cnM7XHJcbiAgICAgICAgICAgIHRoaXMuY1JlZi5pbnN0YW5jZS5vcGVuZWQgPSB0aGlzLmlzT3BlbjtcclxuICAgICAgICAgICAgdGhpcy5jUmVmLmluc3RhbmNlLmRlZmF1bHRPcGVuVmFsdWUgPSB0aGlzLmRlZmF1bHRPcGVuVmFsdWU7XHJcbiAgICAgICAgICAgIHRoaXMuY1JlZi5pbnN0YW5jZS52YWx1ZSA9IHRoaXMudmFsdWU7XHJcbiAgICAgICAgICAgIHRoaXMuY1JlZi5pbnN0YW5jZS52YWx1ZUNoYW5nZS5zdWJzY3JpYmUoKHZhbDogc3RyaW5nKSA9PiB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnZhbHVlID0gdmFsO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jZHIuZGV0ZWN0Q2hhbmdlcygpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy52YWx1ZUNoYW5nZS5lbWl0KHZhbCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMuY1JlZi5pbnN0YW5jZS52YWx1ZSA9IHRoaXMudmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHNldFBvc2l0aW9uKCkge1xyXG4gICAgICAgIGNvbnN0IHtcclxuICAgICAgICAgICAgdG9wOiBlbFRvcCxcclxuICAgICAgICAgICAgbGVmdDogZWxMZWZ0LFxyXG4gICAgICAgICAgICBoZWlnaHQ6IGVsSGVpZ2h0LFxyXG4gICAgICAgICAgICB3aWR0aDogZWxXaWR0aFxyXG4gICAgICAgIH0gPSB0aGlzLmVsZW1lbnQubmF0aXZlRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuXHJcbiAgICAgICAgY29uc3QgcGFuZWxIZWlnaHQgPSAxOTQ7XHJcbiAgICAgICAgaWYgKGVsVG9wICsgcGFuZWxIZWlnaHQgKyAzMCA+IHdpbmRvdy5pbm5lckhlaWdodCkge1xyXG4gICAgICAgICAgICB0aGlzLnJlbmRlcmVyLnNldFN0eWxlKHRoaXMuY1JlZi5sb2NhdGlvbi5uYXRpdmVFbGVtZW50LCAndG9wJywgYCR7ZWxUb3AgLSBwYW5lbEhlaWdodH1weGApO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMucmVuZGVyZXIuc2V0U3R5bGUodGhpcy5jUmVmLmxvY2F0aW9uLm5hdGl2ZUVsZW1lbnQsICd0b3AnLCBgJHtlbFRvcCArIGVsSGVpZ2h0fXB4YCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjb25zdCBwYW5lbFdpZHRoID0gdGhpcy5jUmVmLmluc3RhbmNlLnBhbmVsV2lkdGg7XHJcblxyXG4gICAgICAgIGlmICh3aW5kb3cuaW5uZXJXaWR0aCAtIGVsTGVmdCA8IHBhbmVsV2lkdGgpIHtcclxuICAgICAgICAgICAgY29uc3QgciA9IHdpbmRvdy5pbm5lcldpZHRoIC0gZWxMZWZ0IC0gZWxXaWR0aDtcclxuICAgICAgICAgICAgdGhpcy5yZW5kZXJlci5zZXRTdHlsZSh0aGlzLmNSZWYubG9jYXRpb24ubmF0aXZlRWxlbWVudCwgJ3JpZ2h0JywgYCR7cn1weGApO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMucmVuZGVyZXIuc2V0U3R5bGUodGhpcy5jUmVmLmxvY2F0aW9uLm5hdGl2ZUVsZW1lbnQsICdsZWZ0JywgYCR7ZWxMZWZ0fXB4YCk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLmNSZWYuaW5zdGFuY2Uub3BlbmVkID0gdHJ1ZTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGVBdXRvRm9jdXMoKTogdm9pZCB7XHJcbiAgICB9XHJcblxyXG4gICAgb25DbGlja0NsZWFyQnRuKCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMudmFsdWUgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuY1JlZi5pbnN0YW5jZS50aW1lLmNsZWFyKCk7XHJcbiAgICB9XHJcblxyXG4gICAgZm9jdXMoKTogdm9pZCB7XHJcbiAgICAgICAgaWYgKHRoaXMudGltZUlucHV0Lm5hdGl2ZUVsZW1lbnQpIHtcclxuICAgICAgICAgICAgdGhpcy50aW1lSW5wdXQubmF0aXZlRWxlbWVudC5mb2N1cygpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBibHVyKCk6IHZvaWQge1xyXG4gICAgICAgIGlmICh0aGlzLnRpbWVJbnB1dC5uYXRpdmVFbGVtZW50KSB7XHJcbiAgICAgICAgICAgIHRoaXMudGltZUlucHV0Lm5hdGl2ZUVsZW1lbnQuYmx1cigpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIG9uQmx1cigpOiB2b2lkIHtcclxuICAgICAgICBpZiAodGhpcy52YWx1ZSkge1xyXG4gICAgICAgICAgICBjb25zdCBkYXRlID0gY29udmVydFRvRGF0ZSh0aGlzLnZhbHVlLCB0aGlzLmZvcm1hdCk7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmNSZWYpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY1JlZi5pbnN0YW5jZS52YWx1ZSA9IHRoaXMudmFsdWU7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgdGhpcy52YWx1ZSA9IGNvbnZlcnRUb1N0cihkYXRlLCB0aGlzLmZvcm1hdCk7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmNoYW5nZUZsYWcpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMudmFsdWVDaGFuZ2UuZW1pdCh0aGlzLnZhbHVlKTtcclxuICAgICAgICAgICAgICAgIHRoaXMuY2hhbmdlRmxhZyA9IGZhbHNlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmICh0aGlzLl9vblRvdWNoZWQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuX29uVG91Y2hlZCh0aGlzLnZhbHVlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIG9uVmFsdWVDaGFuZ2UodmFsOiBzdHJpbmcpIHtcclxuICAgICAgICB0aGlzLmNoYW5nZUZsYWcgPSB0cnVlO1xyXG4gICAgfVxyXG4gICAgb25DbGVhcigpIHtcclxuICAgICAgICB0aGlzLmNsZWFyLmVtaXQoKTtcclxuICAgICAgICB0aGlzLnZhbHVlID0gJyc7XHJcbiAgICAgICAgaWYgKHRoaXMuY1JlZiAmJiB0aGlzLmNSZWYuaW5zdGFuY2UpIHtcclxuICAgICAgICAgICAgdGhpcy5jUmVmLmluc3RhbmNlLnRpbWUuY2xlYXIoKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgaWYgKHRoaXMuX29uVG91Y2hlZCkge1xyXG4gICAgICAgICAgICB0aGlzLl9vblRvdWNoZWQodGhpcy52YWx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY2RyLmRldGVjdENoYW5nZXMoKTtcclxuICAgIH1cclxuXHJcblxyXG5cclxuXHJcbiAgICB3cml0ZVZhbHVlKHRpbWU6IHN0cmluZyk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX3ZhbHVlID0gdGltZTtcclxuICAgICAgICB0aGlzLmNkci5tYXJrRm9yQ2hlY2soKTtcclxuICAgIH1cclxuXHJcbiAgICByZWdpc3Rlck9uQ2hhbmdlKGZuOiAodGltZTogc3RyaW5nKSA9PiB2b2lkKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5fb25DaGFuZ2UgPSBmbjtcclxuICAgIH1cclxuXHJcbiAgICByZWdpc3Rlck9uVG91Y2hlZChmbjogKHRpbWU6IHN0cmluZykgPT4gdm9pZCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuX29uVG91Y2hlZCA9IGZuO1xyXG4gICAgfVxyXG5cclxuICAgIHNldERpc2FibGVkU3RhdGUoaXNEaXNhYmxlZDogYm9vbGVhbik6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuZGlzYWJsZWQgPSBpc0Rpc2FibGVkO1xyXG4gICAgICAgIHRoaXMuY2RyLm1hcmtGb3JDaGVjaygpO1xyXG4gICAgfVxyXG59XHJcbiJdfQ==