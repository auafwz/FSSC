/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, EventEmitter, HostBinding, Injector, Input, Output, ViewEncapsulation, HostListener, ViewChild, ElementRef } from '@angular/core';
import { LocaleService } from '@farris/ui-locale';
import { MessagerService } from '@farris/ui-messager';
export class SimpleColumnsComponent {
    /**
     * @param {?} injector
     * @param {?} cd
     */
    constructor(injector, cd) {
        this.injector = injector;
        this.cd = cd;
        this.seartTypes = [];
        /**
         * 所有列
         */
        this.columns = [];
        /**
         * 显示的列
         */
        this.fields = [];
        /**
         * 点击侧边样式以外的区域隐藏面板。默认为 true
         */
        this.clickToHidden = true;
        this.top = 0;
        this.cls = 'f-datagrid-settings-simple-host';
        this.formatChange = new EventEmitter();
        this.fieldsChange = new EventEmitter();
        this.submit = new EventEmitter();
        this.closed = new EventEmitter();
        this.advanced = new EventEmitter();
        this.allCols = [];
        this.columnType = 'all';
        this.isEn = false;
        this.settings = {};
        this.localeSer = this.injector.get(LocaleService, null);
        this.messager = this.injector.get(MessagerService, null);
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onClick($event) {
        // console.log($event);
        $event.stopPropagation();
        /** @type {?} */
        const clsname = $event.target['className'] || '';
        if (clsname.indexOf('f-datagrid-settings-simple-host') > -1) {
            // 隐藏侧边栏；
            if (this.clickToHidden) {
                this.close();
            }
        }
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onEscKeydown($event) {
        $event.stopPropagation();
        if (!document.querySelector('modal-container')) {
            this.close();
        }
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onEnterKeydown($event) {
        $event.stopPropagation();
        if (!document.querySelector('modal-container')) {
            this.onSubmitClick();
        }
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onControlGKeydown($event) {
        if ($event.ctrlKey && !document.querySelector('modal-container')) {
            $event.preventDefault();
            $event.stopPropagation();
            if ($event.key.toLowerCase() === 'g') {
                this.showAdvanced($event);
            }
            else if ($event.key.toLowerCase() === 'r') {
                this.onSettingReset();
            }
            else if ($event.key.toLowerCase() === 's') {
                this.searchInput.nativeElement.focus();
            }
        }
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.allCols = this.columns[0];
        this.fields = this.getViewColumns();
        this.container.nativeElement.focus();
    }
    /**
     * @private
     * @return {?}
     */
    getViewColumns() {
        // 多表头
        /** @type {?} */
        let visibleCls = [];
        if (this.columns.length > 1) {
            this.columns.forEach((/**
             * @param {?} cols
             * @return {?}
             */
            cols => {
                visibleCls = visibleCls.concat(this._getViewColumns(cols));
            }));
        }
        else {
            visibleCls = this.columns[0].filter((/**
             * @param {?} n
             * @return {?}
             */
            n => (n.visible || n.visible === undefined)));
        }
        return visibleCls.map((/**
         * @param {?} n
         * @return {?}
         */
        n => n.field));
    }
    /**
     * @private
     * @param {?} cols
     * @return {?}
     */
    _getViewColumns(cols) {
        return cols.filter((/**
         * @param {?} c
         * @return {?}
         */
        c => !c.colspan && (c.visible || c.visible === undefined)));
    }
    // 根据列的类型进行筛选过滤，
    // all 所有列
    // visible 可见列
    // hidden 隐藏列
    // group 分组列
    /**
     * @param {?} ct
     * @param {?=} searchWords
     * @return {?}
     */
    filterColumns(ct, searchWords = '') {
        /** @type {?} */
        let cols = [];
        switch (ct) {
            case 'visible':
                cols = this.columns[0].filter((/**
                 * @param {?} n
                 * @return {?}
                 */
                n => this.fields.indexOf(n.field) > -1));
                break;
            case 'hidden':
                cols = this.columns[0].filter((/**
                 * @param {?} n
                 * @return {?}
                 */
                n => this.fields.indexOf(n.field) === -1));
                break;
            case 'all':
            default:
                cols = this.columns[0];
                break;
        }
        if (searchWords) {
            cols = cols.filter((/**
             * @param {?} c
             * @return {?}
             */
            c => c.title.toLowerCase().indexOf(searchWords) > -1));
        }
        this.allCols = cols;
    }
    /**
     * @private
     * @return {?}
     */
    onFieldsChanged() {
        this.fieldsChange.emit(this.fields);
    }
    /**
     * @param {?} $event
     * @param {?} col
     * @return {?}
     */
    onDblClick($event, col) {
        // console.log('显示与隐藏切换事件', col);
        this.onCheckboxClick($event, col);
    }
    /**
     * @param {?} $event
     * @param {?} col
     * @return {?}
     */
    onCheckboxClick($event, col) {
        // console.log('显示与隐藏切换事件', col);
        $event.stopPropagation();
        /** @type {?} */
        const index = this.fields.indexOf(col.field);
        if (index === -1) {
            this.fields.push(col.field);
        }
        else {
            this.fields.splice(index, 1);
        }
        this.columns[0].forEach((/**
         * @param {?} f
         * @return {?}
         */
        f => {
            f.visible = this.fields.indexOf(f.field) > -1;
        }));
        this.fields = this.columns[0].filter((/**
         * @param {?} n
         * @return {?}
         */
        n => n.visible)).map((/**
         * @param {?} n
         * @return {?}
         */
        n => n.field));
        this.onFieldsChanged();
    }
    /**
     * @param {?} $event
     * @param {?} ct
     * @return {?}
     */
    searchColumn($event, ct) {
        /** @type {?} */
        const txt = $event.target.value;
        this.filterColumns(ct, txt);
    }
    /**
     * @param {?} fieldInfo
     * @param {?} ct
     * @param {?} txt
     * @param {?} ulElRef
     * @return {?}
     */
    onFieldDrop(fieldInfo, ct, txt, ulElRef) {
        // console.log('drop', fieldInfo);
        const { removedIndex, addedIndex } = fieldInfo;
        /** @type {?} */
        const moveItem = this.allCols[removedIndex];
        /** @type {?} */
        const targetItem = this.allCols[addedIndex];
        /** @type {?} */
        const moveItemIndex = this.columns[0].findIndex((/**
         * @param {?} n
         * @return {?}
         */
        n => n.field === moveItem.field));
        /** @type {?} */
        const targetItemIndex = this.columns[0].findIndex((/**
         * @param {?} n
         * @return {?}
         */
        n => n.field === targetItem.field));
        /** @type {?} */
        const removedItem = this.columns[0].splice(moveItemIndex, 1);
        this.columns[0].splice(targetItemIndex, 0, ...removedItem);
        this.fields = this.columns[0].filter((/**
         * @param {?} n
         * @return {?}
         */
        n => n.visible)).map((/**
         * @param {?} n
         * @return {?}
         */
        n => n.field));
        this.onFieldsChanged();
        this.filterColumns(ct, txt);
    }
    /**
     * 0: 1个也没有选中； 1: 全部选中； 2: 有选中的也有没选中的
     * @private
     * @return {?}
     */
    getCheckAllState() {
        if (this.fields.length === 0) {
            return 0;
        }
        else {
            if (this.fields.length === this.columns[0].length) {
                return 1;
            }
            return 2;
        }
    }
    /**
     * @param {?} $event
     * @param {?} ct
     * @param {?} txt
     * @return {?}
     */
    onCheckAllClick($event, ct, txt) {
        /** @type {?} */
        const state = this.getCheckAllState();
        if (state === 0 || state === 2) {
            // 执行全选
            this.columns[0].forEach((/**
             * @param {?} n
             * @return {?}
             */
            n => n.visible = true));
            this.fields = this.columns[0].map((/**
             * @param {?} n
             * @return {?}
             */
            n => n.field));
        }
        else {
            // 取消全选
            this.columns[0].forEach((/**
             * @param {?} n
             * @return {?}
             */
            n => n.visible = false));
            this.fields = [];
        }
        this.onFieldsChanged();
        this.filterColumns(ct, txt);
    }
    /**
     * @param {?=} $event
     * @return {?}
     */
    close($event) {
        if ($event) {
            $event.stopPropagation();
        }
        this.closed.emit();
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    showAdvanced($event) {
        this.close($event);
        this.advanced.emit();
    }
    /**
     * @param {?=} $event
     * @return {?}
     */
    onSettingReset($event) {
        if ($event) {
            $event.stopPropagation();
        }
        /** @type {?} */
        const restorDefaultText = this.localeSer.getValue('datagrid.settings.restoreDefaultSettingsText') || '确认要恢复默认设置吗？';
        this.messager.confirm(restorDefaultText).subscribe((/**
         * @param {?} t
         * @return {?}
         */
        (t) => {
            if (t) {
                this.reset2Default();
            }
        }));
    }
    /**
     * @private
     * @return {?}
     */
    reset2Default() {
        /** @type {?} */
        const options = this.gridInstance.dfs['_state'].initialOptions;
        if (options.columnFields && options.columnFields.length) {
            /** @type {?} */
            const newColumns = [];
            options.columnFields.forEach((/**
             * @param {?} c
             * @return {?}
             */
            c => {
                if (c.field !== '_datagrid-setting-control_') {
                    /** @type {?} */
                    const col = this.gridInstance.columns[0].find((/**
                     * @param {?} n
                     * @return {?}
                     */
                    (n) => n.field === c.field));
                    if (col) {
                        col.visible = c.visible;
                        col.halign = c.halign;
                        col.align = c.align;
                        col.width = c.width;
                        col.footer = Object.assign({}, c.footer || {});
                        col.groupFooter = Object.assign({}, c.groupFooter || {});
                        newColumns.push(col);
                    }
                }
            }));
            this.columns = [newColumns];
        }
        this.allCols = this.columns[0];
        this.fields = this.getViewColumns();
        this.settings.viewColumns = this.fields;
        this.settings.columnFormat = [...this.columns[0]];
        if (options.sort) {
            /** @type {?} */
            const sortOrders = options.sort.sortOrder ? options.sort.sortOrder.split(',') : [];
            /** @type {?} */
            const sortNames = options.sort.sortName ? options.sort.sortName.split(',') : [];
            this.settings.sortInfo = { sortName: sortNames, sortOrder: sortOrders };
        }
        else {
            this.settings.sortInfo = {};
        }
        this.settings.groupFields = options.groupField ? options.groupField.split(',') : [];
    }
    /**
     * @param {?=} $event
     * @return {?}
     */
    onSubmitClick($event) {
        if ($event) {
            $event.stopPropagation();
        }
        this.settings.viewColumns = this.fields;
        this.settings.columnFormat = [...this.columns[0]];
        if (!this.settings.sortInfo) {
            this.settings.sortInfo = {
                sortName: this.gridInstance.sortName ? this.gridInstance.sortName.split(',') : [],
                sortOrder: this.gridInstance.sortOrder ? this.gridInstance.sortOrder.split(',') : []
            };
        }
        if (this.settings.groupFields === undefined) {
            this.settings.groupFields = this.gridInstance.groupField ? this.gridInstance.groupField.split(',') : [];
        }
        this.submit.emit({ content: this.settings, close: this.close.bind(this), target: this.btnOk.nativeElement });
    }
}
SimpleColumnsComponent.decorators = [
    { type: Component, args: [{
                selector: 'datagrid-settings-simple',
                template: "<div class=\"d-flex flex-column f-datagrid-settings-simple\" tabindex=\"0\" #colcontainer\r\n    [style.top.px]=\"top\" [style.height]=\"'calc(100vh - ' +  top + 'px)'\">\r\n\r\n    <div class=\"header d-flex\">\r\n        <div class=\"f-utils-fill title\"> {{ 'datagrid.settings.simple.title' | locale }} </div>\r\n        <div class=\"closed\" (click)=\"close($event)\">\r\n            <span class=\"f-icon f-icon-close\" style=\"font-size: 20px;\"></span>\r\n        </div>\r\n    </div>\r\n    <div class=\"f-utils-fill content d-flex flex-column\">\r\n        <div>\r\n            <h5 class=\"count\" [innerHTML]=\"'datagrid.settings.simple.count' | locale | replaceX: fields.length\">\r\n            </h5>\r\n\r\n            <div class=\"tip\">\r\n                {{ 'datagrid.settings.simple.tip' | locale }}\r\n            </div>\r\n\r\n            <input #inputWord type=\"text\" class=\"form-control\" placeholder=\"{{'datagrid.settings.searchPlaceholder' | locale}}\"\r\n                (input)=\"searchColumn($event, ct.selectedValues)\" style=\"height: 30px;margin-bottom: 16px;\">\r\n            <div style=\"padding: 5px 0px;background-color: #fff;\">\r\n                <button class=\"btn btn-link \" \r\n                    style=\"height: 32px;padding-left: 4px;\" (click)=\"onCheckAllClick($event, ct.selectedValues, inputWord.value)\">\r\n                    <span class=\"f-icon f-icon-minus-outline checkall\" [class.f-icon-checkbox]=\"!fields.length\"\r\n                        [class.f-icon-checkbox-checked]=\"fields.length === columns[0].length\"></span>\r\n                    {{ 'datagrid.settings.checkall' | locale }}\r\n                </button>\r\n\r\n                <farris-combo-list #ct \r\n                [data]=\"seartTypes\" \r\n                [editable]=\"false\"\r\n                [ngModel]=\"'all'\" [idField]=\"'value'\"\r\n                [textField]=\"'title'\"\r\n                [enableClear]=\"false\"\r\n                (valueChange)=\"filterColumns(ct.selectedValues, inputWord.value)\"\r\n                style=\"float: right;\" [style.width.px]=\"isEn ? 120: 80\"\r\n                class=\"format-setting-searchitem\"></farris-combo-list>\r\n            </div>\r\n        </div>\r\n        <div style=\"overflow: auto;padding-right:3px\" class=\"f-utils-fill\">\r\n            <ul class=\"list-group list-group-flush\" #ul column-visible-drag (drop)=\"onFieldDrop($event, ct.selectedValues, inputWord.value, ul)\">\r\n                <li class=\"list-group-item list-group-item-action smooth-dnd-draggable-wrapper format-setting-column\" *ngFor=\"let col of allCols\" \r\n                    (click)=\"onDblClick($event, col)\">\r\n                    <span class=\"f-icon checkbox\"\r\n                        [class.f-icon-checkbox-checked]=\"fields.indexOf(col.field) > -1\"\r\n                        [class.f-icon-checkbox]=\"fields.indexOf(col.field) == -1\"\r\n                        (click)=\"onCheckboxClick($event, col)\"></span>\r\n                    {{ col.title}} \r\n\r\n                    <span class=\"f-icon f-icon-drag-vertical field-drag-handle\"></span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n    </div>\r\n    <div class=\"footer\">\r\n\r\n        <div class=\"buttons\">\r\n            <button class=\"btn btn-link advanced\" (click)=\"showAdvanced($event)\">{{ 'datagrid.settings.advancedMode' | locale: '\u9AD8\u7EA7\u6A21\u5F0F' }}</button>\r\n            <button class=\"btn btn-link reset\" (click)=\"onSettingReset($event)\">{{ 'datagrid.settings.reset' | locale: '\u6062\u590D\u9ED8\u8BA4' }}</button>\r\n            <button class=\"btn btn-secondary cancel\"\r\n                (click)=\"close($event)\">{{'datagrid.settings.cancel' | locale}}</button>\r\n            <button class=\"btn btn-primary ok\" #okbtn\r\n                (click)=\"onSubmitClick($event)\">{{'datagrid.settings.ok' | locale}}</button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>",
                encapsulation: ViewEncapsulation.None,
                styles: [`
        .f-datagrid-settings-simple {
            position: absolute;
            top: 100px;
            right: 0px;
            z-index: 10000;
            height: calc(100vh - 100px);
            width: 468px;
            background: #FFFFFF;
            border: 1px solid #E6E9F0;
            border-radius: 10px 0 0 10px;
        }

        .f-datagrid-settings-simple:focus {
            outline: none;
        }

        .f-datagrid-settings-simple .header {
            height: 50px;
            line-height: 50px;
            border-bottom: 1px solid #EAEDF3;
            font-size: 18px;
            color: #2D2F33;
        }
        .f-datagrid-settings-simple .header .title {
            padding-left: 21px;
            font-weight:bold;
        }
        .f-datagrid-settings-simple .header .closed
        {
            width: 50px;
            text-align: center;
            cursor: pointer;
        }

        .f-datagrid-settings-simple .content .count{font-size: 14px; color: #2D2F33;}
        .f-datagrid-settings-simple .content .tip {
            background: #F7FAFF; border-radius: 6px;line-height: 42px; padding-left: 10px; margin-bottom: 10px;
        }

        .f-datagrid-settings-simple .content .checkall{
            margin-left: 5px;
            font-size: 14px;
            color: #0089FF;
            margin-right: 5px;
        }

        .f-datagrid-settings-simple .content {
            margin: 20px 24px;
        }

        .f-datagrid-settings-simple .footer {
            height: 32px;
            margin: 20px;
        }


        .smooth-dnd-ghost.format-setting-column {
            z-index: 999999999 !important;
            padding: 4px 8px;
            background-color: #e7f1ff;
            border: 1px solid #2a87ff;
        }
        .smooth-dnd-ghost.format-setting-column .field-drag-handle {
            float: right;
        }
        .f-datagrid-settings-simple  .smooth-dnd-drop-preview-constant-class {
            background-color: #dee1ea;
        }
        .f-datagrid-settings-simple .format-setting-column {
            background: #fafbfd;
            padding: 4px 8px;
            margin-bottom: 5px;
            border: 1px solid #f2f4f8;
            border-radius: 5px;
            color: #000;
        }
        .f-datagrid-settings-simple .format-setting-column.active {
            border: 1px solid #2a87ff;
            background: #e7f1ff;
            border-top: 1px solid #2a87ff!important;
            border-bottom: 1px solid #2a87ff!important;
        }

        .format-setting-column .checkbox{
            font-size: 14px;
            color: #0089FF;
            margin-right: 5px;
            cursor:pointer;
        }

        .f-datagrid-settings-simple .format-setting-column .field-drag-handle{
            float: right;
            cursor: grab;
        }

        .f-datagrid-settings-simple .format-setting-column .field-drag-handle:active{
            cursor: grabbing;
        }

        .f-datagrid-settings-simple .list-group-flush:last-child .list-group-item:last-child {
            border-bottom: 1px solid #f2f4f8;
        }

        .f-datagrid-settings-simple .list-group-flush:first-child .list-group-item:first-child {
            border-top: 1px solid #f2f4f8;
        }

        .f-datagrid-settings-simple .buttons
        {
            text-align: right;
        }

        .f-datagrid-settings-simple .buttons button {
            width: 66px;height: 32px;
        }
        .f-datagrid-settings-simple .buttons .cancel {
            margin-left: 12px;margin-right: 8px;
        }
        .f-datagrid-settings-simple .buttons .ok {
            width: 100px;
        }

        .f-datagrid-settings-simple .buttons .advanced{ width: 66px;height: 32px; float: left; }

        .f-datagrid-settings-simple-host {
            width: 100%;
            height: 100%;
            position: absolute;
            top: 0;
            left: 0;
            z-index: 1000;
        }

        .f-datagrid-settings-simple .visible-cols-count {
            font-size: 18px;
            font-weight: 500;
        }
        `]
            }] }
];
/** @nocollapse */
SimpleColumnsComponent.ctorParameters = () => [
    { type: Injector },
    { type: ChangeDetectorRef }
];
SimpleColumnsComponent.propDecorators = {
    seartTypes: [{ type: Input }],
    columns: [{ type: Input }],
    fields: [{ type: Input }],
    clickToHidden: [{ type: Input }],
    top: [{ type: Input }],
    cls: [{ type: HostBinding, args: ['class',] }],
    container: [{ type: ViewChild, args: ['colcontainer',] }],
    btnOk: [{ type: ViewChild, args: ['okbtn',] }],
    searchInput: [{ type: ViewChild, args: ['inputWord',] }],
    formatChange: [{ type: Output }],
    fieldsChange: [{ type: Output }],
    submit: [{ type: Output }],
    closed: [{ type: Output }],
    advanced: [{ type: Output }],
    onClick: [{ type: HostListener, args: ['click', ['$event'],] }],
    onEscKeydown: [{ type: HostListener, args: ['window:keydown.esc', ['$event'],] }],
    onEnterKeydown: [{ type: HostListener, args: ['window:keydown.enter', ['$event'],] }],
    onControlGKeydown: [{ type: HostListener, args: ['keydown', ['$event'],] }]
};
if (false) {
    /** @type {?} */
    SimpleColumnsComponent.prototype.seartTypes;
    /**
     * 所有列
     * @type {?}
     */
    SimpleColumnsComponent.prototype.columns;
    /**
     * 显示的列
     * @type {?}
     */
    SimpleColumnsComponent.prototype.fields;
    /**
     * 点击侧边样式以外的区域隐藏面板。默认为 true
     * @type {?}
     */
    SimpleColumnsComponent.prototype.clickToHidden;
    /** @type {?} */
    SimpleColumnsComponent.prototype.top;
    /** @type {?} */
    SimpleColumnsComponent.prototype.cls;
    /** @type {?} */
    SimpleColumnsComponent.prototype.container;
    /** @type {?} */
    SimpleColumnsComponent.prototype.btnOk;
    /** @type {?} */
    SimpleColumnsComponent.prototype.searchInput;
    /** @type {?} */
    SimpleColumnsComponent.prototype.formatChange;
    /** @type {?} */
    SimpleColumnsComponent.prototype.fieldsChange;
    /** @type {?} */
    SimpleColumnsComponent.prototype.submit;
    /** @type {?} */
    SimpleColumnsComponent.prototype.closed;
    /** @type {?} */
    SimpleColumnsComponent.prototype.advanced;
    /** @type {?} */
    SimpleColumnsComponent.prototype.allCols;
    /** @type {?} */
    SimpleColumnsComponent.prototype.columnType;
    /** @type {?} */
    SimpleColumnsComponent.prototype.gridInstance;
    /** @type {?} */
    SimpleColumnsComponent.prototype.localeSer;
    /** @type {?} */
    SimpleColumnsComponent.prototype.isEn;
    /**
     * @type {?}
     * @private
     */
    SimpleColumnsComponent.prototype.messager;
    /**
     * @type {?}
     * @private
     */
    SimpleColumnsComponent.prototype.settings;
    /**
     * @type {?}
     * @private
     */
    SimpleColumnsComponent.prototype.injector;
    /** @type {?} */
    SimpleColumnsComponent.prototype.cd;
}
//# sourceMappingURL=data:application/json;base64,