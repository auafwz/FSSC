import { MessagePipe } from './message-pipe';
import { RuntimeFrameworkService } from '../rtf-service';
import { QuerystringService } from '../querystring';
export class MessagePipeService {
    /**
     * 通过token获取消息管道
     * @param token 消息管道标识
     */
    static get(token) {
        const pipe = new MessagePipe(token, this.rtfService);
        return pipe;
    }
    /**
     * 创建消息管道
     * @param pipeName 管道名称
     * @param useFormContext 是否使用表单上下文创建管道标识
     * @param pipeType 管道类型(可选)，默认Subject<any>
     */
    static create(pipeName, useFormContext, pipeType) {
        let options = null;
        if (useFormContext) {
            const params = this.querystringService.parse(window.location.hash);
            const { funcId, appId, appEntrance } = params;
            options = { funcId, appId, appEntrance };
        }
        const token = this.rtfService.subjectRegister(pipeName, options, pipeType);
        if (!token) {
            console.warn('message pipe create failed.');
            return null;
        }
        const pipe = new MessagePipe(token, this.rtfService);
        return pipe;
    }
}
MessagePipeService.rtfService = new RuntimeFrameworkService();
MessagePipeService.querystringService = new QuerystringService();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZS1waXBlLXNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2NvbW1hbmQtc2VydmljZXMvIiwic291cmNlcyI6WyJsaWIvcnRmLW1lc3NhZ2UvbWVzc2FnZS1waXBlLXNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXpELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXBELE1BQU0sT0FBTyxrQkFBa0I7SUFHN0I7OztPQUdHO0lBQ0ksTUFBTSxDQUFDLEdBQUcsQ0FBQyxLQUFhO1FBQzdCLE1BQU0sSUFBSSxHQUFHLElBQUksV0FBVyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDckQsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBQ0Q7Ozs7O09BS0c7SUFDSSxNQUFNLENBQUMsTUFBTSxDQUFDLFFBQWdCLEVBQUUsY0FBdUIsRUFBRSxRQUF1QjtRQUNyRixJQUFJLE9BQU8sR0FBRyxJQUFJLENBQUM7UUFDbkIsSUFBSSxjQUFjLEVBQUU7WUFDbEIsTUFBTSxNQUFNLEdBQUcsSUFBSSxDQUFDLGtCQUFrQixDQUFDLEtBQUssQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxDQUFDO1lBQ25FLE1BQU0sRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxHQUFHLE1BQU0sQ0FBQztZQUM5QyxPQUFPLEdBQUcsRUFBRSxNQUFNLEVBQUUsS0FBSyxFQUFFLFdBQVcsRUFBRSxDQUFDO1NBQzFDO1FBQ0QsTUFBTSxLQUFLLEdBQUcsSUFBSSxDQUFDLFVBQVUsQ0FBQyxlQUFlLENBQUMsUUFBUSxFQUFFLE9BQU8sRUFBRSxRQUFRLENBQUMsQ0FBQztRQUMzRSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ1YsT0FBTyxDQUFDLElBQUksQ0FBQyw2QkFBNkIsQ0FBQyxDQUFDO1lBQzVDLE9BQU8sSUFBSSxDQUFDO1NBQ2I7UUFDRCxNQUFNLElBQUksR0FBRyxJQUFJLFdBQVcsQ0FBQyxLQUFLLEVBQUUsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO1FBQ3JELE9BQU8sSUFBSSxDQUFDO0lBQ2QsQ0FBQzs7QUE5QmMsNkJBQVUsR0FBNEIsSUFBSSx1QkFBdUIsRUFBRSxDQUFDO0FBQ3BFLHFDQUFrQixHQUF1QixJQUFJLGtCQUFrQixFQUFFLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBNZXNzYWdlUGlwZSB9IGZyb20gJy4vbWVzc2FnZS1waXBlJztcclxuaW1wb3J0IHsgUnVudGltZUZyYW1ld29ya1NlcnZpY2UgfSBmcm9tICcuLi9ydGYtc2VydmljZSc7XHJcbmltcG9ydCB7IFN1YmplY3QgfSBmcm9tICdyeGpzJztcclxuaW1wb3J0IHsgUXVlcnlzdHJpbmdTZXJ2aWNlIH0gZnJvbSAnLi4vcXVlcnlzdHJpbmcnO1xyXG5cclxuZXhwb3J0IGNsYXNzIE1lc3NhZ2VQaXBlU2VydmljZSB7XHJcbiAgcHJpdmF0ZSBzdGF0aWMgcnRmU2VydmljZTogUnVudGltZUZyYW1ld29ya1NlcnZpY2UgPSBuZXcgUnVudGltZUZyYW1ld29ya1NlcnZpY2UoKTtcclxuICBwcml2YXRlIHN0YXRpYyBxdWVyeXN0cmluZ1NlcnZpY2U6IFF1ZXJ5c3RyaW5nU2VydmljZSA9IG5ldyBRdWVyeXN0cmluZ1NlcnZpY2UoKTtcclxuICAvKipcclxuICAgKiDpgJrov4d0b2tlbuiOt+WPlua2iOaBr+euoemBk1xyXG4gICAqIEBwYXJhbSB0b2tlbiDmtojmga/nrqHpgZPmoIfor4ZcclxuICAgKi9cclxuICBwdWJsaWMgc3RhdGljIGdldCh0b2tlbjogc3RyaW5nKTogTWVzc2FnZVBpcGUge1xyXG4gICAgY29uc3QgcGlwZSA9IG5ldyBNZXNzYWdlUGlwZSh0b2tlbiwgdGhpcy5ydGZTZXJ2aWNlKTtcclxuICAgIHJldHVybiBwaXBlO1xyXG4gIH1cclxuICAvKipcclxuICAgKiDliJvlu7rmtojmga/nrqHpgZNcclxuICAgKiBAcGFyYW0gcGlwZU5hbWUg566h6YGT5ZCN56ewXHJcbiAgICogQHBhcmFtIHVzZUZvcm1Db250ZXh0IOaYr+WQpuS9v+eUqOihqOWNleS4iuS4i+aWh+WIm+W7uueuoemBk+agh+ivhlxyXG4gICAqIEBwYXJhbSBwaXBlVHlwZSDnrqHpgZPnsbvlnoso5Y+v6YCJKe+8jOm7mOiupFN1YmplY3Q8YW55PlxyXG4gICAqL1xyXG4gIHB1YmxpYyBzdGF0aWMgY3JlYXRlKHBpcGVOYW1lOiBzdHJpbmcsIHVzZUZvcm1Db250ZXh0OiBib29sZWFuLCBwaXBlVHlwZT86IFN1YmplY3Q8YW55Pik6IE1lc3NhZ2VQaXBlIHtcclxuICAgIGxldCBvcHRpb25zID0gbnVsbDtcclxuICAgIGlmICh1c2VGb3JtQ29udGV4dCkge1xyXG4gICAgICBjb25zdCBwYXJhbXMgPSB0aGlzLnF1ZXJ5c3RyaW5nU2VydmljZS5wYXJzZSh3aW5kb3cubG9jYXRpb24uaGFzaCk7XHJcbiAgICAgIGNvbnN0IHsgZnVuY0lkLCBhcHBJZCwgYXBwRW50cmFuY2UgfSA9IHBhcmFtcztcclxuICAgICAgb3B0aW9ucyA9IHsgZnVuY0lkLCBhcHBJZCwgYXBwRW50cmFuY2UgfTtcclxuICAgIH1cclxuICAgIGNvbnN0IHRva2VuID0gdGhpcy5ydGZTZXJ2aWNlLnN1YmplY3RSZWdpc3RlcihwaXBlTmFtZSwgb3B0aW9ucywgcGlwZVR5cGUpO1xyXG4gICAgaWYgKCF0b2tlbikge1xyXG4gICAgICBjb25zb2xlLndhcm4oJ21lc3NhZ2UgcGlwZSBjcmVhdGUgZmFpbGVkLicpO1xyXG4gICAgICByZXR1cm4gbnVsbDtcclxuICAgIH1cclxuICAgIGNvbnN0IHBpcGUgPSBuZXcgTWVzc2FnZVBpcGUodG9rZW4sIHRoaXMucnRmU2VydmljZSk7XHJcbiAgICByZXR1cm4gcGlwZTtcclxuICB9XHJcbn1cclxuIl19