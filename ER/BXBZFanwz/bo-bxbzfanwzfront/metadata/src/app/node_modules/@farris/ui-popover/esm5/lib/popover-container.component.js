/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectionStrategy, Input, Component, Optional, ViewChild, ElementRef } from '@angular/core';
import { PopoverConfig } from './popover.config';
import { isBs3 } from '@farris/ui-modal/utils';
import { Subject } from 'rxjs';
var PopoverContainerComponent = /** @class */ (function () {
    function PopoverContainerComponent(config, el) {
        this.el = el;
        this.mounseState = new Subject();
        Object.assign(this, config);
    }
    Object.defineProperty(PopoverContainerComponent.prototype, "isBs3", {
        get: /**
         * @return {?}
         */
        function () {
            return isBs3();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    PopoverContainerComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        if (this.el) {
            this.mouseenterEvent = this.changeMouseState.bind(this, true);
            this.mouseleaveEvent = this.changeMouseState.bind(this, false);
            this.el.nativeElement.addEventListener('mouseenter', this.mouseenterEvent);
            this.el.nativeElement.addEventListener('mouseleave', this.mouseleaveEvent);
        }
    };
    /**
     * 获取鼠标变化状态
     */
    /**
     * 获取鼠标变化状态
     * @return {?}
     */
    PopoverContainerComponent.prototype.getMouseState = /**
     * 获取鼠标变化状态
     * @return {?}
     */
    function () {
        return this.mounseState;
    };
    /**
     * 绑定的事件
     * @param state
     */
    /**
     * 绑定的事件
     * @private
     * @param {?} state
     * @return {?}
     */
    PopoverContainerComponent.prototype.changeMouseState = /**
     * 绑定的事件
     * @private
     * @param {?} state
     * @return {?}
     */
    function (state) {
        console.log(state);
        this.mounseState.next(state);
    };
    /**
     * @return {?}
     */
    PopoverContainerComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.mouseenterEvent) {
            this.el.nativeElement.removeEventListener('mouseenter', this.mouseenterEvent);
        }
        if (this.mouseleaveEvent) {
            this.el.nativeElement.removeEventListener('mouseleave', this.mouseleaveEvent);
        }
        this.mounseState.unsubscribe();
    };
    PopoverContainerComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-popover',
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    // tslint:disable-next-line
                    host: {
                        '[class]': '"popover in popover-" + placement + " " + "bs-popover-" + placement + " " + placement + " " + containerClass',
                        '[class.show]': '!isBs3',
                        '[class.bs3]': 'isBs3',
                        role: 'tooltip',
                        style: 'display:block;'
                    },
                    template: "<div class=\"popover-arrow arrow\"></div>\r\n<h3 class=\"popover-title popover-header\" *ngIf=\"title\">{{ title }}</h3>\r\n<div #innerEle class=\"popover-content popover-body\" [ngClass]=\"containerClass\">\r\n  <ng-content></ng-content>\r\n</div>\r\n",
                    styles: ["\n    :host.bs3.popover-top {\n      margin-bottom: 10px;\n    }\n    :host.bs3.popover.top>.arrow {\n      margin-left: -2px;\n    }\n    :host.bs3.popover.top {\n      margin-bottom: 10px;\n    }\n    :host.popover.bottom>.arrow {\n      margin-left: -4px;\n    }\n    :host.bs3.bs-popover-left {\n      margin-right: .5rem;\n    }\n    :host.bs3.bs-popover-right .arrow, :host.bs3.bs-popover-left .arrow{\n      margin: .3rem 0;\n    }\n    :host.arrow-left .arrow {\n        left: calc(50% - 10px);\n    }\n    "]
                }] }
    ];
    /** @nocollapse */
    PopoverContainerComponent.ctorParameters = function () { return [
        { type: PopoverConfig },
        { type: ElementRef, decorators: [{ type: Optional }] }
    ]; };
    PopoverContainerComponent.propDecorators = {
        innerNode: [{ type: ViewChild, args: ['innerEle', { read: ElementRef },] }],
        placement: [{ type: Input }],
        title: [{ type: Input }]
    };
    return PopoverContainerComponent;
}());
export { PopoverContainerComponent };
if (false) {
    /** @type {?} */
    PopoverContainerComponent.prototype.innerNode;
    /** @type {?} */
    PopoverContainerComponent.prototype.placement;
    /** @type {?} */
    PopoverContainerComponent.prototype.title;
    /** @type {?} */
    PopoverContainerComponent.prototype.containerClass;
    /**
     * @type {?}
     * @private
     */
    PopoverContainerComponent.prototype.mouseenterEvent;
    /**
     * @type {?}
     * @private
     */
    PopoverContainerComponent.prototype.mouseleaveEvent;
    /**
     * @type {?}
     * @private
     */
    PopoverContainerComponent.prototype.mounseState;
    /**
     * @type {?}
     * @private
     */
    PopoverContainerComponent.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicG9wb3Zlci1jb250YWluZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1wb3BvdmVyLyIsInNvdXJjZXMiOlsibGliL3BvcG92ZXItY29udGFpbmVyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLHVCQUF1QixFQUFFLEtBQUssRUFBRSxTQUFTLEVBQUMsUUFBUSxFQUFFLFNBQVMsRUFBRSxVQUFVLEVBQThDLE1BQU0sZUFBZSxDQUFDO0FBQ3RKLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxrQkFBa0IsQ0FBQztBQUNqRCxPQUFPLEVBQUUsS0FBSyxFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDL0MsT0FBTyxFQUFjLE9BQU8sRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUUzQztJQW9ERSxtQ0FBWSxNQUFxQixFQUFxQixFQUFhO1FBQWIsT0FBRSxHQUFGLEVBQUUsQ0FBVztRQU4zRCxnQkFBVyxHQUFHLElBQUksT0FBTyxFQUFXLENBQUM7UUFPM0MsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLEVBQUUsTUFBTSxDQUFDLENBQUM7SUFDOUIsQ0FBQztJQU5ELHNCQUFJLDRDQUFLOzs7O1FBQVQ7WUFDRSxPQUFPLEtBQUssRUFBRSxDQUFDO1FBQ2pCLENBQUM7OztPQUFBOzs7O0lBTUQsbURBQWU7OztJQUFmO1FBQ0UsSUFBSSxJQUFJLENBQUMsRUFBRSxFQUFFO1lBQ1gsSUFBSSxDQUFDLGVBQWUsR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLElBQUksRUFBRSxJQUFJLENBQUMsQ0FBQztZQUM5RCxJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxJQUFJLENBQUMsSUFBSSxFQUFFLEtBQUssQ0FBQyxDQUFDO1lBQy9ELElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLGdCQUFnQixDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7WUFDM0UsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsZ0JBQWdCLENBQUMsWUFBWSxFQUFFLElBQUksQ0FBQyxlQUFlLENBQUMsQ0FBQztTQUM1RTtJQUNILENBQUM7SUFDRDs7T0FFRzs7Ozs7SUFDSCxpREFBYTs7OztJQUFiO1FBQ0UsT0FBTyxJQUFJLENBQUMsV0FBVyxDQUFDO0lBQzFCLENBQUM7SUFDRDs7O09BR0c7Ozs7Ozs7SUFDSyxvREFBZ0I7Ozs7OztJQUF4QixVQUF5QixLQUFLO1FBRTVCLE9BQU8sQ0FBQyxHQUFHLENBQUMsS0FBSyxDQUFDLENBQUM7UUFDbkIsSUFBSSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDL0IsQ0FBQzs7OztJQUVELCtDQUFXOzs7SUFBWDtRQUNFLElBQUksSUFBSSxDQUFDLGVBQWUsRUFBRTtZQUN4QixJQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxtQkFBbUIsQ0FBQyxZQUFZLEVBQUUsSUFBSSxDQUFDLGVBQWUsQ0FBQyxDQUFDO1NBQy9FO1FBQ0QsSUFBSSxJQUFJLENBQUMsZUFBZSxFQUFFO1lBQ3hCLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLG1CQUFtQixDQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7U0FDL0U7UUFDRCxJQUFJLENBQUMsV0FBVyxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ2pDLENBQUM7O2dCQXhGRixTQUFTLFNBQUM7b0JBQ1QsUUFBUSxFQUFFLGdCQUFnQjtvQkFDMUIsZUFBZSxFQUFFLHVCQUF1QixDQUFDLE1BQU07O29CQUUvQyxJQUFJLEVBQUU7d0JBQ0osU0FBUyxFQUNQLDhHQUE4Rzt3QkFDaEgsY0FBYyxFQUFFLFFBQVE7d0JBQ3hCLGFBQWEsRUFBRSxPQUFPO3dCQUN0QixJQUFJLEVBQUUsU0FBUzt3QkFDZixLQUFLLEVBQUUsZ0JBQWdCO3FCQUN4QjtvQkEwQkQsd1FBQWlEOzZCQXhCL0MscWdCQXNCQztpQkFHSjs7OztnQkExQ1EsYUFBYTtnQkFEa0QsVUFBVSx1QkF5RDdDLFFBQVE7Ozs0QkFaMUMsU0FBUyxTQUFDLFVBQVUsRUFBRSxFQUFFLElBQUksRUFBRSxVQUFVLEVBQUU7NEJBQzFDLEtBQUs7d0JBQ0wsS0FBSzs7SUErQ1IsZ0NBQUM7Q0FBQSxBQXpGRCxJQXlGQztTQWxEWSx5QkFBeUI7OztJQUNwQyw4Q0FBbUU7O0lBQ25FLDhDQUEyQjs7SUFDM0IsMENBQXVCOztJQUN2QixtREFBdUI7Ozs7O0lBQ3ZCLG9EQUE2Qjs7Ozs7SUFDN0Isb0RBQTZCOzs7OztJQUM3QixnREFBNkM7Ozs7O0lBTVgsdUNBQWlDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0aW9uU3RyYXRlZ3ksIElucHV0LCBDb21wb25lbnQsT3B0aW9uYWwsIFZpZXdDaGlsZCwgRWxlbWVudFJlZiwgQWZ0ZXJWaWV3Q2hlY2tlZCwgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFBvcG92ZXJDb25maWcgfSBmcm9tICcuL3BvcG92ZXIuY29uZmlnJztcclxuaW1wb3J0IHsgaXNCczMgfSBmcm9tICdAZmFycmlzL3VpLW1vZGFsL3V0aWxzJztcclxuaW1wb3J0IHsgT2JzZXJ2YWJsZSwgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdmYXJyaXMtcG9wb3ZlcicsXHJcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXHJcbiAgLy8gdHNsaW50OmRpc2FibGUtbmV4dC1saW5lXHJcbiAgaG9zdDoge1xyXG4gICAgJ1tjbGFzc10nOlxyXG4gICAgICAnXCJwb3BvdmVyIGluIHBvcG92ZXItXCIgKyBwbGFjZW1lbnQgKyBcIiBcIiArIFwiYnMtcG9wb3Zlci1cIiArIHBsYWNlbWVudCArIFwiIFwiICsgcGxhY2VtZW50ICsgXCIgXCIgKyBjb250YWluZXJDbGFzcycsXHJcbiAgICAnW2NsYXNzLnNob3ddJzogJyFpc0JzMycsXHJcbiAgICAnW2NsYXNzLmJzM10nOiAnaXNCczMnLFxyXG4gICAgcm9sZTogJ3Rvb2x0aXAnLFxyXG4gICAgc3R5bGU6ICdkaXNwbGF5OmJsb2NrOydcclxuICB9LFxyXG4gIHN0eWxlczogW1xyXG4gICAgYFxyXG4gICAgOmhvc3QuYnMzLnBvcG92ZXItdG9wIHtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIH1cclxuICAgIDpob3N0LmJzMy5wb3BvdmVyLnRvcD4uYXJyb3cge1xyXG4gICAgICBtYXJnaW4tbGVmdDogLTJweDtcclxuICAgIH1cclxuICAgIDpob3N0LmJzMy5wb3BvdmVyLnRvcCB7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDEwcHg7XHJcbiAgICB9XHJcbiAgICA6aG9zdC5wb3BvdmVyLmJvdHRvbT4uYXJyb3cge1xyXG4gICAgICBtYXJnaW4tbGVmdDogLTRweDtcclxuICAgIH1cclxuICAgIDpob3N0LmJzMy5icy1wb3BvdmVyLWxlZnQge1xyXG4gICAgICBtYXJnaW4tcmlnaHQ6IC41cmVtO1xyXG4gICAgfVxyXG4gICAgOmhvc3QuYnMzLmJzLXBvcG92ZXItcmlnaHQgLmFycm93LCA6aG9zdC5iczMuYnMtcG9wb3Zlci1sZWZ0IC5hcnJvd3tcclxuICAgICAgbWFyZ2luOiAuM3JlbSAwO1xyXG4gICAgfVxyXG4gICAgOmhvc3QuYXJyb3ctbGVmdCAuYXJyb3cge1xyXG4gICAgICAgIGxlZnQ6IGNhbGMoNTAlIC0gMTBweCk7XHJcbiAgICB9XHJcbiAgICBgXHJcbiAgXSxcclxuICB0ZW1wbGF0ZVVybDogJy4vcG9wb3Zlci1jb250YWluZXIuY29tcG9uZW50Lmh0bWwnXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBQb3BvdmVyQ29udGFpbmVyQ29tcG9uZW50IGltcGxlbWVudHMgQWZ0ZXJWaWV3SW5pdCwgT25EZXN0cm95IHtcclxuICBAVmlld0NoaWxkKCdpbm5lckVsZScsIHsgcmVhZDogRWxlbWVudFJlZiB9KSBpbm5lck5vZGU6IEVsZW1lbnRSZWY7XHJcbiAgQElucHV0KCkgcGxhY2VtZW50OiBzdHJpbmc7XHJcbiAgQElucHV0KCkgdGl0bGU6IHN0cmluZztcclxuICBjb250YWluZXJDbGFzczogc3RyaW5nO1xyXG4gIHByaXZhdGUgbW91c2VlbnRlckV2ZW50OiBhbnk7XHJcbiAgcHJpdmF0ZSBtb3VzZWxlYXZlRXZlbnQ6IGFueTtcclxuICBwcml2YXRlIG1vdW5zZVN0YXRlID0gbmV3IFN1YmplY3Q8Ym9vbGVhbj4oKTtcclxuXHJcbiAgZ2V0IGlzQnMzKCk6IGJvb2xlYW4ge1xyXG4gICAgcmV0dXJuIGlzQnMzKCk7XHJcbiAgfVxyXG5cclxuICBjb25zdHJ1Y3Rvcihjb25maWc6IFBvcG92ZXJDb25maWcsQE9wdGlvbmFsKCkgcHJpdmF0ZSBlbDpFbGVtZW50UmVmKSB7XHJcbiAgICBPYmplY3QuYXNzaWduKHRoaXMsIGNvbmZpZyk7XHJcbiAgfVxyXG5cclxuICBuZ0FmdGVyVmlld0luaXQoKSB7XHJcbiAgICBpZiAodGhpcy5lbCkge1xyXG4gICAgICB0aGlzLm1vdXNlZW50ZXJFdmVudCA9IHRoaXMuY2hhbmdlTW91c2VTdGF0ZS5iaW5kKHRoaXMsIHRydWUpO1xyXG4gICAgICB0aGlzLm1vdXNlbGVhdmVFdmVudCA9IHRoaXMuY2hhbmdlTW91c2VTdGF0ZS5iaW5kKHRoaXMsIGZhbHNlKTtcclxuICAgICAgdGhpcy5lbC5uYXRpdmVFbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoJ21vdXNlZW50ZXInLCB0aGlzLm1vdXNlZW50ZXJFdmVudCk7XHJcbiAgICAgIHRoaXMuZWwubmF0aXZlRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKCdtb3VzZWxlYXZlJywgdGhpcy5tb3VzZWxlYXZlRXZlbnQpO1xyXG4gICAgfVxyXG4gIH1cclxuICAvKipcclxuICAgKiDojrflj5bpvKDmoIflj5jljJbnirbmgIFcclxuICAgKi9cclxuICBnZXRNb3VzZVN0YXRlKCl7XHJcbiAgICByZXR1cm4gdGhpcy5tb3Vuc2VTdGF0ZTtcclxuICB9XHJcbiAgLyoqXHJcbiAgICog57uR5a6a55qE5LqL5Lu2XHJcbiAgICogQHBhcmFtIHN0YXRlIFxyXG4gICAqL1xyXG4gIHByaXZhdGUgY2hhbmdlTW91c2VTdGF0ZShzdGF0ZSkge1xyXG4gICAgXHJcbiAgICBjb25zb2xlLmxvZyhzdGF0ZSk7XHJcbiAgICB0aGlzLm1vdW5zZVN0YXRlLm5leHQoc3RhdGUpO1xyXG4gIH1cclxuXHJcbiAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICBpZiAodGhpcy5tb3VzZWVudGVyRXZlbnQpIHtcclxuICAgICAgdGhpcy5lbC5uYXRpdmVFbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlZW50ZXInLCB0aGlzLm1vdXNlZW50ZXJFdmVudCk7XHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5tb3VzZWxlYXZlRXZlbnQpIHtcclxuICAgICAgdGhpcy5lbC5uYXRpdmVFbGVtZW50LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21vdXNlbGVhdmUnLCB0aGlzLm1vdXNlbGVhdmVFdmVudCk7XHJcbiAgICB9XHJcbiAgICB0aGlzLm1vdW5zZVN0YXRlLnVuc3Vic2NyaWJlKCk7XHJcbiAgfVxyXG59XHJcbiJdfQ==