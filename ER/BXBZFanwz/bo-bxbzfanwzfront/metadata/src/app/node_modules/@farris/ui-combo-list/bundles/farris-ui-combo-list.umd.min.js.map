{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@farris/ui-combo-list/lib/http/ComboHttpService.ts","ng://@farris/ui-combo-list/lib/combo.service.ts","ng://@farris/ui-combo-list/lib/services/combo.locale.service.ts","ng://@farris/ui-combo-list/lib/base-combo.component.ts","ng://@farris/ui-combo-list/lib/combo-list.component.ts","ng://@farris/ui-combo-list/lib/combo-list.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","ComboServerSideToken","InjectionToken","defineProperty","ComboService","_uri","val","data$","_data","isArray","injectService","injector","comboHttp","lookupUtils","get","LookupUtils","displayType","indexOf","ServerSideToken","toBoolean","selectItem","data","index","emitEvent","_this","multiSelect","selections","forEach","findIndex","idField","selections$","action","unSelectItem","filter","item","JSON","stringify","selectAll","datas","find","unSelectAll","isSelect","id","undefined","loadData","selectValues","callback","vals","split","separator","selectedItems","map","el","filterDataOnServer","params","getData","subscribe","closeLoading","loadingService","clearAll","items","loadLookUpDataTable","loadLookUpDataTree","filterData","field","String","getValueByObj","getSelections","clearSelections","getValue","prop","tmp","join","console","log","reduce","obj","key","initData","method","selectedIds","loadDataTree","loadDataTable","loadSuccess$","loadLookupData","isTree","enableFullTree","loadTreeDataType","customData","searchValue","treeloadconfig","pipe","switchMap","getSelectedItems","treeNodeToFlatData","textField","catchError","of","selIds","searchParam","category","favoriteIds","uri","showLoading","context","tap","http","request","delay","__spread","concat","returnValue","selectedValues","dataArr","eachData","paramData","paramVal","rtnData","children","resData","sortable","columns","pageInfo","total","ids","isMaped","checkNodeCanBeSelect","nodes","allData","node","selectable","leaf","treeInfo","treeInfo$","layerType","toLowerCase","makeTree","makeTreeWithParentID","dataField","parentField","loading","show","container","panelElement","close","Injectable","HttpClient","LoadingService","Injector","Subject","isOpen$","BehaviorSubject","serachValue$","remoteSearch","treeSearchHandler","debounceTime","ComboLocaleService","getLocaleConfig","locale","localeService","localeId","localeConfig","getResources","LocaleService","ZH_CN","placeholder","EN_US","nextUniqueId","BaseComboComponent","comboService","mapFields","v","valueField","cmp","_cmbPanel","ro","observe","nativeElement","_comboPanelCreated$","disconnect","ngOnInit","localConfig","ngAfterViewInit","that","ngControl","NgControl","fromEvent","window","throttle","ev","interval","takeUntil","destroy$","updatePanelWidth","isOpen","willHide$","ngZone","runOutsideAngular","setTimeout","reszieTimer_1","ResizeObserver","clearTimeout","reqAnimFrame","updatePosition","className","render","addClass","ngOnDestroy","complete","unsubscribe","mouseWheelEvent","width","getInputSizeInfo","panelWidth","autoWidth","onClick","$event","stopPropagation","originalEvent","input","textbox","focus","onBlur","event","onTouched","onFocus","onInputclick","onEnter","blur","onClear","onValueChange","text","clear","emit","hidePanelOnClear","viewType","inputGroup","input2","getBoundingClientRect","emitTextChange","textChangeSubject","displayText","nosearch","valArr","appendVal","treeClientSearch","__createPanel","_p","_m","showDialog","initCreatPanelAction","updateSelectedValues","isLookup","disabled","focusInput","initdataSubscription","throwIfEmpty","cdr","detectChanges","registerDocumentEvent","onBeforeShow","beforeShow","take","onBeforeHide","beforeHide","hide","message","notifySer","warning","info","initToggleAction","skip","readonly","style","display","appendChild","transitionFlag","addEventListener","target","currentTarget","showPanel","height","panelHeight","panelListener","removePanelElement","iframeEventHandle","iframes","from","document","querySelectorAll","iframes_1","__values","tslib_1.__values","iframes_1_1","iframeDoc","contentDocument","_documentClickEvent","removeDocumentListener","removeEventListener","contains","createPanel","body","listen","removeChild","initSelectionsChangeAction","onSelectionsChange","onSelectionsChangeDefault","initDatasChangeAction","_displayText","_selectedValues","originalText","updateMappingFieldValue","clearMapFields","mappingField","formDirective","form","bindingData","setValue","bindingPath","pathArr","commonUtils","onTextChange","isTextChange","onChange","changes","useValue","valueChange","onSelect","onUnSelected","host","createElement","classList","add","_a","getPanelSize","top_1","top","left","zIndex","overflow","setStyle","innerPanelHeight","tagName","targetHeight","scrollHeight","querySelector","includes","right","bottom","innerHeight","h","below","parseInt","innerWidth","compatibleScrollTop","scrollingElement","scrollTop","Math","max","pageYOffset","documentElement","compatibleScrollLeft","scrollLeft","pageXOffset","comPosition","_top","_height","maxHeight","max-height","keys","filterSelections","selectedItem","updateSelections","getDisplayText","writeValue","txtArr","c","markForCheck","registerOnChange","fn","registerOnTouched","setDisabledState","isDisabled","searchField","ElementRef","ChangeDetectorRef","Inject","args","DOCUMENT","Renderer2","Input","Output","ViewChild","editable","enableClear","forcePlaceholder","enableTitle","enableCancelSelected","EventEmitter","hidePanel","selectChange","groupIcon","CommonUtils","NgZone","eventMgr","EventManager","NotifyService","_super","INPUT_COMBO_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","ComboListComponent","multi","__extends","__","constructor","create","tslib_1.__extends","ngOnChanges","firstChange","currentValue","textArr","registerKeyboardEvent","code","preventDefault","scrollToCurrentItem","updateSelectValues","prevIdx","nextIdx","escHandlerEvent","dataListRef","instance","ulEl","scrollIntoView","block","onKeyup","onKeydown","showPanelType","removeSelectItem","Component","selector","template","encapsulation","ViewEncapsulation","None","changeDetection","ChangeDetectionStrategy","OnPush","providers","HostBinding","HostListener","cls","ComboListModule","NgModule","declarations","imports","CommonModule","FormsModule","HttpClientModule","InputGroupModule","LoadingModule","forRoot","DatalistModule","NotifyModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { InjectionToken } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\n\r\nexport interface ComboHttpService {\r\n    /**\r\n     * æ ¹æ®åæ°æ®IDåç¸å³åæ°è·åæ°æ®\r\n     * @param uri æ°æ®ID or Rest API\r\n     * @param data æå¡å¨ç«¯æ¥æ¶åæ° key/value\r\n     */\r\n    context?: any;\r\n    getData(uri: string, params?: any, method?: string): Observable<any>;\r\n}\r\nexport const ComboServerSideToken = new InjectionToken<ComboHttpService>('Combo Grid HTTP service');\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { BehaviorSubject, Subject, Observable, of } from 'rxjs';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { debounceTime, map, switchMap, catchError, tap, delay } from 'rxjs/operators';\r\nimport { LoadingService, LoadingComponent } from '@farris/ui-loading';\r\nimport { LookupUtils, ServerSideToken } from '@farris/ui-lookup';\r\nimport { ComboServerSideToken, ComboHttpService } from './http/ComboHttpService';\r\nimport { NormalObject } from './combo.interface';\r\n\r\n@Injectable()\r\nexport class ComboService {\r\n\r\n    selections$ = new Subject<any>();\r\n    isOpen$ = new BehaviorSubject<boolean>(false);\r\n    data$ = new BehaviorSubject<any>('');\r\n    serachValue$ = new Subject<any>();\r\n    loadSuccess$ = new Subject();\r\n    treeInfo$ = new BehaviorSubject<any>(null);\r\n\r\n    selections: NormalObject[];\r\n    idField: string;\r\n    valueField: string;\r\n    textField: string;\r\n    multiSelect: boolean;\r\n    displayType = 'LIST';\r\n    separator = ',';\r\n\r\n\r\n    _uri: string;\r\n    get uri() {\r\n        return this._uri;\r\n    }\r\n    set uri(val: string) {\r\n        this._uri = val;\r\n        this.data$.next([]);\r\n    }\r\n\r\n    selectedValues = '';\r\n    pageInfo: any;\r\n    treeInfo: any;\r\n    columns: NormalObject[] = [];\r\n    context: any;\r\n    remoteSearch = true;\r\n\r\n    panelElement: any = null;\r\n\r\n    treeSearchHandler: any = null;\r\n\r\n    // æ å¸®å©å è½½è®¾ç½®\r\n    private treeloadconfig = null;\r\n    private _data: NormalObject[] = [];\r\n    private loading: LoadingComponent;\r\n    private lookupUtils: LookupUtils;\r\n    private comboHttp: ComboHttpService;\r\n    get data(): NormalObject[] {\r\n        return this._data;\r\n    }\r\n    set data(value: NormalObject[]) {\r\n        this._data = value || [];\r\n        if (Array.isArray(value)) {\r\n            this.data$.next(value);\r\n        }\r\n    }\r\n\r\n\r\n    constructor(public http: HttpClient, public loadingService: LoadingService, private injector: Injector) {\r\n        this.serachValue$.pipe(debounceTime(300)).subscribe(value => {\r\n            if (!this.remoteSearch) {\r\n                this.filterData(value, this.textField);\r\n            } else {\r\n                this.filterDataOnServer(value);\r\n            }\r\n        });\r\n    }\r\n\r\n    injectService() {\r\n        if (this.injector && !this.comboHttp) {\r\n            this.lookupUtils = this.injector.get(LookupUtils, null);\r\n            if (this.displayType.indexOf('LOOKUP') > -1) {\r\n                this.comboHttp = this.injector.get(ServerSideToken, null);\r\n            } else {\r\n                this.comboHttp = this.injector.get(ComboServerSideToken, null);\r\n            }\r\n        }\r\n    }\r\n\r\n    toBoolean(value: any): boolean {\r\n        return value != null && `${value}` !== 'false';\r\n    }\r\n\r\n    selectItem(data: any, index?: number, emitEvent = true) {\r\n        if (!this.multiSelect) {\r\n            this.selections = [];\r\n        }\r\n        if (Array.isArray(data)) {\r\n            data.forEach(n => {\r\n                if (this.selections.findIndex(s => s[this.idField] === n[this.idField]) === -1) {\r\n                    this.selections.push(n);\r\n                }\r\n            });\r\n        } else {\r\n            if (this.selections.findIndex(s => s[this.idField] === data[this.idField]) === -1) {\r\n                this.selections.push(data);\r\n            }\r\n        }\r\n        if (emitEvent) {\r\n            this.selections$.next({action: 'clicked'});\r\n        }\r\n    }\r\n\r\n    unSelectItem(data: any) {\r\n        // console.log(data);\r\n        this.selections = this.selections.filter(item => {\r\n            // return item[this.idField] !== data[this.idField];\r\n            return JSON.stringify(item) !== JSON.stringify(data);\r\n        });\r\n        this.selections$.next({action: 'clicked'});\r\n    }\r\n\r\n\r\n    selectAll(datas) {\r\n        (datas || []).forEach(n => {\r\n            if (!this.selections.find(i => i[this.idField] === n[this.idField])) {\r\n                this.selections.push(n);\r\n            }\r\n        });\r\n        // this.selections = datas;\r\n        this.selections$.next({action: 'clicked'});\r\n    }\r\n\r\n    unSelectAll(datas) {\r\n        // this.selections = [];\r\n        datas = datas || [];\r\n        this.selections = (this.selections || []).filter(n => datas.findIndex(i => i[this.idField] === n[this.idField]) === -1 );\r\n        this.selections$.next({action: 'clicked'});\r\n    }\r\n\r\n    isSelect(id: any) {\r\n        if (this.selections && this.selections.length) {\r\n            return this.selections.find(item => item[this.idField] === id) !== undefined;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    loadData(data: any, selectValues = '', callback) {\r\n        if (data) {\r\n\r\n            if (selectValues === null || selectValues === undefined) {\r\n                selectValues = '';\r\n            }\r\n\r\n            if (typeof selectValues === 'boolean') {\r\n                selectValues = '' + selectValues;\r\n            }\r\n\r\n            // this.data$.next(data);\r\n            if (selectValues) {\r\n                let vals = [(selectValues + '')];\r\n                if (this.multiSelect) {\r\n                    vals = (selectValues + '').split(this.separator);\r\n                }\r\n\r\n                let selectedItems = vals.map(val => {\r\n                    return callback(data, val);\r\n                });\r\n                selectedItems = selectedItems.filter(el => el);\r\n                this.selections = selectedItems;\r\n            } else {\r\n                this.selections = [];\r\n            }\r\n            this.selections$.next({action: 'initData'});\r\n        }\r\n    }\r\n\r\n    filterDataOnServer(params) {\r\n        this.getData(params).subscribe(r => {\r\n            this.closeLoading();\r\n            this.loadingService.clearAll();\r\n            if (r && r.items) {\r\n                switch (this.displayType) {\r\n                    case 'LOOKUPLIST': {\r\n                        this.loadLookUpDataTable(r, true);\r\n                        break;\r\n                    }\r\n                    case 'LOOKUPTREELIST': {\r\n                        this.loadLookUpDataTree(r);\r\n                        break;\r\n                    }\r\n                }\r\n\r\n            } else {\r\n                this.data$.next([]);\r\n            }\r\n        });\r\n    }\r\n\r\n    // å®¢æ·ç«¯è¿æ»¤\r\n    filterData(val: string, field: any = 'text') {\r\n        if (val) {\r\n            let data = [];\r\n\r\n            if (this.displayType === 'LOOKUPLIST' || this.displayType === 'LIST') {\r\n                data = this.data.filter(item => {\r\n                    return String(this.getValueByObj(field, item)).indexOf(val) > -1;\r\n                });\r\n            }\r\n\r\n            // const data = this.data\r\n            //     ? this.data.filter(item => {\r\n            //         if (this.getValueByObj(filed, item)) {\r\n            //             return String(this.getValueByObj(filed, item)).indexOf(val) > -1;\r\n            //         } else if (item.data && this.getValueByObj(filed, item.data)) {\r\n            //             return String(this.getValueByObj(filed, item.data)).indexOf(val) > -1;\r\n            //         }\r\n            //     })\r\n            //     : [];\r\n            this.data$.next(data);\r\n        } else {\r\n            this.data$.next(this.data);\r\n        }\r\n    }\r\n\r\n\r\n    getSelections() {\r\n        return this.selections;\r\n    }\r\n\r\n    clearSelections() {\r\n        this.selections = [];\r\n    }\r\n\r\n    getValue(prop: string, selections?: any): string {\r\n        selections = selections ? selections : this.selections;\r\n        if (selections && selections.length) {\r\n            const tmp = selections.map(item => {\r\n                return this.getValueByObj(prop, item);\r\n            });\r\n            if (tmp && (tmp.length > 1 || tmp.length === 0)) {\r\n                return tmp.join(this.separator);\r\n            } else {\r\n                return tmp[0];\r\n            }\r\n        }\r\n        return '';\r\n    }\r\n\r\n    getValueByObj(field: string, data: any) {\r\n        if (!data) {\r\n            return '';\r\n        }\r\n        let resultVal = '';\r\n        if (field.indexOf('.') === -1) {\r\n            if (data.hasOwnProperty(field)) {\r\n                resultVal = data[field];\r\n            } else {\r\n                console.log(`%cError: The %c\"${field}\"%c is not in `,\r\n                        'color: #bb0000;font-weight: bold;', 'color: red;font-style: italic', 'color: #bb0000;font-weight: bold;', data);\r\n                resultVal = null;\r\n            }\r\n        } else {\r\n            resultVal = field.split('.').reduce((obj, key) => {\r\n                if (obj) {\r\n                    return obj[key];\r\n                } else {\r\n                    console.log(`%cError: The %c\"${key}\"%c is not in  `,\r\n                    'color: #bb0000;font-weight: bold', 'color: red;font-style: italic', 'color: #bb0000;font-weight: bold;', obj);\r\n                    return null;\r\n                }\r\n            }, data);\r\n        }\r\n        return resultVal;\r\n    }\r\n\r\n    initData(params: any = {}, method = 'get', selectedIds = '') {\r\n        switch (this.displayType) {\r\n            case 'TreeList':\r\n            case 'LIST': {\r\n                if (params.data) {\r\n                    params = params.data;\r\n                }\r\n                this.getData(params, method).subscribe(d => {\r\n                    if (this.displayType === 'TreeList') {\r\n                        this.loadDataTree(d);\r\n                    } else {\r\n                        this.loadDataTable(d);\r\n                    }\r\n                    this.loadSuccess$.next(true);\r\n                });\r\n                break;\r\n            }\r\n            case 'LOOKUPLIST':\r\n            case 'LOOKUPTREELIST': {\r\n                this.loadLookupData(params, selectedIds, 'get', this.displayType === 'LOOKUPTREELIST');\r\n                break;\r\n            }\r\n        }\r\n\r\n        return this.loadSuccess$;\r\n    }\r\n\r\n    private loadLookupData(params: any, selectedIds, method = 'get', isTree = false) {\r\n        const { data, enableFullTree, loadTreeDataType } = params;\r\n        if (data) {\r\n            params = { customData: data };\r\n        }\r\n\r\n        if (this.displayType === 'LOOKUPTREELIST') {\r\n            params.enableFullTree = enableFullTree;\r\n            params.loadTreeDataType = 'loadall'; // loadTreeDataType;\r\n            params.searchValue = '{\"category\":\"all\"}';\r\n            this.treeloadconfig = { enableFullTree, loadTreeDataType };\r\n        }\r\n\r\n        this.getData(params, method).pipe(\r\n            switchMap( (data) => {\r\n                if (selectedIds) {\r\n                    return this.getSelectedItems(selectedIds).pipe(\r\n                        map(d => {\r\n                            if (d && d.items) {\r\n                                data.selectedItems = isTree ?  d.items.map(n => n.data) : d.items;\r\n                            } else {\r\n                                if (Array.isArray(d)) {\r\n                                    data.selectedItems = (selectedIds + '').split(this.separator).map(val => {\r\n                                        if (isTree) {\r\n                                            return this.treeNodeToFlatData(d, val, this.idField);\r\n                                        } else {\r\n                                            return d.find(n => n[this.idField] + '' == val || n[this.textField] == val);\r\n                                        }\r\n                                    });\r\n                                }\r\n                            }\r\n                            return data;\r\n                        }),\r\n                        catchError(() => {\r\n                            return of(data);\r\n                        })\r\n                    );\r\n                }\r\n                return of(data);\r\n            })\r\n        ).subscribe(data => {\r\n            this.loadingService.clearAll();\r\n            if (data) {\r\n                if (isTree) {\r\n                    this.loadLookUpDataTree(data);\r\n                } else {\r\n                    this.loadLookUpDataTable(data);\r\n                }\r\n            }\r\n\r\n            this.loadSuccess$.next(true);\r\n        });\r\n\r\n    }\r\n\r\n    getSelectedItems(selIds) {\r\n        const searchParam = {\r\n            category: 'fav', favoriteIds: ('' + selIds).split(this.separator)\r\n        };\r\n        const p = {searchValue: JSON.stringify(searchParam),  enableFullTree: false, loadTreeDataType: 'default'};\r\n        return this.getData(p);\r\n    }\r\n\r\n    getData(params = {}, method = 'get'): Observable<any> {\r\n        if (this.uri) {\r\n            // this.data = [];\r\n            this.showLoading();\r\n            if (this.comboHttp) {\r\n                if (this.context) {\r\n                    this.comboHttp.context = this.context;\r\n                }\r\n                return this.comboHttp.getData(this.uri, params, method).pipe(\r\n                    tap(() => {\r\n                        this.closeLoading();\r\n                    }),\r\n                );\r\n            } else {\r\n                return this.http.request(method, this.uri, params).pipe(\r\n                    tap(() => {\r\n                        this.closeLoading();\r\n                    }),\r\n                );\r\n            }\r\n        } else {\r\n            if (this.data) {\r\n                return of(this.data).pipe(delay(10));\r\n            } else {\r\n                return of([]).pipe(delay(10));\r\n            }\r\n        }\r\n    }\r\n\r\n    loadDataTable(data: any) {\r\n        if (data instanceof Array) {\r\n            this.data = [...data];\r\n        } else {\r\n            this.data = data ? data.returnValue : [];\r\n        }\r\n        this.loadData(this.data, this.selectedValues, (dataArr, val) => {\r\n            return dataArr.find(d => d[this.idField] + '' == val || d[this.textField] == val);\r\n        });\r\n        this.closeLoading();\r\n    }\r\n\r\n    loadDataTree(data: any) {\r\n        if (data instanceof Array) {\r\n            this.data = data;\r\n        } else {\r\n            this.data = data ? data.returnValue : [];\r\n        }\r\n        this.loadData(this.data, this.selectedValues, (dataArr, val) => {\r\n            return eachData(dataArr, val, this.idField);\r\n            function eachData(paramData, paramVal, idField) {\r\n                let rtnData: any = '';\r\n                paramData.find(d => {\r\n                    if (d.data[idField] == paramVal) {\r\n                        rtnData = d.data;\r\n                        return true;\r\n                    } else if (d.children && d.children.length) {\r\n                        rtnData = eachData(d.children, paramVal, idField);\r\n                    } else {\r\n                        return false;\r\n                    }\r\n                });\r\n                return rtnData;\r\n            }\r\n        });\r\n        this.closeLoading();\r\n    }\r\n\r\n    loadLookUpDataTable(resData: any, sortable = false) {\r\n        this.closeLoading();\r\n\r\n        if (typeof resData === 'object') {\r\n\r\n            if (resData.returnValue) {\r\n                resData = resData.returnValue;\r\n            }\r\n\r\n            if (!sortable &&  resData.columns) {\r\n                this.columns = resData.columns;\r\n            }\r\n            if (resData.pageInfo) {\r\n                this.pageInfo = resData.pageInfo;\r\n                this.pageInfo.total = resData.total ? resData.total : 0;\r\n            }\r\n\r\n            if ( resData.items) {\r\n                this.data = resData.items;\r\n            }\r\n\r\n            if (resData.selectedItems) {\r\n                this.selections = resData.selectedItems || [];\r\n            }\r\n        }\r\n\r\n        if (this.selections) {\r\n            const ids = this.selections.map(n => n[this.idField]).join(this.separator);\r\n            if (ids !== this.selectedValues) {\r\n                this.selectedValues = ids;\r\n            }\r\n        }\r\n\r\n        this.loadData(this.data, this.selectedValues, (dataArr, val) => {\r\n            let isMaped = dataArr.find(d => d[this.idField] + '' == val);\r\n            if (this.selections) {\r\n                isMaped = !isMaped ? this.selections.find(d => d[this.idField] + '' == val) : isMaped;\r\n            }\r\n            return isMaped;\r\n        });\r\n    }\r\n\r\n    private checkNodeCanBeSelect(nodes, allData = true) {\r\n        if (nodes && nodes.length) {\r\n            return nodes.map((node: any) => {\r\n                if (node.hasOwnProperty('addtional')) {\r\n                    node.selectable = !node['addtional'];\r\n                }\r\n\r\n                if (node.children && node.children.length) {\r\n                    this.checkNodeCanBeSelect(node.children, allData);\r\n                } else {\r\n                    if (allData) {\r\n                        node.leaf = true;\r\n                    }\r\n                }\r\n\r\n                return node;\r\n            });\r\n        }\r\n        return nodes;\r\n    }\r\n\r\n    loadLookUpDataTree(resData: any) {\r\n        this.closeLoading();\r\n\r\n        if (!resData) {\r\n            return;\r\n        }\r\n\r\n        if (resData instanceof Array) {\r\n            this.data = resData;\r\n        } else {\r\n            if (resData.returnValue) {\r\n                resData = resData.returnValue;\r\n            }\r\n            this.columns = resData.columns;\r\n            this.treeInfo = resData.treeInfo;\r\n\r\n            this.treeInfo$.next(this.treeInfo);\r\n\r\n            if (resData.selectedItems) {\r\n                this.selections = resData.selectedItems || [];\r\n            }\r\n            if (this.treeInfo && !this.treeInfo['treeDataIsInit']) {\r\n                if (this.treeInfo.layerType.toLowerCase() === 'pathcode') {\r\n                    this.data = this.lookupUtils.makeTree(resData.items, this.treeInfo);\r\n                } else {\r\n                    this.data = this.lookupUtils.makeTreeWithParentID(\r\n                        resData.items,\r\n                        '',\r\n                        `${this.treeInfo.dataField}.${this.treeInfo.parentField}`,\r\n                        this.idField\r\n                    );\r\n                }\r\n            } else if (resData.items) {\r\n                // this.data = resData.items;\r\n\r\n                const isLoadAllTreeData = () => {\r\n                    if (this.treeloadconfig.loadTreeDataType === 'default') {\r\n                        return this.treeInfo.loadDataType === 'all';\r\n                    } else {\r\n                        return this.treeloadconfig.loadTreeDataType === 'loadall';\r\n                    }\r\n                };\r\n\r\n                this.data = this.checkNodeCanBeSelect(resData.items);\r\n            }\r\n        }\r\n        this.loadData(this.data, this.selectedValues, (dataArr, val) => {\r\n            return this.treeNodeToFlatData(dataArr, val, this.idField);\r\n        });\r\n    }\r\n\r\n    treeNodeToFlatData(paramData, paramVal, idField) {\r\n        let rtnData: any = '';\r\n        paramData.find(d => {\r\n            if ((d.data && d.data[idField] == paramVal) || d[idField] == paramVal) {\r\n                rtnData = d.data;\r\n                return true;\r\n            } else if (d.children && d.children.length) {\r\n                rtnData = this.treeNodeToFlatData(d.children, paramVal, idField);\r\n                return rtnData ? true : false;\r\n            } else {\r\n                return false;\r\n            }\r\n        });\r\n        return rtnData;\r\n    }\r\n\r\n    private showLoading() {\r\n        this.loading = this.loadingService.show({ container: this.panelElement, delay: 100 });\r\n    }\r\n\r\n    closeLoading() {\r\n        if (this.loading) {\r\n            this.loading.close();\r\n            this.loading = null;\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { LocaleService } from '@farris/ui-locale';\r\n\r\n@Injectable()\r\nexport class ComboLocaleService {\r\n    private localeConfig: any = {\r\n        'ZH_CN' : {\r\n            placeholder: 'è¯·éæ©'\r\n        },\r\n        'EN_US' : {\r\n            placeholder: 'Please Select'\r\n        }\r\n    };\r\n    constructor(private localeService: LocaleService) {}\r\n    public getLocaleConfig() {\r\n        const locale = this.localeService.localeId;\r\n\r\n        this.localeConfig = this.localeService.getResources(`${locale}.combo`);\r\n\r\n        return this.localeConfig;\r\n\r\n        // if (locale && this.localeConfig[locale]) {\r\n        //     return this.localeConfig[locale];\r\n        // } else {\r\n        //     return this.localeConfig.ZH_CN;\r\n        // }\r\n    }\r\n}\r\n","import { NotifyService } from '@farris/ui-notify';\r\nimport {\r\n    OnInit, Input, Output, EventEmitter, ElementRef, ChangeDetectorRef,\r\n    Renderer2, ViewChild, AfterViewInit, OnDestroy, Inject, Injector, NgZone\r\n} from '@angular/core';\r\nimport { Subject, interval, of, Observable, Subscription, fromEvent } from 'rxjs';\r\nimport { ControlValueAccessor, NgControl } from '@angular/forms';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { takeUntil, filter, skip, debounceTime, throttle, take, delayWhen, throwIfEmpty } from 'rxjs/operators';\r\nimport { ComboService } from './combo.service';\r\nimport { InputGroupComponent } from '@farris/ui-input-group';\r\nimport { SelectItem, NormalObject, ComboChanges } from './combo.interface';\r\nimport { ComboLocaleService } from './services/combo.locale.service';\r\nimport { CommonUtils, reqAnimFrame } from '@farris/ui-common';\r\nimport { EventManager } from '@angular/platform-browser';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n\r\nlet nextUniqueId = 0;\r\nexport class BaseComboComponent implements OnInit, AfterViewInit, OnDestroy, ControlValueAccessor {\r\n    @Input() disabled = false;\r\n    @Input() readonly = false;\r\n    @Input() editable = true;\r\n    @Input() placeholder = '';\r\n    @Input() panelWidth = 300;\r\n    @Input() panelHeight: number | string = 'auto';\r\n    @Input() autoWidth = true;\r\n    @Input() enableClear = true;\r\n    @Input() mapFields: any;\r\n    /** ç¦ç¨åªè¯»æ¶æ¾ç¤º placeholder */\r\n    @Input() forcePlaceholder = false;\r\n\r\n    /** ä»»æè¾å¥ 20210202 */\r\n    @Input() nosearch = false;\r\n    /** åè®¸æå¤§è¾å¥é¿åº¦ */\r\n    @Input() maxLength;\r\n\r\n    // é¼ æ æ»è¿æ¾ç¤ºææ¬åå®¹\r\n    @Input() enableTitle = true;\r\n    /** å±ç¤ºç±»åï¼ textææ¬ï¼tagæ ç­¾ã é»è®¤ text */\r\n    @Input() viewType: 'text' | 'tag' = 'text';\r\n    @Input()\r\n    set context(value) {\r\n        this.comboService.context = value;\r\n    }\r\n    @Input()\r\n    set mappingField(v: any) {\r\n        this.mapFields = v;\r\n    }\r\n    get mappingField(): any {\r\n        return this.mapFields;\r\n    }\r\n    @Input()\r\n    set data(val: NormalObject[]) {\r\n        this.comboService.data = val;\r\n    }\r\n    get data(): NormalObject[] {\r\n        return this.comboService.data;\r\n    }\r\n    @Input()\r\n    set idField(val: string) {\r\n        this.comboService.idField = val;\r\n    }\r\n    get idField(): string {\r\n        return this.comboService.idField;\r\n    }\r\n    @Input()\r\n    set valueField(val: string) {\r\n        this.comboService.valueField = val;\r\n    }\r\n    get valueField(): string {\r\n        return this.comboService.valueField ? this.comboService.valueField : this.idField;\r\n    }\r\n    @Input()\r\n    set textField(val: string) {\r\n        this.comboService.textField = val;\r\n    }\r\n    get textField(): string {\r\n        return this.comboService.textField;\r\n    }\r\n    @Input()\r\n    set multiSelect(val: boolean) {\r\n        this.comboService.multiSelect = val;\r\n    }\r\n    get multiSelect(): boolean {\r\n        return this.comboService.multiSelect;\r\n    }\r\n    @Input()\r\n    set uri(val: string) {\r\n        this.comboService.uri = val;\r\n    }\r\n    get uri(): string {\r\n        return this.comboService.uri;\r\n    }\r\n    @Input()\r\n    set selectedValues(val: string) {\r\n        this.comboService.selectedValues = val;\r\n    }\r\n    get selectedValues(): string {\r\n        return this.comboService.selectedValues;\r\n    }\r\n\r\n    get selectedValuesStr() {\r\n        if (this.selectedValues === null || this.selectedValues === undefined) {\r\n            this.selectedValues = '';\r\n        }\r\n        return (this.selectedValues) + '';\r\n    }\r\n    @Input() displayText = '';\r\n    @Input() maxHeight = 200;\r\n    @Input() enableCancelSelected = false;\r\n\r\n    /** è¿ç«¯è¿æ»¤ */\r\n    @Input() get remoteSearch(): boolean {\r\n        return this.comboService.remoteSearch;\r\n    }\r\n    set remoteSearch(val: boolean) {\r\n        this.comboService.remoteSearch = val;\r\n    }\r\n    @Input() beforeShow: (instance?: this) => Observable<any>;\r\n    @Input() beforeHide: (instance?: this) => Observable<any>;\r\n\r\n    // å¦æé¢æ¿å·²æå¼ï¼ ç¹å»æ¸ç©ºæé®æ¶æ¯å¦å³é­é¢æ¿ãtrue: å³é­ï¼ false: ä¸å³é­ï¼\r\n    @Input() hidePanelOnClear = false;\r\n    /** å¼å¯åï¼ngModel çå¼ä¸º valueField or  idField; å¦åä¸ºtextFieldçå¼ */\r\n    @Input() useValue = false;\r\n\r\n    @Input() separator = ',';\r\n\r\n    @Output() showPanel = new EventEmitter();\r\n    @Output() hidePanel = new EventEmitter();\r\n    @Output() clear = new EventEmitter();\r\n    @Output() valueChange = new EventEmitter<ComboChanges>();\r\n    @Output() selectChange = new EventEmitter<SelectItem>();\r\n\r\n    @ViewChild('comboPanel') set cmbPanel(cmp: ElementRef) {\r\n        if (cmp) {\r\n            this._cmbPanel = cmp;\r\n            this.ro.observe(cmp.nativeElement);\r\n            this._comboPanelCreated$.next(cmp);\r\n        } else {\r\n            this._cmbPanel = null;\r\n            // this.ro.unobserve(this.el.nativeElement);\r\n            if (this.ro) {\r\n                this.ro.disconnect();\r\n            }\r\n            this._comboPanelCreated$.next(null);\r\n        }\r\n\r\n    }\r\n    @ViewChild('input') input: InputGroupComponent;\r\n    @ViewChild('input2') input2: ElementRef;\r\n    public isOpen = false;\r\n    public comPosition = {};\r\n    public destroy$ = new Subject();\r\n    public ngControl: NgControl | any = null;\r\n    public groupIcon = '<span class=\"f-icon f-icon-arrow-60-down\"></span>';\r\n    public localeService: ComboLocaleService;\r\n    public innerPanelHeight: any;\r\n    public commonUtils: CommonUtils;\r\n    private _cmbPanel: ElementRef = null;\r\n    private _comboPanelCreated$ = new Subject();\r\n    // private _hasPosited = false;\r\n    // private _container: Element;\r\n    private willHide$: Subject<void> = new Subject();\r\n    private containerElement: any;\r\n    /** overlay */\r\n    private panelElement: any;\r\n    private _documentClickEvent: any;\r\n    set selections(value: NormalObject[]) {\r\n        this.comboService.selections = value;\r\n    }\r\n    get selections(): NormalObject[] {\r\n        if (this.comboService.selections) {\r\n            return this.comboService.selections.filter(n => n !== null && n !== undefined);\r\n        }\r\n        return [];\r\n    }\r\n\r\n    private panelListener = null;\r\n\r\n    private ngZone: NgZone = null;\r\n    private mouseWheelEvent = null;\r\n    textChangeSubject = new Subject();\r\n    private initdataSubscription: Subscription = null;\r\n\r\n    customData = null;\r\n\r\n    private originalText = '';\r\n    private isTextChange = false;\r\n\r\n    treeClientSearch = new Subject();\r\n\r\n    eventMgr: EventManager;\r\n    private notifySer: NotifyService;\r\n    private ro: ResizeObserver | null = null;\r\n    onChange: (value: string | string[]) => void = () => null;\r\n    onTouched: () => void = () => null;\r\n\r\n    constructor(\r\n        public el: ElementRef,\r\n        public cdr: ChangeDetectorRef,\r\n        @Inject(DOCUMENT) public document: any,\r\n        public render: Renderer2,\r\n        public comboService: ComboService,\r\n        public injector: Injector\r\n    ) {\r\n        this.initToggleAction();\r\n        this.initSelectionsChangeAction();\r\n        this.initDatasChangeAction();\r\n\r\n        this.commonUtils = this.injector.get(CommonUtils, null);\r\n        this.willHide$.subscribe(e => {\r\n\r\n            if (!this.nosearch && this.displayText !== this.originalText) {\r\n                this.displayText = this.originalText;\r\n\r\n                if (this.isLookup()) {\r\n                    this.onChange(this.displayText);\r\n                } else {\r\n                    const _displayText = this.comboService.getValue(this.textField);\r\n                    this.onValueChange({ text: _displayText, value: this.selectedValues, selections: this.selections });\r\n                }\r\n            }\r\n            this.onTouched();\r\n            this.hidePanel.emit(this);\r\n        });\r\n\r\n        this.ngZone = this.injector.get(NgZone);\r\n        this.eventMgr = this.injector.get(EventManager);\r\n        this.emitTextChange();\r\n\r\n        this.notifySer = this.injector.get(NotifyService, null);\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.localeService = this.injector.get(ComboLocaleService, '');\r\n        if (this.localeService) {\r\n            const localConfig = this.localeService.getLocaleConfig();\r\n            if (localConfig) {\r\n                if (!this.placeholder) {\r\n                    this.placeholder = localConfig['placeholder'] || 'è¯·éæ©';\r\n                }\r\n            }\r\n        }\r\n\r\n        this.comboService.separator = this.separator;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        const that = this;\r\n        this.ngControl = this.injector.get(NgControl, null);\r\n        fromEvent(window, 'resize').pipe(\r\n            debounceTime(100),\r\n            throttle(ev => interval(100)),\r\n            takeUntil(this.destroy$)\r\n        ).subscribe(() => {\r\n            this.updatePanelWidth();\r\n            if (this.isOpen) {\r\n                this.comboService.isOpen$.next(false);\r\n                this.willHide$.next();\r\n            }\r\n        });\r\n\r\n        if (this.ngZone) {\r\n            this.ngZone.runOutsideAngular(() => {\r\n                setTimeout(() => {\r\n                    that.updatePanelWidth();\r\n                });\r\n            });\r\n\r\n            let reszieTimer = null;\r\n            this.ro = new ResizeObserver((e) => {\r\n                this.ngZone.runOutsideAngular(() => {\r\n                    if (reszieTimer) {\r\n                        clearTimeout(reszieTimer);\r\n                    }\r\n                    reszieTimer = setTimeout(() => {\r\n                        if (that._cmbPanel && that.panelElement) {\r\n                            reqAnimFrame(() => {\r\n                                that.updatePosition(that._cmbPanel.nativeElement);\r\n                                if (that._cmbPanel.nativeElement.className.indexOf('f-area-show') === -1) {\r\n                                    that.render.addClass(that._cmbPanel.nativeElement, 'f-area-show');\r\n                                }\r\n                            });\r\n                        }\r\n                    }, 10);\r\n                });\r\n            });\r\n        }\r\n\r\n        this.comboService.injectService();\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        this.destroy$.next();\r\n        this.destroy$.complete();\r\n        this.comboService.serachValue$.unsubscribe();\r\n\r\n        if (this.mouseWheelEvent) {\r\n            this.mouseWheelEvent();\r\n        }\r\n    }\r\n\r\n    private updatePanelWidth() {\r\n        const { width } = this.getInputSizeInfo();\r\n        this.panelWidth = this.autoWidth ? width : this.panelWidth;\r\n    }\r\n\r\n    onClick($event: any = null) {\r\n        if ($event) {\r\n            if ($event.stopPropagation) {\r\n                $event.stopPropagation();\r\n            } else {\r\n                if ($event.originalEvent) {\r\n                    $event.originalEvent.stopPropagation();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.isOpen) {\r\n            this.willHide$.next();\r\n        }\r\n        this.comboService.isOpen$.next(!this.isOpen);\r\n        if (this.input && this.input.textbox) {\r\n            this.input.textbox.nativeElement.focus();\r\n        }\r\n    }\r\n\r\n    onBlur(event: Event) {\r\n        this.onTouched();\r\n    }\r\n\r\n    onFocus(event: Event) {\r\n        // // å¯ç¨ä»»æè¾å¥åï¼ææ¬æ¡å¾å°ç¦ç¹åä¸å¼¹åºä¸æé¢æ¿ã2021/02/19\r\n        // if (this.nosearch) {\r\n        //     return ;\r\n        // }\r\n\r\n        // if (!this.isOpen) {\r\n        //     this.comboService.isOpen$.next(true);\r\n        //     // å»¶è¿æ§è¡åæ´æ£æµ æ´æ°å¼¹åºæ¡ä½ç½®\r\n        // of('').pipe(debounceTime(0)).subscribe(() => {\r\n        //     this.cdr.detectChanges();\r\n        // });\r\n        // } else {\r\n        //     this.hide();\r\n        // }\r\n    }\r\n\r\n    onInputclick($event?: any) {\r\n        if ($event && $event.stopPropagation) {\r\n            $event.stopPropagation();\r\n        }\r\n        this.comboService.isOpen$.next(!this.isOpen);\r\n    }\r\n\r\n    onEnter(event: Event) { }\r\n\r\n    blur() {\r\n        this.input.textbox.nativeElement.blur();\r\n    }\r\n\r\n    focus() {\r\n        this.input.textbox.nativeElement.focus();\r\n    }\r\n\r\n    onClear() {\r\n        this.selectedValues = '';\r\n        this.selections = [];\r\n        this.onValueChange({ text: '', value: '', selections: [] });\r\n        this.clear.emit();\r\n        if (this.isOpen && this.hidePanelOnClear) {\r\n            // this.comboService.isOpen$.next(false);\r\n            this.willHide$.next();\r\n        }\r\n    }\r\n\r\n    private getInputSizeInfo() {\r\n        const el: any = this.viewType === 'text' ? this.input.inputGroup : this.input2;\r\n        return el.nativeElement.getBoundingClientRect();\r\n    }\r\n\r\n\r\n    private emitTextChange() {\r\n        return this.textChangeSubject.pipe(\r\n            debounceTime(200)\r\n        ).subscribe((r: any) => {\r\n            const _selectedValues = this.selectedValues;\r\n            const val = r ? r : this.displayText;\r\n\r\n            if (r === '') {\r\n                this.onClear();\r\n            }\r\n\r\n            if (this.nosearch) {\r\n                this.onValueChange({ text: r, value: '', selections: this.selections, nosearch: true });\r\n            }\r\n\r\n            if (!this.remoteSearch) {\r\n                if (!this.multiSelect) {\r\n                    if (this.comboService.displayType === 'LOOKUPTREELIST') {\r\n                        this.treeClientSearch.next(val);\r\n                    } else {\r\n                        this.comboService.serachValue$.next(val);\r\n                    }\r\n                } else {\r\n                    const valArr = (val + '').split(this.separator);\r\n                    const appendVal = valArr[valArr.length - 1] ? valArr[valArr.length - 1] : '';\r\n                    this.comboService.serachValue$.next(appendVal);\r\n                }\r\n                // if (_selectedValues !== this.selectedValues) {\r\n                //     this.onValueChange({ text: this.displayText, value: this.selectedValues, selections: this.selections });\r\n                // }\r\n\r\n            } else {\r\n                this.filterDataOnServer(val, '*');\r\n            }\r\n        });\r\n    }\r\n\r\n\r\n    private __createPanel(value: any) {\r\n        let params: any = {};\r\n        let method = 'get';\r\n        if (value instanceof Object) {\r\n            const { params: _p, data, method: _m, showDialog } = value;\r\n            if (showDialog === false) {\r\n                return;\r\n            }\r\n\r\n            if (data) {\r\n                params = {data};\r\n                this.customData = data;\r\n            } else {\r\n                if (_p) {\r\n                    params = {data: _p};\r\n                    this.customData = _p;\r\n                } else {\r\n                    this.customData = null;\r\n                }\r\n            }\r\n\r\n            if (_m) {\r\n                method = _m;\r\n            }\r\n        } else if (typeof value === 'boolean') {\r\n            if (value === false) {\r\n                return;\r\n            }\r\n        }\r\n\r\n        this.initCreatPanelAction();\r\n\r\n        if (this.uri) {\r\n            this.updateSelectedValues();\r\n\r\n            if (this.isLookup()) {\r\n                this.isOpen = true;\r\n            }\r\n        } else {\r\n            this.isOpen = true;\r\n        }\r\n\r\n\r\n        if (this.comboService.displayType === 'LOOKUPTREELIST') {\r\n            params.enableFullTree = this['enableFullTree'];\r\n            params.loadTreeDataType = this['loadTreeDataType'];\r\n        }\r\n\r\n        if (this.isLookup() && this.input && this.nosearch) {\r\n            this.input.textbox.nativeElement.disabled = true;\r\n        }\r\n\r\n        const focusInput = () => {\r\n            if (this.isLookup() && this.input  && this.nosearch) {\r\n                this.input.textbox.nativeElement.disabled = false;\r\n                this.input.focus();\r\n            }\r\n        };\r\n\r\n        this.initdataSubscription = this.comboService.initData(params, method, this.selectedValues).pipe(\r\n            throwIfEmpty(focusInput)\r\n        ).subscribe(n => {\r\n            if (!this.isOpen) {\r\n                this.isOpen = true;\r\n            }\r\n            focusInput();\r\n            this.cdr.detectChanges();\r\n        });\r\n\r\n        // ç¦æ­¢æ»å¨\r\n        // this.render.setStyle(this.containerElement, 'pointer-events', 'auto');\r\n        this.ngZone.runOutsideAngular(() => {\r\n            this.registerDocumentEvent();\r\n        });\r\n    }\r\n\r\n    // æ¾ç¤ºåäºä»¶\r\n    private onBeforeShow() {\r\n        if (!this.beforeShow) {\r\n            this.beforeShow = () => of('');\r\n        }\r\n        return this.beforeShow(this).pipe(take(1));\r\n    }\r\n    private isLookup() {\r\n        return this.comboService.displayType.indexOf('LOOKUP') > -1;\r\n    }\r\n\r\n    // éèåäºä»¶\r\n    private onBeforeHide() {\r\n        if (!this.beforeHide) {\r\n            this.beforeHide = () => of('');\r\n        }\r\n        this.beforeHide(this)\r\n            .pipe(take(1))\r\n            .subscribe(value => {\r\n                if (typeof value === 'boolean') {\r\n                    if (value) {\r\n                        this.hide(true);\r\n                    }\r\n                } else if (typeof value === 'object') {\r\n                    if (value.hide) {\r\n                        this.hide(true);\r\n                    } else {\r\n                        if (value.message) {\r\n                            if (this.notifySer) {\r\n                                this.notifySer.warning(value.message);\r\n                            } else {\r\n                                console.info(value.message);\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    this.hide(true);\r\n                }\r\n            });\r\n    }\r\n\r\n    // æ¾ç¤ºæéèä¸ææ¡\r\n    private initToggleAction() {\r\n        this.comboService.isOpen$.pipe(\r\n            debounceTime(20),\r\n            takeUntil(this.destroy$),\r\n            skip(1)).subscribe(value => {\r\n                if (this.readonly || this.disabled) {\r\n                    return;\r\n                }\r\n                if (value) {\r\n                    this.onBeforeShow().subscribe((v) => {\r\n                        this.__createPanel(v);\r\n                    });\r\n                    return;\r\n                } else {\r\n                    this.onBeforeHide();\r\n                }\r\n\r\n                this.cdr.detectChanges();\r\n            });\r\n\r\n        this._comboPanelCreated$.pipe(\r\n            takeUntil(this.destroy$),\r\n            filter(value => !!value)\r\n        ).subscribe((cmp: ElementRef) => {\r\n            cmp.nativeElement.style.display = '';\r\n            this.panelElement.appendChild(cmp.nativeElement);\r\n            let transitionFlag = true;\r\n            cmp.nativeElement.addEventListener('transitionend', (e: any) => {\r\n                if (e.target === e.currentTarget && transitionFlag) {\r\n                    transitionFlag = false;\r\n                    this.showPanel.emit(this);\r\n                }\r\n            });\r\n\r\n            if (this.isLookup()) {\r\n                cmp.nativeElement.style.width = `${this.panelWidth}px`;\r\n                cmp.nativeElement.style.height = `${this.panelHeight}px`;\r\n                this.render.addClass(cmp.nativeElement, 'f-area-show');\r\n            }\r\n\r\n            // this.updatePosition(cmp.nativeElement);\r\n            // this.cdr.detectChanges();\r\n        });\r\n\r\n        this.destroy$.pipe(take(1)).subscribe(() => {\r\n            this.comboService.closeLoading();\r\n            nextUniqueId = 0;\r\n            if (this.panelListener) {\r\n                this.panelListener();\r\n            }\r\n            if (this.initdataSubscription) {\r\n                this.initdataSubscription.unsubscribe();\r\n                this.initdataSubscription = null;\r\n            }\r\n            this.removePanelElement();\r\n        });\r\n    }\r\n\r\n    private iframeEventHandle(action: 'addEventListener' | 'removeEventListener') {\r\n        const iframes = Array.from(document.querySelectorAll('iframe'));\r\n        if (iframes && iframes.length) {\r\n            for (const iframe of iframes) {\r\n                const iframeDoc = iframe.contentDocument;\r\n                if (iframeDoc) {\r\n                    iframeDoc[action]('mousedown', this._documentClickEvent);\r\n                    iframeDoc[action]('mousewheel', this._documentClickEvent);\r\n                    iframeDoc[action]('DOMMouseScroll', this._documentClickEvent);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private removeDocumentListener() {\r\n        if (this._documentClickEvent) {\r\n            document.removeEventListener('mousedown', this._documentClickEvent, true);\r\n            document.removeEventListener('mousewheel', this._documentClickEvent, true);\r\n            document.removeEventListener('DOMMouseScroll', this._documentClickEvent, true);\r\n\r\n            this.iframeEventHandle('removeEventListener');\r\n            this._documentClickEvent = null;\r\n        }\r\n    }\r\n\r\n    private registerDocumentEvent() {\r\n        // æ³¨å mousedown äºä»¶ éèpanel\r\n        document.addEventListener('mousedown', (this._documentClickEvent = event => {\r\n            if (\r\n                !this.el.nativeElement.contains(event.target) &&\r\n                this._cmbPanel &&\r\n                !this.contains(this._cmbPanel, event)\r\n            ) {\r\n                this.comboService.isOpen$.next(false);\r\n                // this.willHide$.next();\r\n            }\r\n        }), true);\r\n\r\n        document.addEventListener('mousewheel', this._documentClickEvent, true);\r\n        document.addEventListener('DOMMouseScroll', this._documentClickEvent, true);\r\n\r\n        this.iframeEventHandle('addEventListener');\r\n    }\r\n\r\n\r\n    // åå»ºä¸æé¢æ¿æ¶äºä»¶\r\n    private initCreatPanelAction() {\r\n        if (this.panelElement) {\r\n            return;\r\n        }\r\n        this.createPanel(document.body);\r\n        this.panelListener = this.render.listen(this.panelElement, 'click', (e: Event) => {\r\n            e.stopPropagation();\r\n        });\r\n    }\r\n\r\n    private removePanelElement() {\r\n        reqAnimFrame(() => {\r\n            if (this.panelElement) {\r\n                document.body.removeChild(this.panelElement);\r\n                this.panelElement = null;\r\n            }\r\n        });\r\n    }\r\n\r\n    private initSelectionsChangeAction() {\r\n        this.comboService.selections$.pipe(\r\n            takeUntil(this.destroy$),\r\n            debounceTime(100)\r\n        ).subscribe(value => {\r\n            if (value.action === 'initData') {\r\n                this.onSelectionsChange(this.selections);\r\n            } else {\r\n                this.onSelectionsChangeDefault();\r\n            }\r\n        });\r\n    }\r\n\r\n    protected initDatasChangeAction() { }\r\n\r\n    // canNull è§£å³åæ¶éä¸­æ¶ä¾ç¶æ¾ç¤º\r\n    private onSelectionsChangeDefault() {\r\n\r\n        const _displayText = this.comboService.getValue(this.textField);\r\n        const _selectedValues = this.comboService.getValue(this.idField);\r\n\r\n        if (this.displayText !== _displayText && !this.nosearch) {\r\n            this.displayText = _displayText || this.displayText;\r\n            this.displayText = this.displayText || '';\r\n            this.originalText = _selectedValues ? _displayText : this.displayText;\r\n        }\r\n\r\n        if (this.input) {\r\n            this.input.textbox.nativeElement.value = this.displayText;\r\n        }\r\n\r\n        this.selectedValues =\r\n            (_selectedValues !== '' && _selectedValues !== undefined && _selectedValues !== null) ? _selectedValues : this.selectedValues;\r\n\r\n        if (!this.cdr['destroyed']) {\r\n            this.cdr.detectChanges();\r\n        }\r\n    }\r\n\r\n    protected onSelectionsChange(v: any[]) { }\r\n\r\n    updateMappingFieldValue(clearMapFields = false) {\r\n        if (\r\n            this.mappingField &&\r\n            this.ngControl &&\r\n            this.ngControl.formDirective &&\r\n            this.ngControl.formDirective.form &&\r\n            this.ngControl.formDirective.form.bindingData\r\n        ) {\r\n            const bindingData = this.ngControl.formDirective.form.bindingData;\r\n\r\n            if (clearMapFields) {\r\n                this.selectedValues = '';\r\n            }\r\n\r\n            if (bindingData.setValue) {\r\n                const bindingPath = this.ngControl.formDirective.form.bindingPath;\r\n                let pathArr: string[] = [];\r\n                if (bindingPath) {\r\n                    pathArr = bindingPath.split('/').filter(n => n !== '');\r\n                }\r\n                const mappingField = this.mappingField ? this.mappingField : '';\r\n                bindingData.setValue(pathArr.concat(mappingField.split('.')), this.selectedValues, true, true);\r\n            } else if (this.commonUtils) {\r\n                this.commonUtils.setValue(bindingData, this.mappingField, this.selectedValues);\r\n            }\r\n        }\r\n    }\r\n\r\n    updateSelectedValues() {\r\n        if (\r\n            this.mappingField &&\r\n            this.ngControl &&\r\n            this.ngControl.formDirective &&\r\n            this.ngControl.formDirective.form &&\r\n            this.ngControl.formDirective.form.bindingData\r\n        ) {\r\n            const bindingData = this.ngControl.formDirective.form.bindingData;\r\n            if (bindingData.getValue) {\r\n                const bindingPath = this.ngControl.formDirective.form.bindingPath;\r\n                let pathArr: string[] = [];\r\n                if (bindingPath) {\r\n                    pathArr = bindingPath.split('/').filter(value => value !== '');\r\n                }\r\n                const mappingField = this.mappingField ? this.mappingField : '';\r\n                this.selectedValues = bindingData.getValue(pathArr.concat(mappingField.split('.')));\r\n            } else if (this.commonUtils) {\r\n                this.selectedValues = this.commonUtils.getValue(bindingData, this.mappingField);\r\n            }\r\n        } else if (!this.mappingField) {\r\n            // this.selectedValues = this.displayText\r\n        }\r\n    }\r\n    onTextChange(val?: string) {\r\n        this.isTextChange = true;\r\n        if (this.nosearch) {\r\n            this.selectedValues = val;\r\n            this.updateMappingFieldValue(this.isLookup());\r\n            this.onChange(val);\r\n        }\r\n        this.textChangeSubject.next(val);\r\n    }\r\n\r\n    onValueChange(changes: ComboChanges) {\r\n        this.displayText = changes.text;\r\n        this.originalText = this.displayText;\r\n        if (!this.uri && this.data && this.data.length > 0 && (!this['displayType'] || this.useValue) ) {\r\n            this.onChange(this.selectedValues);\r\n        } else {\r\n            this.onChange(this.displayText);\r\n        }\r\n        if (!changes.nosearch) {\r\n            this.valueChange.emit(changes);\r\n        }\r\n        this.updateMappingFieldValue();\r\n        this.onTouched();\r\n        // if (this.isOpen && changes.emitHidePanel) { this.willHide$.next(); }\r\n    }\r\n\r\n    onSelect(item: any) { }\r\n    onUnSelected(item: any) { }\r\n\r\n    /**\r\n     * emit: é»è®¤ä¸º true;\r\n     */\r\n    hide(emit = true) {\r\n        if (!this.isOpen) {\r\n            return;\r\n        }\r\n        this.removeDocumentListener();\r\n        this.isOpen = false;\r\n        if (emit) {\r\n            this.willHide$.next();\r\n        }\r\n\r\n        if (this.initdataSubscription) {\r\n            this.initdataSubscription.unsubscribe();\r\n            this.initdataSubscription = null;\r\n        }\r\n        this.removePanelElement();\r\n    }\r\n\r\n    show() {\r\n        if (this.isOpen) {\r\n            return;\r\n        }\r\n        this.onBeforeShow().subscribe((value: any) => {\r\n            this.__createPanel(value);\r\n        });\r\n        this.cdr.detectChanges();\r\n    }\r\n\r\n    private createPanel(host: HTMLElement) {\r\n        this.panelElement = this.document.createElement('div');\r\n\r\n        this.panelElement.id = `overlay-${nextUniqueId++}`;\r\n        this.panelElement.classList.add('overlay-pane');\r\n\r\n        this.panelElement.style.display = 'none';\r\n\r\n        host.appendChild(this.panelElement);\r\n\r\n        this.comboService.panelElement = this.panelElement;\r\n\r\n        if (this.isLookup()) {\r\n            const { panelWidth, top, left } = this.getPanelSize();\r\n            // const { top, left } = this.getPanelPosition();\r\n            // this.render.setStyle(this.panelElement, 'width', `${this.panelWidth}px`);\r\n            // this.render.setStyle(this.panelElement, 'height', `${this.panelHeight}px`);\r\n            // this.render.setStyle(this.panelElement, 'top', `${top}px`);\r\n            // this.render.setStyle(this.panelElement, 'left', `${left}px`);\r\n            // this.render.setStyle(this.panelElement, 'z-index', `10001`);\r\n\r\n            this.panelElement.style.width = `${this.panelWidth}px`;\r\n            this.panelElement.style.height = `${this.panelHeight}px`;\r\n            this.panelElement.style.top = `${top}px`;\r\n            this.panelElement.style.left = `${left}px`;\r\n            this.panelElement.style.zIndex = 10001;\r\n\r\n            this.panelElement.classList.add('f-combo-lookup');\r\n        } else {\r\n            this.panelElement.style.overflow = 'hidden';\r\n            this.render.setStyle(this.panelElement, 'top', '0');\r\n            this.render.setStyle(this.panelElement, 'left', '0');\r\n            this.panelElement.classList.add('f-combo-lookup');\r\n        }\r\n\r\n        this.panelElement.style.display = '';\r\n    }\r\n\r\n    private getPanelSize(target?: Element) {\r\n        let panelHeight = this.panelHeight;\r\n        this.innerPanelHeight = 202;\r\n\r\n        if (this.autoWidth) {\r\n            const { width } = this.getInputSizeInfo();\r\n            this.panelWidth = width ? width : this.panelWidth;\r\n        }\r\n        // å¦ætageté«åº¦å­å¨ ä¿®æ¹pnaelHeight ç¨äºéå®ä½å¼¹åºæ¡ä½ç½®\r\n        if (target && target.tagName && panelHeight === 'auto') {\r\n            const targetHeight = target.scrollHeight;\r\n            const isNoRecord = !!target.querySelector('.f-table-norecords-content');\r\n            // if (this.uri) {\r\n            //     if (this.data && this.data.length) {\r\n            //         if (this.comboService.displayType === 'LIST' && target.querySelector('.list-group')) {\r\n            //             this.innerPanelHeight = target.querySelector('.list-group')['offsetHeight'] + 2;\r\n            //         } else {\r\n            //             this.innerPanelHeight = targetHeight;\r\n            //         }\r\n            //     }\r\n            // } else {\r\n            //     this.innerPanelHeight = targetHeight && targetHeight > 10 && !isNoRecord ? Math.floor(targetHeight) : this.panelHeight;\r\n            // }\r\n\r\n            if (this.data && this.data.length) {\r\n                if (this.comboService.displayType === 'LIST' && target.querySelector('.list-group')) {\r\n                    this.innerPanelHeight = target.querySelector('.list-group')['offsetHeight'] + 2;\r\n                } else {\r\n                    this.innerPanelHeight = targetHeight;\r\n                }\r\n            }\r\n\r\n        } else if (target && target.tagName && panelHeight && !String(panelHeight).includes('px')) {\r\n            panelHeight = panelHeight;\r\n        }\r\n        let { top, height, left, right } = this.el.nativeElement.getBoundingClientRect();\r\n        height = height + 1;\r\n        const bottom = window.innerHeight - height - top;\r\n        if (panelHeight === 'auto') {\r\n            panelHeight = this.innerPanelHeight;\r\n        }\r\n\r\n        const h = top > bottom ? top : bottom;\r\n        const below = h === bottom;\r\n        if (bottom > panelHeight) {\r\n            top = top + height;\r\n        } else {\r\n            if (top > bottom) {\r\n                if (h < panelHeight) {\r\n                    panelHeight = h - 10;\r\n                    top = 10;\r\n                } else {\r\n                    top = top - parseInt('' + panelHeight, 10);\r\n                }\r\n            } else {\r\n                if (h < panelHeight) {\r\n                    panelHeight = h - 10;\r\n                }\r\n                top = top + height;\r\n            }\r\n        }\r\n\r\n        if (window.innerWidth - left < this.panelWidth) {\r\n            left = right - 400;\r\n        }\r\n\r\n        return { panelWidth: this.panelWidth, panelHeight, top, left, below };\r\n    }\r\n    private compatibleScrollTop() {\r\n        if (document.scrollingElement) {\r\n            return document.scrollingElement.scrollTop;\r\n        }\r\n\r\n        return Math.max(window.pageYOffset, document.documentElement.scrollTop, document.body.scrollTop);\r\n    }\r\n    private compatibleScrollLeft() {\r\n        if (document.scrollingElement) {\r\n            return document.scrollingElement.scrollLeft;\r\n        }\r\n\r\n        return Math.max(window.pageXOffset, document.documentElement.scrollLeft, document.body.scrollLeft);\r\n    }\r\n    // è®¾ç½®å¼¹åºæ¡ä½ç½®\r\n    updatePosition(target: Element) {\r\n        const { panelHeight, left, top, below } = this.getPanelSize(target);\r\n\r\n        if (!this.isLookup()) {\r\n            let _top = top;\r\n            let _height = panelHeight;\r\n            if (top < 0) {\r\n                _height = this.innerPanelHeight + top - 10;\r\n                _top = 10;\r\n            }\r\n            _top += this.compatibleScrollTop();\r\n\r\n            if (_height !== 'auto') {\r\n                if (this.maxHeight < _height) {\r\n                    this.maxHeight = _height as number;\r\n                }\r\n            }\r\n\r\n            this.comPosition = {\r\n                'left': left + this.compatibleScrollLeft(),\r\n                'top': _top,\r\n                'width': this.panelWidth,\r\n                height: _height === 'auto' ? 'auto' : _height,\r\n                'max-height': this.maxHeight\r\n            };\r\n        } else {\r\n            this.comPosition = {\r\n                'width': this.panelWidth,\r\n                'height': panelHeight\r\n            };\r\n        }\r\n        this.panelElement.style.overflow = '';\r\n        target['style'].display = '';\r\n\r\n        Object.keys(this.comPosition).forEach(n => {\r\n            let val = this.comPosition[n];\r\n            if (val !== 'auto') {\r\n                val += 'px';\r\n            }\r\n            this.render.setStyle(target, n, val);\r\n        });\r\n\r\n        // target['style'].visibility = 'visible';\r\n        return this.comPosition;\r\n    }\r\n\r\n    contains(el: ElementRef, event: any) {\r\n        return el.nativeElement.contains(event.target);\r\n    }\r\n\r\n    protected filterSelections(value: string, data: any[]) {\r\n        const selectedItems = String(value)\r\n            .split(this.separator)\r\n            .map(selectedItem => {\r\n                const item = data.find(val => selectedItem == this.commonUtils.getValue(this.idField, val) + '');\r\n                return item ? this.commonUtils.getValue(this.textField, item) : '';\r\n            });\r\n        return selectedItems.filter(el => el);\r\n    }\r\n\r\n    protected updateSelections(selectedValues: string, data: any[]) {\r\n        if (selectedValues === null || selectedValues === undefined) {\r\n            this.selections = [];\r\n        }\r\n\r\n        if (typeof selectedValues === 'boolean' || typeof selectedValues === 'number') {\r\n            selectedValues = '' + selectedValues;\r\n        }\r\n\r\n        const selectedItems = selectedValues ? String(selectedValues).split(this.separator).map(val => {\r\n            if (this.comboService.displayType === 'LOOKUPTREELIST') {\r\n                return this.comboService.treeNodeToFlatData(data, val, this.idField);\r\n            }\r\n            return data.find(_data => '' + val == this.commonUtils.getValue(this.idField, _data) + '');\r\n\r\n        }) : [];\r\n        this.selections = selectedItems || [];\r\n    }\r\n\r\n    private getDisplayText(value, data) {\r\n        if (value !== null && value !== undefined) {\r\n            const selectedItems = this.filterSelections(value, data);\r\n            if (!selectedItems || !selectedItems.length) {\r\n                return value;\r\n            } else {\r\n                return selectedItems.filter(v => !!v).join(this.separator);\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    writeValue(value: any): void {\r\n        let data = [];\r\n        if (this.data instanceof Array) {\r\n            data = this.data;\r\n        } else if (this.data) {\r\n            data = (this.data['items'] as any) instanceof Array ? this.data['items'] : data;\r\n        }\r\n\r\n        this.originalText = value;\r\n        this.selectedValues = '';\r\n\r\n        if (!this.uri && data && data.length > 0) {\r\n            this.selectedValues = value;\r\n            this.updateSelections(value, data);\r\n            this.displayText = this.getDisplayText(value, this.selections || []);\r\n            this.originalText = this.displayText;\r\n        } else {\r\n            // this.displayText = this.getDisplayText(value, this.selections);\r\n            this.displayText = value;\r\n            this.updateSelectedValues();\r\n            if (!this.selectedValues) {\r\n                this.selectedValues = value;\r\n            }\r\n\r\n            if (this.viewType === 'tag' && this.multiSelect && (this.displayText !== null && this.displayText !== undefined)) {\r\n                const txtArr = this.displayText.split(this.separator).filter(n => n);\r\n                this.selections = txtArr.reduce((r, c, i) => {\r\n                    r.push({ [this.textField]: c });\r\n                    return r;\r\n                }, []);\r\n            }\r\n        }\r\n        this.cdr.markForCheck();\r\n    }\r\n    registerOnChange(fn: any): void {\r\n        this.onChange = fn;\r\n    }\r\n    registerOnTouched(fn: any): void {\r\n        this.onTouched = fn;\r\n    }\r\n    setDisabledState?(isDisabled: boolean): void {\r\n        this.disabled = isDisabled;\r\n        this.cdr.markForCheck();\r\n    }\r\n\r\n    filterDataOnServer(searchValue, searchField) {\r\n    }\r\n}\r\n","\r\nimport { Component, ElementRef, ChangeDetectorRef, Inject, Renderer2, forwardRef, ChangeDetectionStrategy,\r\n         ViewEncapsulation, Input, Injector, OnInit, OnChanges, SimpleChanges, ViewChild, HostBinding, HostListener } from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { DatalistComponent } from '@farris/ui-datalist';\r\nimport { BaseComboComponent } from './base-combo.component';\r\nimport { SelectItem } from './combo.interface';\r\nimport { ComboService } from './combo.service';\r\nimport { filter, take, takeUntil } from 'rxjs/operators';\r\nimport { Key } from 'protractor';\r\n\r\nexport const INPUT_COMBO_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    useExisting: forwardRef(() => ComboListComponent),\r\n    multi: true\r\n};\r\n@Component({\r\n    selector: 'farris-combo-list',\r\n    templateUrl: './combo-list.component.html',\r\n    // styleUrls: ['./combo-list.component.scss'],\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [INPUT_COMBO_VALUE_ACCESSOR, ComboService]\r\n})\r\nexport class ComboListComponent extends BaseComboComponent implements OnInit, OnChanges {\r\n    @Input() itemTemplate: any;\r\n    /**\r\n     * æ¾ç¤ºé¢æ¿æ¹å¼ï¼ click | focus, é»è®¤ï¼ click\r\n     */\r\n    @Input() showPanelType: 'click'|'focus' = 'click';\r\n    @ViewChild('dl') dataListRef: DatalistComponent;\r\n    @Input() itemHeight: number;\r\n    @HostBinding('class.f-combo-list') cls = true;\r\n    @HostBinding('class.f-combo-list--tag')\r\n    get clsTag() {\r\n        return this.viewType === 'tag';\r\n    }\r\n\r\n    private filterData: any[] = [];\r\n    constructor(\r\n        public el: ElementRef,\r\n        public cdr: ChangeDetectorRef,\r\n        @Inject(DOCUMENT) public document: any,\r\n        public render: Renderer2,\r\n        public comboService: ComboService,\r\n        public injector: Injector\r\n    ) {\r\n        super(el, cdr, document, render, comboService, injector);\r\n    }\r\n\r\n    ngOnInit() {\r\n       super.ngOnInit();\r\n       if (this.multiSelect) {\r\n            this.enableCancelSelected = this.multiSelect;\r\n       }\r\n       this.remoteSearch = false;\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        /**\r\n         * å¦æç´æ¥ç»å®ä¸ä¸ªæ°ç»ä½ä¸ºåè¡¨æ°æ®å¹¶ä¸ data æ¯å¼æ­¥æ°æ®ï¼éè¦æ­¤æ¹æ³ï¼åæ­¥displayTextä¸selectedValues\r\n         */\r\n        if (changes.data && !changes.data.firstChange && !this.uri) {\r\n            const datas = changes.data.currentValue;\r\n            const val = this.selectedValues || this.displayText;\r\n            if (val !== undefined && val !== null && datas && datas.length > 0) {\r\n                const textArr = this.filterSelections(val, this.data);\r\n                this.displayText = textArr.filter(v => !!v).join(this.separator);\r\n                this.updateSelections(val, this.data);\r\n                this.comboService.selections$.next({action: 'initData'});\r\n            } else {\r\n                this.selections = [];\r\n                this.displayText = '';\r\n            }\r\n        }\r\n\r\n        // if (changes.multiSelect && !changes.multiSelect.isFirstChange()) {\r\n        //     this.enableCancelSelected = this.multiSelect;\r\n        // }\r\n    }\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    registerKeyboardEvent($event: KeyboardEvent) {\r\n\r\n        if (this.multiSelect || (this.readonly || this.disabled))  {\r\n            return;\r\n        }\r\n\r\n        if ($event.code === 'ArrowUp' || $event.code === 'ArrowDown' ||\r\n            (!this.editable && !this.readonly && !this.disabled && $event.code === 'Space')) {\r\n            $event.preventDefault();\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        const selectItem = (index) => {\r\n            this.comboService.selectItem(data[index], index, false);\r\n            const params = {data: data[index], index};\r\n            if (this.isOpen) {\r\n                this.scrollToCurrentItem(index);\r\n            }\r\n            this.updateSelectValues(params);\r\n        };\r\n\r\n\r\n        let data = this.filterData && this.filterData.length ? this.filterData : this.data;\r\n\r\n        if (!this['_cmbPanel']) {\r\n            data = this.data;\r\n        }\r\n\r\n        if ($event.code === 'ArrowUp') {  // up\r\n            if (this.selectedValues) {\r\n                const idx = data.findIndex(n => this.commonUtils.getValue(this.idField, n) === this.selectedValues);\r\n                let prevIdx = idx - 1;\r\n                if (prevIdx < 0) {\r\n                    prevIdx = data.length - 1;\r\n                }\r\n                selectItem(prevIdx);\r\n            }\r\n        }\r\n        if ($event.code === 'ArrowDown' || ($event.code === 'Space' && !this.editable)) { // down\r\n            const idx = data.findIndex(n => this.commonUtils.getValue(this.idField, n) === this.selectedValues);\r\n            let nextIdx = idx + 1;\r\n            if (nextIdx >= data.length) {\r\n                nextIdx = 0;\r\n            }\r\n\r\n            selectItem(nextIdx);\r\n        }\r\n    }\r\n\r\n    @HostListener('keydown.esc', ['$event'])\r\n    escHandlerEvent($event: KeyboardEvent) {\r\n        if (this.isOpen) {\r\n            this.hide(false);\r\n        }\r\n    }\r\n\r\n\r\n    protected onSelectionsChange(v: any[]) {\r\n        if (this.uri) {\r\n            if (this.selections && this.selections.length) {\r\n                this.selectedValues = this.selections.map(n => n[this.idField]).join(this.separator);\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateSelectValues(item: SelectItem, emitEvent = true) {\r\n        const { data, index } = { ...item };\r\n        this.comboService.selectItem(data, index);\r\n        if (this.dataListRef) {\r\n            this.selectedValues = this.dataListRef.selectedValues;\r\n        }\r\n        if (!this.multiSelect) {\r\n            this.selectedValues = data[this.idField];\r\n        }\r\n\r\n        const _displayText = this.comboService.getValue(this.textField);\r\n        if (emitEvent) {\r\n            this.selectChange.emit({ data, index, instance: this, selections: this.selections });\r\n            this.cdr.markForCheck();\r\n            this.onValueChange({ text: _displayText, value: this.selectedValues, selections: this.selections });\r\n        }\r\n    }\r\n\r\n    private scrollToCurrentItem(index: number) {\r\n        const ulEl = this.dataListRef.el.nativeElement.querySelector('ul.list-group');\r\n        if (ulEl && ulEl.children && ulEl.children[index]) {\r\n            ulEl.children[index].scrollIntoView({block: 'nearest'});\r\n        }\r\n    }\r\n\r\n    onSelect(item: SelectItem) {\r\n        this.updateSelectValues(item, true);\r\n\r\n        if (!this.multiSelect) {\r\n            this.comboService.isOpen$.next(false);\r\n        }\r\n    }\r\n\r\n    onUnSelected(value: SelectItem) {\r\n        const { data } = { ...value };\r\n        this.comboService.unSelectItem(data);\r\n        if (this.dataListRef) {\r\n            this.selectedValues = this.dataListRef.selectedValues;\r\n        }\r\n        // if (!this.multiSelect) {\r\n        //     this.selectedValues = data[this.idField];\r\n        // }\r\n        const _displayText = this.comboService.getValue(this.textField);\r\n        this.cdr.markForCheck();\r\n        this.onValueChange({ text: _displayText, value: this.selectedValues, selections: this.selections });\r\n    }\r\n\r\n    onEnter(event: Event) {\r\n        if (this.isOpen) {\r\n            this.hide();\r\n        }\r\n    }\r\n\r\n    onKeyup($event) {\r\n        // console.log('key up', $event);\r\n\r\n    }\r\n\r\n    onKeydown($event: KeyboardEvent) {\r\n        // console.log('key down', $event);\r\n        if ($event.code === 'Tab') {\r\n            this.hide(false);\r\n        }\r\n    }\r\n\r\n    onFocus($event) {\r\n        if (this.showPanelType === 'focus') {\r\n            this.show();\r\n        }\r\n    }\r\n\r\n    removeSelectItem($event: MouseEvent, item) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        this.comboService.unSelectItem(item);\r\n        this.selectedValues = this.comboService.getValue(this.idField);\r\n        const _displayText = this.comboService.getValue(this.textField);\r\n        this.cdr.detectChanges();\r\n        this.onValueChange({ text: _displayText, value: this.selectedValues, selections: this.selections });\r\n    }\r\n\r\n    protected initDatasChangeAction() {\r\n        this.comboService.data$.subscribe(data => {\r\n            this.filterData = data;\r\n        });\r\n    }\r\n\r\n\r\n}\r\n","import { NotifyModule } from '@farris/ui-notify';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { ComboListComponent } from './combo-list.component';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { DatalistModule } from '@farris/ui-datalist';\r\nimport { LoadingModule } from '@farris/ui-loading';\r\nimport { ComboLocaleService } from './services/combo.locale.service';\r\n@NgModule({\r\n    declarations: [ComboListComponent],\r\n    imports: [\r\n        CommonModule, FormsModule,\r\n        HttpClientModule, InputGroupModule,\r\n        LoadingModule.forRoot(),\r\n        DatalistModule,\r\n        NotifyModule.forRoot()\r\n    ],\r\n    exports: [ComboListComponent],\r\n    providers: [ComboLocaleService]\r\n})\r\nexport class ComboListModule {}\r\n"]}