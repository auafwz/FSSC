import * as tslib_1 from "tslib";
import { EventHandler } from "./event_handler";
import { Injectable } from "@angular/core";
var RepositoryLoadEventHandler = /** @class */ (function (_super) {
    tslib_1.__extends(RepositoryLoadEventHandler, _super);
    function RepositoryLoadEventHandler() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    RepositoryLoadEventHandler.prototype.filter = function (event) {
        return null;
    };
    /**
     * 发布事件
     * @param event event
     */
    RepositoryLoadEventHandler.prototype.dispatch = function (event) {
        var _this = this;
        var expressions = this.filter(event);
        if (expressions && expressions.length > 0) {
            expressions.forEach(function (expressionObject) {
                var entityContext = _this.buildEntityContext(event, expressionObject);
                var context = _this.buildContext(expressionObject, event, entityContext);
                var result = _this.perform(expressionObject, context);
                if (result === undefined && !_this.isValidateOrRequiredExpression(expressionObject)) {
                    return;
                }
                expressionObject.result = result;
                if (expressionObject.id) {
                    _this.expressionResult.set(expressionObject.id, expressionObject.result);
                }
                else {
                    console.warn("EventHandler \u8868\u8FBE\u5F0F\u672A\u8BBE\u7F6E\u552F\u4E00\u6807\u8BC6\uFF0C\u65E0\u6CD5\u66F4\u65B0\u8868\u8FBE\u5F0F\u503C\u3002");
                }
                _this.effect(event, expressionObject);
            });
        }
    };
    /**
     * 获取子表事件行
     * @param paths
     * @param event
     * @returns
     */
    RepositoryLoadEventHandler.prototype.getCurrentRowByEvent = function (paths, event) {
        return this.getCurrentRowByPaths(paths);
    };
    RepositoryLoadEventHandler.decorators = [
        { type: Injectable }
    ];
    return RepositoryLoadEventHandler;
}(EventHandler));
export { RepositoryLoadEventHandler };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVwb3NpdG9yeV9sb2FkX2V2ZW50X2hhbmRsZXIuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2RldmtpdC8iLCJzb3VyY2VzIjpbImxpYi9ldmVudC1oYW5kbGVyL3JlcG9zaXRvcnlfbG9hZF9ldmVudF9oYW5kbGVyLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFFL0MsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQztJQUNnRCxzREFBWTtJQUQ1RDs7SUFzQ0EsQ0FBQztJQXBDUSwyQ0FBTSxHQUFiLFVBQWMsS0FBMkI7UUFDdkMsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBQ0Q7OztPQUdHO0lBQ0ksNkNBQVEsR0FBZixVQUFnQixLQUEyQjtRQUEzQyxpQkFtQkM7UUFsQkMsSUFBTSxXQUFXLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLENBQUMsQ0FBQztRQUN2QyxJQUFJLFdBQVcsSUFBSSxXQUFXLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUN6QyxXQUFXLENBQUMsT0FBTyxDQUFDLFVBQUMsZ0JBQTZDO2dCQUNoRSxJQUFNLGFBQWEsR0FBRyxLQUFJLENBQUMsa0JBQWtCLENBQUMsS0FBSyxFQUFDLGdCQUFnQixDQUFDLENBQUM7Z0JBQ3RFLElBQU0sT0FBTyxHQUFHLEtBQUksQ0FBQyxZQUFZLENBQUMsZ0JBQWdCLEVBQUUsS0FBSyxFQUFFLGFBQWEsQ0FBQyxDQUFDO2dCQUMxRSxJQUFNLE1BQU0sR0FBRyxLQUFJLENBQUMsT0FBTyxDQUFDLGdCQUFnQixFQUFFLE9BQU8sQ0FBQyxDQUFDO2dCQUN2RCxJQUFJLE1BQU0sS0FBSyxTQUFTLElBQUcsQ0FBQyxLQUFJLENBQUMsOEJBQThCLENBQUMsZ0JBQWdCLENBQUMsRUFBRTtvQkFDakYsT0FBTztpQkFDUjtnQkFDRCxnQkFBZ0IsQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDO2dCQUNqQyxJQUFJLGdCQUFnQixDQUFDLEVBQUUsRUFBRTtvQkFDdkIsS0FBSSxDQUFDLGdCQUFnQixDQUFDLEdBQUcsQ0FBQyxnQkFBZ0IsQ0FBQyxFQUFFLEVBQUUsZ0JBQWdCLENBQUMsTUFBTSxDQUFDLENBQUM7aUJBQ3pFO3FCQUFNO29CQUNMLE9BQU8sQ0FBQyxJQUFJLENBQUMsdUlBQW1DLENBQUMsQ0FBQztpQkFDbkQ7Z0JBQ0QsS0FBSSxDQUFDLE1BQU0sQ0FBQyxLQUFLLEVBQUUsZ0JBQWdCLENBQUMsQ0FBQztZQUN2QyxDQUFDLENBQUMsQ0FBQztTQUNKO0lBQ0gsQ0FBQztJQUNEOzs7OztPQUtHO0lBQ0kseURBQW9CLEdBQTNCLFVBQTRCLEtBQWUsRUFBRSxLQUEyQjtRQUN0RSxPQUFPLElBQUksQ0FBQyxvQkFBb0IsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUMxQyxDQUFDOztnQkFyQ0YsVUFBVTs7SUFzQ1gsaUNBQUM7Q0FBQSxBQXRDRCxDQUNnRCxZQUFZLEdBcUMzRDtTQXJDWSwwQkFBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFdmVudEhhbmRsZXIgfSBmcm9tIFwiLi9ldmVudF9oYW5kbGVyXCI7XHJcbmltcG9ydCB7IEV4cHJlc3Npb24gfSBmcm9tIFwiLi4vZXhwcmVzc2lvbi9pbmRleFwiO1xyXG5pbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgUmVwb3NpdG9yeUxvYWRFdmVudEhhbmRsZXIgZXh0ZW5kcyBFdmVudEhhbmRsZXIge1xyXG4gIHB1YmxpYyBmaWx0ZXIoZXZlbnQ6IEV4cHJlc3Npb24uRXZlbnRBcmdzKSB7XHJcbiAgICByZXR1cm4gbnVsbDtcclxuICB9XHJcbiAgLyoqXHJcbiAgICog5Y+R5biD5LqL5Lu2XHJcbiAgICogQHBhcmFtIGV2ZW50IGV2ZW50XHJcbiAgICovXHJcbiAgcHVibGljIGRpc3BhdGNoKGV2ZW50OiBFeHByZXNzaW9uLkV2ZW50QXJncykge1xyXG4gICAgY29uc3QgZXhwcmVzc2lvbnMgPSB0aGlzLmZpbHRlcihldmVudCk7XHJcbiAgICBpZiAoZXhwcmVzc2lvbnMgJiYgZXhwcmVzc2lvbnMubGVuZ3RoID4gMCkge1xyXG4gICAgICBleHByZXNzaW9ucy5mb3JFYWNoKChleHByZXNzaW9uT2JqZWN0OiBFeHByZXNzaW9uLkV4cHJlc3Npb25PYmplY3QpID0+IHtcclxuICAgICAgICBjb25zdCBlbnRpdHlDb250ZXh0ID0gdGhpcy5idWlsZEVudGl0eUNvbnRleHQoZXZlbnQsZXhwcmVzc2lvbk9iamVjdCk7XHJcbiAgICAgICAgY29uc3QgY29udGV4dCA9IHRoaXMuYnVpbGRDb250ZXh0KGV4cHJlc3Npb25PYmplY3QsIGV2ZW50LCBlbnRpdHlDb250ZXh0KTtcclxuICAgICAgICBjb25zdCByZXN1bHQgPSB0aGlzLnBlcmZvcm0oZXhwcmVzc2lvbk9iamVjdCwgY29udGV4dCk7XHJcbiAgICAgICAgaWYgKHJlc3VsdCA9PT0gdW5kZWZpbmVkJiYgIXRoaXMuaXNWYWxpZGF0ZU9yUmVxdWlyZWRFeHByZXNzaW9uKGV4cHJlc3Npb25PYmplY3QpKSB7XHJcbiAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGV4cHJlc3Npb25PYmplY3QucmVzdWx0ID0gcmVzdWx0O1xyXG4gICAgICAgIGlmIChleHByZXNzaW9uT2JqZWN0LmlkKSB7XHJcbiAgICAgICAgICB0aGlzLmV4cHJlc3Npb25SZXN1bHQuc2V0KGV4cHJlc3Npb25PYmplY3QuaWQsIGV4cHJlc3Npb25PYmplY3QucmVzdWx0KTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgY29uc29sZS53YXJuKGBFdmVudEhhbmRsZXIg6KGo6L6+5byP5pyq6K6+572u5ZSv5LiA5qCH6K+G77yM5peg5rOV5pu05paw6KGo6L6+5byP5YC844CCYCk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuZWZmZWN0KGV2ZW50LCBleHByZXNzaW9uT2JqZWN0KTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIOiOt+WPluWtkOihqOS6i+S7tuihjFxyXG4gICAqIEBwYXJhbSBwYXRocyBcclxuICAgKiBAcGFyYW0gZXZlbnQgXHJcbiAgICogQHJldHVybnMgXHJcbiAgICovXHJcbiAgcHVibGljIGdldEN1cnJlbnRSb3dCeUV2ZW50KHBhdGhzOiBzdHJpbmdbXSwgZXZlbnQ6IEV4cHJlc3Npb24uRXZlbnRBcmdzKTogbnVsbCB8IHsgW3Byb3A6IHN0cmluZ106IGFueSB9IHtcclxuICAgIHJldHVybiB0aGlzLmdldEN1cnJlbnRSb3dCeVBhdGhzKHBhdGhzKTtcclxuICB9XHJcbn0iXX0=