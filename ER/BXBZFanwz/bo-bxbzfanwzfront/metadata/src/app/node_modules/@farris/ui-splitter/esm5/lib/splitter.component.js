/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, HostBinding, Input, ContentChildren, QueryList } from '@angular/core';
import { SplitterPaneComponent } from './splitter-pane.component';
var SplitterComponent = /** @class */ (function () {
    function SplitterComponent() {
        this.cls = true;
        this.orientation = "horizontal";
    }
    /**
     * @return {?}
     */
    SplitterComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    SplitterComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        // console.log(this.splitterPane)
        // const length = this.splitterPane.length;
        // const cls = 'f-col-w' + Math.floor(12 / length);
        // if (this.orientation === 'horizontal') {
        //   this.splitterPane.forEach((item, index) => {
        //     if (index < length - 1) {
        //       item.cls += 'd-flex flex-column farris-lsection ' + cls;
        //     }
        //     if (index === length - 1) {
        //       item.cls += 'farris-rsection farris-overflow-y-auto f-utils-fill';
        //     }
        //   })
        // }
    };
    SplitterComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-splitter',
                    template: "\n    <ng-content></ng-content>\n  "
                }] }
    ];
    /** @nocollapse */
    SplitterComponent.ctorParameters = function () { return []; };
    SplitterComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class.f-component-splitter',] }],
        orientation: [{ type: Input }],
        splitterPane: [{ type: ContentChildren, args: [SplitterPaneComponent,] }]
    };
    return SplitterComponent;
}());
export { SplitterComponent };
if (false) {
    /** @type {?} */
    SplitterComponent.prototype.cls;
    /** @type {?} */
    SplitterComponent.prototype.orientation;
    /** @type {?} */
    SplitterComponent.prototype.splitterPane;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BsaXR0ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1zcGxpdHRlci8iLCJzb3VyY2VzIjpbImxpYi9zcGxpdHRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsV0FBVyxFQUFFLEtBQUssRUFBRSxlQUFlLEVBQW9CLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwSCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQUVsRTtJQWVFO1FBTjJDLFFBQUcsR0FBRyxJQUFJLENBQUM7UUFFN0MsZ0JBQVcsR0FBRyxZQUFZLENBQUM7SUFJcEIsQ0FBQzs7OztJQUVqQixvQ0FBUTs7O0lBQVI7SUFFQSxDQUFDOzs7O0lBRUQsOENBQWtCOzs7SUFBbEI7UUFDRSxpQ0FBaUM7UUFDakMsMkNBQTJDO1FBQzNDLG1EQUFtRDtRQUNuRCwyQ0FBMkM7UUFDM0MsaURBQWlEO1FBQ2pELGdDQUFnQztRQUNoQyxpRUFBaUU7UUFDakUsUUFBUTtRQUNSLGtDQUFrQztRQUNsQywyRUFBMkU7UUFDM0UsUUFBUTtRQUNSLE9BQU87UUFDUCxJQUFJO0lBQ04sQ0FBQzs7Z0JBbkNGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUsaUJBQWlCO29CQUMzQixRQUFRLEVBQUUscUNBRVQ7aUJBRUY7Ozs7O3NCQUdFLFdBQVcsU0FBQyw0QkFBNEI7OEJBRXhDLEtBQUs7K0JBRUwsZUFBZSxTQUFDLHFCQUFxQjs7SUF3QnhDLHdCQUFDO0NBQUEsQUFyQ0QsSUFxQ0M7U0E5QlksaUJBQWlCOzs7SUFFNUIsZ0NBQXNEOztJQUV0RCx3Q0FBb0M7O0lBRXBDLHlDQUF1RiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBIb3N0QmluZGluZywgSW5wdXQsIENvbnRlbnRDaGlsZHJlbiwgQWZ0ZXJDb250ZW50SW5pdCwgUXVlcnlMaXN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFNwbGl0dGVyUGFuZUNvbXBvbmVudCB9IGZyb20gJy4vc3BsaXR0ZXItcGFuZS5jb21wb25lbnQnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgc2VsZWN0b3I6ICdmYXJyaXMtc3BsaXR0ZXInLFxyXG4gIHRlbXBsYXRlOiBgXHJcbiAgICA8bmctY29udGVudD48L25nLWNvbnRlbnQ+XHJcbiAgYCxcclxuICBzdHlsZXM6IFtdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBTcGxpdHRlckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgQWZ0ZXJDb250ZW50SW5pdCB7XHJcblxyXG4gIEBIb3N0QmluZGluZygnY2xhc3MuZi1jb21wb25lbnQtc3BsaXR0ZXInKSBjbHMgPSB0cnVlO1xyXG5cclxuICBASW5wdXQoKSBvcmllbnRhdGlvbiA9IFwiaG9yaXpvbnRhbFwiO1xyXG5cclxuICBAQ29udGVudENoaWxkcmVuKFNwbGl0dGVyUGFuZUNvbXBvbmVudCkgc3BsaXR0ZXJQYW5lOiBRdWVyeUxpc3Q8U3BsaXR0ZXJQYW5lQ29tcG9uZW50PjtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7IH1cclxuXHJcbiAgbmdPbkluaXQoKSB7XHJcblxyXG4gIH1cclxuXHJcbiAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xyXG4gICAgLy8gY29uc29sZS5sb2codGhpcy5zcGxpdHRlclBhbmUpXHJcbiAgICAvLyBjb25zdCBsZW5ndGggPSB0aGlzLnNwbGl0dGVyUGFuZS5sZW5ndGg7XHJcbiAgICAvLyBjb25zdCBjbHMgPSAnZi1jb2wtdycgKyBNYXRoLmZsb29yKDEyIC8gbGVuZ3RoKTtcclxuICAgIC8vIGlmICh0aGlzLm9yaWVudGF0aW9uID09PSAnaG9yaXpvbnRhbCcpIHtcclxuICAgIC8vICAgdGhpcy5zcGxpdHRlclBhbmUuZm9yRWFjaCgoaXRlbSwgaW5kZXgpID0+IHtcclxuICAgIC8vICAgICBpZiAoaW5kZXggPCBsZW5ndGggLSAxKSB7XHJcbiAgICAvLyAgICAgICBpdGVtLmNscyArPSAnZC1mbGV4IGZsZXgtY29sdW1uIGZhcnJpcy1sc2VjdGlvbiAnICsgY2xzO1xyXG4gICAgLy8gICAgIH1cclxuICAgIC8vICAgICBpZiAoaW5kZXggPT09IGxlbmd0aCAtIDEpIHtcclxuICAgIC8vICAgICAgIGl0ZW0uY2xzICs9ICdmYXJyaXMtcnNlY3Rpb24gZmFycmlzLW92ZXJmbG93LXktYXV0byBmLXV0aWxzLWZpbGwnO1xyXG4gICAgLy8gICAgIH1cclxuICAgIC8vICAgfSlcclxuICAgIC8vIH1cclxuICB9XHJcblxyXG59XHJcbiJdfQ==