/**
 * @fileoverview added by tsickle
 * Generated from: lib/tab-group/group.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ChangeDetectorRef, Component, EventEmitter, Injector, Input, Output, ViewChild } from '@angular/core';
import * as _ from 'lodash-es';
import { noDataImg } from '../../assets/resource';
import { ApiService } from '../../utils/api.service';
import { CommonUtil } from '../../utils/common.tool';
import { FavoritesTool } from '../../utils/favorites.tool';
import { ChangeType } from '../../utils/index.type';
import { StateMgrTool } from '../../utils/state.mgr.tool';
import { tap, switchMap } from 'rxjs/operators';
import { AppendGroupOrgComponent } from '../append-group-org/appendorg.component';
import { FormMessageService, FormLoadingService } from '@farris/command-services';
export class GroupComponent {
    /**
     * @param {?} apiService
     * @param {?} favoritesTool
     * @param {?} stateMgr
     * @param {?} cdr
     * @param {?} injector
     * @param {?} formMessageService
     * @param {?} formLoadingService
     */
    constructor(apiService, favoritesTool, stateMgr, cdr, injector, formMessageService, formLoadingService) {
        this.apiService = apiService;
        this.favoritesTool = favoritesTool;
        this.stateMgr = stateMgr;
        this.cdr = cdr;
        this.injector = injector;
        this.formMessageService = formMessageService;
        this.formLoadingService = formLoadingService;
        this.primaryField = 'orgId';
        this.groupChange = new EventEmitter();
        this.groupIdField = 'id';
        this.userIdField = 'userId';
        this.selections = [];
        this.noDataImg = noDataImg;
        this.allChecked = false;
        this.items = [];
        this.favoritesList = [];
        this.groupData = { public: [], personal: [] };
        this.personnelList = [];
        this.groupPersonnels = [];
        this.publicVisible = true;
        this.personalVisible = true;
        this.publicToken = 'public';
        this.personalToken = 'personal';
        this.showGroupOrgDialog = false;
        this.currentGroupType = 'public';
        this.allIndexId = CommonUtil.newGuid();
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        if (this.enableFavorites) {
            this.favoritesSub.unsubscribe();
        }
        this.selectionsSub.unsubscribe();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        if (this.enableFavorites) {
            this.favoritesSub = this.favoritesTool.favoritesSubject.subscribe((/**
             * @param {?} data
             * @return {?}
             */
            data => {
                this.favoritesList = data;
                this.setFavorites();
            }));
        }
        this.selectionsSub = this.stateMgr.selectionsSubject.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        data => {
            if (data.changeType === ChangeType.ValueChanged) {
                this.selections = _.cloneDeep(data.value);
                this.toggleChecked();
            }
            else if (data.changeType === ChangeType.Remove) {
                this.unSelectLine(data.value);
            }
            else if (data.changeType === ChangeType.Append) {
                this.selectLine(data.value);
            }
            this.cdr.detectChanges();
        }));
        this.getGroupList();
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
    }
    /**
     * @return {?}
     */
    assembleData() {
        this.getGroupList();
    }
    // 变更群组内的组织
    /**
     * @return {?}
     */
    updateGroup() {
        /** @type {?} */
        const addList = [];
        /** @type {?} */
        const primaryIds = this.items.map((/**
         * @param {?} item
         * @return {?}
         */
        item => { return item[this.primaryField]; })).join();
        this.appendOrg.currentOrgs.forEach((/**
         * @param {?} org
         * @return {?}
         */
        org => {
            if (primaryIds.indexOf(org[this.primaryField]) === -1) {
                addList.push(org[this.primaryField]);
            }
        }));
        /** @type {?} */
        const addOrgsInCurrentGroup$ = this.apiService.saveGroup({
            groupId: this.selectedGroupId,
            addIds: addList,
            deleteIds: [],
            changeType: Number(3)
        });
        addOrgsInCurrentGroup$.pipe(tap((/**
         * @param {?} data
         * @return {?}
         */
        (data) => {
            if (data) {
                console.log('已为当前群组追加新的组织成员！');
                this.getOrgsByGroup({ id: this.selectedGroupId }, this.currentGroupType);
                this.toggleGroupOrgDialog(false);
            }
        }))).subscribe();
    }
    // 删除群组
    /**
     * @param {?} e
     * @param {?} item
     * @return {?}
     */
    deleteGroup(e, item) {
        this.formMessageService.confirm("是否删除此群组？").pipe(switchMap((/**
         * @param {?} result
         * @return {?}
         */
        (result) => {
            if (!!result) {
                if (item[this.groupIdField] === this.selectedGroupId) {
                    this.selectedGroupId = null;
                    this.currentGroupType = this.publicToken;
                }
                /** @type {?} */
                const deleteGroup$ = this.apiService.saveGroup({
                    groupId: item[this.groupIdField],
                    changeType: Number(4)
                });
                return deleteGroup$.pipe(tap((/**
                 * @param {?} data
                 * @return {?}
                 */
                (data) => {
                    if (data) {
                        console.log('群组删除成功！');
                        this.getGroupList();
                        e.stopPropagation();
                        e.cancelBubble = true;
                    }
                })));
            }
            else {
                return;
            }
        }))).subscribe();
    }
    // 变更群组基本信息（名称、描述）
    /**
     * @param {?} e
     * @param {?} item
     * @return {?}
     */
    editGroup(e, item) {
        this.selectedGroupId = item[this.groupIdField];
        this.groupChange.next(item);
        e.stopPropagation();
        e.cancelBubble = true;
    }
    // 删除群组内的组织
    /**
     * @param {?} e
     * @param {?} data
     * @return {?}
     */
    removeOrg(e, data) {
        this.formMessageService.confirm("是否将此组织移出当前群组？").pipe(switchMap((/**
         * @param {?} result
         * @return {?}
         */
        (result) => {
            if (!!result) {
                /** @type {?} */
                const deleteOrg$ = this.apiService.saveGroup({
                    groupId: this.selectedGroupId,
                    addIds: [],
                    deleteIds: [data[this.primaryField]],
                    changeType: Number(3)
                });
                return deleteOrg$.pipe(tap((/**
                 * @param {?} data
                 * @return {?}
                 */
                (data) => {
                    if (data) {
                        console.log('群组内组织删除成功！');
                        this.getOrgsByGroup({ id: this.selectedGroupId }, this.currentGroupType);
                        e.stopPropagation();
                        e.cancelBubble = true;
                    }
                })));
            }
            else {
                return;
            }
        }))).subscribe();
    }
    // 设置群组内组织的勾选状态
    /**
     * @private
     * @param {?} data
     * @param {?} checked
     * @return {?}
     */
    setChecked(data, checked) {
        /** @type {?} */
        const itemIndex = CommonUtil.findIndex(data[this.primaryField], this.primaryField, this.items);
        if (itemIndex > -1) {
            this.items[itemIndex].checked = checked;
        }
    }
    // 设置群组内组织的收藏状态
    /**
     * @private
     * @return {?}
     */
    setFavorites() {
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            if (CommonUtil.findIndex(item[this.primaryField], this.primaryField, this.favoritesList) !== -1) {
                item.inFavorites = true;
            }
            else {
                item.inFavorites = false;
            }
        }));
    }
    // 通过弹窗增加群组内的组织
    /**
     * @param {?} show
     * @param {?=} groupType
     * @return {?}
     */
    toggleGroupOrgDialog(show, groupType = this.personalToken) {
        if (groupType === this.personalToken) {
            this.showGroupOrgDialog = show;
        }
    }
    // 获取某个群组内的所有组织
    /**
     * @param {?} item
     * @param {?=} groupType
     * @return {?}
     */
    getOrgsByGroup(item, groupType = this.publicToken) {
        this.formLoadingService.show();
        this.currentGroupType = groupType;
        this.allChecked = false;
        this.selectedGroupId = item[this.groupIdField];
        // const helpExtend = window && (window as any).orgHelpExtend;
        // helpExtend.getDataByGroupId(item[this.groupIdField], this.absOrgType).then(data => {
        // });
        this.apiService.getGroupMembers(item[this.groupIdField], this.absOrgType).subscribe((/**
         * @param {?} data
         * @return {?}
         */
        (data) => {
            this.items = data ? data : [];
            this.groupData.personal.forEach((/**
             * @param {?} item
             * @return {?}
             */
            item => {
                if (item[this.groupIdField] === this.selectedGroupId && item.total !== this.items.length) {
                    item.total = this.items.length;
                }
            }));
            this.items.forEach((/**
             * @param {?} it
             * @return {?}
             */
            it => {
                if (CommonUtil.findIndex(it[this.primaryField], this.primaryField, this.favoritesList) !== -1) {
                    it.inFavorites = true;
                }
                else {
                    it.inFavorites = false;
                }
                it.indexId = Math.random().toString(16).substring(2);
                // it.displayName = !!this.showUserCode ? ('[' + it.code + ']' + it.name) : it.name;
            }));
            this.toggleChecked();
            this.setFavorites();
            this.formLoadingService.hide();
        }));
    }
    // 获取组织群组列表
    /**
     * @return {?}
     */
    getGroupList() {
        this.apiService.getOrgGroups(this.absOrgType).subscribe((/**
         * @param {?} data
         * @return {?}
         */
        (data) => {
            /** @type {?} */
            const resPublic = data && data.publicGroup;
            /** @type {?} */
            const resPersonal = data && data.privateGroup;
            this.groupData.public = resPublic ? resPublic : [];
            this.groupData.personal = resPersonal ? resPersonal : [];
            /** @type {?} */
            const firstPublicGroup = resPublic[0] && resPublic[0][this.groupIdField];
            /** @type {?} */
            const firstPersonalGroup = resPersonal[0] && resPersonal[0][this.groupIdField];
            this.selectedGroupId = this.selectedGroupId ? this.selectedGroupId : firstPublicGroup;
            this.selectedGroupId = this.selectedGroupId ? this.selectedGroupId : firstPersonalGroup;
            if (!!this.selectedGroupId) {
                if (this.groupData.public.findIndex((/**
                 * @param {?} item
                 * @return {?}
                 */
                item => item[this.groupIdField] === this.selectedGroupId)) !== -1) {
                    this.currentGroupType = this.publicToken;
                }
                else if (this.groupData.personal.findIndex((/**
                 * @param {?} item
                 * @return {?}
                 */
                item => item[this.groupIdField] === this.selectedGroupId)) !== -1) {
                    this.currentGroupType = this.personalToken;
                }
                this.getOrgsByGroup({ id: this.selectedGroupId }, this.currentGroupType);
            }
        }));
    }
    // 收藏或者取消收藏组织
    /**
     * @param {?} e
     * @param {?} item
     * @return {?}
     */
    toggleFavorites(e, item) {
        this.favoritesTool.toggleFavorites(e, item);
    }
    // 切换公共群组或者个人群组的收折状态
    /**
     * @param {?} e
     * @param {?} type
     * @return {?}
     */
    toggleVisible(e, type) {
        if (type === this.publicToken) {
            this.publicVisible = !this.publicVisible;
        }
        else if (type === this.personalToken) {
            this.personalVisible = !this.personalVisible;
        }
        e.stopPropagation();
        e.cancelBubble = true;
    }
    /**
     * @param {?} e
     * @return {?}
     */
    toggleAll(e) {
        if (!this.allChecked) {
            this.checkAll();
        }
        else {
            this.unCheckAll();
        }
        e.preventDefault();
    }
    /**
     * @param {?} data
     * @param {?} e
     * @return {?}
     */
    toggleOne(data, e) {
        if (data.checked) {
            if (this.multiSelect) {
                this.emitSelections(data, ChangeType.Remove);
            }
            else {
                this.emitSelections([]);
            }
        }
        else {
            if (this.multiSelect) {
                this.emitSelections(data, ChangeType.Append);
            }
            else {
                this.emitSelections(new Array(data));
            }
        }
        e.preventDefault();
    }
    /**
     * 全选后处理
     * @return {?}
     */
    checkAll() {
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            if (CommonUtil.findIndex(item[this.primaryField], this.primaryField, this.selections) === -1) {
                this.emitSelections(item, ChangeType.Append);
            }
        }));
    }
    /**
     * 全部取消
     * @return {?} void
     */
    unCheckAll() {
        /** @type {?} */
        const checkeds = this.items.filter((/**
         * @param {?} item
         * @return {?}
         */
        item => item.checked));
        checkeds.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            this.emitSelections(item, ChangeType.Remove);
        }));
    }
    /**
     * 当前行选中
     * @param {?} data 当前行的数据（）
     * @return {?}
     */
    selectLine(data) {
        if (this.multiSelect) {
            this._insertOneIntoSelections(data);
        }
        else {
            this.selections = [];
            this.items.forEach((/**
             * @param {?} item
             * @return {?}
             */
            item => {
                if (item.checked) {
                    item.checked = false;
                }
            }));
            this._insertOneIntoSelections(data);
        }
        if (this.isAllChecked()) {
            this.allChecked = true;
        }
    }
    /**
     * 单选取消选中
     * @param {?} data 取消选中行
     * @return {?}
     */
    unSelectLine(data) {
        /** @type {?} */
        const index = CommonUtil.findIndex(data[this.primaryField], this.primaryField, this.selections);
        if (index > -1) {
            this.selections.splice(index, 1);
        }
        this.setChecked(data, false);
        if (this.isAllChecked()) {
            this.allChecked = true;
        }
        else {
            this.allChecked = false;
        }
    }
    /**
     * @private
     * @param {?} selections
     * @param {?=} changeType
     * @return {?}
     */
    emitSelections(selections, changeType = ChangeType.ValueChanged) {
        this.stateMgr.emitSelections(selections, changeType);
    }
    /**
     * 选中并插入当前行数据到右侧
     * @param {?} data 当前行的数据
     * @return {?}
     */
    _insertOneIntoSelections(data) {
        // 如果当前数据已经移入右侧数据，则返回。
        if (CommonUtil.findIndex(data[this.primaryField], this.primaryField, this.selections) > -1) {
            return;
        }
        this.setChecked(data, true);
        this.selections.push(data);
        this.selections = this.selections.slice();
    }
    /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     * @return {?}
     */
    toggleChecked() {
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            if (CommonUtil.findIndex(item[this.primaryField], this.primaryField, this.selections) > -1) {
                item.checked = true;
            }
            else {
                item.checked = false;
            }
        }));
        if (this.isAllChecked()) {
            this.allChecked = true;
        }
        else {
            this.allChecked = false;
        }
    }
    /**
     * @private
     * @return {?}
     */
    isAllChecked() {
        /** @type {?} */
        let count = 0;
        /** @type {?} */
        let allChecked = false;
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            this.selections.forEach((/**
             * @param {?} selection
             * @return {?}
             */
            selection => {
                if (item[this.primaryField] === selection[this.primaryField]) {
                    count += 1;
                }
            }));
        }));
        if (this.items.length === count && count > 0) {
            allChecked = true;
        }
        return allChecked;
    }
    /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    trackByFn(index, item) {
        return index;
    }
}
GroupComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-group',
                template: "<div class=\"candidate flex-left\">\r\n    <perfect-scrollbar *ngIf=\"groupData.personal.length || groupData.public.length\">\r\n        <div class=\"h-100\">\r\n            <div class=\"group_blank_15\"></div>\r\n            <div class=\"group-top-tree\">\r\n                <span class=\"f-icon\" [class.f-icon-minus-outline]=\"publicVisible\"\r\n                    [class.f-icon-plus-outline]=\"!publicVisible\" (click)=\"toggleVisible($event, publicToken)\"></span>\r\n                \u516C\u5171\u7FA4\u7EC4\r\n            </div>\r\n            <ng-template [ngIf]=\"publicVisible\">\r\n                <div class=\"s-opCell-f\" [class.active]=\"selectedGroupId === item[groupIdField]\" title=\"\"\r\n                    *ngFor=\"let item of groupData.public\" (click)=\"getOrgsByGroup(item, publicToken)\">\r\n                    <div class=\"s-opCell-f-group\">\r\n                        <!--\r\n                        <farris-avatar [avatarWidth]=\"32\" [avatarHeight]=\"32\" [cover]=\"item['avatar']\" [readonly]=\"true\"\r\n                            class=\"s-opCell-a\">\r\n                        </farris-avatar>\r\n                        -->\r\n                        <div class=\"s-opCell-d\">\r\n                            <p class=\"s-opCell-d1\">{{item.title}} {{item.total}}\u4E2A\u7EC4\u7EC7</p>\r\n                            <p class=\"s-opCell-d2\" title=\"{{item.description}}\">{{item.description}}</p>\r\n                        </div>\r\n                    </div>\r\n                    <!-- <span class=\"span-find-details\">\u67E5\u770B\u8BE6\u60C5</span> -->\r\n                </div>\r\n            </ng-template>\r\n            <div class=\"group_blank_15\"></div>\r\n            <div class=\"group-top-tree\">\r\n                <span class=\"f-icon\" [class.f-icon-minus-outline]=\"personalVisible\"\r\n                    [class.f-icon-plus-outline]=\"!personalVisible\"\r\n                    (click)=\"toggleVisible($event, personalToken)\"></span>\r\n                \u4E2A\u4EBA\u7FA4\u7EC4\r\n            </div>\r\n            <ng-template [ngIf]=\"personalVisible\">\r\n                <div class=\"s-opCell-f\" [class.active]=\"selectedGroupId === item[groupIdField]\"\r\n                    *ngFor=\"let item of groupData.personal\" (click)=\"getOrgsByGroup(item, personalToken)\">\r\n                    <div class=\"s-opCell-f-group\">\r\n                        <!--\r\n                        <farris-avatar [avatarWidth]=\"32\" [avatarHeight]=\"32\" [cover]=\"item['avatar']\" [readonly]=\"true\"\r\n                            class=\"s-opCell-a\">\r\n                        </farris-avatar>\r\n                        -->\r\n                        <div class=\"s-opCell-d\">\r\n                            <p class=\"s-opCell-d1\">{{item.title}} {{item.total}}\u4E2A\u7EC4\u7EC7</p>\r\n                            <p class=\"s-opCell-d2\" title=\"{{item.description}}\">{{item.description}}</p>\r\n                        </div>\r\n                    </div>\r\n                    <div class=\"s-opCell-edit\">\r\n                        <span class=\"f-icon f-icon-new-edit\" (click)=\"editGroup($event, item)\"></span>\r\n                        <span class=\"f-icon f-icon-minus-circle default-light-color\"\r\n                            (click)=\"deleteGroup($event, item)\"></span>\r\n                    </div>\r\n                </div>\r\n            </ng-template>\r\n        </div>\r\n    </perfect-scrollbar>\r\n    <div *ngIf=\"groupData.personal.length === 0 && groupData.public.length === 0\"\r\n        [ngStyle]=\"{'background-image': noDataImg}\" class=\"fp-candidate-nodata\">\r\n        \u6682\u65E0\u6570\u636E</div>\r\n</div>\r\n<div class=\"candidate flex-right\">\r\n    <div class=\"candidate-title\" *ngIf=\"groupData?.public.length > 0 || groupData?.personal.length > 0\">\r\n        <div class=\"custom-control custom-checkbox mb-2\" *ngIf=\"multiSelect\">\r\n            <input class=\"custom-control-input\" [id]=\"allIndexId\" type=\"checkbox\" [(ngModel)]=\"allChecked\">\r\n            <label class=\"custom-control-label\" [for]=\"allIndexId\" (click)=\"toggleAll($event)\">\u5168\u9009</label>\r\n        </div>\r\n        <div *ngIf=\"!multiSelect\"></div>\r\n        <div (click)=\"toggleGroupOrgDialog(true, currentGroupType)\"\r\n            [ngStyle]=\"{'color': currentGroupType === publicToken ? '#d8d8d8' : '#2a87ff', 'cursor': currentGroupType === publicToken ? 'not-allowed' : 'pointer'}\">\r\n            <span class=\"f-icon f-icon-department\"></span>\r\n            \u6DFB\u52A0\u7EC4\u7EC7\r\n        </div>\r\n    </div>\r\n    <perfect-scrollbar *ngIf=\"items.length!==0\">\r\n        <div class=\"candidate-content\">\r\n            <div *ngFor=\"let data of items; let i = index;trackBy: trackByFn\" class=\"s-selectedPerson\">\r\n                <div class=\"custom-control custom-checkbox mb-2\">\r\n                    <input class=\"custom-control-input\" [ngModel]=\"data.checked\" [id]=\"data.indexId\" type=\"checkbox\">\r\n                    <label class=\"custom-control-label\" [for]=\"data.indexId\" (click)=\"toggleOne(data, $event)\">\r\n                        <div style=\"display: flex; height: 32px; margin: -21px 0 0 24px;\">\r\n                            <!-- <farris-avatar [avatarWidth]=\"32\" [avatarHeight]=\"32\" [cover]=\"data.ext1\" [readonly]=\"true\">\r\n                            </farris-avatar> -->\r\n                            <div style=\"margin-left: 11px; margin-top: -2px;  padding-right: 10px; overflow: hidden;\">\r\n                                <p class=\"candidate-content-title\" title=\"{{data.name}}\">\r\n                                    {{data.name}}</p>\r\n                                <p class=\"candidate-content-orgpath\" title=\"{{data.orgAllPath}}\">\r\n                                    {{data.orgAllPath}}</p>\r\n                            </div>\r\n                        </div>\r\n                    </label>\r\n                </div>\r\n                <span class=\"f-icon f-icon-minus-circle deleteBtn\" *ngIf=\"currentGroupType===personalToken\" (click)=\"removeOrg($event, data)\"></span>\r\n                <span class=\"f-icon f-icon-star\" *ngIf=\"enableFavorites\" [class.default-light-color]=\"data.inFavorites\"\r\n                    [class.default-dark-color]=\"!data.inFavorites\" (click)=\"toggleFavorites($event, data)\"></span>\r\n            </div>\r\n\r\n        </div>\r\n    </perfect-scrollbar>\r\n    <div *ngIf=\"items.length===0\" [ngStyle]=\"{'background-image': noDataImg}\" class=\"fp-candidate-nodata\">\r\n        \u6682\u65E0\u6570\u636E</div>\r\n</div>\r\n\r\n<!--\u7FA4\u7EC4\u5F39\u7A97\u9009\u7EC4\u7EC7--->\r\n<div class=\"s-group-dialog-container\" *ngIf=\"showGroupOrgDialog\">\r\n    <div class=\"s-org-group-title\">\r\n        <span class=\"f-icon f-sidebar-close\" (click)=\"toggleGroupOrgDialog(false)\"></span>\u6DFB\u52A0\u7EC4\u7EC7\r\n    </div>\r\n    <append-group-org #appendOrg style=\"margin-top: 15px;\"\r\n        [primaryField]=\"primaryField\" [enableHierarchicalLoading]=\"enableHierarchicalLoading\"\r\n        [notGetStopOrg]=\"notGetStopOrg\" [layer]=\"layer\" [multiSelect]=\"multiSelect\" [absOrgType]=\"absOrgType\"\r\n        [cascadeCheck]=\"cascadeCheck\" [cascadeDown]=\"cascadeDown\" [cascadeUp]=\"cascadeUp\" [keepSelect]=\"keepSelect\"\r\n        [showCheckAll]=\"showCheckAll\" [selectedLimit]=\"selectedLimit\">\r\n    </append-group-org>\r\n    <div class=\"s-org-group-footer\">\r\n        <input type=\"button\" class=\"btn btn-primary fr\" style=\"width: 100px;\" value=\"\u786E\u5B9A\"\r\n            (click)=\"updateGroup()\" />\r\n        <input type=\"button\" class=\"btn btn-secondary fr mr-3\" value=\"\u53D6\u6D88\" (click)=\"toggleGroupOrgDialog(false)\" />\r\n    </div>\r\n</div>\r\n<div class=\"s-help-bg\" *ngIf=\"showGroupOrgDialog\"></div>",
                styles: [":host{display:-webkit-box;display:flex;height:100%;-webkit-box-flex:1;flex:1;overflow:hidden;position:static}.candidate{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;position:relative;border-right:1px solid #dee1ea;overflow:hidden}.candidate.flex-left{-webkit-box-flex:0;flex:0 0 42%}.candidate.flex-right{-webkit-box-flex:0;flex:0 0 58%}.candidate .s-opCell-f{display:-webkit-box;display:flex;height:40px;border-radius:6px;padding-left:10px;-webkit-box-pack:justify;justify-content:space-between;margin:1px 5px 0;cursor:pointer}.candidate .s-opCell-f .s-opCell-f-group{display:-webkit-box;display:flex;-webkit-box-flex:1;flex:1}.candidate .s-opCell-f.active,.candidate .s-opCell-f:hover{background-color:#eef5ff}.candidate .s-opCell-f:hover .s-opCell-edit{visibility:visible}.candidate .s-opCell-a{margin-top:4px;margin-left:6px}.candidate .s-opCell-d{-webkit-box-flex:1;flex:1;overflow:hidden;margin:1.5px 10px 0}.candidate .s-opCell-d1{line-height:20px;font-size:13px;height:20px;color:#2d2f33;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;margin:0;padding:0;max-width:210px}.candidate .s-opCell-d2{color:#a8adb8;font-size:12px;line-height:14px;height:14px;white-space:nowrap;text-overflow:ellipsis;overflow:hidden;margin:0;padding:0;max-width:210px}.candidate .s-opCell-f .f-avatar .f-avatar-image{display:block!important}.candidate .fp-candidate-nodata{width:100px;height:100px;text-align:center;background-repeat:no-repeat;background-size:contain;color:#b4bccc;padding-top:110px;position:absolute;left:50%;top:50%;margin:-70px 0 0 -50px}.candidate .s-opCell-f:hover .span-find-details{display:block}.candidate .s-opCell-f .span-find-details{margin-right:5px;line-height:40px;color:#2a87ff;width:60px;display:none}.candidate .s-opCell-f .s-opCell-edit{line-height:40px;width:60px;text-align:center;visibility:hidden}.candidate .s-opCell-f .s-opCell-edit .f-icon-new-edit{margin-right:10px;color:#949aa6}.candidate .s-opCell-f .s-opCell-edit .f-icon-minus-circle{color:#f46160}.candidate .group-top-tree{margin:0 15px 10px;font-size:13px}.candidate .group_blank_15{width:100%;height:15px}.candidate .group-top-tree .f-icon{color:#d5d4d7;margin-right:8px}.candidate .group-top-tree .k-checkbox-label::after,.candidate .group-top-tree .k-checkbox-label::before{top:1px}.candidate .candidate-content{clear:both}.candidate .s-selectedPerson:first-child{margin-top:0}.candidate .s-selectedPerson{min-width:240px;float:left;width:calc(100% - 6px);position:relative;height:40px;padding:5px 12px;margin:0 3px 1px}.candidate .s-selectedPerson:hover{background:#eef5ff;border-radius:5px}.candidate .f-icon{font-size:14px}.candidate .s-selectedPerson .deleteBtn{font-size:14px;color:#f46160;cursor:pointer;position:absolute;right:60px;top:13px;visibility:hidden}.candidate .s-selectedPerson:hover .deleteBtn{visibility:visible}.candidate .s-selectedPerson .f-icon-star{position:absolute;top:13px;right:15px;font-size:14px}.candidate .s-selectedPerson .default-light-color{color:#f7b500}.candidate .s-selectedPerson .default-dark-color{color:#d8dce6}.candidate .k-checkbox-label::before{top:10px;font-size:16px;width:14px;height:14px}.candidate .k-checkbox-label::after{top:10px;font-size:16px;width:15px;height:14px}.candidate .candidate-content-title{margin:0;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;font-size:13px}.candidate .candidate-content-orgpath{margin:0;font-size:12px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;color:#c7ccd7}.candidate .candidate-title{display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between}.candidate .candidate-title .custom-control{margin:10px 0 0 15px;line-height:35px}.candidate .s-selectedPerson .custom-control-label::before{top:8px}.candidate .candidate-title .title-clearall{margin:5px 15px 0 0;color:#2a87ff;cursor:pointer;line-height:35px}.candidate .candidate-title div{line-height:35px;margin:9px 10px 0 0;color:#2a87ff;cursor:pointer}.candidate .saved-group{position:absolute;width:111px;height:26px;line-height:26px;background:#eaedf2;border-radius:5px;text-align:center;font-size:13px;bottom:10px;left:13px;z-index:999;color:#909ba2;cursor:pointer}.candidate .saved-group:hover{color:#2a87ff;background:#eaf4ff}.candidate .saved-group:hover .f-icon{color:#2a87ff}.candidate .saved-group .f-icon{color:#909ba2;margin-right:5px;cursor:pointer;font-size:14px}.s-group-dialog-container{height:520px;width:700px;position:fixed;left:50%;top:50%;margin:-260px 0 0 -350px;background:#fff;padding:15px 20px;border-radius:10px;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;z-index:9999}.s-group-dialog-container .s-org-group-footer{margin-top:15px}.s-help-bg{background:rgb(0 0 0 / 15%);position:fixed;left:0;top:0;right:0;bottom:0;z-index:9997}.s-group-dialog-container .s-org-group-title{font-size:17px;line-height:24px;color:#2d2f33;font-weight:600}.s-group-dialog-container .s-org-group-title .f-icon{float:right;font-size:20px;color:#878d99;margin-top:3px;cursor:pointer}.s-group-dialog-container .s-org-group-footer .fr{float:right;height:32px}"]
            }] }
];
/** @nocollapse */
GroupComponent.ctorParameters = () => [
    { type: ApiService },
    { type: FavoritesTool },
    { type: StateMgrTool },
    { type: ChangeDetectorRef },
    { type: Injector },
    { type: FormMessageService },
    { type: FormLoadingService }
];
GroupComponent.propDecorators = {
    appendOrg: [{ type: ViewChild, args: ['appendOrg',] }],
    primaryField: [{ type: Input }],
    multiSelect: [{ type: Input }],
    absOrgType: [{ type: Input }],
    busNum: [{ type: Input }],
    enableFavorites: [{ type: Input }],
    notGetStopOrg: [{ type: Input }],
    groupApiUrl: [{ type: Input }],
    enableHierarchicalLoading: [{ type: Input }],
    cascadeCheck: [{ type: Input }],
    cascadeDown: [{ type: Input }],
    cascadeUp: [{ type: Input }],
    keepSelect: [{ type: Input }],
    layer: [{ type: Input }],
    selectedLimit: [{ type: Input }],
    showCheckAll: [{ type: Input }],
    groupChange: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    GroupComponent.prototype.appendOrg;
    /** @type {?} */
    GroupComponent.prototype.primaryField;
    /** @type {?} */
    GroupComponent.prototype.multiSelect;
    /** @type {?} */
    GroupComponent.prototype.absOrgType;
    /** @type {?} */
    GroupComponent.prototype.busNum;
    /** @type {?} */
    GroupComponent.prototype.enableFavorites;
    /** @type {?} */
    GroupComponent.prototype.notGetStopOrg;
    /** @type {?} */
    GroupComponent.prototype.groupApiUrl;
    /** @type {?} */
    GroupComponent.prototype.enableHierarchicalLoading;
    /** @type {?} */
    GroupComponent.prototype.cascadeCheck;
    /** @type {?} */
    GroupComponent.prototype.cascadeDown;
    /** @type {?} */
    GroupComponent.prototype.cascadeUp;
    /** @type {?} */
    GroupComponent.prototype.keepSelect;
    /** @type {?} */
    GroupComponent.prototype.layer;
    /** @type {?} */
    GroupComponent.prototype.selectedLimit;
    /** @type {?} */
    GroupComponent.prototype.showCheckAll;
    /** @type {?} */
    GroupComponent.prototype.groupChange;
    /** @type {?} */
    GroupComponent.prototype.groupIdField;
    /** @type {?} */
    GroupComponent.prototype.userIdField;
    /** @type {?} */
    GroupComponent.prototype.selections;
    /** @type {?} */
    GroupComponent.prototype.noDataImg;
    /** @type {?} */
    GroupComponent.prototype.allChecked;
    /** @type {?} */
    GroupComponent.prototype.items;
    /** @type {?} */
    GroupComponent.prototype.favoritesList;
    /** @type {?} */
    GroupComponent.prototype.groupData;
    /** @type {?} */
    GroupComponent.prototype.personnelList;
    /** @type {?} */
    GroupComponent.prototype.groupPersonnels;
    /** @type {?} */
    GroupComponent.prototype.publicVisible;
    /** @type {?} */
    GroupComponent.prototype.personalVisible;
    /** @type {?} */
    GroupComponent.prototype.publicToken;
    /** @type {?} */
    GroupComponent.prototype.personalToken;
    /** @type {?} */
    GroupComponent.prototype.selectedGroupId;
    /** @type {?} */
    GroupComponent.prototype.allIndexId;
    /** @type {?} */
    GroupComponent.prototype.showGroupOrgDialog;
    /** @type {?} */
    GroupComponent.prototype.currentGroupType;
    /**
     * @type {?}
     * @private
     */
    GroupComponent.prototype.selectionsSub;
    /**
     * @type {?}
     * @private
     */
    GroupComponent.prototype.favoritesSub;
    /**
     * @type {?}
     * @private
     */
    GroupComponent.prototype.apiService;
    /**
     * @type {?}
     * @private
     */
    GroupComponent.prototype.favoritesTool;
    /**
     * @type {?}
     * @private
     */
    GroupComponent.prototype.stateMgr;
    /**
     * @type {?}
     * @private
     */
    GroupComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    GroupComponent.prototype.injector;
    /**
     * @type {?}
     * @private
     */
    GroupComponent.prototype.formMessageService;
    /**
     * @type {?}
     * @private
     */
    GroupComponent.prototype.formLoadingService;
}
//# sourceMappingURL=data:application/json;base64,