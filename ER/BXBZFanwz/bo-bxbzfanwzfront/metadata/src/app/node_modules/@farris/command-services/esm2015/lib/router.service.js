/*
 * @Author: Witt
 * @Date: 2018-11-15 15:56:11
 * @Last Modified by: aalizzwell
 * @Last Modified time: 2019-07-09 16:23:04
 */
import { Injectable, Optional } from '@angular/core';
import { Router } from '@angular/router';
import { RouterParamService } from '@farris/devkit';
import { FrameworkService, AppService } from '@gsp-sys/rtf-common';
import { MenuStateService } from './menu-state.service';
import { Subject } from 'rxjs';
import { LanguageService } from './languag.service';
// tslint:disable: no-string-literal
/**
 * 路由服务
 * @scope FormModule
 */
class RouterService {
    constructor(router, routerParamService, frameworkService, appService, menuStateService, languageService) {
        this.router = router;
        this.routerParamService = routerParamService;
        this.frameworkService = frameworkService;
        this.appService = appService;
        this.menuStateService = menuStateService;
        this.languageService = languageService;
        /**
         * 上次切换的TabId
         */
        this.lastSwitchId = null;
        /**
         * 上次关闭的TabId
         */
        this.lastCloseId = null;
        // private menuStateService: MenuStateService = null;
        this.onClosed = null;
        if (!this.menuStateService) {
            this.menuStateService = new MenuStateService();
        }
        if (!this.languageService) {
            this.languageService = LanguageService.getInstance();
        }
        this.onClosed = new Subject();
        this.registerEvent();
    }
    /**
     * 切换路由
     * @param url 菜单ID
     * @param params 路由参数
     */
    route(url, params) {
        url = this.router.createUrlTree([url]).toString();
        this.setParams(url, params);
        this.router.navigateByUrl(url);
    }
    /**
     * 注册运行框架事件
     */
    registerEvent() {
        const menuId = this.getAppId() || this.getFuncId();
        this.frameworkService.eventListner(this.frameworkService.FuncSwitch, e => {
            if (!e) {
                return;
            }
            const id = this.getOriginalId(e.id) || e.tabId;
            const menuState = this.menuStateService.getMenuState(id);
            if (!!id && menuId === id && !!menuState && menuState.length > 0) {
                this.formReload();
                this.lastSwitchId = id;
            }
        });
        this.frameworkService.eventListner(this.frameworkService.FuncClosed, e => {
            if (!e) {
                return;
            }
            this.onClosed.next(e);
            const id = this.getOriginalId(e.id) || e.tabId;
            if (menuId === id) {
                return;
            }
            const menuState = this.menuStateService.getMenuState(menuId, id);
            // && id !== this.lastCloseId
            if (!!id && !!menuState && menuState.length > 0) {
                this.removeMenuState(id);
                this.formReload();
                this.lastCloseId = id;
            }
        });
    }
    removeMenuState(tabId) {
        if (this['context']) {
            this.menuStateService.removeMenu(tabId);
        }
    }
    /**
     * 获取原始功能id
     * @param id id
     */
    getOriginalId(id) {
        if (!id) {
            return id;
        }
        if (id.indexOf('_') !== -1) {
            id = id.split('_')[0];
        }
        return id;
    }
    /**
     * 刷新组件数据
     */
    formReload() {
        try {
            this['context']['frameContext']['appContext']['refresh']();
        }
        catch (_a) { }
    }
    /**
     * 打开功能菜单
     * @param funcId 菜单内码
     * @param params 路由参数，形如： { key1: val1, key2: value2 }
     */
    openMenu(funcId, params, reload) {
        if (typeof reload === 'undefined' || typeof reload !== 'boolean') {
            reload = false;
        }
        const paramsMap = this.buildParamMap(params);
        const parentMenuId = this.getFuncId() || this.getAppId();
        this.menuStateService.addMenuState(parentMenuId, funcId);
        paramsMap.set('WEB_FORM_ROUTER_PARENT_ID', parentMenuId);
        this.frameworkService.openFuncWithParam(funcId, paramsMap, reload);
    }
    /**
     * 打开应用
     * @param appId 应用内码
     * @param appEntrance 应用入口
     * @param params 路由参数，形如： { key1: val1, key2: value2 }
     */
    openApp(appId, appEntrance, params, reload) {
        if (typeof reload === 'undefined' || typeof reload !== 'boolean') {
            reload = false;
        }
        const paramMap = this.buildParamMap(params);
        const parentMenuId = this.getAppId() || this.getFuncId();
        this.menuStateService.addMenuState(parentMenuId, appId);
        paramMap.set('WEB_FORM_ROUTER_PARENT_ID', parentMenuId);
        if (!!this.appService) {
            this.appService.openApp(appId, appEntrance, paramMap, reload);
        }
    }
    /**
     * 构造参数
     */
    buildParamMap(params) {
        if (typeof params === 'undefined' || params === null || (typeof params === 'string' && params.length < 1)) {
            params = {};
        }
        const paramMap = new Map();
        if (typeof params === 'object') {
            params = JSON.stringify(params);
        }
        params = window['encodeURIComponent'](params);
        paramMap.set('WEB_FORM_ROUTE_PARAMS', params);
        return paramMap;
    }
    /**
     * 关闭功能菜单
     */
    closeMenu() {
        const funcId = this.getFuncId();
        const appId = this.getAppId();
        const { isDialogComponent, rootComponent } = this.findDialog();
        if (isDialogComponent) {
            const modalRef = this.get(rootComponent, 'dialogRef');
            modalRef['close']();
            return;
        }
        if (funcId !== null && typeof funcId === 'string' && funcId.length > 0) {
            this.closeFunc(funcId);
        }
        else if (appId !== null && typeof appId === 'string' && appId.length > 0) {
            const appEntrance = this.getAppEntrance();
            this.closeApp(appId, appEntrance);
        }
        else {
            console.error(this.languageService['notSupportMenuType']);
        }
    }
    /**
     * 查找弹窗组件
     */
    findDialog() {
        let frameContext = this.get(this, 'context.frameContext');
        let isDialogComponent = this.get(frameContext, 'frameComponent.isDialogRootComponent', false);
        let parentFrameContext = this.get(frameContext, 'parent');
        while (parentFrameContext != null && !isDialogComponent) {
            frameContext = this.get(frameContext, 'parent');
            parentFrameContext = this.get(parentFrameContext, 'parent');
            isDialogComponent = this.get(frameContext, 'frameComponent.isDialogRootComponent', false);
        }
        const rootComponent = this.get(frameContext, 'frameComponent');
        return { isDialogComponent, rootComponent };
    }
    /**
     * loadsh get
     * @param object 对象
     * @param path 路径
     * @param defaultVal 默认值
     */
    get(object, path, defaultVal = null) {
        const PATH = Array.isArray(path)
            ? path
            : path.split('.').filter(i => i.length);
        if (!PATH.length) {
            return object === undefined ? defaultVal : object;
        }
        if (object === null || object === undefined || typeof (object[PATH[0]]) === 'undefined') {
            return defaultVal;
        }
        return this.get(object[PATH.shift()], PATH, defaultVal);
    }
    /**
     * 关闭菜单
     * @param funcId 菜单id
     */
    closeFunc(funcId) {
        if (!funcId) {
            funcId = this.getFuncId();
        }
        if (!!this.frameworkService) {
            this.frameworkService.closeFunc(funcId).subscribe();
        }
    }
    /**
     * 关闭app
     * @param appId 应用id
     */
    closeApp(appId, appEntrance) {
        if (!appId) {
            appId = this.getAppId();
        }
        if (typeof appEntrance === 'undefined') {
            appEntrance = this.getAppEntrance();
        }
        if (!!this.appService) {
            this.appService.closeApp(appId, appEntrance).subscribe();
        }
    }
    /**
     * 设置参数
     * @param params 路由参数
     */
    setParams(url, params) {
        let paramsObj;
        if (typeof params === 'string' && params !== '') {
            paramsObj = JSON.parse(params);
        }
        else {
            paramsObj = params || {};
        }
        // 设置路由参数
        this.routerParamService.setParams(url, paramsObj);
    }
    /**
     * 获取funcId
     */
    getFuncId() {
        const hash = window.location.hash;
        if (!hash) {
            return null;
        }
        const params = this.decodeURLParams(hash);
        if (params && params.hasOwnProperty('funcId')) {
            return params.funcId;
        }
        else {
            return null;
        }
    }
    /**
     * 获取appId
     */
    getAppId() {
        const hash = window.location.hash;
        if (!hash) {
            return null;
        }
        const params = this.decodeURLParams(hash);
        if (params && params.hasOwnProperty('appId')) {
            return params.appId;
        }
        else {
            return null;
        }
    }
    getParentMenuId() {
        const hash = window.location.hash;
        if (!hash) {
            return null;
        }
        const params = this.decodeURLParams(hash);
        if (params && params.hasOwnProperty('WEB_FORM_ROUTER_PARENT_ID')) {
            return params.WEB_FORM_ROUTER_PARENT_ID;
        }
        else {
            return null;
        }
    }
    /**
     * 获取应用入口
     */
    getAppEntrance() {
        const hash = window.location.hash;
        if (!hash) {
            return null;
        }
        const params = this.decodeURLParams(hash);
        if (params && params.hasOwnProperty('appEntrance')) {
            return params.appEntrance;
        }
        else {
            return null;
        }
    }
    /**
     * 解码参数
     * @param query search|hash
     */
    decodeURLParams(query) {
        if (typeof query === 'undefined') {
            query = window.location.hash || window.location.search;
        }
        const hashes = query.slice(query.indexOf('?') + 1).split('&');
        return hashes.reduce((params, hash) => {
            const split = hash.indexOf('=');
            const key = hash.slice(0, split);
            const val = hash.slice(split + 1);
            return Object.assign(params, { [key]: decodeURIComponent(val) });
        }, {});
    }
}
RouterService.decorators = [
    { type: Injectable }
];
/** @nocollapse */
RouterService.ctorParameters = () => [
    { type: Router },
    { type: RouterParamService },
    { type: FrameworkService },
    { type: AppService, decorators: [{ type: Optional }] },
    { type: MenuStateService, decorators: [{ type: Optional }] },
    { type: LanguageService, decorators: [{ type: Optional }] }
];
export { RouterService };
//# sourceMappingURL=data:application/json;base64,