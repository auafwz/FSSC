{"version":3,"sources":["ng://@farris/ui-combo-lookup/lib/combo-lookup.service.ts","node_modules/tslib/tslib.es6.js","ng://@farris/ui-combo-lookup/lib/combo-lookup.component.ts","ng://@farris/ui-combo-lookup/lib/combo-lookup.module.ts"],"names":["ComboLookupService","Injectable","args","providedIn","extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","_super","__assign","assign","t","s","i","n","arguments","length","prototype","call","apply","this","INPUT_COMBO_VALUE_ACCESSOR","provide","NG_VALUE_ACCESSOR","useExisting","forwardRef","ComboLookupComponent","multi","__extends","__","constructor","create","tslib_1.__extends","BaseComboComponent","defineProperty","_this","cols","_columns","undefined","comboService","columns","useTreeView","filter","field","textField","value","_pagination","pageInfo","enablePager","displayType","val","_treeCmpRef","cmf","cascadeCheck","cascade","enable","cascadeDown","down","cascadeUp","up","tt$","next","pagination","_tableCmpRef","loaded$","pipe","take","subscribe","e","loadData","pageSize","total","data","pageIndex","loadFinish","ngOnInit","treeClientSearch","debounceTime","remoteSearch","treeCmpRef","searchHandle","search","treeInfo$","loadTreeDataType","loadDataType","onSelectionsChange","selections","multiSelect","ownSelections","forEach","item","idField","cdr","detectChanges","initTreeData","__selections","ids","map","push","id","checkeds","checkValues","checkedNodes","selectNodes","initDatasChangeAction","isTree","updateMappingFieldValue","clearMapFields","ngControl","formDirective","form","bindingData","bindingData_1","bindingPath","pathArr_1","split","mappingField","mapFields","keys","f","fieldNames","text","getValueByObj","join","separator","fieldName","_val","nosearch","name","displayText","setValue","concat","commonUtils","updateSelectedValues","pathArr","targetField","indexOf","getValue","selectedValues","onSelectRows","row","index","selectItem","selectChange","emit","instance","node","nodes","updateTextAndValues","isOpen$","onUnSelectRows","unSelectItem","onCheckAll","ev","state","checked","rowNodes","selectable","r","selectAll","unSelectAll","_displayText","onValueChange","onKeyup","$event","onKeydown","code","hide","onPageChanged","event","uri","getData","loadLookUpDataTable","sortName","pageChanged","onPageSizeChanged","pageSizeChanged","onColumnSorted","_a","sortOrder","onClear","clearAll","type","_searchKeyWords","params","buildQueryParams","searchParam","category","JSON","stringify","customData","filterDataOnServer","isOpen","serachValue$","onExpandNode","Component","selector","template","encapsulation","ViewEncapsulation","None","providers","ComboService","LookupUtils","ElementRef","ChangeDetectorRef","Inject","DOCUMENT","Renderer2","Injector","Input","ViewChild","Output","el","document","render","injector","panelHeight","comPosition","height.px","showHeader","expandLevel","enableFullTree","EventEmitter","Subject","ComboLookupModule","NgModule","declarations","imports","CommonModule","FormsModule","DataTableModule","TreeTableModule","InputGroupModule","LoadingModule","forRoot","exports","ComboLocaleService"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { ComboService } from '@farris/ui-combo-list';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { LoadingService } from '@farris/ui-loading';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ComboLookupService {\r\n\r\n  constructor() {}\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { EventEmitter } from '@angular/core';\r\nimport {\r\n    Component, OnInit, ElementRef, ChangeDetectorRef, Inject, Renderer2,\r\n    Injector, Input, ViewChild, forwardRef, ViewEncapsulation, AfterViewChecked, Output\r\n} from '@angular/core';\r\nimport { DOCUMENT } from '@angular/common';\r\nimport { skip, take, filter, takeUntil, map, debounceTime } from 'rxjs/operators';\r\nimport { BaseComboComponent, ComboService } from '@farris/ui-combo-list';\r\nimport { NG_VALUE_ACCESSOR } from '@angular/forms';\r\nimport { LookupUtils, TreeInfo } from '@farris/ui-lookup';\r\nimport { TreeNode, TreeTableComponent } from '@farris/ui-treetable';\r\nimport { DataTableComponent } from '@farris/ui-datatable';\r\nimport { Subject, forkJoin, interval, zip } from 'rxjs';\r\n\r\nconst INPUT_COMBO_VALUE_ACCESSOR: any = {\r\n    provide: NG_VALUE_ACCESSOR,\r\n    // tslint:disable-next-line: no-use-before-declare\r\n    useExisting: forwardRef(() => ComboLookupComponent),\r\n    multi: true\r\n};\r\n\r\n@Component({\r\n    // tslint:disable-next-line: component-selector\r\n    selector: 'farris-combo-lookup',\r\n    templateUrl: './combo-lookup.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    // styleUrls: ['./combo-lookup.component.scss'],\r\n    providers: [INPUT_COMBO_VALUE_ACCESSOR, ComboService, LookupUtils]\r\n})\r\nexport class ComboLookupComponent extends BaseComboComponent implements OnInit {\r\n    panelHeight = 300;\r\n\r\n    comPosition = {\r\n        'height.px': this.panelHeight\r\n    };\r\n\r\n    @Input() showHeader = true;\r\n\r\n    @Input() useTreeView = false;\r\n    // æ åè¡¨é»è®¤å±å¼å±çº§ã -1ï¼ ä¸å±å¼ï¼ 0ï¼ å¨é¨å±å¼ï¼ >0:  å±å¼å°æå®çº§æ°ï¼\r\n    @Input()\r\n    set columns(value: any[]) {\r\n        this._columns = value;\r\n    }\r\n    get columns(): any[] {\r\n        let cols = this._columns !== undefined && this._columns.length > 0 ? this._columns : this.comboService.columns;\r\n        if (this.useTreeView && cols.length > 1) {\r\n            cols = cols.filter(n => n.field === this.textField);\r\n        }\r\n        return cols;\r\n    }\r\n    @Input()\r\n    set pagination(value: boolean) {\r\n        this._pagination = value;\r\n    }\r\n    get pagination() {\r\n        if (this._pagination !== undefined) {\r\n            return this._pagination;\r\n        } else {\r\n            return this.comboService.pageInfo && this.pageInfo.enablePager ? this.pageInfo.enablePager : false;\r\n        }\r\n    }\r\n    @Input()\r\n    set displayType(val: string) {\r\n        this.comboService.displayType = val + '';\r\n    }\r\n    get displayType() {\r\n        return this.comboService.displayType;\r\n    }\r\n\r\n    /** -1: ä¸å±å¼ï¼ 0: å¨é¨å±å¼ï¼>0: å±å¼å°æå®çº§æ° */\r\n    @Input() expandLevel = -1;\r\n\r\n    @ViewChild('tt')\r\n    set treeCmpRef(cmf: TreeTableComponent) {\r\n        if (cmf) {\r\n            cmf.cascadeCheck = this.cascade.enable;\r\n            cmf.cascadeDown = this.cascade.down;\r\n            cmf.cascadeUp = this.cascade.up;\r\n\r\n            this.tt$.next(cmf);\r\n        }\r\n        this._treeCmpRef = cmf;\r\n    }\r\n    get treeCmpRef(): TreeTableComponent {\r\n        return this._treeCmpRef;\r\n    }\r\n    @ViewChild('dt')\r\n    set tableCmpRef(cmf: DataTableComponent) {\r\n        if (cmf && this.pagination && this._tableCmpRef) {\r\n            this.loaded$.pipe(take(1)).subscribe(e => {\r\n                cmf.loadData({\r\n                    pageSize: this.pageInfo.pageSize,\r\n                    total: this.pageInfo.total,\r\n                    data: this.data,\r\n                    pageIndex: this.pageInfo.pageIndex\r\n                });\r\n            });\r\n        }\r\n        if (!this._tableCmpRef && this.loadFinish && cmf) {\r\n            cmf.loadData({\r\n                pageSize: this.pageInfo.pageSize,\r\n                total: this.pageInfo.total,\r\n                data: this.data,\r\n                pageIndex: this.pageInfo.pageIndex\r\n            });\r\n            this._tableCmpRef = cmf;\r\n        }\r\n    }\r\n\r\n    @Input() cascade = {\r\n        enable: false,\r\n        up: false,\r\n        down: false\r\n    };\r\n\r\n    @Input() treeInfo: TreeInfo;\r\n\r\n    /** æ å½¢å¸®å©æ°æ®å è½½æ¹å¼ï¼ default: åç½®åæ°ï¼ loadall: å è½½ææ layerloadï¼åå±å è½½ */\r\n    @Input() loadTreeDataType: 'default' | 'loadall' | 'layerload' = 'default';\r\n         /** å¯ç¨æé å®æ´æ è¿æ»¤ */\r\n    @Input() enableFullTree = true;\r\n\r\n    @Output() pageChanged = new EventEmitter();\r\n    @Output() pageSizeChanged = new EventEmitter();\r\n\r\n    ownSelections: any;\r\n    loadFinish = false;\r\n    pageInfo: any = { pageSize: 20, pageIndex: 1, total: 0 };\r\n    private tt$ = new Subject();\r\n    private loaded$ = new Subject();\r\n    private _columns: any[];\r\n    private _pagination: boolean;\r\n    private _tableCmpRef: any;\r\n    private _treeCmpRef: any;\r\n    private _searchKeyWords = '';\r\n\r\n    loadDataType = 'all';\r\n\r\n    constructor(\r\n        public el: ElementRef,\r\n        public cdr: ChangeDetectorRef,\r\n        @Inject(DOCUMENT) public document: any,\r\n        public render: Renderer2,\r\n        public comboService: ComboService,\r\n        public injector: Injector\r\n    ) {\r\n        super(el, cdr, document, render, comboService, injector);\r\n    }\r\n\r\n    ngOnInit() {\r\n        super.ngOnInit();\r\n\r\n        this.treeClientSearch.pipe(debounceTime(300)).subscribe((value: string) => {\r\n            if (!this.remoteSearch && this.treeCmpRef) {\r\n                this.treeCmpRef.searchHandle.search(this.textField, value);\r\n            }\r\n        });\r\n\r\n        this.comboService.treeInfo$.subscribe( (t: any) => {\r\n            if (t) {\r\n                if (this.loadTreeDataType === 'default') {\r\n                    this.loadDataType = t.loadDataType;\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    protected onSelectionsChange(selections: any[]) {\r\n        if (this.displayType === 'LOOKUPLIST') {\r\n            if (!this.multiSelect) {\r\n                this.ownSelections = selections[0] ? selections[0] : {};\r\n            } else {\r\n                this.ownSelections = {};\r\n                this.comboService.selections.forEach(item => {\r\n                    this.ownSelections[item[this.idField]] = item;\r\n                });\r\n            }\r\n            this.pageInfo = { ...this.pageInfo, ...this.comboService.pageInfo };\r\n            this.loadFinish = true;\r\n            this.cdr.detectChanges();\r\n            this.loaded$.next(this.pageInfo);\r\n        } else {\r\n            if (this.treeCmpRef) {\r\n                this.initTreeData();\r\n            } else {\r\n                this.tt$.pipe(take(1)).subscribe((cmf: TreeTableComponent) => {\r\n                    this.treeCmpRef = cmf;\r\n                    this.initTreeData();\r\n                    // cmf.checkedNodes(ids, true, false);\r\n                    // cmf.updateSerializedValue();\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    private initTreeData() {\r\n        const __selections = this.comboService.selections.filter(n => n !== null && n !== undefined);\r\n        const ids = [];\r\n        this.ownSelections = __selections.map(item => {\r\n            ids.push(item[this.idField]);\r\n            return { data: item, id: item[this.idField] };\r\n        });\r\n        this.treeCmpRef.selections = this.ownSelections;\r\n        this.treeCmpRef.checkeds = this.ownSelections;\r\n\r\n        if (this.comboService.data && this.comboService.data.length) {\r\n            if (this.treeCmpRef.checkValues && this.treeCmpRef.checkValues.length) {\r\n                if (this.multiSelect) {\r\n                    this.treeCmpRef.checkedNodes(this.treeCmpRef.checkValues);\r\n                    this.treeCmpRef.selectNodes(this.treeCmpRef.checkValues);\r\n                } else {\r\n                    this.treeCmpRef.selectNodes(this.treeCmpRef.checkValues);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    protected initDatasChangeAction() { }\r\n\r\n    private isTree() {\r\n        return this.displayType === 'LOOKUPTREELIST';\r\n    }\r\n\r\n\r\n    updateMappingFieldValue(clearMapFields = false) {\r\n        if ( this.ngControl && this.ngControl.formDirective &&\r\n            this.ngControl.formDirective.form && this.ngControl.formDirective.form.bindingData\r\n        ) {\r\n            const bindingData = this.ngControl.formDirective.form.bindingData;\r\n            const bindingPath = this.ngControl.formDirective.form.bindingPath;\r\n            let pathArr = [];\r\n            if (bindingPath) {\r\n                pathArr = bindingPath.split('/').filter(n => n !== '');\r\n            }\r\n            this.mappingField = this.mappingField ? this.mappingField : {};\r\n            if (this.mapFields) {\r\n                const helpFields = Object.keys(this.mapFields);\r\n                helpFields.forEach((f: any) => {\r\n                    const fieldNames = this.mapFields[f] ? this.mapFields[f] : '';\r\n                    let value = '';\r\n                    if (!clearMapFields) {\r\n                        const text = this.comboService.selections && this.comboService.selections.map(item => {\r\n                            return this.comboService.getValueByObj(f, item);\r\n                        }).filter(n => n !== null).join(this.separator);\r\n                        // value = text ? text : this.displayText ? this.displayText : '';\r\n                        value = text || '';\r\n                    }\r\n\r\n                    if (fieldNames) {\r\n                        fieldNames.split(',').forEach((fieldName: any) => {\r\n                            let _val = value;\r\n                            if (this.nosearch && fieldName === this.ngControl.name) {\r\n                                _val = this.displayText;\r\n                            }\r\n                            if (bindingData.setValue) {\r\n                                bindingData.setValue( pathArr.concat(fieldName.split('.')), _val, true, true);\r\n                            } else {\r\n                                this.commonUtils.setValue(bindingData, fieldName, value);\r\n                            }\r\n                        });\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    updateSelectedValues() {\r\n        if (\r\n            this.ngControl &&\r\n            this.ngControl.formDirective &&\r\n            this.ngControl.formDirective.form &&\r\n            this.ngControl.formDirective.form.bindingData\r\n        ) {\r\n            const bindingData = this.ngControl.formDirective.form.bindingData;\r\n            const bindingPath = this.ngControl.formDirective.form.bindingPath;\r\n            let pathArr = [];\r\n            if (bindingPath) {\r\n                pathArr = bindingPath.split('/').filter(n => n !== '');\r\n            }\r\n            let targetField = this.mappingField ? this.mapFields[this.idField] : '';\r\n\r\n            if (targetField && targetField.indexOf(',') > -1) {\r\n                targetField = targetField.split(',')[0];\r\n            }\r\n\r\n            // this.mappingField = this.mappingField ? this.mappingField : '';\r\n            if (targetField && bindingData.getValue) {\r\n                this.selectedValues = bindingData.getValue(pathArr.concat(targetField.split('.'))) || '';\r\n            } else if (targetField) {\r\n                this.selectedValues = this.commonUtils.getValue(targetField, bindingData) || '';\r\n            }\r\n        }\r\n    }\r\n\r\n    onSelectRows(row) {\r\n        if (this.displayType === 'LOOKUPLIST') {\r\n            const { data, index } = row;\r\n            this.comboService.selectItem(data, index);\r\n            this.selectChange.emit({ data, index, instance: this });\r\n        } else if (this.displayType === 'LOOKUPTREELIST') {\r\n            const { node } = row;\r\n            if (row.nodes) {\r\n                this.comboService.selectItem(row.nodes.map(n => n.data));\r\n            } else {\r\n                this.comboService.selectItem(node.data);\r\n            }\r\n            this.selectChange.emit(node);\r\n        }\r\n\r\n        this.updateTextAndValues();\r\n\r\n        if (!this.multiSelect) {\r\n            this.comboService.isOpen$.next(false);\r\n        }\r\n    }\r\n\r\n    onUnSelectRows(row) {\r\n        if (this.displayType === 'LOOKUPLIST') {\r\n            const { data } = row;\r\n            this.comboService.unSelectItem(data);\r\n        } else if (this.displayType === 'LOOKUPTREELIST') {\r\n            const { node } = row;\r\n            this.comboService.unSelectItem(node.data);\r\n            this.selectChange.emit(node);\r\n        }\r\n\r\n        this.updateTextAndValues();\r\n    }\r\n\r\n    onCheckAll(ev) {\r\n        let state;\r\n        let selections = [];\r\n        if (this.displayType === 'LOOKUPTREELIST') {\r\n            state = ev.checked;\r\n            selections = this.treeCmpRef.state.rowNodes\r\n                            .filter(n => n.node.selectable === undefined || n.node.selectable )\r\n                            .map(r => r.node.data);\r\n        } else {\r\n            state = ev;\r\n            selections = this.data;\r\n        }\r\n\r\n        if (state) {\r\n            this.comboService.selectAll(selections);\r\n        } else {\r\n            this.comboService.unSelectAll(selections);\r\n        }\r\n\r\n        this.updateTextAndValues();\r\n    }\r\n\r\n    private updateTextAndValues() {\r\n        this.selectedValues = this.comboService.getValue(this.idField);\r\n        const _displayText = this.comboService.getValue(this.textField);\r\n        this.onValueChange({ text: _displayText, value: this.selectedValues, selections: this.selections });\r\n    }\r\n\r\n    onKeyup($event) {\r\n        // console.log('key up', $event);\r\n\r\n    }\r\n\r\n    onKeydown($event: KeyboardEvent) {\r\n        // console.log('key down', $event);\r\n        if ($event.code === 'Tab') {\r\n            this.hide(false);\r\n        }\r\n    }\r\n\r\n    onPageChanged(event) {\r\n        if (this.uri) {\r\n            this.getData(event).subscribe(data => this.comboService.loadLookUpDataTable(data, !!event.sortName));\r\n        } else {\r\n            this.pageChanged.emit(event);\r\n        }\r\n    }\r\n\r\n    onPageSizeChanged(event) {\r\n        if (this.uri) {\r\n            this.getData(event).subscribe(data => this.comboService.loadLookUpDataTable(data, !!event.sortName));\r\n        } else {\r\n            this.pageSizeChanged.emit(event);\r\n        }\r\n    }\r\n\r\n    onColumnSorted(event: { sortName: string; sortOrder: any }) {\r\n        const { sortName, sortOrder } = { ...event };\r\n        this.getData({ sortName, sortOrder }, 'search').subscribe(data => {\r\n            this.comboService.loadLookUpDataTable(data, true);\r\n        });\r\n    }\r\n\r\n    onClear() {\r\n        this.ownSelections = [];\r\n        if (this.isTree() && this.treeCmpRef) {\r\n            this.treeCmpRef.clearAll();\r\n        }\r\n        super.onClear();\r\n    }\r\n\r\n    getData(event?: any, type = 'all') {\r\n        event = event || {};\r\n        if (this._searchKeyWords) {\r\n            event.search = {\r\n                field: '*',\r\n                value: this._searchKeyWords\r\n            };\r\n        }\r\n\r\n        const params = this.buildQueryParams(event, type);\r\n        return this.comboService.getData(params);\r\n    }\r\n\r\n    /** æéæ¥è¯¢åæ° */\r\n    private buildQueryParams(event?: any, type = 'all') {\r\n        const params: any = {};\r\n\r\n        const searchParam = { category: type };\r\n        if (event) {\r\n            if (event.pageInfo) {\r\n                params['pageIndex'] = event.pageInfo.pageIndex;\r\n                params['pageSize'] = event.pageInfo.pageSize;\r\n            }\r\n\r\n            if (event.search) {\r\n                searchParam['searchField'] = event.search.field;\r\n                searchParam['searchValue'] = event.search.value;\r\n            }\r\n\r\n            if (event.sortName) {\r\n                searchParam['sortName'] = event.sortName;\r\n            }\r\n            if (event.sortOrder) {\r\n                searchParam['sortOrder'] = event.sortOrder;\r\n            }\r\n        }\r\n\r\n        params['searchValue'] = JSON.stringify(searchParam);\r\n        if (this.customData) {\r\n            params['customData'] = this.customData;\r\n        }\r\n\r\n        return params;\r\n    }\r\n\r\n    filterDataOnServer(value, field) {\r\n        if (!this.isOpen) {\r\n            return;\r\n        }\r\n        let search = { search: { field, value }};\r\n        if (value) {\r\n            this._searchKeyWords = value;\r\n\r\n        } else {\r\n            this._searchKeyWords = '';\r\n            search = null;\r\n        }\r\n        const params = this.buildQueryParams(search, 'search' );\r\n        this.comboService.serachValue$.next(params);\r\n    }\r\n\r\n    onExpandNode($event: TreeNode) {\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { ComboLookupComponent } from './combo-lookup.component';\r\nimport { DataTableModule } from '@farris/ui-datatable';\r\nimport { TreeTableModule } from '@farris/ui-treetable';\r\nimport { InputGroupModule } from '@farris/ui-input-group';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { LoadingModule } from '@farris/ui-loading';\r\nimport { ComboLocaleService } from '@farris/ui-combo-list';\r\n@NgModule({\r\n  declarations: [ComboLookupComponent],\r\n  imports: [\r\n    CommonModule, FormsModule, DataTableModule,\r\n    TreeTableModule, InputGroupModule,\r\n    LoadingModule.forRoot()\r\n  ],\r\n  exports: [ComboLookupComponent],\r\n  providers: [ComboLocaleService]\r\n})\r\nexport class ComboLookupModule { }\r\n"]}