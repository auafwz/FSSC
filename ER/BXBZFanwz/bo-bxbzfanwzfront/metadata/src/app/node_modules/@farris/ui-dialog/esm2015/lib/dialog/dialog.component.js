/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2019-08-06 08:31:57
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-08-15 16:06:58
 * @QQ: 1055818239
 * @Version: v0.0.1
 */
import { Component, Input, ViewChild, Renderer2, ElementRef, Output, EventEmitter, TemplateRef } from '@angular/core';
import { Observable } from 'rxjs';
import { AngularDraggableDirective } from '@farris/ui-draggable';
import { ModalDirective } from '@farris/ui-modal';
import { ContentChild } from '@angular/core';
export class DialogComponent {
    /**
     * @param {?} render2
     * @param {?} el
     */
    constructor(render2, el) {
        this.render2 = render2;
        this.el = el;
        /**
         * 窗口标题
         */
        this.title = '我是标题';
        /**
         * 标题图标
         */
        this.iconCls = undefined;
        /**
         * 宽度
         */
        this.width = 300;
        /**
         * 高度
         */
        this.height = 200;
        this.minWidth = 100;
        this.minHeight = 100;
        this.maxWidth = null;
        this.maxHeight = null;
        /**
         * 显示底部按钮区域，默认显示
         */
        this.showButtons = true;
        /**
         * 显示右上角关闭按钮，默认显示
         */
        this.showCloseButton = true;
        /**
         * 显示最大化按钮，默认显示
         */
        this.showMaxButton = true;
        /**
         * 显示最小化按钮，默认不显示, 显示出来也没有用
         */
        this.showMinButton = false;
        /**
         * 启用拖拽改变尺寸大小
         */
        this.resizable = true;
        /**
         * 启用拖动窗口
         */
        this.draggable = true;
        /**
         * 按钮对齐方式
         */
        this.buttonAlign = 'center';
        this.scrollConfig = {};
        this.opened = new EventEmitter();
        this.closed = new EventEmitter();
        this.resized = new EventEmitter();
        this.resizing = new EventEmitter();
        this.maxed = new EventEmitter();
        this.widthChange = new EventEmitter();
        this.heightChange = new EventEmitter();
        this.enableScroll = true;
        /**
         * 标题栏高度
         */
        this.dialogHeaderHeight = 38;
        /**
         * 按钮区高度
         */
        this.dialogFooterHeight = 50;
        this.parentElement = null;
        this.isMax = false; // 是否最大窗口
        // 记录上次的高度
        this.hostId = '';
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.hostId = `farris-dialog_${new Date().getTime()}`;
        this.render2.setProperty(this.el.nativeElement, 'id', this.hostId);
        if (!this.beforeOpen) {
            this.beforeOpen = (/**
             * @return {?}
             */
            () => true);
        }
        if (!this.beforeClose) {
            this.beforeClose = (/**
             * @return {?}
             */
            () => true);
        }
        this.modal.onShown.subscribe((/**
         * @return {?}
         */
        () => {
            // const zindex = this.modal.backdrop.location.nativeElement;
            // this.render2.setStyle(this.el.nativeElement, 'position', 'absolute');
            // this.render2.setStyle(this.el.nativeElement, 'z-index', '1041');
            this.opened.emit();
        }));
        this.modal.onHidden.subscribe((/**
         * @return {?}
         */
        () => this.closed.emit()));
        this.checkDialogSize();
        setTimeout((/**
         * @return {?}
         */
        () => {
            if (this.parentElement) {
                this.parentElement.appendChild(this.el.nativeElement);
            }
            else {
                document.body.appendChild(this.el.nativeElement);
            }
        }), 100);
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        setTimeout((/**
         * @return {?}
         */
        () => {
            this.destroy();
        }), 150);
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        this.dlgHeaderLineHeight = this.getDialogHeaderLineHeight();
        this.resetPosition();
    }
    /**
     * @return {?}
     */
    destroy() {
        if (!this.parentElement) {
            if (document.body.querySelector(`#${this.hostId}`)) {
                document.body.removeChild(this.el.nativeElement);
            }
        }
        else {
            if (this.parentElement.querySelector(`#${this.hostId}`)) {
                this.parentElement.removeChild(this.el.nativeElement);
            }
        }
    }
    /**
     * @private
     * @return {?}
     */
    getDialogHeaderLineHeight() {
        return this.modalHeader.nativeElement.getBoundingClientRect().height;
        // const paddingTop = parseInt(modalHeaderStyles.paddingTop.replace('px', ''), 10);
        // const paddingBottom = parseInt(modalHeaderStyles.paddingBottom.replace('px', ''), 10);
        // return this.modalHeader.nativeElement.get
    }
    /**
     * @return {?}
     */
    get size() {
        /** @type {?} */
        let contentHeight = this.height - this.dialogHeaderHeight;
        if (this.showButtons) {
            contentHeight = contentHeight - this.dialogFooterHeight;
        }
        return {
            width: this.width,
            height: this.height,
            contentHeight,
            contentWidth: this.width
        };
    }
    /**
     * @private
     * @param {?} width
     * @param {?} height
     * @return {?}
     */
    _checkDialogSize(width, height) {
        // 可视区域尺寸
        /** @type {?} */
        const winSize = {
            width: document.body.offsetWidth,
            height: window.innerHeight
        };
        if (this.parentElement) {
            winSize.width = this.parentElement.offsetWidth;
            winSize.height = this.parentElement.offsetHeight;
        }
        if (winSize.width && winSize.width < width) {
            width = winSize.width;
        }
        if (winSize.height && winSize.height < height) {
            height = winSize.height;
        }
        return {
            width,
            height
        };
    }
    /**
     * @private
     * @return {?}
     */
    checkDialogSize() {
        /** @type {?} */
        const newSize = this._checkDialogSize(this.width, this.height);
        if (this.width !== newSize.width) {
            this.width = newSize.width - 20;
            this.widthChange.emit(this.width);
        }
        if (this.height !== newSize.height) {
            this.height = newSize.height - 20;
            this.heightChange.emit(this.height);
        }
    }
    /**
     * @return {?}
     */
    updateModalBodyHeight() {
        /** @type {?} */
        const contentEl = this.el.nativeElement.querySelector('.modal-body');
        /** @type {?} */
        const contentHeight = this.size.contentHeight;
        this.render2.setStyle(contentEl, 'height', contentHeight + 'px');
    }
    /**
     * @return {?}
     */
    resetPosition() {
        /** @type {?} */
        const marginLeft = Number.parseInt('' + -this.width / 2) + 'px';
        /** @type {?} */
        const marginTop = Number.parseInt('' + -this.height / 2) + 'px';
        /** @type {?} */
        const dialogEl = this.el.nativeElement.querySelector('.modal-dialog');
        /** @type {?} */
        const contentEl = this.el.nativeElement.querySelector('.modal-body');
        /** @type {?} */
        const footerEl = this.el.nativeElement.querySelector('.modal-footer');
        this.render2.setStyle(dialogEl, 'margin-left', marginLeft);
        this.render2.setStyle(dialogEl, 'margin-top', marginTop);
        /** @type {?} */
        const contentHeight = this.size.contentHeight;
        this.render2.setStyle(contentEl, 'height', contentHeight + 'px');
        this.render2.setStyle(contentEl, 'overflow', 'hidden');
        this.render2.setStyle(dialogEl, 'transform', 'translate3d(0px, 0px, 0px)');
    }
    /**
     * @private
     * @param {?} flag
     * @return {?}
     */
    openDialog(flag) {
        if (flag) {
            this.resetPosition();
            this.draggbar.resetPosition();
            this.modal.show();
        }
    }
    /**
     * @private
     * @param {?} canClose
     * @return {?}
     */
    closeDialog(canClose) {
        if (canClose) {
            this.modal.hide();
        }
    }
    /**
     * @return {?}
     */
    show() {
        /** @type {?} */
        const result = this.beforeOpen();
        if (typeof result === 'boolean') {
            this.openDialog(result);
        }
        else {
            if (result instanceof Observable) {
                result.subscribe((/**
                 * @param {?} flag
                 * @return {?}
                 */
                (flag) => {
                    this.openDialog(flag);
                }));
            }
            else {
                if (result instanceof Promise) {
                    result.then((/**
                     * @param {?} flag
                     * @return {?}
                     */
                    (flag) => {
                        this.openDialog(flag);
                    }));
                }
            }
        }
    }
    /**
     * @param {?=} $event
     * @return {?}
     */
    close($event) {
        if ($event) {
            $event.stopPropagation();
        }
        /** @type {?} */
        const result = this.beforeClose();
        if (typeof result === 'boolean') {
            this.closeDialog(result);
        }
        else {
            if (result instanceof Observable) {
                result.subscribe((/**
                 * @param {?} flag
                 * @return {?}
                 */
                (flag) => {
                    this.closeDialog(flag);
                }));
            }
            else {
                if (result instanceof Promise) {
                    result.then((/**
                     * @param {?} flag
                     * @return {?}
                     */
                    (flag) => {
                        this.closeDialog(flag);
                    }));
                }
            }
        }
    }
    /**
     * @param {?} size
     * @return {?}
     */
    reSize(size) {
        if (size.width) {
            this.width = size.width;
        }
        if (size.height) {
            this.height = size.height;
        }
        this.resetPosition();
        this.draggbar.resetPosition();
        this.widthChange.emit(this.width);
        this.heightChange.emit(this.height);
        this.resized.emit({ size: { width: this.width, height: this.height } });
    }
    /**
     * @param {?} opts
     * @return {?}
     */
    onResizing(opts) {
        opts.size.width = opts.size.width < 100 ? 100 : opts.size.width;
        opts.size.height = opts.size.height < 100 ? 100 : opts.size.height;
        this.width = opts.size.width;
        this.height = opts.size.height;
        this.resizing.emit(opts);
    }
    /**
     * @param {?} opts
     * @return {?}
     */
    resizeStop(opts) {
        opts.size.width = opts.size.width < 100 ? 100 : opts.size.width;
        opts.size.height = opts.size.height < 100 ? 100 : opts.size.height;
        this.width = opts.size.width;
        this.height = opts.size.height;
        this.updateModalBodyHeight();
        this.widthChange.emit(this.width);
        this.heightChange.emit(this.height);
        this.resized.emit(opts);
    }
    /**
     * @param {?} el
     * @return {?}
     */
    dropdown(el) {
        // const rect = el.getBoundingClientRect();
        // this.render2.removeStyle(el, 'margin-top');
        // this.render2.removeStyle(el, 'margin-left');
        // this.render2.setStyle(el, 'top', `${rect.top}px`);
        // this.render2.setStyle(el, 'left', `${rect.left}px`);
        // this.render2.removeStyle(el, 'transform');
        // this.render2.removeStyle(el, '-webkit-transform');
        // this.render2.removeStyle(el, '-ms-transform');
        // this.render2.removeStyle(el, '-moz-transform');
        // this.render2.removeStyle(el, '-o-transform');
    }
    /**
     * @return {?}
     */
    maxDialog() {
        // console.log(`${document.scrollingElement.clientWidth}`)
        this.originalWidth = this.width;
        this.originalHeight = this.height;
        this.width = (document.scrollingElement ? document.scrollingElement : document.documentElement)['clientWidth'] - 20;
        this.height = (document.scrollingElement ? document.scrollingElement : document.documentElement)['clientHeight'] - 20;
        this.draggable = false;
        this.resizable = false;
        this.isMax = true;
        this.resetPosition();
        this.resized.emit({ size: { width: this.width, height: this.height } });
        this.maxed.emit({ size: { width: this.width, height: this.height } });
    }
    /**
     * @return {?}
     */
    revertDialog() {
        this.isMax = false;
        this.width = this.originalWidth;
        this.height = this.originalHeight;
        this.draggable = true;
        this.resizable = true;
        this.resetPosition();
        this.draggbar.resetPosition();
        this.resized.emit({ size: { width: this.width, height: this.height } });
        this.maxed.emit({ size: { width: this.width, height: this.height } });
    }
    /**
     * @return {?}
     */
    changeDialogSize() {
        if (this.isMax) {
            this.revertDialog();
        }
        else {
            this.maxDialog();
        }
    }
}
DialogComponent.decorators = [
    { type: Component, args: [{
                selector: 'farris-dialog',
                template: "<div #backdropEl class=\"modal fade farris-modal\" bsModal #staticModal=\"bs-modal\" [config]=\"{backdrop: 'static'}\"\r\n    tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"dialog-static-name\">\r\n    <div [ngDraggable]=\"draggable\" [ngResizable]=\"resizable\" rzHandles=\"all\" [handle]=\"header\"\r\n        (rzStop)=\"resizeStop($event)\" (rzResizing)=\"onResizing($event)\" (stopped)=\"dropdown($event)\"\r\n        [rzMinWidth]=\"minWidth\" [rzMaxWidth]=\"maxWidth\" [rzMinHeight]=\"minHeight\" [rzMaxHeight]=\"maxHeight\"\r\n        [inBounds]=\"true\" [bounds]=\"backdropEl\" class=\"modal-dialog\" [style.width]=\"width + 'px'\"\r\n        [style.height]=\"height + 'px'\">\r\n        <div #modalContent class=\"modal-content\">\r\n            <div #header class=\"modal-header\">\r\n                <div class=\"modal-title\">\r\n                    <span *ngIf=\"iconCls\" [class]=\"iconCls\"></span>\r\n                    <span class=\"modal-title-label\">{{ title }}</span>\r\n                </div>\r\n                <div class=\"actions\">\r\n\r\n                    <ul>\r\n                        <li *ngIf=\"toolTemplate\">\r\n                            <ng-template [ngTemplateOutlet]=\"toolTemplate\">\r\n\r\n                            </ng-template>\r\n                        </li>\r\n                        <li *ngIf=\"showMinButton\" class=\"f-btn-icon f-bare\"><span class=\"f-icon modal_minimize\"></span>\r\n                        </li>\r\n                        <li *ngIf=\"showMaxButton\" (click)=\"changeDialogSize()\" class=\"f-btn-icon f-bare\"><span\r\n                                class=\"f-icon modal_maximize\" [class.modalrevert]=\"isMax\"></span></li>\r\n                        <li *ngIf=\"showCloseButton\" (click)=\"close($event)\" class=\"f-btn-icon f-bare\"><span\r\n                                class=\"f-icon modal_close\"></span></li>\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n            <div class=\"modal-body\">\r\n                <perfect-scrollbar [disabled]=\"!enableScroll\" [config]=\"scrollConfig\">\r\n                    <ng-content></ng-content>\r\n                </perfect-scrollbar>\r\n            </div>\r\n\r\n            <div class=\"modal-footer\" *ngIf=\"showButtons\" [style.textAlign]=\"buttonAlign\">\r\n                <ng-container [ngTemplateOutlet]=\"buttons\"></ng-container>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>",
                styles: [""]
            }] }
];
/** @nocollapse */
DialogComponent.ctorParameters = () => [
    { type: Renderer2 },
    { type: ElementRef }
];
DialogComponent.propDecorators = {
    title: [{ type: Input }],
    iconCls: [{ type: Input }],
    width: [{ type: Input }],
    height: [{ type: Input }],
    minWidth: [{ type: Input }],
    minHeight: [{ type: Input }],
    maxWidth: [{ type: Input }],
    maxHeight: [{ type: Input }],
    showButtons: [{ type: Input }],
    showCloseButton: [{ type: Input }],
    showMaxButton: [{ type: Input }],
    showMinButton: [{ type: Input }],
    resizable: [{ type: Input }],
    draggable: [{ type: Input }],
    buttonAlign: [{ type: Input }],
    scrollConfig: [{ type: Input }],
    beforeOpen: [{ type: Input }],
    beforeClose: [{ type: Input }],
    modal: [{ type: ViewChild, args: [ModalDirective,] }],
    draggbar: [{ type: ViewChild, args: [AngularDraggableDirective,] }],
    opened: [{ type: Output }],
    closed: [{ type: Output }],
    resized: [{ type: Output }],
    resizing: [{ type: Output }],
    maxed: [{ type: Output }],
    widthChange: [{ type: Output }],
    heightChange: [{ type: Output }],
    enableScroll: [{ type: Input }],
    buttons: [{ type: Input }],
    dialogHeaderHeight: [{ type: Input }],
    dialogFooterHeight: [{ type: Input }],
    parentElement: [{ type: Input }],
    toolTemplate: [{ type: ContentChild, args: ['toolTemplate',] }],
    modalContent: [{ type: ViewChild, args: ['modalContent',] }],
    modalHeader: [{ type: ViewChild, args: ['header',] }]
};
if (false) {
    /**
     * 窗口标题
     * @type {?}
     */
    DialogComponent.prototype.title;
    /**
     * 标题图标
     * @type {?}
     */
    DialogComponent.prototype.iconCls;
    /**
     * 宽度
     * @type {?}
     */
    DialogComponent.prototype.width;
    /**
     * 高度
     * @type {?}
     */
    DialogComponent.prototype.height;
    /** @type {?} */
    DialogComponent.prototype.minWidth;
    /** @type {?} */
    DialogComponent.prototype.minHeight;
    /** @type {?} */
    DialogComponent.prototype.maxWidth;
    /** @type {?} */
    DialogComponent.prototype.maxHeight;
    /**
     * 显示底部按钮区域，默认显示
     * @type {?}
     */
    DialogComponent.prototype.showButtons;
    /**
     * 显示右上角关闭按钮，默认显示
     * @type {?}
     */
    DialogComponent.prototype.showCloseButton;
    /**
     * 显示最大化按钮，默认显示
     * @type {?}
     */
    DialogComponent.prototype.showMaxButton;
    /**
     * 显示最小化按钮，默认不显示, 显示出来也没有用
     * @type {?}
     */
    DialogComponent.prototype.showMinButton;
    /**
     * 启用拖拽改变尺寸大小
     * @type {?}
     */
    DialogComponent.prototype.resizable;
    /**
     * 启用拖动窗口
     * @type {?}
     */
    DialogComponent.prototype.draggable;
    /**
     * 按钮对齐方式
     * @type {?}
     */
    DialogComponent.prototype.buttonAlign;
    /** @type {?} */
    DialogComponent.prototype.scrollConfig;
    /** @type {?} */
    DialogComponent.prototype.beforeOpen;
    /** @type {?} */
    DialogComponent.prototype.beforeClose;
    /** @type {?} */
    DialogComponent.prototype.modal;
    /** @type {?} */
    DialogComponent.prototype.draggbar;
    /** @type {?} */
    DialogComponent.prototype.opened;
    /** @type {?} */
    DialogComponent.prototype.closed;
    /** @type {?} */
    DialogComponent.prototype.resized;
    /** @type {?} */
    DialogComponent.prototype.resizing;
    /** @type {?} */
    DialogComponent.prototype.maxed;
    /** @type {?} */
    DialogComponent.prototype.widthChange;
    /** @type {?} */
    DialogComponent.prototype.heightChange;
    /** @type {?} */
    DialogComponent.prototype.enableScroll;
    /** @type {?} */
    DialogComponent.prototype.buttons;
    /**
     * 标题栏高度
     * @type {?}
     */
    DialogComponent.prototype.dialogHeaderHeight;
    /**
     * 按钮区高度
     * @type {?}
     */
    DialogComponent.prototype.dialogFooterHeight;
    /** @type {?} */
    DialogComponent.prototype.parentElement;
    /** @type {?} */
    DialogComponent.prototype.toolTemplate;
    /** @type {?} */
    DialogComponent.prototype.isMax;
    /** @type {?} */
    DialogComponent.prototype.dlgHeaderLineHeight;
    /**
     * @type {?}
     * @private
     */
    DialogComponent.prototype.originalWidth;
    /**
     * @type {?}
     * @private
     */
    DialogComponent.prototype.originalHeight;
    /**
     * @type {?}
     * @private
     */
    DialogComponent.prototype.hostId;
    /** @type {?} */
    DialogComponent.prototype.modalContent;
    /** @type {?} */
    DialogComponent.prototype.modalHeader;
    /**
     * @type {?}
     * @private
     */
    DialogComponent.prototype.render2;
    /** @type {?} */
    DialogComponent.prototype.el;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlhbG9nLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktZGlhbG9nLyIsInNvdXJjZXMiOlsibGliL2RpYWxvZy9kaWFsb2cuY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7OztBQVFBLE9BQU8sRUFDSCxTQUFTLEVBQVUsS0FBSyxFQUFFLFNBQVMsRUFBRSxTQUFTLEVBQzlDLFVBQVUsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFFaEQsTUFBTSxlQUFlLENBQUM7QUFFdkIsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUVsQyxPQUFPLEVBQUUseUJBQXlCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUNqRSxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDbEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGVBQWUsQ0FBQztBQU83QyxNQUFNLE9BQU8sZUFBZTs7Ozs7SUE2RXhCLFlBQW9CLE9BQWtCLEVBQVMsRUFBYztRQUF6QyxZQUFPLEdBQVAsT0FBTyxDQUFXO1FBQVMsT0FBRSxHQUFGLEVBQUUsQ0FBWTs7OztRQTFFcEQsVUFBSyxHQUFHLE1BQU0sQ0FBQzs7OztRQUdmLFlBQU8sR0FBVyxTQUFTLENBQUM7Ozs7UUFHNUIsVUFBSyxHQUFHLEdBQUcsQ0FBQzs7OztRQUVaLFdBQU0sR0FBRyxHQUFHLENBQUM7UUFFYixhQUFRLEdBQUcsR0FBRyxDQUFDO1FBRWYsY0FBUyxHQUFHLEdBQUcsQ0FBQztRQUVoQixhQUFRLEdBQVcsSUFBSSxDQUFDO1FBQ3hCLGNBQVMsR0FBVyxJQUFJLENBQUM7Ozs7UUFHekIsZ0JBQVcsR0FBRyxJQUFJLENBQUM7Ozs7UUFFbkIsb0JBQWUsR0FBRyxJQUFJLENBQUM7Ozs7UUFFdkIsa0JBQWEsR0FBRyxJQUFJLENBQUM7Ozs7UUFFckIsa0JBQWEsR0FBRyxLQUFLLENBQUM7Ozs7UUFHdEIsY0FBUyxH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QU0sRUFBRSxJQUFJLENBQUMsTUFBTSxFQUFFLEVBQUUsQ0FBQyxDQUFDO0lBQzVFLENBQUM7Ozs7O0lBRUQsVUFBVSxDQUFDLElBQVM7UUFDaEIsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQ2hFLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQztRQUVuRSxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO1FBQzdCLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUM7UUFDL0IsSUFBSSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUM7SUFDN0IsQ0FBQzs7Ozs7SUFFRCxVQUFVLENBQUMsSUFBUztRQUNoQixJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxHQUFHLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDaEUsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEdBQUcsR0FBRyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDO1FBRW5FLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUM7UUFDN0IsSUFBSSxDQUFDLE1BQU0sR0FB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Q2hDLHVDQUEyQjs7SUFFM0IscUNBQW9FOztJQUNwRSxzQ0FBcUU7O0lBRXJFLGdDQUFpRDs7SUFDakQsbUNBQTBFOztJQUUxRSxpQ0FBc0M7O0lBQ3RDLGlDQUFzQzs7SUFDdEMsa0NBQXVDOztJQUN2QyxtQ0FBd0M7O0lBQ3hDLGdDQUFxQzs7SUFDckMsc0NBQTJDOztJQUMzQyx1Q0FBNEM7O0lBRTVDLHVDQUE2Qjs7SUFFN0Isa0NBQW1DOzs7OztJQUduQyw2Q0FBaUM7Ozs7O0lBR2pDLDZDQUFpQzs7SUFHakMsd0NBQThCOztJQUc5Qix1Q0FBNkQ7O0lBQzdELGdDQUFjOztJQUNkLDhDQUF5Qjs7Ozs7SUFFekIsd0NBQThCOzs7OztJQUM5Qix5Q0FBK0I7Ozs7O0lBRS9CLGlDQUFvQjs7SUFDcEIsdUNBQW9EOztJQUNwRCxzQ0FBNkM7Ozs7O0lBRWpDLGtDQUEwQjs7SUFBRSw2QkFBcUIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBAQXV0aG9yOiDnlq/ni4Lnp4DmiY0oTHVjYXMgSHVhbmcpXHJcbiAqIEBEYXRlOiAyMDE5LTA4LTA2IDA4OjMxOjU3XHJcbiAqIEBMYXN0RWRpdG9yczog55av54uC56eA5omNKEx1Y2FzIEh1YW5nKVxyXG4gKiBATGFzdEVkaXRUaW1lOiAyMDE5LTA4LTE1IDE2OjA2OjU4XHJcbiAqIEBRUTogMTA1NTgxODIzOVxyXG4gKiBAVmVyc2lvbjogdjAuMC4xXHJcbiAqL1xyXG5pbXBvcnQge1xyXG4gICAgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBWaWV3Q2hpbGQsIFJlbmRlcmVyMixcclxuICAgIEVsZW1lbnRSZWYsIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBUZW1wbGF0ZVJlZixcclxuICAgIEFmdGVyVmlld0luaXQsIFNpbXBsZUNoYW5nZXMsIE9uQ2hhbmdlcywgT25EZXN0cm95XHJcbn0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcblxyXG5pbXBvcnQgeyBPYnNlcnZhYmxlIH0gZnJvbSAncnhqcyc7XHJcblxyXG5pbXBvcnQgeyBBbmd1bGFyRHJhZ2dhYmxlRGlyZWN0aXZlIH0gZnJvbSAnQGZhcnJpcy91aS1kcmFnZ2FibGUnO1xyXG5pbXBvcnQgeyBNb2RhbERpcmVjdGl2ZSB9IGZyb20gJ0BmYXJyaXMvdWktbW9kYWwnO1xyXG5pbXBvcnQgeyBDb250ZW50Q2hpbGQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdmYXJyaXMtZGlhbG9nJyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi9kaWFsb2cuY29tcG9uZW50Lmh0bWwnLFxyXG4gICAgc3R5bGVVcmxzOiBbJy4vZGlhbG9nLmNvbXBvbmVudC5jc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgRGlhbG9nQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBBZnRlclZpZXdJbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSB7XHJcblxyXG4gICAgLyoqIOeql+WPo+agh+mimCAqL1xyXG4gICAgQElucHV0KCkgdGl0bGUgPSAn5oiR5piv5qCH6aKYJztcclxuXHJcbiAgICAvKiog5qCH6aKY5Zu+5qCHICovXHJcbiAgICBASW5wdXQoKSBpY29uQ2xzOiBzdHJpbmcgPSB1bmRlZmluZWQ7XHJcblxyXG4gICAgLyoqIOWuveW6piAqL1xyXG4gICAgQElucHV0KCkgd2lkdGggPSAzMDA7XHJcbiAgICAvKiog6auY5bqmICovXHJcbiAgICBASW5wdXQoKSBoZWlnaHQgPSAyMDA7XHJcblxyXG4gICAgQElucHV0KCkgbWluV2lkdGggPSAxMDA7XHJcblxyXG4gICAgQElucHV0KCkgbWluSGVpZ2h0ID0gMTAwO1xyXG5cclxuICAgIEBJbnB1dCgpIG1heFdpZHRoOiBudW1iZXIgPSBudWxsO1xyXG4gICAgQElucHV0KCkgbWF4SGVpZ2h0OiBudW1iZXIgPSBudWxsO1xyXG5cclxuICAgIC8qKiDmmL7npLrlupXpg6jmjInpkq7ljLrln5/vvIzpu5jorqTmmL7npLogKi9cclxuICAgIEBJbnB1dCgpIHNob3dCdXR0b25zID0gdHJ1ZTtcclxuICAgIC8qKiDmmL7npLrlj7PkuIrop5LlhbPpl63mjInpkq7vvIzpu5jorqTmmL7npLogKi9cclxuICAgIEBJbnB1dCgpIHNob3dDbG9zZUJ1dHRvbiA9IHRydWU7XHJcbiAgICAvKiog5pi+56S65pyA5aSn5YyW5oyJ6ZKu77yM6buY6K6k5pi+56S6ICovXHJcbiAgICBASW5wdXQoKSBzaG93TWF4QnV0dG9uID0gdHJ1ZTtcclxuICAgIC8qKiDmmL7npLrmnIDlsI/ljJbmjInpkq7vvIzpu5jorqTkuI3mmL7npLosIOaYvuekuuWHuuadpeS5n+ayoeacieeUqCAqL1xyXG4gICAgQElucHV0KCkgc2hvd01pbkJ1dHRvbiA9IGZhbHNlO1xyXG5cclxuICAgIC8qKiDlkK/nlKjmi5bmi73mlLnlj5jlsLrlr7jlpKflsI8gKi9cclxuICAgIEBJbnB1dCgpIHJlc2l6YWJsZSA9IHRydWU7XHJcbiAgICAvKiog5ZCv55So5ouW5Yqo56qX5Y+jICovXHJcbiAgICBASW5wdXQoKSBkcmFnZ2FibGUgPSB0cnVlO1xyXG5cclxuICAgIC8qKiDmjInpkq7lr7npvZDmlrnlvI8gKi9cclxuICAgIEBJbnB1dCgpIGJ1dHRvbkFsaWduID0gJ2NlbnRlcic7XHJcbiAgICBASW5wdXQoKSBzY3JvbGxDb25maWcgPSB7fTtcclxuXHJcbiAgICBASW5wdXQoKSBiZWZvcmVPcGVuOiAoKSA9PiBPYnNlcnZhYmxlPGFueT4gfCBQcm9taXNlPGFueT4gfCBib29sZWFuO1xyXG4gICAgQElucHV0KCkgYmVmb3JlQ2xvc2U6ICgpID0+IE9ic2VydmFibGU8YW55PiB8IFByb21pc2U8YW55PiB8IGJvb2xlYW47XHJcblxyXG4gICAgQFZpZXdDaGlsZChNb2RhbERpcmVjdGl2ZSkgbW9kYWw6IE1vZGFsRGlyZWN0aXZlO1xyXG4gICAgQFZpZXdDaGlsZChBbmd1bGFyRHJhZ2dhYmxlRGlyZWN0aXZlKSBkcmFnZ2JhcjogQW5ndWxhckRyYWdnYWJsZURpcmVjdGl2ZTtcclxuXHJcbiAgICBAT3V0cHV0KCkgb3BlbmVkID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIGNsb3NlZCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIEBPdXRwdXQoKSByZXNpemVkID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIHJlc2l6aW5nID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIG1heGVkID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIHdpZHRoQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIGhlaWdodENoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcbiAgICBASW5wdXQoKSBlbmFibGVTY3JvbGwgPSB0cnVlO1xyXG5cclxuICAgIEBJbnB1dCgpIGJ1dHRvbnM6IFRlbXBsYXRlUmVmPGFueT47XHJcblxyXG4gICAgLyoqIOagh+mimOagj+mrmOW6piAqL1xyXG4gICAgQElucHV0KCkgZGlhbG9nSGVhZGVySGVpZ2h0ID0gMzg7XHJcblxyXG4gICAgLyoqIOaMiemSruWMuumrmOW6piAqL1xyXG4gICAgQElucHV0KCkgZGlhbG9nRm9vdGVySGVpZ2h0ID0gNTA7XHJcblxyXG5cclxuICAgIEBJbnB1dCgpIHBhcmVudEVsZW1lbnQgPSBudWxsO1xyXG5cclxuICAgIC8qIHRlbXBsYXRlICovXHJcbiAgICBAQ29udGVudENoaWxkKCd0b29sVGVtcGxhdGUnKSB0b29sVGVtcGxhdGU6IFRlbXBsYXRlUmVmPGFueT47XHJcbiAgICBpc01heCA9IGZhbHNlOyAvLyDmmK/lkKbmnIDlpKfnqpflj6NcclxuICAgIGRsZ0hlYWRlckxpbmVIZWlnaHQ6IGFueTtcclxuXHJcbiAgICBwcml2YXRlIG9yaWdpbmFsV2lkdGg6IG51bWJlcjsgIC8vIOiusOW9leS4iuasoeeahOWuveW6plxyXG4gICAgcHJpdmF0ZSBvcmlnaW5hbEhlaWdodDogbnVtYmVyOyAvLyDorrDlvZXkuIrmrKHnmoTpq5jluqZcclxuXHJcbiAgICBwcml2YXRlIGhvc3RJZCA9ICcnO1xyXG4gICAgQFZpZXdDaGlsZCgnbW9kYWxDb250ZW50JykgbW9kYWxDb250ZW50OiBFbGVtZW50UmVmO1xyXG4gICAgQFZpZXdDaGlsZCgnaGVhZGVyJykgbW9kYWxIZWFkZXI6IEVsZW1lbnRSZWY7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSByZW5kZXIyOiBSZW5kZXJlcjIsIHB1YmxpYyBlbDogRWxlbWVudFJlZikgeyB9XHJcblxyXG4gICAgbmdPbkluaXQoKSB7XHJcbiAgICAgICAgdGhpcy5ob3N0SWQgPSBgZmFycmlzLWRpYWxvZ18ke25ldyBEYXRlKCkuZ2V0VGltZSgpfWA7XHJcbiAgICAgICAgdGhpcy5yZW5kZXIyLnNldFByb3BlcnR5KHRoaXMuZWwubmF0aXZlRWxlbWVudCwgJ2lkJywgdGhpcy5ob3N0SWQpO1xyXG4gICAgICAgIGlmICghdGhpcy5iZWZvcmVPcGVuKSB7XHJcbiAgICAgICAgICAgIHRoaXMuYmVmb3JlT3BlbiA9ICgpID0+IHRydWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoIXRoaXMuYmVmb3JlQ2xvc2UpIHtcclxuICAgICAgICAgICAgdGhpcy5iZWZvcmVDbG9zZSA9ICgpID0+IHRydWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICB0aGlzLm1vZGFsLm9uU2hvd24uc3Vic2NyaWJlKCgpID0+IHtcclxuICAgICAgICAgICAgLy8gY29uc3QgemluZGV4ID0gdGhpcy5tb2RhbC5iYWNrZHJvcC5sb2NhdGlvbi5uYXRpdmVFbGVtZW50O1xyXG4gICAgICAgICAgICAvLyB0aGlzLnJlbmRlcjIuc2V0U3R5bGUodGhpcy5lbC5uYXRpdmVFbGVtZW50LCAncG9zaXRpb24nLCAnYWJzb2x1dGUnKTtcclxuICAgICAgICAgICAgLy8gdGhpcy5yZW5kZXIyLnNldFN0eWxlKHRoaXMuZWwubmF0aXZlRWxlbWVudCwgJ3otaW5kZXgnLCAnMTA0MScpO1xyXG4gICAgICAgICAgICB0aGlzLm9wZW5lZC5lbWl0KCk7XHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIHRoaXMubW9kYWwub25IaWRkZW4uc3Vic2NyaWJlKCgpID0+IHRoaXMuY2xvc2VkLmVtaXQoKSk7XHJcblxyXG4gICAgICAgIHRoaXMuY2hlY2tEaWFsb2dTaXplKCk7XHJcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnBhcmVudEVsZW1lbnQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMucGFyZW50RWxlbWVudC5hcHBlbmRDaGlsZCh0aGlzLmVsLm5hdGl2ZUVsZW1lbnQpO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZCh0aGlzLmVsLm5hdGl2ZUVsZW1lbnQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSwgMTAwKTtcclxuICAgIH1cclxuXHJcbiAgICBuZ09uQ2hhbmdlcyhjaGFuZ2VzOiBTaW1wbGVDaGFuZ2VzKSB7XHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkRlc3Ryb3koKSB7XHJcbiAgICAgICAgc2V0VGltZW91dCgoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuZGVzdHJveSgpO1xyXG4gICAgICAgIH0sIDE1MCk7XHJcbiAgICB9XHJcblxyXG4gICAgbmdBZnRlclZpZXdJbml0KCkge1xyXG4gICAgICAgIHRoaXMuZGxnSGVhZGVyTGluZUhlaWdodCA9IHRoaXMuZ2V0RGlhbG9nSGVhZGVyTGluZUhlaWdodCgpO1xyXG4gICAgICAgIHRoaXMucmVzZXRQb3NpdGlvbigpO1xyXG4gICAgfVxyXG5cclxuICAgIGRlc3Ryb3koKSB7XHJcbiAgICAgICAgaWYgKCF0aGlzLnBhcmVudEVsZW1lbnQpIHtcclxuICAgICAgICAgICAgaWYgKGRvY3VtZW50LmJvZHkucXVlcnlTZWxlY3RvcihgIyR7dGhpcy5ob3N0SWR9YCkpIHtcclxuICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQodGhpcy5lbC5uYXRpdmVFbGVtZW50KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnBhcmVudEVsZW1lbnQucXVlcnlTZWxlY3RvcihgIyR7dGhpcy5ob3N0SWR9YCkpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMucGFyZW50RWxlbWVudC5yZW1vdmVDaGlsZCh0aGlzLmVsLm5hdGl2ZUVsZW1lbnQpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgZ2V0RGlhbG9nSGVhZGVyTGluZUhlaWdodCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy5tb2RhbEhlYWRlci5uYXRpdmVFbGVtZW50LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmhlaWdodDtcclxuICAgICAgICAvLyBjb25zdCBwYWRkaW5nVG9wID0gcGFyc2VJbnQobW9kYWxIZWFkZXJTdHlsZXMucGFkZGluZ1RvcC5yZXBsYWNlKCdweCcsICcnKSwgMTApO1xyXG4gICAgICAgIC8vIGNvbnN0IHBhZGRpbmdCb3R0b20gPSBwYXJzZUludChtb2RhbEhlYWRlclN0eWxlcy5wYWRkaW5nQm90dG9tLnJlcGxhY2UoJ3B4JywgJycpLCAxMCk7XHJcbiAgICAgICAgLy8gcmV0dXJuIHRoaXMubW9kYWxIZWFkZXIubmF0aXZlRWxlbWVudC5nZXRcclxuICAgIH1cclxuXHJcbiAgICBnZXQgc2l6ZSgpIHtcclxuICAgICAgICBsZXQgY29udGVudEhlaWdodCA9IHRoaXMuaGVpZ2h0IC0gdGhpcy5kaWFsb2dIZWFkZXJIZWlnaHQ7XHJcbiAgICAgICAgaWYgKHRoaXMuc2hvd0J1dHRvbnMpIHtcclxuICAgICAgICAgICAgY29udGVudEhlaWdodCA9IGNvbnRlbnRIZWlnaHQgLSB0aGlzLmRpYWxvZ0Zvb3RlckhlaWdodDtcclxuICAgICAgICB9XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgd2lkdGg6IHRoaXMud2lkdGgsXHJcbiAgICAgICAgICAgIGhlaWdodDogdGhpcy5oZWlnaHQsXHJcbiAgICAgICAgICAgIGNvbnRlbnRIZWlnaHQsXHJcbiAgICAgICAgICAgIGNvbnRlbnRXaWR0aDogdGhpcy53aWR0aFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBfY2hlY2tEaWFsb2dTaXplKHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyKSB7XHJcblxyXG4gICAgICAgIC8vIOWPr+inhuWMuuWfn+WwuuWvuFxyXG4gICAgICAgIGNvbnN0IHdpblNpemUgPSB7XHJcbiAgICAgICAgICAgIHdpZHRoOiBkb2N1bWVudC5ib2R5Lm9mZnNldFdpZHRoLFxyXG4gICAgICAgICAgICBoZWlnaHQ6IHdpbmRvdy5pbm5lckhlaWdodFxyXG4gICAgICAgIH07XHJcblxyXG4gICAgICAgIGlmICh0aGlzLnBhcmVudEVsZW1lbnQpIHtcclxuICAgICAgICAgICAgd2luU2l6ZS53aWR0aCA9IHRoaXMucGFyZW50RWxlbWVudC5vZmZzZXRXaWR0aDtcclxuICAgICAgICAgICAgd2luU2l6ZS5oZWlnaHQgPSB0aGlzLnBhcmVudEVsZW1lbnQub2Zmc2V0SGVpZ2h0O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHdpblNpemUud2lkdGggJiYgd2luU2l6ZS53aWR0aCA8IHdpZHRoKSB7XHJcbiAgICAgICAgICAgIHdpZHRoID0gd2luU2l6ZS53aWR0aDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh3aW5TaXplLmhlaWdodCAmJiB3aW5TaXplLmhlaWdodCA8IGhlaWdodCkge1xyXG4gICAgICAgICAgICBoZWlnaHQgPSB3aW5TaXplLmhlaWdodDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIHdpZHRoLFxyXG4gICAgICAgICAgICBoZWlnaHRcclxuICAgICAgICB9O1xyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgY2hlY2tEaWFsb2dTaXplKCkge1xyXG4gICAgICAgIGNvbnN0IG5ld1NpemUgPSB0aGlzLl9jaGVja0RpYWxvZ1NpemUodGhpcy53aWR0aCwgdGhpcy5oZWlnaHQpO1xyXG4gICAgICAgIGlmICh0aGlzLndpZHRoICE9PSBuZXdTaXplLndpZHRoKSB7XHJcbiAgICAgICAgICAgIHRoaXMud2lkdGggPSBuZXdTaXplLndpZHRoIC0gMjA7XHJcbiAgICAgICAgICAgIHRoaXMud2lkdGhDaGFuZ2UuZW1pdCh0aGlzLndpZHRoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmhlaWdodCAhPT0gbmV3U2l6ZS5oZWlnaHQpIHtcclxuICAgICAgICAgICAgdGhpcy5oZWlnaHQgPSBuZXdTaXplLmhlaWdodCAtIDIwO1xyXG4gICAgICAgICAgICB0aGlzLmhlaWdodENoYW5nZS5lbWl0KHRoaXMuaGVpZ2h0KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdXBkYXRlTW9kYWxCb2R5SGVpZ2h0KCkge1xyXG4gICAgICAgIGNvbnN0IGNvbnRlbnRFbCA9IHRoaXMuZWwubmF0aXZlRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcubW9kYWwtYm9keScpO1xyXG4gICAgICAgIGNvbnN0IGNvbnRlbnRIZWlnaHQgPSB0aGlzLnNpemUuY29udGVudEhlaWdodDtcclxuICAgICAgICB0aGlzLnJlbmRlcjIuc2V0U3R5bGUoY29udGVudEVsLCAnaGVpZ2h0JywgY29udGVudEhlaWdodCArICdweCcpO1xyXG4gICAgfVxyXG5cclxuICAgIHJlc2V0UG9zaXRpb24oKSB7XHJcbiAgICAgICAgY29uc3QgbWFyZ2luTGVmdCA9IE51bWJlci5wYXJzZUludCgnJyArIC10aGlzLndpZHRoIC8gMikgKyAncHgnO1xyXG4gICAgICAgIGNvbnN0IG1hcmdpblRvcCA9IE51bWJlci5wYXJzZUludCgnJyArIC10aGlzLmhlaWdodCAvIDIpICsgJ3B4JztcclxuXHJcbiAgICAgICAgY29uc3QgZGlhbG9nRWwgPSB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvcignLm1vZGFsLWRpYWxvZycpO1xyXG4gICAgICAgIGNvbnN0IGNvbnRlbnRFbCA9IHRoaXMuZWwubmF0aXZlRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcubW9kYWwtYm9keScpO1xyXG4gICAgICAgIGNvbnN0IGZvb3RlckVsID0gdGhpcy5lbC5uYXRpdmVFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5tb2RhbC1mb290ZXInKTtcclxuXHJcbiAgICAgICAgdGhpcy5yZW5kZXIyLnNldFN0eWxlKGRpYWxvZ0VsLCAnbWFyZ2luLWxlZnQnLCBtYXJnaW5MZWZ0KTtcclxuICAgICAgICB0aGlzLnJlbmRlcjIuc2V0U3R5bGUoZGlhbG9nRWwsICdtYXJnaW4tdG9wJywgbWFyZ2luVG9wKTtcclxuXHJcbiAgICAgICAgY29uc3QgY29udGVudEhlaWdodCA9IHRoaXMuc2l6ZS5jb250ZW50SGVpZ2h0O1xyXG5cclxuICAgICAgICB0aGlzLnJlbmRlcjIuc2V0U3R5bGUoY29udGVudEVsLCAnaGVpZ2h0JywgY29udGVudEhlaWdodCArICdweCcpO1xyXG4gICAgICAgIHRoaXMucmVuZGVyMi5zZXRTdHlsZShjb250ZW50RWwsICdvdmVyZmxvdycsICdoaWRkZW4nKTtcclxuXHJcbiAgICAgICAgdGhpcy5yZW5kZXIyLnNldFN0eWxlKGRpYWxvZ0VsLCAndHJhbnNmb3JtJywgJ3RyYW5zbGF0ZTNkKDBweCwgMHB4LCAwcHgpJyk7XHJcbiAgICB9XHJcblxyXG4gICAgcHJpdmF0ZSBvcGVuRGlhbG9nKGZsYWc6IGJvb2xlYW4pIHtcclxuICAgICAgICBpZiAoZmxhZykge1xyXG4gICAgICAgICAgICB0aGlzLnJlc2V0UG9zaXRpb24oKTtcclxuICAgICAgICAgICAgdGhpcy5kcmFnZ2Jhci5yZXNldFBvc2l0aW9uKCk7XHJcbiAgICAgICAgICAgIHRoaXMubW9kYWwuc2hvdygpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIGNsb3NlRGlhbG9nKGNhbkNsb3NlOiBib29sZWFuKSB7XHJcbiAgICAgICAgaWYgKGNhbkNsb3NlKSB7XHJcbiAgICAgICAgICAgIHRoaXMubW9kYWwuaGlkZSgpO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBzaG93KCkge1xyXG4gICAgICAgIGNvbnN0IHJlc3VsdCA9IHRoaXMuYmVmb3JlT3BlbigpO1xyXG4gICAgICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSAnYm9vbGVhbicpIHtcclxuICAgICAgICAgICAgdGhpcy5vcGVuRGlhbG9nKHJlc3VsdCk7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIE9ic2VydmFibGUpIHtcclxuICAgICAgICAgICAgICAgIHJlc3VsdC5zdWJzY3JpYmUoKGZsYWc6IGJvb2xlYW4pID0+IHtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLm9wZW5EaWFsb2coZmxhZyk7XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBQcm9taXNlKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgcmVzdWx0LnRoZW4oKGZsYWc6IGJvb2xlYW4pID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5vcGVuRGlhbG9nKGZsYWcpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIGNsb3NlKCRldmVudD86IE1vdXNlRXZlbnQpIHtcclxuICAgICAgICBpZiAoJGV2ZW50KSB7XHJcbiAgICAgICAgICAgICRldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgY29uc3QgcmVzdWx0ID0gdGhpcy5iZWZvcmVDbG9zZSgpO1xyXG4gICAgICAgIGlmICh0eXBlb2YgcmVzdWx0ID09PSAnYm9vbGVhbicpIHtcclxuICAgICAgICAgICAgdGhpcy5jbG9zZURpYWxvZyhyZXN1bHQpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGlmIChyZXN1bHQgaW5zdGFuY2VvZiBPYnNlcnZhYmxlKSB7XHJcbiAgICAgICAgICAgICAgICByZXN1bHQuc3Vic2NyaWJlKChmbGFnOiBib29sZWFuKSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jbG9zZURpYWxvZyhmbGFnKTtcclxuICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgaWYgKHJlc3VsdCBpbnN0YW5jZW9mIFByb21pc2UpIHtcclxuICAgICAgICAgICAgICAgICAgICByZXN1bHQudGhlbigoZmxhZzogYm9vbGVhbikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmNsb3NlRGlhbG9nKGZsYWcpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHJlU2l6ZShzaXplOiB7IHdpZHRoPzogbnVtYmVyLCBoZWlnaHQ/OiBudW1iZXIgfSkge1xyXG4gICAgICAgIGlmIChzaXplLndpZHRoKSB7XHJcbiAgICAgICAgICAgIHRoaXMud2lkdGggPSBzaXplLndpZHRoO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAoc2l6ZS5oZWlnaHQpIHtcclxuICAgICAgICAgICAgdGhpcy5oZWlnaHQgPSBzaXplLmhlaWdodDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMucmVzZXRQb3NpdGlvbigpO1xyXG4gICAgICAgIHRoaXMuZHJhZ2diYXIucmVzZXRQb3NpdGlvbigpO1xyXG4gICAgICAgIHRoaXMud2lkdGhDaGFuZ2UuZW1pdCh0aGlzLndpZHRoKTtcclxuICAgICAgICB0aGlzLmhlaWdodENoYW5nZS5lbWl0KHRoaXMuaGVpZ2h0KTtcclxuICAgICAgICB0aGlzLnJlc2l6ZWQuZW1pdCh7IHNpemU6IHsgd2lkdGg6IHRoaXMud2lkdGgsIGhlaWdodDogdGhpcy5oZWlnaHQgfSB9KTtcclxuICAgIH1cclxuXHJcbiAgICBvblJlc2l6aW5nKG9wdHM6IGFueSkge1xyXG4gICAgICAgIG9wdHMuc2l6ZS53aWR0aCA9IG9wdHMuc2l6ZS53aWR0aCA8IDEwMCA/IDEwMCA6IG9wdHMuc2l6ZS53aWR0aDtcclxuICAgICAgICBvcHRzLnNpemUuaGVpZ2h0ID0gb3B0cy5zaXplLmhlaWdodCA8IDEwMCA/IDEwMCA6IG9wdHMuc2l6ZS5oZWlnaHQ7XHJcblxyXG4gICAgICAgIHRoaXMud2lkdGggPSBvcHRzLnNpemUud2lkdGg7XHJcbiAgICAgICAgdGhpcy5oZWlnaHQgPSBvcHRzLnNpemUuaGVpZ2h0O1xyXG4gICAgICAgIHRoaXMucmVzaXppbmcuZW1pdChvcHRzKTtcclxuICAgIH1cclxuXHJcbiAgICByZXNpemVTdG9wKG9wdHM6IGFueSkge1xyXG4gICAgICAgIG9wdHMuc2l6ZS53aWR0aCA9IG9wdHMuc2l6ZS53aWR0aCA8IDEwMCA/IDEwMCA6IG9wdHMuc2l6ZS53aWR0aDtcclxuICAgICAgICBvcHRzLnNpemUuaGVpZ2h0ID0gb3B0cy5zaXplLmhlaWdodCA8IDEwMCA/IDEwMCA6IG9wdHMuc2l6ZS5oZWlnaHQ7XHJcblxyXG4gICAgICAgIHRoaXMud2lkdGggPSBvcHRzLnNpemUud2lkdGg7XHJcbiAgICAgICAgdGhpcy5oZWlnaHQgPSBvcHRzLnNpemUuaGVpZ2h0O1xyXG4gICAgICAgIHRoaXMudXBkYXRlTW9kYWxCb2R5SGVpZ2h0KCk7XHJcblxyXG4gICAgICAgIHRoaXMud2lkdGhDaGFuZ2UuZW1pdCh0aGlzLndpZHRoKTtcclxuICAgICAgICB0aGlzLmhlaWdodENoYW5nZS5lbWl0KHRoaXMuaGVpZ2h0KTtcclxuXHJcbiAgICAgICAgdGhpcy5yZXNpemVkLmVtaXQob3B0cyk7XHJcbiAgICB9XHJcblxyXG4gICAgZHJvcGRvd24oZWw6IGFueSkge1xyXG4gICAgICAgIC8vIGNvbnN0IHJlY3QgPSBlbC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKTtcclxuICAgICAgICAvLyB0aGlzLnJlbmRlcjIucmVtb3ZlU3R5bGUoZWwsICdtYXJnaW4tdG9wJyk7XHJcbiAgICAgICAgLy8gdGhpcy5yZW5kZXIyLnJlbW92ZVN0eWxlKGVsLCAnbWFyZ2luLWxlZnQnKTtcclxuICAgICAgICAvLyB0aGlzLnJlbmRlcjIuc2V0U3R5bGUoZWwsICd0b3AnLCBgJHtyZWN0LnRvcH1weGApO1xyXG4gICAgICAgIC8vIHRoaXMucmVuZGVyMi5zZXRTdHlsZShlbCwgJ2xlZnQnLCBgJHtyZWN0LmxlZnR9cHhgKTtcclxuXHJcbiAgICAgICAgLy8gdGhpcy5yZW5kZXIyLnJlbW92ZVN0eWxlKGVsLCAndHJhbnNmb3JtJyk7XHJcbiAgICAgICAgLy8gdGhpcy5yZW5kZXIyLnJlbW92ZVN0eWxlKGVsLCAnLXdlYmtpdC10cmFuc2Zvcm0nKTtcclxuICAgICAgICAvLyB0aGlzLnJlbmRlcjIucmVtb3ZlU3R5bGUoZWwsICctbXMtdHJhbnNmb3JtJyk7XHJcbiAgICAgICAgLy8gdGhpcy5yZW5kZXIyLnJlbW92ZVN0eWxlKGVsLCAnLW1vei10cmFuc2Zvcm0nKTtcclxuICAgICAgICAvLyB0aGlzLnJlbmRlcjIucmVtb3ZlU3R5bGUoZWwsICctby10cmFuc2Zvcm0nKTtcclxuICAgIH1cclxuXHJcbiAgICBtYXhEaWFsb2coKSB7XHJcbiAgICAgICAgLy8gY29uc29sZS5sb2coYCR7ZG9jdW1lbnQuc2Nyb2xsaW5nRWxlbWVudC5jbGllbnRXaWR0aH1gKVxyXG4gICAgICAgIHRoaXMub3JpZ2luYWxXaWR0aCA9IHRoaXMud2lkdGg7XHJcbiAgICAgICAgdGhpcy5vcmlnaW5hbEhlaWdodCA9IHRoaXMuaGVpZ2h0O1xyXG4gICAgICAgIHRoaXMud2lkdGggPSAoZG9jdW1lbnQuc2Nyb2xsaW5nRWxlbWVudD9kb2N1bWVudC5zY3JvbGxpbmdFbGVtZW50OmRvY3VtZW50LmRvY3VtZW50RWxlbWVudClbJ2NsaWVudFdpZHRoJ10gIC0gMjA7XHJcbiAgICAgICAgdGhpcy5oZWlnaHQgPSAoZG9jdW1lbnQuc2Nyb2xsaW5nRWxlbWVudD9kb2N1bWVudC5zY3JvbGxpbmdFbGVtZW50OmRvY3VtZW50LmRvY3VtZW50RWxlbWVudClbJ2NsaWVudEhlaWdodCddIC0gMjA7XHJcblxyXG4gICAgICAgIHRoaXMuZHJhZ2dhYmxlID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy5yZXNpemFibGUgPSBmYWxzZTtcclxuXHJcbiAgICAgICAgdGhpcy5pc01heCA9IHRydWU7XHJcbiAgICAgICAgdGhpcy5yZXNldFBvc2l0aW9uKCk7XHJcbiAgICAgICAgdGhpcy5yZXNpemVkLmVtaXQoeyBzaXplOiB7IHdpZHRoOiB0aGlzLndpZHRoLCBoZWlnaHQ6IHRoaXMuaGVpZ2h0IH0gfSk7XHJcbiAgICAgICAgdGhpcy5tYXhlZC5lbWl0KHsgc2l6ZTogeyB3aWR0aDogdGhpcy53aWR0aCwgaGVpZ2h0OiB0aGlzLmhlaWdodCB9IH0pO1xyXG4gICAgfVxyXG5cclxuICAgIHJldmVydERpYWxvZygpIHtcclxuICAgICAgICB0aGlzLmlzTWF4ID0gZmFsc2U7XHJcbiAgICAgICAgdGhpcy53aWR0aCA9IHRoaXMub3JpZ2luYWxXaWR0aDtcclxuICAgICAgICB0aGlzLmhlaWdodCA9IHRoaXMub3JpZ2luYWxIZWlnaHQ7XHJcbiAgICAgICAgdGhpcy5kcmFnZ2FibGUgPSB0cnVlO1xyXG4gICAgICAgIHRoaXMucmVzaXphYmxlID0gdHJ1ZTtcclxuICAgICAgICB0aGlzLnJlc2V0UG9zaXRpb24oKTtcclxuICAgICAgICB0aGlzLmRyYWdnYmFyLnJlc2V0UG9zaXRpb24oKTtcclxuICAgICAgICB0aGlzLnJlc2l6ZWQuZW1pdCh7IHNpemU6IHsgd2lkdGg6IHRoaXMud2lkdGgsIGhlaWdodDogdGhpcy5oZWlnaHQgfSB9KTtcclxuICAgICAgICB0aGlzLm1heGVkLmVtaXQoeyBzaXplOiB7IHdpZHRoOiB0aGlzLndpZHRoLCBoZWlnaHQ6IHRoaXMuaGVpZ2h0IH0gfSk7XHJcbiAgICB9XHJcblxyXG4gICAgY2hhbmdlRGlhbG9nU2l6ZSgpIHtcclxuICAgICAgICBpZiAodGhpcy5pc01heCkge1xyXG4gICAgICAgICAgICB0aGlzLnJldmVydERpYWxvZygpO1xyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHRoaXMubWF4RGlhbG9nKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ==