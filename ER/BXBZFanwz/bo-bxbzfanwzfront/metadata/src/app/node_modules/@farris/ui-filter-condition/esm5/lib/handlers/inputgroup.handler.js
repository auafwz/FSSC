/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { CompareType } from '../enum/compare-type.enum';
import { ValueType } from '../enum/value-type.enum';
import { RelationType } from '../enum/relation-type.enum';
var InputGroupHandler = /** @class */ (function () {
    function InputGroupHandler() {
    }
    /**
     * @param {?} qc
     * @return {?}
     */
    InputGroupHandler.prototype.convert = /**
     * @param {?} qc
     * @return {?}
     */
    function (qc) {
        /** @type {?} */
        var igv = (qc.value);
        /** @type {?} */
        var arr = [];
        if (igv.textValue && igv.textValue.length == 0) {
            return [];
        }
        else if (igv.isInputText) {
            arr.push({
                'FilterField': qc.labelCode,
                'Compare': CompareType.Like,
                // 'Value': encodeURIComponent(igv.textValue),
                'Value': igv.textValue,
                'Relation': RelationType.And,
                'Expresstype': ValueType.Value
            });
            return arr;
        }
        else {
            igv.getOriginalValue().split(',').forEach((/**
             * @param {?} itemValue
             * @return {?}
             */
            function (itemValue) {
                itemValue && arr.push({
                    'FilterField': qc.labelCode,
                    'Compare': CompareType.Equal,
                    'Value': itemValue,
                    'Relation': RelationType.Or,
                    'Expresstype': ValueType.Value
                });
            }));
            if (arr.length > 0) {
                arr[0]['Lbracket'] = '(';
                arr[arr.length - 1]['Rbracket'] = ')';
                arr[arr.length - 1]['Relation'] = RelationType.And;
                return arr;
            }
            else {
                return [];
            }
        }
    };
    return InputGroupHandler;
}());
export { InputGroupHandler };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXRncm91cC5oYW5kbGVyLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1maWx0ZXItY29uZGl0aW9uLyIsInNvdXJjZXMiOlsibGliL2hhbmRsZXJzL2lucHV0Z3JvdXAuaGFuZGxlci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLDJCQUEyQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUNwRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFFMUQ7SUFBQTtJQXNDQSxDQUFDOzs7OztJQXJDRyxtQ0FBTzs7OztJQUFQLFVBQVEsRUFBRTs7WUFDQSxHQUFHLEdBQUcsQ0FBQyxFQUFFLENBQUMsS0FBSyxDQUFDOztZQUNoQixHQUFHLEdBQUcsRUFBRTtRQUNkLElBQUcsR0FBRyxDQUFDLFNBQVMsSUFBSSxHQUFHLENBQUMsU0FBUyxDQUFDLE1BQU0sSUFBSSxDQUFDLEVBQUU7WUFDM0MsT0FBTyxFQUFFLENBQUM7U0FDYjthQUNJLElBQUksR0FBRyxDQUFDLFdBQVcsRUFBRTtZQUN0QixHQUFHLENBQUMsSUFBSSxDQUFDO2dCQUNMLGFBQWEsRUFBRSxFQUFFLENBQUMsU0FBUztnQkFDM0IsU0FBUyxFQUFFLFdBQVcsQ0FBQyxJQUFJOztnQkFFM0IsT0FBTyxFQUFFLEdBQUcsQ0FBQyxTQUFTO2dCQUN0QixVQUFVLEVBQUUsWUFBWSxDQUFDLEdBQUc7Z0JBQzVCLGFBQWEsRUFBRSxTQUFTLENBQUMsS0FBSzthQUNqQyxDQUFDLENBQUM7WUFDSCxPQUFPLEdBQUcsQ0FBQztTQUNkO2FBQ0k7WUFDRCxHQUFHLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLENBQUMsT0FBTzs7OztZQUFDLFVBQUEsU0FBUztnQkFDL0MsU0FBUyxJQUFJLEdBQUcsQ0FBQyxJQUFJLENBQUM7b0JBQ2xCLGFBQWEsRUFBRSxFQUFFLENBQUMsU0FBUztvQkFDM0IsU0FBUyxFQUFFLFdBQVcsQ0FBQyxLQUFLO29CQUM1QixPQUFPLEVBQUUsU0FBUztvQkFDbEIsVUFBVSxFQUFFLFlBQVksQ0FBQyxFQUFFO29CQUMzQixhQUFhLEVBQUUsU0FBUyxDQUFDLEtBQUs7aUJBQ2pDLENBQUMsQ0FBQztZQUNQLENBQUMsRUFBQyxDQUFDO1lBQ0gsSUFBSSxHQUFHLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtnQkFDaEIsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLFVBQVUsQ0FBQyxHQUFHLEdBQUcsQ0FBQztnQkFDekIsR0FBRyxDQUFDLEdBQUcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxDQUFDLENBQUMsVUFBVSxDQUFDLEdBQUcsR0FBRyxDQUFDO2dCQUN0QyxHQUFHLENBQUMsR0FBRyxDQUFDLE1BQU0sR0FBRyxDQUFDLENBQUMsQ0FBQyxVQUFVLENBQUMsR0FBRyxZQUFZLENBQUMsR0FBRyxDQUFDO2dCQUNuRCxPQUFPLEdBQUcsQ0FBQzthQUNkO2lCQUFNO2dCQUNILE9BQU8sRUFBRSxDQUFDO2FBQ2I7U0FDSjtJQUNMLENBQUM7SUFDTCx3QkFBQztBQUFELENBQUMsQUF0Q0QsSUFzQ0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wYXJlVHlwZSB9IGZyb20gJy4uL2VudW0vY29tcGFyZS10eXBlLmVudW0nO1xyXG5pbXBvcnQgeyBWYWx1ZVR5cGUgfSBmcm9tICcuLi9lbnVtL3ZhbHVlLXR5cGUuZW51bSc7XHJcbmltcG9ydCB7IFJlbGF0aW9uVHlwZSB9IGZyb20gJy4uL2VudW0vcmVsYXRpb24tdHlwZS5lbnVtJztcclxuXHJcbmV4cG9ydCBjbGFzcyBJbnB1dEdyb3VwSGFuZGxlciB7XHJcbiAgICBjb252ZXJ0KHFjKSB7XHJcbiAgICAgICAgY29uc3QgaWd2ID0gKHFjLnZhbHVlKTtcclxuICAgICAgICBjb25zdCBhcnIgPSBbXTtcclxuICAgICAgICBpZihpZ3YudGV4dFZhbHVlICYmIGlndi50ZXh0VmFsdWUubGVuZ3RoID09IDAgKXtcclxuICAgICAgICAgICAgcmV0dXJuIFtdO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmIChpZ3YuaXNJbnB1dFRleHQpIHtcclxuICAgICAgICAgICAgYXJyLnB1c2goe1xyXG4gICAgICAgICAgICAgICAgJ0ZpbHRlckZpZWxkJzogcWMubGFiZWxDb2RlLFxyXG4gICAgICAgICAgICAgICAgJ0NvbXBhcmUnOiBDb21wYXJlVHlwZS5MaWtlLFxyXG4gICAgICAgICAgICAgICAgLy8gJ1ZhbHVlJzogZW5jb2RlVVJJQ29tcG9uZW50KGlndi50ZXh0VmFsdWUpLFxyXG4gICAgICAgICAgICAgICAgJ1ZhbHVlJzogaWd2LnRleHRWYWx1ZSxcclxuICAgICAgICAgICAgICAgICdSZWxhdGlvbic6IFJlbGF0aW9uVHlwZS5BbmQsXHJcbiAgICAgICAgICAgICAgICAnRXhwcmVzc3R5cGUnOiBWYWx1ZVR5cGUuVmFsdWVcclxuICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIHJldHVybiBhcnI7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2Uge1xyXG4gICAgICAgICAgICBpZ3YuZ2V0T3JpZ2luYWxWYWx1ZSgpLnNwbGl0KCcsJykuZm9yRWFjaChpdGVtVmFsdWUgPT4ge1xyXG4gICAgICAgICAgICAgICAgaXRlbVZhbHVlICYmIGFyci5wdXNoKHtcclxuICAgICAgICAgICAgICAgICAgICAnRmlsdGVyRmllbGQnOiBxYy5sYWJlbENvZGUsXHJcbiAgICAgICAgICAgICAgICAgICAgJ0NvbXBhcmUnOiBDb21wYXJlVHlwZS5FcXVhbCxcclxuICAgICAgICAgICAgICAgICAgICAnVmFsdWUnOiBpdGVtVmFsdWUsXHJcbiAgICAgICAgICAgICAgICAgICAgJ1JlbGF0aW9uJzogUmVsYXRpb25UeXBlLk9yLFxyXG4gICAgICAgICAgICAgICAgICAgICdFeHByZXNzdHlwZSc6IFZhbHVlVHlwZS5WYWx1ZVxyXG4gICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICBpZiAoYXJyLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgICAgICAgIGFyclswXVsnTGJyYWNrZXQnXSA9ICcoJztcclxuICAgICAgICAgICAgICAgIGFyclthcnIubGVuZ3RoIC0gMV1bJ1JicmFja2V0J10gPSAnKSc7XHJcbiAgICAgICAgICAgICAgICBhcnJbYXJyLmxlbmd0aCAtIDFdWydSZWxhdGlvbiddID0gUmVsYXRpb25UeXBlLkFuZDtcclxuICAgICAgICAgICAgICAgIHJldHVybiBhcnI7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gW107XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcbn0iXX0=