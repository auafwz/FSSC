import * as tslib_1 from "tslib";
import { Injectable, Optional } from '@angular/core';
import { empty, of, from, EMPTY } from 'rxjs';
import { tap, map, switchMap, catchError } from 'rxjs/operators';
import { BeActionService } from './be-action.service';
import { FormMessageService } from './form-message.service';
import { FormNotifyService } from './form-notify.service';
import { LanguageService } from './languag.service';
import { FormLoadingService } from './form-loading/form-loading.service';
import { FormErrorService } from './error/form-error.service';
import { WFSubmiteService } from '@gsp-wf/rtdevkit';
import { WfTaskHandlerService } from '@gsp-wf/wf-task-handler';
import { FrameContext } from '@farris/devkit';
import { WFFlowchartService } from '@gsp-wf/ui-flowchart';
import { FormNotifyStrategyService } from './form-notify-strategy.service';
// tslint:disable: max-line-length
/**
 * 审批服务
 * @Scope FrameComponent
 */
var ApproveService = /** @class */ (function () {
    /**
     * 构造函数
     */
    function ApproveService(formLoadingService, beActionService, msgService, notifyService, languageService, formErrorService, frameContext, submitter, flowchartService, wfTaskHandlerService) {
        this.formLoadingService = formLoadingService;
        this.beActionService = beActionService;
        this.msgService = msgService;
        this.notifyService = notifyService;
        this.languageService = languageService;
        this.formErrorService = formErrorService;
        this.frameContext = frameContext;
        this.submitter = submitter;
        this.flowchartService = flowchartService;
        this.wfTaskHandlerService = wfTaskHandlerService;
        if (this.frameContext) {
            this.repository = this.frameContext.repository;
            if (!this.wfTaskHandlerService) {
                this.wfTaskHandlerService = this.frameContext.injector.get(WfTaskHandlerService, null);
            }
        }
    }
    /**
     * 带有交互的提交审批
     */
    ApproveService.prototype.submitApproveWithInteraction = function (bizBillID) {
        return this.submitApprove(bizBillID);
    };
    /**
     * 提交审批
     * @param bizBillID 业务单据id
     * @param interactionResult 前端交互结果
     * @deprecated 已废弃，清使用包含入口单据的审批
     */
    ApproveService.prototype.submitApprove = function (bizBillID, interactionResult) {
        var _this = this;
        if (!bizBillID) {
            // this.msgService.error(this.languageService.unallowEmptyBizBillId);
            this.notifyService.info(this.languageService.unallowEmptyBizBillId, { hideTitle: true });
            return empty();
        }
        var actionUri = 'submittoapprovevoaction';
        var restService = this.beActionService.getRestService();
        var body = {
            requestInfo: restService.buildRequestInfo(),
            bizInstID: bizBillID,
            interactionResult: interactionResult ? {
                procDefId: interactionResult.processDefinitionId
            } : {}
        };
        this.formLoadingService.show();
        // 添加提示
        var action$ = this.beActionService.invokeAction(actionUri, 'PUT', null, null, body);
        // 目前包含三种情况：
        // 1. 第一次提交成功，服务端返回流程实例id
        // 2. 第一次提交成功，服务端返回流程实例id，并返回多个参与者，交互时提交参与者
        // 3. 第一次提交未成功，服务端返回多个流程定义，需要交互后第二次提交审批；第二次提交会出现情况1和情况2
        return action$.pipe(map(function (result) {
            if (result && result.returnValue && result.returnValue.excutionResponse) {
                var wfResponse = result.returnValue.excutionResponse;
                return wfResponse;
            }
        }), switchMap(function (response) {
            if (response && response.procInstId) {
                if (_this.repository) {
                    var updating$ = _this.repository.updateById(bizBillID);
                    return updating$.pipe(tap(function () {
                        _this.formLoadingService.hide();
                        // this.notifyService.info(this.languageService.submitSuccess);
                        FormNotifyStrategyService.success(_this.notifyService, _this.languageService.submitSuccess);
                    }), map(function () {
                        return response;
                    }));
                }
                else {
                    _this.formLoadingService.hide();
                    // this.notifyService.info(this.languageService.submitSuccess);
                    FormNotifyStrategyService.success(_this.notifyService, _this.languageService.submitSuccess);
                    return of(response);
                }
            }
            else {
                return of(response);
            }
        }), switchMap(function (response) {
            if (response.needInteraction) {
                return from(new Promise(function (resolve) {
                    _this.submitter.excute(response, function (interactionResponse) {
                        // 如果此次未提交，而选择后得到了流程定义ID，则在此提交审批
                        if (!response.procInstId && interactionResponse.processDefinitionId) {
                            _this.submitApprove(bizBillID, interactionResponse).subscribe(function () {
                                resolve();
                            });
                        }
                        else {
                            resolve();
                        }
                    });
                }));
            }
            else {
                return of(null);
            }
        }), catchError(function (error) {
            _this.formLoadingService.hide();
            // this.formErrorService.exception(this.languageService.submitFaild, error);
            return of(error);
        }));
    };
    /**
     * 提交审批(带入口单据)
     * @param bizBillID 业务单据Id
     * @param bizDefKey 入口单据Id
     * @param options options
     * @param interactionResult 交互结果
     */
    ApproveService.prototype.submitApproveWithBizDefKey = function (bizBillID, bizDefKey, options, interactionResult) {
        var _this = this;
        if (!bizBillID) {
            this.notifyService.warning(this.languageService.unallowEmptyBizBillId, { hideTitle: true });
            return EMPTY;
        }
        if (!bizDefKey) {
            this.notifyService.warning(this.languageService.bizDefKeyRequired, { hideTitle: true });
            return EMPTY;
        }
        try {
            if (options && typeof (options) === 'string') {
                options = JSON.parse(options);
            }
        }
        catch (e) {
            throw new Error('ArgumentError:options not a valid json string.');
        }
        var actionUri = 'submittoapprovewithpayload';
        var restService = this.beActionService.getRestService();
        var body = {
            requestInfo: restService.buildRequestInfo(),
            approvePayload: {
                startProcessPayload: {
                    bizDefKey: bizDefKey,
                    dataId: bizBillID,
                    name: options && options.name || '',
                    variables: options && options.variables || {}
                }
            }
        };
        if (interactionResult) {
            body.approvePayload.startProcessPayload.processDefinitionId = interactionResult.processDefinitionId;
            body.approvePayload.startProcessPayload.processDefinitionKey = interactionResult['processDefinitionKey'];
        }
        this.formLoadingService.show();
        // 添加提示
        var action$ = this.beActionService.invokeAction(actionUri, 'PUT', null, null, body);
        // 目前包含三种情况：
        // 1. 第一次提交成功，服务端返回流程实例id
        // 2. 第一次提交成功，服务端返回流程实例id，并返回多个参与者，交互时提交参与者
        // 3. 第一次提交未成功，服务端返回多个流程定义，需要交互后第二次提交审批；第二次提交会出现情况1和情况2
        return action$.pipe(map(function (result) {
            if (result && result.returnValue && result.returnValue.excutionResponse) {
                var wfResponse = result.returnValue.excutionResponse;
                return wfResponse;
            }
        }), switchMap(function (response) {
            if (response && response.procInstId) {
                if (_this.repository) {
                    var updating$ = _this.repository.updateById(bizBillID);
                    return updating$.pipe(tap(function () {
                        _this.formLoadingService.hide();
                        // this.notifyService.info(this.languageService.submitSuccess);
                        FormNotifyStrategyService.success(_this.notifyService, _this.languageService.submitSuccess);
                    }), map(function () {
                        return response;
                    }));
                }
                else {
                    _this.formLoadingService.hide();
                    // this.notifyService.info(this.languageService.submitSuccess);
                    FormNotifyStrategyService.success(_this.notifyService, _this.languageService.submitSuccess);
                    return of(response);
                }
            }
            else {
                return of(response);
            }
        }), switchMap(function (response) {
            if (response.needInteraction) {
                return from(new Promise(function (resolve) {
                    _this.submitter.excute(response, function (interactionResponse) {
                        // 如果此次未提交，而选择后得到了流程定义ID，则在此提交审批
                        console.log(response);
                        if (!response.procInstId && interactionResponse.processDefinitionId) {
                            _this.submitApproveWithBizDefKey(bizBillID, bizDefKey, options, interactionResponse).subscribe(function () {
                                resolve();
                            });
                        }
                        else {
                            resolve();
                        }
                    });
                }));
            }
            else {
                return of(null);
            }
        }), catchError(function (error) {
            _this.formLoadingService.hide();
            // this.formErrorService.exception(this.languageService.submitFaild, error);
            return of(error);
        }));
    };
    /**
     * 提交审批(带入口单据使用wf控件)
     * @param bizBillID 业务单据Id
     * @param bizDefKey 入口单据Id
     * @param options 上下文参数
     * @param variables 可选参数
     */
    ApproveService.prototype.submitApproveWithBizDefKeyUseControl = function (bizBillID, bizDefKey, options, variables) {
        if (options === void 0) { options = {}; }
        if (!bizBillID) {
            this.notifyService.warning(this.languageService.unallowEmptyBizBillId, { hideTitle: true });
            return EMPTY;
        }
        if (!bizDefKey) {
            this.notifyService.warning(this.languageService.bizDefKeyRequired, { hideTitle: true });
            return EMPTY;
        }
        if (!options || typeof options !== 'object') {
            options = {};
        }
        var payload = tslib_1.__assign({ dataId: bizBillID, bizDefKey: bizDefKey }, options);
        // 处理variables参数
        if (variables) {
            if (variables.startsWith('{') && variables.endsWith('}')) {
                try {
                    variables = JSON.parse(variables);
                }
                catch (_a) {
                    console.log('variables parse failed!');
                    variables = {};
                }
            }
            payload.variables = variables;
        }
        return this.wfTaskHandlerService && this.wfTaskHandlerService.startProcess(payload);
    };
    /**
     * 子表提交审批
     * @param bizDefKey 入口单据Id
     * @param bizId 业务单据Id（主表）
     * @param childBizId 业务单据Id（从表）
     * @param options 上下文参数
     * @param variables 可选参数
     */
    ApproveService.prototype.childSubmitApproveWithBizDefKey = function (bizDefKey, bizId, childBizId, options, variables) {
        if (options === void 0) { options = {}; }
        // 入口单据不能为空
        if (!bizDefKey) {
            this.notifyService.warning(this.languageService.bizDefKeyRequired, { hideTitle: true });
            return EMPTY;
        }
        // 主业务单据Id不能为空
        if (!bizId) {
            this.notifyService.warning(this.languageService.unallowEmptyBizBillId, { hideTitle: true });
            return EMPTY;
        }
        // 从表业务单据Id不能为空
        if (!childBizId) {
            this.notifyService.warning(this.languageService.unallowEmptyChildBizBillId, { hideTitle: true });
            return EMPTY;
        }
        if (!options || typeof options !== 'object') {
            options = {};
        }
        var payload = tslib_1.__assign({ dataId: bizId + "," + childBizId, bizDefKey: bizDefKey }, options);
        // 处理variables参数
        if (variables) {
            if (variables.startsWith('{') && variables.endsWith('}')) {
                try {
                    variables = JSON.parse(variables);
                }
                catch (_a) {
                    console.log('variables parse failed!');
                    variables = {};
                }
            }
            payload.variables = variables;
        }
        return this.wfTaskHandlerService && this.wfTaskHandlerService.startProcess(payload);
    };
    /**
     * 取消审批
     * @deprecated 已废弃，请使用cancelSubmit
     */
    ApproveService.prototype.cancelApprove = function (bizBillID) {
        var _this = this;
        if (!bizBillID) {
            this.notifyService.warning(this.languageService.unallowEmptyBizBillId, { hideTitle: true });
            return empty();
        }
        var actionUri = 'canceltosubmitvoaction';
        var restService = this.beActionService.getRestService();
        var body = {
            requestInfo: restService.buildRequestInfo(),
            bizInstID: bizBillID,
        };
        this.formLoadingService.show();
        var action$ = this.beActionService.executeAction(actionUri, 'PUT', null, null, body);
        return action$.pipe(switchMap(function () {
            if (_this.repository) {
                var updating$ = _this.repository.updateById(bizBillID);
                return updating$.pipe(tap(function () {
                    _this.formLoadingService.hide();
                    // this.notifyService.info(this.languageService.cancelApproveSuccess);
                    FormNotifyStrategyService.success(_this.notifyService, _this.languageService.cancelApproveSuccess);
                }));
            }
            else {
                _this.formLoadingService.hide();
                // this.notifyService.info(this.languageService.cancelApproveSuccess);
                FormNotifyStrategyService.success(_this.notifyService, _this.languageService.cancelApproveSuccess);
                return of();
            }
        }), catchError(function (error) {
            _this.formLoadingService.hide();
            // this.formErrorService.exception(this.languageService.cancelApproveFailed, error);
            return of(error);
        }));
    };
    /**
     * 取消审批(支持主表、子表)
     * @param procInstId 流程实例Id
     */
    ApproveService.prototype.cancelSubmit = function (procInstId) {
        if (!procInstId) {
            this.notifyService.warning(this.languageService.procInsIdRequired, { hideTitle: true });
            return EMPTY;
        }
        return this.wfTaskHandlerService && this.wfTaskHandlerService.cancelSubmit({ procInstId: procInstId });
    };
    /**
     * 查看流程图
     * @param procInstId 流程实例ID
     */
    ApproveService.prototype.viewProcess = function (procInstId) {
        if (this.flowchartService) {
            if (!procInstId) {
                this.notifyService.warning(this.languageService.noProcessInstanceId, { hideTitle: true });
                return;
            }
            return this.flowchartService.viewFlowChart(procInstId);
        }
    };
    /**
     * 转换配置大小写
     * @param jsonObj Object
     * @deprecated
     */
    ApproveService.prototype.switchPrefixLetter = function (jsonObj, toUpper) {
        var e_1, _a;
        if (typeof (jsonObj) === 'object' && !!jsonObj) {
            if (Array.isArray(jsonObj)) {
                for (var i = 0; i < jsonObj.length; i++) {
                    this.switchPrefixLetter(jsonObj[i], toUpper);
                }
            }
            else {
                try {
                    for (var _b = tslib_1.__values(Object.keys(jsonObj)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        var newKey = (toUpper ? key.substring(0, 1).toUpperCase() : key.substring(0, 1).toLowerCase()) + key.substring(1);
                        jsonObj[newKey] = jsonObj[key];
                        if (typeof jsonObj[key] === 'object') {
                            this.switchPrefixLetter(jsonObj[key], toUpper);
                        }
                        delete (jsonObj[key]);
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
            }
        }
        return jsonObj;
    };
    ApproveService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    ApproveService.ctorParameters = function () { return [
        { type: FormLoadingService },
        { type: BeActionService },
        { type: FormMessageService },
        { type: FormNotifyService },
        { type: LanguageService, decorators: [{ type: Optional }] },
        { type: FormErrorService },
        { type: FrameContext },
        { type: WFSubmiteService, decorators: [{ type: Optional }] },
        { type: WFFlowchartService, decorators: [{ type: Optional }] },
        { type: WfTaskHandlerService, decorators: [{ type: Optional }] }
    ]; };
    return ApproveService;
}());
export { ApproveService };
//# sourceMappingURL=data:application/json;base64,