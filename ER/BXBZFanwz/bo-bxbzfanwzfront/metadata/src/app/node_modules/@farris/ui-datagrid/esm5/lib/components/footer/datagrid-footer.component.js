/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { DatagridComponent } from './../../datagrid.component';
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2019-08-12 15:01:21
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-11-09 15:24:45
 * @QQ: 1055818239
 * @Version: v0.0.1
 */
import { Component, Input, ElementRef, Renderer2, ViewChild, Injector, Inject, forwardRef, ChangeDetectorRef } from '@angular/core';
import { DatagridService } from '../../services/datagrid.service';
import { FIXED_LEFT_SHADOW_CLS, FIXED_RIGHT_SHADOW_CLS, SCROLL_X_ACTION, SCROLL_X_REACH_START_ACTION } from '../../types/constant';
var DatagridFooterComponent = /** @class */ (function () {
    function DatagridFooterComponent(render, injector, dg) {
        var _this = this;
        this.render = render;
        this.injector = injector;
        this.dg = dg;
        this._footerData = [];
        /**
         * 显示位置，默认为 底部
         */
        this.position = 'bottom';
        this.scrollX = 0;
        this.showShadowCls = false;
        this.rightFixedColumnWidth = 0;
        this.cdRef = null;
        this.dg = this.injector.get(DatagridComponent);
        this.dgs = this.injector.get(DatagridService);
        this.cdRef = this.injector.get(ChangeDetectorRef);
        this.scrollXSubscription = this.dgs.scorll$.subscribe((/**
         * @param {?} d
         * @return {?}
         */
        function (d) {
            _this.scrollX = d.x;
            if (d.type === SCROLL_X_ACTION) {
                if (!_this.dg.footerTemplate) {
                    _this.render.setStyle(_this.footerBody.nativeElement, 'transform', "translate3d(-" + d.x + "px, 0px, 0px)");
                    if (_this.fixedLeft) {
                        if (d.x) {
                            _this.render.addClass(_this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);
                        }
                        else {
                            _this.render.removeClass(_this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);
                        }
                    }
                }
            }
            if (d.type === SCROLL_X_REACH_START_ACTION) {
                if (_this.fixedLeft) {
                    _this.render.removeClass(_this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);
                }
            }
        }));
        this.dgs.showFixedShadow.subscribe((/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            if (_this.fixedRight) {
                _this.setFixedColumnPosition(e.showRightShadow, e.x);
            }
        }));
        this.dgs.showGridHeader.subscribe((/**
         * @param {?} hh
         * @return {?}
         */
        function (hh) {
            _this.setFooterPosition(false);
        }));
        this.dgs.scrollbarUpdate.subscribe((/**
         * @param {?} ps
         * @return {?}
         */
        function (ps) {
            _this.rightFixedColumnWidth = _this.getRightFixedColWidth(ps.scrollbarRef);
            if (_this.fixedRight) {
                _this.setFixedColumnPosition(_this.showShadowCls, 0);
            }
            if (_this.cdRef) {
                _this.cdRef.detectChanges();
            }
        }));
    }
    Object.defineProperty(DatagridFooterComponent.prototype, "data", {
        get: /**
         * @return {?}
         */
        function () {
            return this._footerData;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this._footerData = val;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DatagridFooterComponent.prototype, "fr", {
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            if (val) {
                this.fixedRight = val;
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    DatagridFooterComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.renderFooterStyle();
        this.setFooterPosition(false);
        this.rightFixedColumnWidth = this.getRightFixedColWidth();
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    DatagridFooterComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.position) {
            this.setFooterPosition(true);
        }
        if (changes.columnsGroup && !changes.columnsGroup.isFirstChange()) {
            this.rightFixedColumnWidth = this.getRightFixedColWidth();
        }
    };
    /**
     * @return {?}
     */
    DatagridFooterComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        if (this.scrollXSubscription) {
            this.scrollXSubscription.unsubscribe();
            this.scrollXSubscription = null;
        }
    };
    /**
     * @private
     * @param {?=} ps
     * @return {?}
     */
    DatagridFooterComponent.prototype.getRightFixedColWidth = /**
     * @private
     * @param {?=} ps
     * @return {?}
     */
    function (ps) {
        if (ps === void 0) { ps = null; }
        if (!this.columnsGroup) {
            return 0;
        }
        /** @type {?} */
        var w = this.columnsGroup.rightFixedWidth;
        if (!ps) {
            ps = this.dg.scrollInstance.instance;
        }
        if (ps && ps.scrollbarYActive && this.dg.scrollBarShowMode === 'allways') {
            return w += 18;
        }
        return w;
    };
    /**
     * @private
     * @param {?=} emit
     * @return {?}
     */
    DatagridFooterComponent.prototype.setFooterPosition = /**
     * @private
     * @param {?=} emit
     * @return {?}
     */
    function (emit) {
        if (emit === void 0) { emit = true; }
        if (this.position === 'bottom') {
            /** @type {?} */
            var positionBottom = 0;
            if (this.dg.pagination) {
                positionBottom = this.dg.pagerHeight || 40;
            }
            this.render.removeStyle(this.footerContainer.nativeElement, 'top');
            this.render.setStyle(this.footerContainer.nativeElement, 'bottom', positionBottom + "px");
        }
        if (this.position === 'top') {
            /** @type {?} */
            var positionTop = 0;
            if (this.dg.showHeader) {
                positionTop = this.dg.realHeaderHeight || 35;
            }
            if (this.dg.showRowGroupPanel) {
                positionTop += this.dg.rowGroupPanelHeight;
            }
            if (this.dg.showFilterBar) {
                positionTop += this.dg.filterBarHeight;
            }
            this.render.removeStyle(this.footerContainer.nativeElement, 'bottom');
            this.render.setStyle(this.footerContainer.nativeElement, 'top', positionTop + "px");
        }
        if (emit) {
            this.dgs.footerPositionChanged.emit();
        }
    };
    /**
     * @private
     * @return {?}
     */
    DatagridFooterComponent.prototype.renderFooterStyle = /**
     * @private
     * @return {?}
     */
    function () {
        if (this.dg.footerStyler) {
            /** @type {?} */
            var trStyleAndCls = this.dgs.getCustomStyle(this.dg.footerStyler, null);
            /** @type {?} */
            var cssRuleID = this.dg.customStyleKey() + " .f-datagrid-footer";
            /** @type {?} */
            var cssRuleId2 = this.dg.customStyleKey() + " .f-datagrid-footer .f-datagrid-body-fixed-left," + this.dg.customStyleKey() + " .f-datagrid-footer .f-datagrid-body-fixed-right";
            if (trStyleAndCls && Object.keys(trStyleAndCls).length) {
                /** @type {?} */
                var cssRule = [];
                if (trStyleAndCls.style) {
                    cssRule.push(cssRuleID + " " + JSON.stringify(trStyleAndCls.style));
                    cssRule.push(cssRuleId2 + " " + JSON.stringify(trStyleAndCls.style));
                }
                this.dgs.appendCssRules(cssRule);
                // this.dg.renderCustomStyle(trStyleAndCls, this.footerContainer.nativeElement, cssRule);
            }
            else {
                this.dgs.removeCssRule([cssRuleID, cssRuleId2]);
            }
        }
    };
    /**
     * @param {?} isShow
     * @param {?} scrollLeft
     * @return {?}
     */
    DatagridFooterComponent.prototype.setFixedColumnPosition = /**
     * @param {?} isShow
     * @param {?} scrollLeft
     * @return {?}
     */
    function (isShow, scrollLeft) {
        this.showShadowCls = isShow;
        /** @type {?} */
        var method = isShow ? 'addClass' : 'removeClass';
        this.render[method](this.fixedRight.nativeElement, FIXED_RIGHT_SHADOW_CLS);
        /** @type {?} */
        var realWidth = this.columnsGroup.leftFixedWidth + this.columnsGroup.normalWidth + this.rightFixedColumnWidth;
        /** @type {?} */
        var gridWidth = this.dg.width;
        /** @type {?} */
        var l = this.dg.width - (this.dg.showBorder ? 2 : 0) - this.rightFixedColumnWidth;
        if (gridWidth > realWidth) {
            l = this.columnsGroup.leftFixedWidth + this.columnsGroup.normalWidth;
        }
        this.render.setStyle(this.fixedRight.nativeElement, 'left', l + 'px');
    };
    DatagridFooterComponent.decorators = [
        { type: Component, args: [{
                    selector: 'datagrid-footer',
                    template: "<!--\r\n * @Author: \u75AF\u72C2\u79C0\u624D(Lucas Huang)\r\n * @Date: 2019-08-12 15:02:10\r\n * @LastEditors: \u75AF\u72C2\u79C0\u624D(Lucas Huang)\r\n * @LastEditTime: 2019-10-31 14:50:47\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n -->\r\n\r\n<ng-template #footer_content_template let-columns let-left=\"fixedLeft\" let-right=\"fixedRight\">\r\n    <table cellpadding=\"0\" cellspacing=\"0\" border=\"0\" style=\"border:0; width: 100%\" class=\"f-datagrid-rows\">\r\n        <colgroup>\r\n            <col width=\"36px\" *ngIf=\"dg.showCheckbox && left\"/>\r\n            <col [width]=\"dg.lineNumberWidth + 'px'\" *ngIf=\"dg.showLineNumber && left\"/>\r\n            <col *ngFor=\"let col of columns\" [width]=\"col.width + 'px'\"/>\r\n        </colgroup>\r\n        <tbody>\r\n            <tr #tr class=\"f-datagrid-body-row f-datagrid-footer-row\"\r\n                [attr.id]=\"'footer-'+ (row| rowDataId: right: left)\"\r\n                *ngFor=\"let row of data;let rowIndex = index;trackBy: dg.trackByRows\" \r\n                [attr.index]=\"rowIndex\">\r\n\r\n                <td *ngIf=\"dg.showCheckbox && left\" class=\"f-datagrid-cell f-datagrid-cell-checkbox\" style=\"text-align: center\"></td>\r\n                <td *ngIf=\"dg.showLineNumber  && left\" class=\"f-datagrid-cell f-datagrid-cell-rownumber\" ></td>\r\n\r\n                <td class=\"f-datagrid-cell {{ 'footer-td-'+ col.field }}\"\r\n                    [style.width.px]=\"col.width\"\r\n                    [attr.colspan]=\"col.footer?.colspan || 1\"\r\n                    [style.display]=\"col.footer?.visible === false ? 'none': ''\"\r\n                    [attr.field]=\"col.field\" [attr.align]=\"col.footer?.align || col.align\"\r\n                    *ngFor=\"let col of columns; let ci = index;\"\r\n                    footer-cell-styler [column]=\"col\" [rowData]=\"row\" [rowIndex]=\"rowIndex\">\r\n                    <div class=\"f-datagrid-cell-content\" style=\"width: 100%\">\r\n                        <span *ngIf=\"col.footer && col.footer.formatter\" [innerHtml]=\"col | formatCellData: row : false: true | safe: 'html'\"></span>\r\n                        <span *ngIf=\"!col.footer || !col.footer.formatter\">{{ col | formatCellData: row : false: true }}</span>\r\n                    </div>\r\n                </td>\r\n            </tr>\r\n        </tbody>\r\n    </table>\r\n</ng-template>\r\n\r\n<div #footerContainer class=\"f-datagrid-footer\"\r\n    [class.f-datagrid-toolbar-top]=\"position === 'top'\"  \r\n    [class.f-datagrid-toolbar-bottom]=\"position === 'bottom'\"\r\n    [style.height.px]=\"height\"\r\n    >\r\n    <ng-container *ngIf=\"!dg.footerTemplate\">\r\n        \r\n        <div #fixedLeft class=\"f-datagrid-body-fixed-left\" \r\n            [style.width.px]=\"columnsGroup?.leftFixedWidth\" [style.height.px]=\"height\" \r\n            *ngIf=\"columnsGroup?.leftFixed && columnsGroup?.leftFixed.length  || dg?.showLineNumber || dg?.showCheckbox \">\r\n\r\n            <ng-container *ngTemplateOutlet=\"footer_content_template; context: {$implicit: columnsGroup?.leftFixed, fixedLeft: true}\"></ng-container>\r\n            \r\n        </div>\r\n\r\n        <div #fixedRight class=\"f-datagrid-body-fixed-right\" style=\"position: absolute;border: 0;\"\r\n            [style.width.px]=\"rightFixedColumnWidth\" [style.height.px]=\"height\"\r\n            *ngIf=\"columnsGroup?.rightFixed && columnsGroup?.rightFixed.length\">\r\n\r\n            <ng-container *ngTemplateOutlet=\"footer_content_template; context: {$implicit: columnsGroup?.rightFixed, fixedRight: true}\"></ng-container>\r\n            \r\n        </div>\r\n\r\n        <div #footerBody class=\"f-datagrid-footer-rows\" style=\"position: absolute;\"\r\n            [style.left.px]=\"columnsGroup?.leftFixedWidth\" [style.width.px]=\"columnsGroup?.normalWidth\" >\r\n            <ng-container *ngTemplateOutlet=\"footer_content_template; context: {$implicit: columnsGroup?.normalColumns}\"></ng-container>\r\n        </div>\r\n\r\n    </ng-container>\r\n\r\n\r\n    <ng-container *ngIf=\"dg.footerTemplate\" [ngTemplateOutlet]=\"dg.footerTemplate\" [ngTemplateOutletContext]=\"{footerData: data }\" ></ng-container>\r\n    \r\n</div>"
                }] }
    ];
    /** @nocollapse */
    DatagridFooterComponent.ctorParameters = function () { return [
        { type: Renderer2 },
        { type: Injector },
        { type: DatagridComponent, decorators: [{ type: Inject, args: [forwardRef((/**
                         * @return {?}
                         */
                        function () { return DatagridComponent; })),] }] }
    ]; };
    DatagridFooterComponent.propDecorators = {
        data: [{ type: Input }],
        height: [{ type: Input }],
        width: [{ type: Input }],
        columns: [{ type: Input }],
        columnsGroup: [{ type: Input }],
        position: [{ type: Input }],
        footerContainer: [{ type: ViewChild, args: ['footerContainer',] }],
        footerBody: [{ type: ViewChild, args: ['footerBody',] }],
        fixedLeft: [{ type: ViewChild, args: ['fixedLeft',] }],
        fr: [{ type: ViewChild, args: ['fixedRight',] }]
    };
    return DatagridFooterComponent;
}());
export { DatagridFooterComponent };
if (false) {
    /**
     * @type {?}
     * @private
     */
    DatagridFooterComponent.prototype._footerData;
    /** @type {?} */
    DatagridFooterComponent.prototype.height;
    /** @type {?} */
    DatagridFooterComponent.prototype.width;
    /** @type {?} */
    DatagridFooterComponent.prototype.columns;
    /** @type {?} */
    DatagridFooterComponent.prototype.columnsGroup;
    /**
     * 显示位置，默认为 底部
     * @type {?}
     */
    DatagridFooterComponent.prototype.position;
    /** @type {?} */
    DatagridFooterComponent.prototype.footerContainer;
    /** @type {?} */
    DatagridFooterComponent.prototype.footerBody;
    /** @type {?} */
    DatagridFooterComponent.prototype.fixedLeft;
    /**
     * @type {?}
     * @private
     */
    DatagridFooterComponent.prototype.fixedRight;
    /** @type {?} */
    DatagridFooterComponent.prototype.scrollXSubscription;
    /**
     * @type {?}
     * @private
     */
    DatagridFooterComponent.prototype.dgs;
    /**
     * @type {?}
     * @private
     */
    DatagridFooterComponent.prototype.scrollX;
    /**
     * @type {?}
     * @private
     */
    DatagridFooterComponent.prototype.showShadowCls;
    /** @type {?} */
    DatagridFooterComponent.prototype.rightFixedColumnWidth;
    /**
     * @type {?}
     * @private
     */
    DatagridFooterComponent.prototype.cdRef;
    /**
     * @type {?}
     * @private
     */
    DatagridFooterComponent.prototype.render;
    /**
     * @type {?}
     * @private
     */
    DatagridFooterComponent.prototype.injector;
    /** @type {?} */
    DatagridFooterComponent.prototype.dg;
}
//# sourceMappingURL=data:application/json;base64,