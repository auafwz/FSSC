/**
 * @fileoverview added by tsickle
 * Generated from: lib/controlcomponent/dropdown/dropdownlist.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output } from '@angular/core';
import { SolutionService } from '../../service/solution.service';
import { DropDownListValue } from '../../entity/conditionvalue/dropdownlistvalue';
var DropDownListComponent = /** @class */ (function () {
    function DropDownListComponent(solutionService) {
        this.solutionService = solutionService;
        /**
         * 某个字段发生值变化事件时，需要同步清空的字段，可能不是当前字段
         */
        this.changeFields = [];
        this.conditionChange = new EventEmitter();
        //下拉列表数据源
        this.dropDownListDataSource = new Array();
        //下拉列表控件内显示文本
        this.selectedItemId = '';
    }
    /**
     * @return {?}
     */
    DropDownListComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.getDataSource();
        /** @type {?} */
        var initialValue = (/** @type {?} */ (this.item.value));
        initialValue.key && (this.selectedItemId = initialValue.key);
        this.testId = this.solutionService.getGuid();
        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    DropDownListComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        var _this = this;
        this.getDataSource();
        if (changes['changeFields'] && changes['changeFields'].currentValue && !changes['changeFields'].firstChange) {
            /** @type {?} */
            var isChange = changes['changeFields'].currentValue.some((/**
             * @param {?} field
             * @return {?}
             */
            function (field) { return field == _this.item.fieldCode; }));
            if (isChange) {
                this.selectedItemId = ((/** @type {?} */ (this.item.value))).key;
            }
        }
    };
    /**
     * @return {?}
     */
    DropDownListComponent.prototype.getDataSource = /**
     * @return {?}
     */
    function () {
        this.dropDownListDataSource = ((/** @type {?} */ (this.item.control))).enumValues;
    };
    /**
     * @param {?} selected
     * @return {?}
     */
    DropDownListComponent.prototype.selectChange = /**
     * @param {?} selected
     * @return {?}
     */
    function (selected) {
        this.item.value = new DropDownListValue({
            value: selected['selections'],
            key: selected['value']
        });
        this.conditionChange.emit();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    DropDownListComponent.prototype.onClear = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        this.item.value = new DropDownListValue();
    };
    /**
     * @param {?} field
     * @return {?}
     */
    DropDownListComponent.prototype.getConditionItemTitle = /**
     * @param {?} field
     * @return {?}
     */
    function (field) {
        return this.solutionService.getConditionItemTitle(field);
    };
    DropDownListComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-solution-dropdownlist',
                    template: "<div class=\"farris-group-wrap\" id=\"{{item.id}}\">\r\n    <div class=\"form-group farris-form-group  common-group\"  [ngClass]=\"{'q-state-readonly':item.readonly}\">\r\n    <label class=\"col-form-label\" *ngIf=\"item\" title=\"{{getConditionItemTitle(item)}}\">\r\n      <span class=\"farris-label-info text-danger\" *ngIf=\"item.control.isRequired()\">*</span>\r\n      <span class=\"farris-label-text\">{{item.fieldName}}</span>\r\n    </label>\r\n    <div class=\"farris-input-wrap\">\r\n    <farris-combo-list \r\n        [(ngModel)]=\"selectedItemId\"\r\n        [idField]=\"'value'\"\r\n        [textField]=\"'name'\"\r\n        [editable]=\"false\"\r\n        [data]=\"dropDownListDataSource\"\r\n        [multiSelect]=\"item.control.multiSelect\"\r\n        [placeholder]=\"placeholder\"\r\n        [panelHeight]=\"item.control.panelHeight ? item.control.panelHeight : 'auto'\"\r\n        (valueChange)=\"selectChange($event)\"\r\n        (clear)=\"onClear($event)\" \r\n        id=\"{{testId}}\"\r\n        [readonly]=\"item.readonly\">\r\n      </farris-combo-list>\r\n    </div>\r\n  </div>\r\n</div>\r\n"
                }] }
    ];
    /** @nocollapse */
    DropDownListComponent.ctorParameters = function () { return [
        { type: SolutionService }
    ]; };
    DropDownListComponent.propDecorators = {
        item: [{ type: Input }],
        changeFields: [{ type: Input }],
        conditionChange: [{ type: Output, args: ['conditionChange',] }]
    };
    return DropDownListComponent;
}());
export { DropDownListComponent };
if (false) {
    /**
     * QueryCondition类型
     * @type {?}
     */
    DropDownListComponent.prototype.item;
    /**
     * 某个字段发生值变化事件时，需要同步清空的字段，可能不是当前字段
     * @type {?}
     */
    DropDownListComponent.prototype.changeFields;
    /** @type {?} */
    DropDownListComponent.prototype.conditionChange;
    /** @type {?} */
    DropDownListComponent.prototype.dropDownListDataSource;
    /** @type {?} */
    DropDownListComponent.prototype.selectedItemId;
    /** @type {?} */
    DropDownListComponent.prototype.testId;
    /** @type {?} */
    DropDownListComponent.prototype.placeholder;
    /**
     * @type {?}
     * @private
     */
    DropDownListComponent.prototype.solutionService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd25saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvY29tcG9uZW50LXF1ZXJ5Y29uZGl0aW9uLyIsInNvdXJjZXMiOlsibGliL2NvbnRyb2xjb21wb25lbnQvZHJvcGRvd24vZHJvcGRvd25saXN0LmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFxQixZQUFZLEVBQUUsTUFBTSxFQUFpQixNQUFNLGVBQWUsQ0FBQztBQVF6RyxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFFakUsT0FBTyxFQUFFLGlCQUFpQixFQUFFLE1BQU0sK0NBQStDLENBQUM7QUFFbEY7SUEyQkksK0JBQW9CLGVBQWdDO1FBQWhDLG9CQUFlLEdBQWYsZUFBZSxDQUFpQjs7OztRQWIzQyxpQkFBWSxHQUFrQixFQUFFLENBQUM7UUFFZixvQkFBZSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7O1FBR2hFLDJCQUFzQixHQUFlLElBQUksS0FBSyxFQUFPLENBQUM7O1FBRXRELG1CQUFjLEdBQVEsRUFBRSxDQUFDO0lBTThCLENBQUM7Ozs7SUFFeEQsd0NBQVE7OztJQUFSO1FBQ0ksSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDOztZQUNmLFlBQVksR0FBRyxtQkFBQSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBcUI7UUFDekQsWUFBWSxDQUFDLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxjQUFjLEdBQUcsWUFBWSxDQUFDLEdBQUcsQ0FBQyxDQUFDO1FBQzdELElBQUksQ0FBQyxNQUFNLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUM3QyxJQUFJLENBQUMsV0FBVyxHQUFHLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLFdBQVcsQ0FBQyxDQUFDO0lBQzNHLENBQUM7Ozs7O0lBRUQsMkNBQVc7Ozs7SUFBWCxVQUFZLE9BQXNCO1FBQWxDLGlCQVFDO1FBUEcsSUFBSSxDQUFDLGFBQWEsRUFBRSxDQUFDO1FBQ3JCLElBQUcsT0FBTyxDQUFDLGNBQWMsQ0FBQyxJQUFJLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQyxZQUFZLElBQUksQ0FBQyxPQUFPLENBQUMsY0FBYyxDQUFDLENBQUMsV0FBVyxFQUFFOztnQkFDbEcsUUFBUSxHQUFHLE9BQU8sQ0FBQyxjQUFjLENBQUMsQ0FBQyxZQUFZLENBQUMsSUFBSTs7OztZQUFDLFVBQUEsS0FBSyxJQUFJLE9BQUEsS0FBSyxJQUFJLEtBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxFQUE1QixDQUE0QixFQUFDO1lBQ2pHLElBQUcsUUFBUSxFQUFDO2dCQUNSLElBQUksQ0FBQyxjQUFjLEdBQUcsQ0FBQyxtQkFBQSxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssRUFBcUIsQ0FBQyxDQUFDLEdBQUcsQ0FBQzthQUNwRTtTQUNKO0lBQ0wsQ0FBQzs7OztJQUVELDZDQUFhOzs7SUFBYjtRQUNJLElBQUksQ0FBQyxzQkFBc0IsR0FBRyxDQUFDLG1CQUFBLElBQUksQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUF1QixDQUFDLENBQUMsVUFBVSxDQUFDO0lBQ3hGLENBQUM7Ozs7O0lBRUQsNENBQVk7Ozs7SUFBWixVQUFhLFFBQWE7UUFDdEIsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLEdBQUcsSUFBSSxpQkFBaUIsQ0FBQztZQUNwQyxLQUFLLEVBQUcsUUFBUSxDQUFDLFlBQVksQ0FBQztZQUM5QixHQUFHLEVBQUksUUFBUSxDQUFDLE9BQU8sQ0FBQztTQUMzQixDQUFDLENBQUM7UUFDSCxJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2hDLENBQUM7Ozs7O0lBRUQsdUNBQU87Ozs7SUFBUCxVQUFRLEtBQVU7UUFDZCxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssR0FBRyxJQUFJLGlCQUFpQixFQUFFLENBQUM7SUFDOUMsQ0FBQzs7Ozs7SUFFRCxxREFBcUI7Ozs7SUFBckIsVUFBc0IsS0FBb0I7UUFDdEMsT0FBTyxJQUFJLENBQUMsZUFBZSxDQUFDLHFCQUFxQixDQUFDLEtBQUssQ0FBQyxDQUFDO0lBQzdELENBQUM7O2dCQWpFSixTQUFTLFNBQUM7b0JBQ1AsUUFBUSxFQUFFLDJCQUEyQjtvQkFDckMsMm1DQUE0QztpQkFDL0M7Ozs7Z0JBUFEsZUFBZTs7O3VCQWFuQixLQUFLOytCQUtMLEtBQUs7a0NBRUwsTUFBTSxTQUFDLGlCQUFpQjs7SUFrRDdCLDRCQUFDO0NBQUEsQUFsRUQsSUFrRUM7U0E3RFkscUJBQXFCOzs7Ozs7SUFJOUIscUNBQW1COzs7OztJQUtuQiw2Q0FBMEM7O0lBRTFDLGdEQUFnRTs7SUFHaEUsdURBQXNEOztJQUV0RCwrQ0FBeUI7O0lBRXpCLHVDQUFlOztJQUVmLDRDQUFvQjs7Ozs7SUFFUixnREFBd0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQsIE9uQ2hhbmdlcywgRXZlbnRFbWl0dGVyLCBPdXRwdXQsIFNpbXBsZUNoYW5nZXMgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgUXVlcnlDb25kaXRpb24gfSBmcm9tICcuLi8uLi9lbnRpdHkvcXVlcnljb25kaXRpb24nO1xyXG5pbXBvcnQgeyBDb250cm9sVHlwZSB9IGZyb20gJy4uLy4uL2VudGl0eS9jb250cm9sdHlwZSc7XHJcbmltcG9ydCB7IERyb3BEb3duTGlzdENvbnRyb2wgfSBmcm9tICcuLi8uLi9lbnRpdHkvY29udHJvbHR5cGUvZHJvcGRvd25saXN0L2Ryb3Bkb3dubGlzdGNvbnRyb2wnO1xyXG5pbXBvcnQgeyBFbnVtVHlwZSB9IGZyb20gJy4uLy4uL2VudGl0eS9jb250cm9sdHlwZS9kcm9wZG93bmxpc3QvZW51bXR5cGUnO1xyXG5pbXBvcnQgeyBFbnVtSW50ZWdlclZhbHVlIH0gZnJvbSAnLi4vLi4vZW50aXR5L2NvbnRyb2x0eXBlL2Ryb3Bkb3dubGlzdC9pbnRlZ2VyZW51bXZhbHVlJztcclxuaW1wb3J0IHsgRW51bVN0cmluZ1ZhbHVlIH0gZnJvbSAnLi4vLi4vZW50aXR5L2NvbnRyb2x0eXBlL2Ryb3Bkb3dubGlzdC9zdHJpbmdlbnVtdmFsdWUnO1xyXG5pbXBvcnQgeyBFbnVtQm9vbFZhbHVlIH0gZnJvbSAnLi4vLi4vZW50aXR5L2NvbnRyb2x0eXBlL2Ryb3Bkb3dubGlzdC9ib29sZW51bXZhbHVlJztcclxuaW1wb3J0IHsgU29sdXRpb25TZXJ2aWNlIH0gZnJvbSAnLi4vLi4vc2VydmljZS9zb2x1dGlvbi5zZXJ2aWNlJztcclxuaW1wb3J0IHsgSVZhbHVlIH0gZnJvbSAnLi4vLi4vZW50aXR5L2NvbmRpdGlvbnZhbHVlL2l2YWx1ZSc7XHJcbmltcG9ydCB7IERyb3BEb3duTGlzdFZhbHVlIH0gZnJvbSAnLi4vLi4vZW50aXR5L2NvbmRpdGlvbnZhbHVlL2Ryb3Bkb3dubGlzdHZhbHVlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdhcHAtc29sdXRpb24tZHJvcGRvd25saXN0JyxcclxuICAgIHRlbXBsYXRlVXJsOiAnLi9kcm9wZG93bmxpc3QuY29tcG9uZW50Lmh0bWwnLFxyXG59KVxyXG5cclxuZXhwb3J0IGNsYXNzIERyb3BEb3duTGlzdENvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcclxuICAgIC8qKlxyXG4gICAgICogUXVlcnlDb25kaXRpb27nsbvlnotcclxuICAgICAqL1xyXG4gICAgQElucHV0KCkgaXRlbTogYW55O1xyXG5cclxuICAgIC8qKlxyXG4gICAgICog5p+Q5Liq5a2X5q615Y+R55Sf5YC85Y+Y5YyW5LqL5Lu25pe277yM6ZyA6KaB5ZCM5q2l5riF56m655qE5a2X5q6177yM5Y+v6IO95LiN5piv5b2T5YmN5a2X5q61XHJcbiAgICAgKi9cclxuICAgIEBJbnB1dCgpIGNoYW5nZUZpZWxkczogQXJyYXk8c3RyaW5nPiA9IFtdO1xyXG5cclxuICAgIEBPdXRwdXQoJ2NvbmRpdGlvbkNoYW5nZScpIGNvbmRpdGlvbkNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcbiAgICAvL+S4i+aLieWIl+ihqOaVsOaNrua6kFxyXG4gICAgZHJvcERvd25MaXN0RGF0YVNvdXJjZTogQXJyYXk8YW55PiA9IG5ldyBBcnJheTxhbnk+KCk7XHJcbiAgICAvL+S4i+aLieWIl+ihqOaOp+S7tuWGheaYvuekuuaWh+acrFxyXG4gICAgc2VsZWN0ZWRJdGVtSWQ6IGFueSA9ICcnO1xyXG4gICAgLy/nu4Tku7ZpZFxyXG4gICAgdGVzdElkOiBzdHJpbmc7XHJcbiAgICAvL+aXp+e7k+aehOS4rXBsYWNlaG9sZGVy5bGe5oCn5ZyoaXRlbS5jb250cm9s5YaFXHJcbiAgICBwbGFjZWhvbGRlcjogc3RyaW5nO1xyXG5cclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgc29sdXRpb25TZXJ2aWNlOiBTb2x1dGlvblNlcnZpY2UpIHt9XHJcblxyXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5nZXREYXRhU291cmNlKCk7XHJcbiAgICAgICAgY29uc3QgaW5pdGlhbFZhbHVlID0gdGhpcy5pdGVtLnZhbHVlIGFzIERyb3BEb3duTGlzdFZhbHVlO1xyXG4gICAgICAgIGluaXRpYWxWYWx1ZS5rZXkgJiYgKHRoaXMuc2VsZWN0ZWRJdGVtSWQgPSBpbml0aWFsVmFsdWUua2V5KTtcclxuICAgICAgICB0aGlzLnRlc3RJZCA9IHRoaXMuc29sdXRpb25TZXJ2aWNlLmdldEd1aWQoKTtcclxuICAgICAgICB0aGlzLnBsYWNlaG9sZGVyID0gKHRoaXMuaXRlbS5wbGFjZUhvbGRlcikgPyAodGhpcy5pdGVtLnBsYWNlSG9sZGVyKSA6ICh0aGlzLml0ZW0uY29udHJvbC5wbGFjZWhvbGRlcik7XHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcyk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuZ2V0RGF0YVNvdXJjZSgpO1xyXG4gICAgICAgIGlmKGNoYW5nZXNbJ2NoYW5nZUZpZWxkcyddICYmIGNoYW5nZXNbJ2NoYW5nZUZpZWxkcyddLmN1cnJlbnRWYWx1ZSAmJiAhY2hhbmdlc1snY2hhbmdlRmllbGRzJ10uZmlyc3RDaGFuZ2UpIHtcclxuICAgICAgICAgICAgY29uc3QgaXNDaGFuZ2UgPSBjaGFuZ2VzWydjaGFuZ2VGaWVsZHMnXS5jdXJyZW50VmFsdWUuc29tZShmaWVsZCA9PiBmaWVsZCA9PSB0aGlzLml0ZW0uZmllbGRDb2RlKTtcclxuICAgICAgICAgICAgaWYoaXNDaGFuZ2Upe1xyXG4gICAgICAgICAgICAgICAgdGhpcy5zZWxlY3RlZEl0ZW1JZCA9ICh0aGlzLml0ZW0udmFsdWUgYXMgRHJvcERvd25MaXN0VmFsdWUpLmtleTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBnZXREYXRhU291cmNlKCkge1xyXG4gICAgICAgIHRoaXMuZHJvcERvd25MaXN0RGF0YVNvdXJjZSA9ICh0aGlzLml0ZW0uY29udHJvbCBhcyBEcm9wRG93bkxpc3RDb250cm9sKS5lbnVtVmFsdWVzO1xyXG4gICAgfVxyXG5cclxuICAgIHNlbGVjdENoYW5nZShzZWxlY3RlZDogYW55KXtcclxuICAgICAgICB0aGlzLml0ZW0udmFsdWUgPSBuZXcgRHJvcERvd25MaXN0VmFsdWUoe1xyXG4gICAgICAgICAgICB2YWx1ZSA6IHNlbGVjdGVkWydzZWxlY3Rpb25zJ10sXHJcbiAgICAgICAgICAgIGtleSA6ICBzZWxlY3RlZFsndmFsdWUnXVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIHRoaXMuY29uZGl0aW9uQ2hhbmdlLmVtaXQoKTtcclxuICAgIH1cclxuXHJcbiAgICBvbkNsZWFyKGV2ZW50OiBhbnkpe1xyXG4gICAgICAgIHRoaXMuaXRlbS52YWx1ZSA9IG5ldyBEcm9wRG93bkxpc3RWYWx1ZSgpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldENvbmRpdGlvbkl0ZW1UaXRsZShmaWVsZDpRdWVyeUNvbmRpdGlvbil7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc29sdXRpb25TZXJ2aWNlLmdldENvbmRpdGlvbkl0ZW1UaXRsZShmaWVsZCk7XHJcbiAgICB9XHJcbn0iXX0=