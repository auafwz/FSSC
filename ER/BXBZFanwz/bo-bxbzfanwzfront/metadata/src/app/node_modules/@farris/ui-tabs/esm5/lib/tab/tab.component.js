/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, TemplateRef, ChangeDetectorRef, Compiler, ComponentFactoryResolver, Renderer2, ElementRef, ContentChild, Optional, Type, NgModuleFactory } from '@angular/core';
import { BehaviorSubject } from 'rxjs';
import { FarrisTabsComponent } from '../tabs/tabs.component';
import { FarrisTabsExtendDirective } from './extend.directive';
var FarrisTabComponent = /** @class */ (function () {
    function FarrisTabComponent(cp, componentFactoryResolver, render, el, cef, scrollTabs) {
        this.cp = cp;
        this.componentFactoryResolver = componentFactoryResolver;
        this.render = render;
        this.el = el;
        this.cef = cef;
        this.scrollTabs = scrollTabs;
        this.tabWidth = -1;
        // 追加自定义的样式
        this.titleCustomCls = '';
        // selected 是否选中
        // tslint:disable-next-line:no-inferrable-types
        this.selected = false;
        // appDiv: T;
        this.showStates = new BehaviorSubject(true);
        // 兼容旧表单
        this.activeState = new BehaviorSubject(false);
        this._show = true;
    }
    Object.defineProperty(FarrisTabComponent.prototype, "show", {
        get: /**
         * @return {?}
         */
        function () {
            return this._show;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this.showStates.next(value);
            this._show = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisTabComponent.prototype, "_active", {
        get: /**
         * @return {?}
         */
        function () {
            return this._activeForOld;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._activeForOld = value;
            this.activeState.next(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisTabComponent.prototype, "active", {
        // 无用代码
        get: 
        // 无用代码
        /**
         * @return {?}
         */
        function () {
            return this._active;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * 内容是否激活
     */
    /**
     * 内容是否激活
     * @return {?}
     */
    FarrisTabComponent.prototype.ngOnInit = /**
     * 内容是否激活
     * @return {?}
     */
    function () {
        this.scrollTabs.tabs.push(this);
        if (!this.scrollTabs.activeId) {
            this.scrollTabs.tabs[0]._active = true;
        }
        else {
            this.scrollTabs.load();
        }
    };
    /**
     * @return {?}
     */
    FarrisTabComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        // 为了兼容弄旧表单，不兼容HostBinding, 通过追加class的方式实现
        /** @type {?} */
        var nEl = this.el.nativeElement;
        this.activeState.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            _this.render.addClass(nEl, 'farris-tabs-body');
            if (data) {
                _this.render.addClass(nEl, 'f-tab-active');
                _this.render.removeClass(nEl, 'f-tab-d-none');
            }
            else {
                _this.render.addClass(nEl, 'f-tab-d-none');
                _this.render.removeClass(nEl, 'f-tab-active');
            }
        }));
    };
    /**
     * @return {?}
     */
    FarrisTabComponent.prototype.ngAfterViewChecked = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    FarrisTabComponent.prototype.loadComponent = /**
     * @return {?}
     */
    function () {
    };
    FarrisTabComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-tab',
                    template: "<!-- \u5F02\u6B65\u83B7\u53D6\u7EC4\u4EF6 -->\r\n<ng-template [ngTemplateOutlet]=\"contentTempl\"></ng-template>\r\n<ng-container>\r\n    <ng-container *ngComponentOutlet=\"asyncComponent;ngModuleFactory:asyncModule\">\r\n    </ng-container>\r\n</ng-container>\r\n\r\n"
                }] }
    ];
    /** @nocollapse */
    FarrisTabComponent.ctorParameters = function () { return [
        { type: Compiler },
        { type: ComponentFactoryResolver },
        { type: Renderer2 },
        { type: ElementRef },
        { type: ChangeDetectorRef },
        { type: FarrisTabsComponent, decorators: [{ type: Optional }] }
    ]; };
    FarrisTabComponent.propDecorators = {
        tabWidth: [{ type: Input, args: ['width',] }],
        show: [{ type: Input }],
        asyncComponent: [{ type: Input }],
        asyncModule: [{ type: Input }],
        id: [{ type: Input }],
        titleCustomCls: [{ type: Input }],
        title: [{ type: Input }],
        disabled: [{ type: Input }],
        removeable: [{ type: Input }],
        toolbar: [{ type: Input }],
        contentTempl: [{ type: ContentChild, args: ['content',] }],
        farrisTabsExtendDirective: [{ type: ContentChild, args: [FarrisTabsExtendDirective,] }]
    };
    return FarrisTabComponent;
}());
export { FarrisTabComponent };
if (false) {
    /** @type {?} */
    FarrisTabComponent.prototype.setIntervalTab;
    /** @type {?} */
    FarrisTabComponent.prototype.tabWidth;
    /** @type {?} */
    FarrisTabComponent.prototype.asyncComponent;
    /** @type {?} */
    FarrisTabComponent.prototype.asyncModule;
    /** @type {?} */
    FarrisTabComponent.prototype.id;
    /** @type {?} */
    FarrisTabComponent.prototype.titleCustomCls;
    /** @type {?} */
    FarrisTabComponent.prototype.titleOverflow;
    /** @type {?} */
    FarrisTabComponent.prototype.title;
    /** @type {?} */
    FarrisTabComponent.prototype.selected;
    /** @type {?} */
    FarrisTabComponent.prototype.disabled;
    /** @type {?} */
    FarrisTabComponent.prototype.removeable;
    /** @type {?} */
    FarrisTabComponent.prototype.toolbar;
    /** @type {?} */
    FarrisTabComponent.prototype.contentTempl;
    /** @type {?} */
    FarrisTabComponent.prototype.farrisTabsExtendDirective;
    /** @type {?} */
    FarrisTabComponent.prototype.showStates;
    /** @type {?} */
    FarrisTabComponent.prototype.activeState;
    /**
     * @type {?}
     * @private
     */
    FarrisTabComponent.prototype._activeForOld;
    /** @type {?} */
    FarrisTabComponent.prototype.view;
    /** @type {?} */
    FarrisTabComponent.prototype.tempDirective;
    /** @type {?} */
    FarrisTabComponent.prototype.popupFlag;
    /** @type {?} */
    FarrisTabComponent.prototype._show;
    /** @type {?} */
    FarrisTabComponent.prototype.headingRef;
    /** @type {?} */
    FarrisTabComponent.prototype.compOrHtml;
    /**
     * @type {?}
     * @private
     */
    FarrisTabComponent.prototype.cp;
    /** @type {?} */
    FarrisTabComponent.prototype.componentFactoryResolver;
    /**
     * @type {?}
     * @private
     */
    FarrisTabComponent.prototype.render;
    /**
     * @type {?}
     * @private
     */
    FarrisTabComponent.prototype.el;
    /**
     * @type {?}
     * @private
     */
    FarrisTabComponent.prototype.cef;
    /** @type {?} */
    FarrisTabComponent.prototype.scrollTabs;
}
//# sourceMappingURL=data:application/json;base64,