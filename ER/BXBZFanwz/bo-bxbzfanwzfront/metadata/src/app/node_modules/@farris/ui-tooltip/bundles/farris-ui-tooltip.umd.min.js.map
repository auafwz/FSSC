{"version":3,"sources":["ng://@farris/ui-tooltip/lib/attention.service.ts","ng://@farris/ui-tooltip/lib/tooltip.service.ts","ng://@farris/ui-tooltip/lib/tooltip-component/tooltip.component.ts","ng://@farris/ui-tooltip/lib/tooltip.directive.ts","ng://@farris/ui-tooltip/lib/inputTips.directive.ts","ng://@farris/ui-tooltip/lib/tooltip-safe-html.pipe.ts","ng://@farris/ui-tooltip/lib/tooltip.module.ts"],"names":["AttentionService","prototype","catchAttention","els","timer","_this","this","length","attentionEls_1","k","attentionEl","idOrEl","document","getElementById","push","renderer","addClass","ngZone","runOutsideAngular","setTimeout","m","removeClass","ngOnInit","Injectable","args","providedIn","RendererFactory2","NgZone","renderFac","createRenderer","TooltipService","placement$","Subject","show$","calPosition$","TooltipComponent","Object","defineProperty","nfContent","value","TemplateRef","contentIsString","contentViewf","createEmbeddedView","_tipWidth","render","setStyle","innerNode","nativeElement","removeStyle","_tipCls","el","ngAfterViewInit","hostBoundingClientRect","judgeWidth","calculatePosition","scrollHeight","clientHeight","hostPosition","top","left","tooltipSize","tooltipNode","getBoundingClientRect","arrowSize","arrowNode","placement","height","width","right","bottom","style","offsetDirection","indexOf","index","substring","Component","selector","template","encapsulation","ViewEncapsulation","None","ElementRef","Renderer2","ViewChild","read","ViewContainerRef","Input","positionStyle","FarrisTooltipDirective","tooltipEnable","enableOrDisable","triggerMode","unbindEvent","bindEvent","ngOnDestroy","removeTooltip","hasBindEvent","trigger","clickEvent","listen","e","stopPropagation","appendTooltip","clickOutEvent","focusDownEvent","preventDefault","focusUpEvent","mouseenterEvent","mouseleaveEvent","tooltip","removeChild","body","_componentRef","changeDetectorRef","markForCheck","detectChanges","destroy","viewContainerRef","clear","showTip","generateTooltip","updateViewProps","content","tipCls","tipWidth","createComponent","componentFactory","instance","parentNode","appendChild","Directive","ComponentFactoryResolver","resolver","text","resolveComponentFactory","FInputTipsDirective","_enableTips","changeEventBind","createCloneEl","el$","window","getComputedStyle","cloneEl","createElement","forEach","item","getPropertyValue","enableTips","ngzone","mouseEnterListener","onMouseEnterHandler","bind","addEventListener","mouseLeaveListener","onMouseLeaveHandler","removeEventListener","changeTitle","setAttribute","tipsText","tooltipHtmlPipe","transform","_sanitizer","sanitize","SecurityContext","HTML","bypassSecurityTrustHtml","Pipe","name","DomSanitizer","FarrisTooltipModule","NgModule","declarations","imports","CommonModule","providers","entryComponents","exports"],"mappings":"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","sourcesContent":["import { Injectable, OnInit, Renderer2, RendererFactory2, NgZone } from '@angular/core';\r\nexport interface AttentionElement {\r\n    idOrEl: any;\r\n    type?:string;// è®¡åé»è®¤ debounce\r\n    class?: string;\r\n}\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class AttentionService implements OnInit {\r\n    private renderer: Renderer2\r\n    constructor(renderFac: RendererFactory2, public ngZone: NgZone) {\r\n        this.renderer = renderFac.createRenderer(null, null);\r\n    }\r\n\r\n    catchAttention(els: AttentionElement[], timer = 600) {\r\n        if (els && els.length > 0) {\r\n            let attentionEls = [];\r\n            for (let k = 0; k < els.length; k++) {\r\n                var attentionEl;\r\n                if (typeof els[k].idOrEl == 'string') {\r\n                    attentionEl = document.getElementById(els[k].idOrEl);\r\n                } else {\r\n                    attentionEl = els[k].idOrEl;\r\n                }\r\n                if (attentionEl) {\r\n                    attentionEls.push(attentionEl);\r\n                    this.renderer.addClass(attentionEl, 'f-catch-attention-debounce');\r\n                }\r\n            }\r\n            // ç§»é¤class\r\n            this.ngZone.runOutsideAngular(() => {\r\n                setTimeout(() => {\r\n                    for (let m = 0; m < attentionEls.length; m++) {\r\n                        this.renderer.removeClass(attentionEls[m], 'f-catch-attention-debounce');\r\n                    }\r\n                }, timer);\r\n            });\r\n        }\r\n    }\r\n    ngOnInit() {\r\n    }\r\n}\r\n","import { Injectable, OnInit } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\nexport interface PlacementInfo {\r\n  placement: string;\r\n  top: number;\r\n  left: number;\r\n}\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class TooltipService implements OnInit {\r\n\r\n  /* tooltipä½ç½® */\r\n  public placement$ = new Subject<PlacementInfo>();\r\n\r\n  /* tooltipæ§å¶æ¾ç¤º */\r\n  public show$ = new Subject<boolean>();\r\n\r\n  /* è®¡ç®ä½ç½® */\r\n  public calPosition$ = new Subject<any>();\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","import {\r\n    Component, Input, TemplateRef, ElementRef, OnInit,\r\n    ViewChild, ViewContainerRef, HostBinding, ViewEncapsulation, SimpleChanges, Renderer2, NgZone\r\n} from '@angular/core';\r\nimport { AfterViewInit } from '@angular/core';\r\n@Component({\r\n    selector: 'farris-tooltip',\r\n    templateUrl: './tooltip.component.html',\r\n    styleUrls: ['./tooltip.component.scss'],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\n\r\nexport class TooltipComponent implements OnInit, AfterViewInit {\r\n\r\n    @ViewChild('contentViewf', { read: ViewContainerRef }) contentViewf: ViewContainerRef;\r\n\r\n    @ViewChild('tooltipEle', { read: ElementRef }) tooltipNode: ElementRef;\r\n    @ViewChild('arrowEle', { read: ElementRef }) arrowNode: ElementRef;\r\n    @ViewChild('innerEle', { read: ElementRef }) innerNode: ElementRef;\r\n\r\n    contentIsString = true;\r\n    /* æ®éææ¬åå®¹ */\r\n    @Input()\r\n    set content(value: string | TemplateRef<any>) {\r\n        if (value instanceof TemplateRef) {\r\n            this.contentIsString = false;\r\n            this.contentViewf.createEmbeddedView(value);\r\n        } else {\r\n            this.contentIsString = true;\r\n            this.nfContent = value;\r\n        }\r\n    }\r\n    get content() {\r\n        return this.nfContent;\r\n    }\r\n    private _tipWidth = '';\r\n    /**å ä¸ºè¡¨åçææ²¡ææé¤factory,ä¸è½ä½¿ç¨æ¨¡æ¿ */\r\n    @Input()\r\n    set tipWidth(value) {\r\n        if (value != this._tipWidth) {\r\n            if (value) { \r\n                this.render.setStyle(this.innerNode.nativeElement, 'width', value); \r\n                this.render.setStyle(this.innerNode.nativeElement, 'max-width', 'none'); \r\n            }else{\r\n                this.render.removeStyle(this.innerNode.nativeElement, 'width');\r\n                this.render.removeStyle(this.innerNode.nativeElement, 'max-width'); \r\n            }\r\n            this._tipWidth = value;\r\n        }\r\n    }\r\n    get tipWidth() {\r\n        return this._tipWidth;\r\n    }\r\n    private _tipCls = '';\r\n    @Input()\r\n    set tipCls(value) {\r\n        if (value != this._tipCls) {\r\n            //ç§»é¤æ§æ ·å¼\r\n            this._tipCls && this.render.removeClass(this.el.nativeElement, this._tipCls);\r\n            //è¿½å æ°æ ·å¼\r\n            value && this.render.addClass(this.el.nativeElement, value);\r\n            this._tipCls = value;\r\n        }\r\n    }\r\n    get tipCls() {\r\n        return this._tipCls;\r\n    }\r\n    /* ä½ç½® */\r\n    @Input() placement = 'top';\r\n\r\n    hostBoundingClientRect: any;\r\n\r\n    nfContent: string | TemplateRef<any>;\r\n\r\n    /* ä½ç½®æ ·å¼ */\r\n    positionStyle = {};\r\n\r\n    constructor(\r\n        public el: ElementRef,\r\n        private render: Renderer2\r\n    ) {\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n    ngAfterViewInit() {\r\n        if (this.hostBoundingClientRect) {\r\n            this.judgeWidth();\r\n            this.calculatePosition(this.hostBoundingClientRect);\r\n        }\r\n    }\r\n    /**\r\n     * è§åå¤æ­é»è®¤æ ·å¼ä¸åºç°æ»å¨æ¡ï¼å°ºå¯¸ä»é»è®¤åæå¤§å·\r\n     */\r\n    judgeWidth() {\r\n        if (this.innerNode.nativeElement.scrollHeight > this.innerNode.nativeElement.clientHeight) {\r\n            this.render.addClass(this.innerNode.nativeElement, 'tooltip-inner-lg');\r\n        }\r\n    }\r\n    /* è®¡ç®tooltipææ°ä½ç½® */\r\n    calculatePosition(hostPosition: any) {\r\n        let top = 0;\r\n        let left = 0;\r\n        const tooltipSize = this.tooltipNode.nativeElement.getBoundingClientRect();\r\n        const arrowSize = this.arrowNode.nativeElement.getBoundingClientRect();\r\n        if (this.placement === 'top') {\r\n            top = hostPosition.top - tooltipSize.height - 2;\r\n            left = hostPosition.left + (hostPosition.width - tooltipSize.width) / 2;\r\n        } else if (this.placement === 'left') {\r\n            top = hostPosition.top + (hostPosition.height - tooltipSize.height) / 2;\r\n            left = hostPosition.left - tooltipSize.width - 2;\r\n        } else if (this.placement === 'right') {\r\n            top = hostPosition.top + (hostPosition.height - tooltipSize.height) / 2;\r\n            left = hostPosition.right + 2;\r\n        } else if (this.placement === 'bottom') {\r\n            top = hostPosition.bottom + arrowSize.height + 2;\r\n            left = hostPosition.left + (hostPosition.width - tooltipSize.width) / 2;\r\n        } else if (this.placement === 'top-left') {\r\n            top = hostPosition.top - tooltipSize.height - 2;\r\n            left = hostPosition.left;\r\n            this.arrowNode.nativeElement.style.left = '10%';\r\n        } else if (this.placement === 'top-right') {\r\n            top = hostPosition.top - tooltipSize.height - 2;\r\n            left = hostPosition.right - tooltipSize.width;\r\n            this.arrowNode.nativeElement.style.right = '10%';\r\n        } else if (this.placement === 'right-top') {\r\n            top = hostPosition.top;\r\n            left = hostPosition.right + 2;\r\n            this.arrowNode.nativeElement.style.top = '10%';\r\n        } else if (this.placement === 'right-bottom') {\r\n            top = hostPosition.bottom - tooltipSize.height;\r\n            left = hostPosition.right + 2;\r\n            this.arrowNode.nativeElement.style.bottom = '10%';\r\n        } else if (this.placement === 'bottom-left') {\r\n            top = hostPosition.bottom + arrowSize.height + 2;\r\n            left = hostPosition.left;\r\n            this.arrowNode.nativeElement.style.left = '10%';\r\n        } else if (this.placement === 'bottom-right') {\r\n            top = hostPosition.bottom + arrowSize.height + 2;\r\n            left = hostPosition.right - tooltipSize.width;\r\n            this.arrowNode.nativeElement.style.right = '10%';\r\n        } else if (this.placement === 'left-top') {\r\n            top = hostPosition.top;\r\n            left = hostPosition.left - tooltipSize.width - 2;\r\n            this.arrowNode.nativeElement.style.top = '10%';\r\n        } else if (this.placement === 'left-bottom') {\r\n            top = hostPosition.bottom - tooltipSize.height;\r\n            left = hostPosition.left - tooltipSize.width - 2;\r\n            this.arrowNode.nativeElement.style.bottom = '10%';\r\n        }\r\n        this.tooltipNode.nativeElement.style.top = top + 'px';\r\n        this.tooltipNode.nativeElement.style.left = left + 'px';\r\n    }\r\n\r\n    /* \r\n    *12ä¸ªä½ç½®åè§£æ \r\n    * å è¡¨åçææ²¡ææé¤factory,èä¸ä½¿ç¨äº[class],åªè½å¨æ­¤å¤åæ´\r\n    */\r\n    offsetDirection() {\r\n        const placement = this.placement;\r\n        if (placement.indexOf('-') !== -1) {\r\n            const index = placement.indexOf('-');\r\n            return placement.substring(0, index);\r\n        }\r\n        return placement;\r\n    }\r\n}\r\n","import {\r\n  OnInit, Directive, Input, ElementRef, AfterViewInit, Renderer2, OnDestroy, TemplateRef,\r\n  ComponentFactory, ViewContainerRef, ComponentFactoryResolver, NgZone, ComponentRef\r\n} from '@angular/core';\r\nimport { TooltipComponent } from './tooltip-component/tooltip.component';\r\n@Directive({\r\n  selector: '[farrisTooltip]'\r\n})\r\nexport class FarrisTooltipDirective implements OnInit, AfterViewInit, OnDestroy {\r\n  private tooltipEnable: boolean = true;\r\n  private _componentRef: ComponentRef<TooltipComponent>;\r\n  // 5æ7æ¥è¿½å è¿ç§åæ³ï¼æ§å¶ç¦ç¨ãå¯ç¨\r\n  // åæ¥çæ¶åvalueæ¯ç©ºå­ç¬¦ä¸²\r\n  @Input('farrisTooltip')\r\n  set enableTooltip(value: any) {\r\n    if (typeof value=='string'&&value == '') {\r\n      this.enableOrDisable(true);\r\n    } else {\r\n      this.enableOrDisable(value);\r\n    }\r\n  }\r\n  get enableTooltip() {\r\n    return this.tooltipEnable;\r\n  }\r\n  /* æç¤ºææ¬ */\r\n  @Input() text = '';\r\n  // æç¤ºæ¡æ ·å¼\r\n  @Input() tipCls='';\r\n  // æç¤ºæ¡å®½åº¦\r\n  @Input() tipWidth='';\r\n  /* ä½ç½® */\r\n  @Input() placement = 'top';\r\n\r\n  private triggerMode = 'hover';\r\n  /* è§¦åæ¹å¼ */\r\n  @Input()\r\n  set trigger(value) {\r\n    if (value) {\r\n      if (value !== this.triggerMode) {\r\n        this.triggerMode = value;\r\n        this.unbindEvent();\r\n        this.bindEvent();\r\n      }\r\n    }\r\n  }\r\n  get trigger() {\r\n    return this.triggerMode;\r\n  }\r\n\r\n  /* ç¦ç¨---è·å¶ä»æ§ä»¶çå±æ§å®¹æå²çªï¼éæ¸åºå¼ã\r\n  * æ¯å¦æé®å¯ä»¥è®¾ç½®ç¦ç¨ä¸è§¦åç¹å»ï¼ä½æ³ç»åºç¹å»æç¤ºï¼è¿æ ·å°±å²çªäº\r\n  */\r\n  @Input()\r\n  set disable(value) {\r\n    this.enableOrDisable(!value);\r\n  }\r\n  get disable() {\r\n    return !this.tooltipEnable;\r\n  }\r\n\r\n  @Input() showTip: boolean = true;\r\n\r\n\r\n  /* åå®¹æ¨¡æ¿ */\r\n  @Input() content: string | TemplateRef<any>;\r\n\r\n  mouseenterEvent: any;\r\n  mouseleaveEvent: any;\r\n  clickEvent: any;\r\n  clickOutEvent: any;\r\n  focusDownEvent: any;\r\n  focusUpEvent: any;\r\n  docBody: any;\r\n  // æ¯å¦ç»å®äºäºä»¶\r\n  private hasBindEvent = false;\r\n\r\n  /* çææç¤ºç»ä»¶ */\r\n  componentFactory: ComponentFactory<TooltipComponent> = this.resolver.resolveComponentFactory(TooltipComponent);\r\n\r\n  tooltipRef: any;\r\n  tooltip: TooltipComponent;\r\n  constructor(\r\n    private el: ElementRef,\r\n    private render: Renderer2,\r\n    private viewContainerRef: ViewContainerRef,\r\n    private resolver: ComponentFactoryResolver\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.bindEvent();\r\n  }\r\n\r\n  ngAfterViewInit(): void {\r\n\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.unbindEvent();\r\n    this.removeTooltip();\r\n  }\r\n  private enableOrDisable(value) {\r\n    this.tooltipEnable = value;\r\n    if (this.tooltipEnable) {\r\n      this.bindEvent();\r\n    } else {\r\n      this.unbindEvent();\r\n    }\r\n  }\r\n\r\n  bindEvent() {\r\n    if (!this.tooltipEnable) {\r\n      return;\r\n    }\r\n    // æ¯å¦å·²ç»å®äºä»¶\r\n    if (this.hasBindEvent) {\r\n      return;\r\n    }\r\n    if (this.trigger === 'click') {\r\n      // é¼ æ ç¹å»\r\n      this.clickEvent = this.render.listen(this.el.nativeElement, 'click', (e: MouseEvent) => {\r\n        e.stopPropagation();\r\n        this.appendTooltip();\r\n        this.clickOutEvent = this.render.listen(document, 'click', () => {\r\n          this.removeTooltip();\r\n          this.clickOutEvent();\r\n        });\r\n      });\r\n    } else if (this.trigger === 'focus') {\r\n      // èç¦\r\n      // @Todo éè¦æinputç­ç»ä»¶åæ®éç»ä»¶åå¼\r\n      this.focusDownEvent = this.render.listen(this.el.nativeElement, 'mousedown', (e: MouseEvent) => {\r\n        e.preventDefault();\r\n        this.appendTooltip();\r\n      });\r\n      this.focusUpEvent = this.render.listen(this.el.nativeElement, 'mouseup', (e: MouseEvent) => {\r\n        e.stopPropagation();\r\n        this.removeTooltip();\r\n      });\r\n    } else {\r\n      // é¼ æ ç§»å¨ä¸å»\r\n      this.mouseenterEvent = this.render.listen(this.el.nativeElement, 'mouseenter', (e: MouseEvent) => {\r\n        e.stopPropagation();\r\n        this.appendTooltip();\r\n      });\r\n      this.mouseleaveEvent = this.render.listen(this.el.nativeElement, 'mouseleave', (e: MouseEvent) => {\r\n        e.stopPropagation();\r\n        this.removeTooltip();\r\n      });\r\n    }\r\n    this.hasBindEvent = true;\r\n  }\r\n\r\n  /* è§£ç»äºä»¶ */\r\n  unbindEvent() {\r\n    // é¼ æ ç§»ä¸å»\r\n    if (this.mouseenterEvent) {\r\n      this.mouseenterEvent();\r\n    }\r\n    if (this.mouseleaveEvent) {\r\n      this.mouseleaveEvent();\r\n    }\r\n    if (this.clickEvent) {\r\n      this.clickEvent();\r\n    }\r\n    if (this.clickOutEvent) {\r\n      this.clickOutEvent();\r\n    }\r\n    if (this.focusDownEvent) {\r\n      this.focusDownEvent();\r\n    }\r\n    if (this.focusUpEvent) {\r\n      this.focusUpEvent();\r\n    }\r\n    this.hasBindEvent = false;\r\n  }\r\n\r\n  /* body  ç§»é¤tooltip */\r\n  removeTooltip() {\r\n    if (this.tooltip) {\r\n      this.render.removeChild(document.body, this.tooltip.el.nativeElement);\r\n      this._componentRef.changeDetectorRef.markForCheck();\r\n      this._componentRef.changeDetectorRef.detectChanges();      \r\n      this._componentRef.destroy();\r\n      this.viewContainerRef.clear();\r\n      this.tooltip = null;\r\n      this._componentRef=null;\r\n    }\r\n  }\r\n\r\n  private appendTooltip() {\r\n    if (!this.showTip) return;\r\n    this.generateTooltip();\r\n    this.updateViewProps(this.placement, this.content, this.el.nativeElement.getBoundingClientRect());\r\n  }\r\n\r\n  /* æ´æ°tooltipç»ä»¶å±æ§ */\r\n  private updateViewProps(placement: string, content: string | TemplateRef<any>, hostBoundingClientRect: object) {\r\n    this.tooltip.placement = placement;\r\n    this.tooltip.content = content;\r\n    this.tooltip.hostBoundingClientRect = hostBoundingClientRect;\r\n    this.tooltip.tipCls=this.tipCls;\r\n    this.tooltip.tipWidth=this.tipWidth;\r\n    this._componentRef.changeDetectorRef.markForCheck();\r\n    this._componentRef.changeDetectorRef.detectChanges();\r\n  }\r\n\r\n  /* æé tooltipç»æ */\r\n  private generateTooltip() {    \r\n    this._componentRef=this.viewContainerRef.createComponent(this.componentFactory)\r\n    this.tooltip =  this._componentRef.instance;\r\n    // ç¶åç´ ä¸­ç§»é¤  æ·»å å°bodyä¸­\r\n    this.render.removeChild(this.render.parentNode(this.el.nativeElement), this.tooltip.el.nativeElement);\r\n    this.render.appendChild(document.body, this.tooltip.el.nativeElement);\r\n  }\r\n}\r\n","import { Directive, ElementRef, Renderer2, HostListener, NgZone, OnDestroy, Input, AfterViewInit } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[f-input-tips]'\r\n})\r\nexport class FInputTipsDirective implements OnDestroy, AfterViewInit {\r\n    private cloneEl = null;\r\n    private tipsText = \"\";\r\n    mouseEnterListener: any;\r\n    // å¦ææ¯ä¸æ¯ç¨é»è®¤çTitleï¼æ­¤å±æ§ç¸å³çåè½å¯ä»¥ç§»é¤\r\n    mouseLeaveListener: any;\r\n    private _enableTips = true;\r\n    @Input('f-input-tips')\r\n    set enableTips(value) {\r\n        if (this._enableTips !== value) {\r\n            this._enableTips = value;\r\n            this.changeEventBind();\r\n        }\r\n    }\r\n    get enableTips() {\r\n        return this._enableTips;\r\n    }\r\n\r\n    constructor(private el: ElementRef, public ngzone: NgZone, private render: Renderer2) {\r\n    }\r\n\r\n    private createCloneEl() {\r\n        if (!this.el.nativeElement) { return; }\r\n        const global = {\r\n            cloneCSSProperties: [\r\n                'line-height', 'letter-spacing',\r\n                'font-size', 'font-family', 'font-style', 'font-weight', 'border',\r\n                'padding', 'height'\r\n            ]\r\n        };\r\n        const el$ = window.getComputedStyle(this.el.nativeElement);\r\n        this.cloneEl = this.render.createElement('span');\r\n        this.cloneEl['innerText'] = el$['value'];\r\n        global.cloneCSSProperties.forEach((item, index) => {\r\n            this.cloneEl.style[item] = el$.getPropertyValue(item);\r\n        });\r\n        this.render.addClass(this.cloneEl, 'f-dir-hidden-el');\r\n        this.render.appendChild(document.body, this.cloneEl);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.changeEventBind();\r\n    }\r\n    \r\n    changeEventBind() {\r\n        if (this.enableTips) {\r\n            this.ngzone.runOutsideAngular(() => {\r\n                this.mouseEnterListener = this.onMouseEnterHandler.bind(this);\r\n                this.el.nativeElement.addEventListener('mouseenter', this.mouseEnterListener);\r\n                this.mouseLeaveListener = this.onMouseLeaveHandler.bind(this);\r\n                this.el.nativeElement.addEventListener('mouseleave', this.mouseLeaveListener);\r\n            });\r\n        } else {\r\n            if (this.mouseEnterListener) {\r\n                this.el.nativeElement.removeEventListener('mouseenter', this.mouseEnterListener);\r\n                this.mouseEnterListener = null;\r\n                this.el.nativeElement.removeEventListener('mouseleave', this.mouseLeaveListener);\r\n                this.mouseLeaveListener = null;\r\n            }\r\n        }\r\n    }\r\n    ngOnDestroy() {\r\n        if (this.cloneEl) {\r\n            this.render.removeChild(document.body, this.cloneEl);\r\n        }\r\n    }\r\n    onMouseEnterHandler() {\r\n        this.changeTitle();\r\n    }\r\n    onMouseLeaveHandler() {\r\n        // ç§»é¤æç¤º\r\n        this.render.setAttribute(this.el.nativeElement, 'title', '');\r\n    }\r\n    private changeTitle() {\r\n        if (!this.cloneEl) {\r\n            this.createCloneEl();\r\n        }\r\n        this.tipsText = this.el.nativeElement['value'];\r\n        this.cloneEl['innerText'] = this.tipsText;\r\n        this.ngzone.runOutsideAngular(() => {\r\n            setTimeout(() => {\r\n                if (this.cloneEl.getBoundingClientRect().width > this.el.nativeElement.getBoundingClientRect().width) {\r\n                    this.render.setAttribute(this.el.nativeElement, \"title\", this.tipsText);\r\n                } else {\r\n                    this.onMouseLeaveHandler();\r\n                }\r\n            }, 0);\r\n        });\r\n    }\r\n}\r\n","import { Pipe, PipeTransform,SecurityContext } from \"@angular/core\";\r\nimport { DomSanitizer,SafeHtml  } from '@angular/platform-browser';\r\n \r\n// https://angular.io/guide/security\r\n@Pipe({ name: 'tooltipHtml' })\r\nexport class tooltipHtmlPipe implements PipeTransform {\r\n  constructor(private _sanitizer: DomSanitizer) { }\r\n \r\n  transform(value):SafeHtml {\r\n    return this._sanitizer.sanitize(SecurityContext.HTML, this._sanitizer.bypassSecurityTrustHtml(value));\r\n  }\r\n}","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FarrisTooltipDirective } from './tooltip.directive';\r\nimport { FInputTipsDirective } from './inputTips.directive';\r\nimport { TooltipComponent } from './tooltip-component/tooltip.component';\r\nimport { AttentionService } from './attention.service';\r\nimport { tooltipHtmlPipe } from './tooltip-safe-html.pipe';\r\n@NgModule({\r\n  declarations: [FarrisTooltipDirective, TooltipComponent, FInputTipsDirective,tooltipHtmlPipe],\r\n  imports: [CommonModule],\r\n  providers: [AttentionService],\r\n  entryComponents: [TooltipComponent],\r\n  exports: [FarrisTooltipDirective, TooltipComponent, FInputTipsDirective]\r\n})\r\nexport class FarrisTooltipModule { }\r\n"]}