/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, ElementRef, Renderer2, ChangeDetectionStrategy, ChangeDetectorRef, ViewEncapsulation, ViewChild, EventEmitter, Output, NgZone } from '@angular/core';
import { fromEvent, interval, Observable, of, BehaviorSubject, Subject } from 'rxjs';
import { takeUntil, map, scan, switchMap, takeWhile, concat, debounceTime } from 'rxjs/operators';
import { TabService } from '../tabs.config';
import ResizeObserver from 'resize-observer-polyfill';
import { NgbDropdownMenu } from '../dropdown/dropdown';
var FarrisTabsComponent = /** @class */ (function () {
    function FarrisTabsComponent(stService, elementRef, renderer, cdRef, ngZone) {
        this.stService = stService;
        this.elementRef = elementRef;
        this.renderer = renderer;
        this.cdRef = cdRef;
        this.ngZone = ngZone;
        // 支持标签页填充
        this.fill = false;
        // 支持标签页标题自适应宽度-
        this.autoTitleWidth = false;
        // 标题长度大于等于多少字符，启用渐变样式——属性废弃
        this.titleLength = 7;
        // 搜索框是否显示
        this.searchBoxVisible = true;
        // 内容是否是flex 容器 用于内部子元素flex
        this.contentDirection = 'column';
        this.clickThrottleTime = 350;
        this.clickItems = new Subject();
        // 左侧所有标签的宽度和,百分比
        this.titleWidth = 0;
        this.tabChange = new EventEmitter();
        this.tabRemove = new EventEmitter();
        // 内容填充状态
        this.contentFillStates = new BehaviorSubject(false);
        // 宽度状态
        this.widthStates = new BehaviorSubject(false);
        // 高度状态
        this.heightStates = new BehaviorSubject(false);
        this.positionStates = new BehaviorSubject('top');
        this.menuItemsWidth = 'auto';
        //maxDropdownH = 200;
        // 下拉列表最大宽度： 非正值表明是不限制宽度
        this.maxDropdownW = -1;
        this._customClass = '';
        // 标签存储列表
        this._tabs = [];
        // 工具条显示相关配置
        this.toolbarConf = {
            position: '',
            contents: []
        };
        // 工具条右侧小下拉框是否显示
        this.toolbarDpHidden = true;
        // 工具条“更多”里的按钮
        this.inMoreButtonContents = [];
        // 显示下拉数据
        this.dropdownTabs = [];
        // 隐藏左右滚动箭头按钮
        this.hideButtons = true;
        // 隐藏下拉
        this.hideDropDown = true;
        // 禁用左箭头
        this.disableLeft = false;
        // 禁用右箭头
        this.disableRight = false;
        // 记录事件流
        this.subscription = [];
        // 禁用右侧提示
        this.disableRTooltip = true;
        // 禁用左侧提示
        this.disableLTooltip = true;
        // 左侧提示数据
        this.leftTooltipTabs = [];
        // 右侧提示数据
        this.rightTooltipTabs = [];
        this.maxTooltipLen = 5;
        // 标记当前Tab标签
        this.activeId = '';
        this.ro = null;
        this._ddmHandler = null;
        this.el = this.elementRef.nativeElement;
        this.verifyConfig();
    }
    Object.defineProperty(FarrisTabsComponent.prototype, "position", {
        get: /**
         * @return {?}
         */
        function () {
            return this._position;
        },
        // tab页位置 上下左右
        set: 
        // tab页位置 上下左右
        /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._position = value;
            this.positionStates.next(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisTabsComponent.prototype, "width", {
        // tabs宽度和高度
        set: 
        // tabs宽度和高度
        /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._width = this.resolveSize(value);
            this.widthStates.next(this._width);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisTabsComponent.prototype, "height", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._height = this.resolveSize(value);
            this.heightStates.next(this._height);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisTabsComponent.prototype, "headerHeight", {
        get: /**
         * @return {?}
         */
        function () {
            return this._headerHeight;
        },
        set: /**
         * @param {?} headerHeight
         * @return {?}
         */
        function (headerHeight) {
            this._headerHeight = this.resolveSize(headerHeight);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisTabsComponent.prototype, "contentFill", {
        // 内容是否填充  默认是不填充
        set: 
        // 内容是否填充  默认是不填充
        /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._contentFill = value;
            this.contentFillStates.next(value);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisTabsComponent.prototype, "tabs", {
        // 所有标签数据
        get: 
        // 所有标签数据
        /**
         * @return {?}
         */
        function () {
            return this._tabs;
        },
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            this._tabs = value;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisTabsComponent.prototype, "customClass", {
        get: /**
         * @return {?}
         */
        function () {
            return this._customClass;
        },
        set: /**
         * @param {?} customClass
         * @return {?}
         */
        function (customClass) {
            var _this = this;
            if (this.customClass) {
                this.customClass.split(' ').forEach((/**
                 * @param {?} cssClass
                 * @return {?}
                 */
                function (cssClass) {
                    _this.renderer.removeClass(_this.el, cssClass);
                }));
            }
            this._customClass = customClass ? customClass.trim() : null;
            if (this.customClass) {
                this.customClass.split(' ').forEach((/**
                 * @param {?} cssClass
                 * @return {?}
                 */
                function (cssClass) {
                    _this.renderer.addClass(_this.el, cssClass);
                }));
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisTabsComponent.prototype, "direction", {
        get: /**
         * @return {?}
         */
        function () {
            switch (this.position) {
                case 'top':
                    return 'column';
                case 'bottom':
                    return 'column-reverse';
                case 'left':
                    return 'row';
                case 'right':
                    return 'row-reverse';
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FarrisTabsComponent.prototype, "tabDirection", {
        // 无用，兼容
        get: 
        // 无用，兼容
        /**
         * @return {?}
         */
        function () {
            if (this.position === 'top' || this.position === 'bottom') {
                return 'row';
            }
            else if (this.position === 'left' || this.position === 'right') {
                return 'column';
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} index
     * @param {?} btn
     * @return {?}
     */
    FarrisTabsComponent.prototype.trackByButton = /**
     * @param {?} index
     * @param {?} btn
     * @return {?}
     */
    function (index, btn) { return btn.id; };
    /** 验证传递参数 */
    /**
     * 验证传递参数
     * @private
     * @return {?}
     */
    FarrisTabsComponent.prototype.verifyConfig = /**
     * 验证传递参数
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var config = this.stService.getConfig();
        Object.assign(this, config);
        this.scrollStep = parseInt(this.scrollStep + '', 10);
    };
    /**
     * @return {?}
     */
    FarrisTabsComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (!this.beforeSelect) {
            this.beforeSelect = (/**
             * @return {?}
             */
            function () { return of(true); });
        }
        this.clickSubscription = this.clickItems.pipe(debounceTime(this.clickThrottleTime))
            .subscribe((/**
         * @param {?} btnInfo
         * @return {?}
         */
        function (btnInfo) {
            if (btnInfo.click && typeof btnInfo.click == 'function') {
                btnInfo.click();
            }
        }));
        this._tabContainerEl = this.tabContainer.nativeElement;
        this._createStream();
        this.activeId = this.selectId;
        if (this.ngZone) {
            this.ngZone.runOutsideAngular((/**
             * @return {?}
             */
            function () {
                if (_this.ro === null) {
                    _this.ro = new ResizeObserver((/**
                     * @param {?} el
                     * @return {?}
                     */
                    function (el) {
                        _this._reCalculateAll();
                        _this._calculateToolbarDropdownIsShow();
                        _this._calculateButtonsShow();
                    }));
                    _this.ro.observe(_this.el.parentElement);
                }
            }));
        }
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    FarrisTabsComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes['selectId']) {
            this.selectTab(changes['selectId'].currentValue);
        }
    };
    /* 标签页内容初始化 */
    /* 标签页内容初始化 */
    /**
     * @return {?}
     */
    FarrisTabsComponent.prototype.ngAfterContentInit = /* 标签页内容初始化 */
    /**
     * @return {?}
     */
    function () { };
    /**
     * @return {?}
     */
    FarrisTabsComponent.prototype.ngAfterContentChecked = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    FarrisTabsComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        // 为了兼容弄旧表单，不兼容HostBinding, 通过追加class的方式实现
        this.renderer.addClass(this.el, 'farris-tabs');
        this.renderer.addClass(this.el, 'flex-column');
        this.contentFillStates.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            if (data) {
                _this.renderer.addClass(_this.el, 'f-tabs-content-fill');
            }
            else {
                _this.renderer.removeClass(_this.el, 'f-tabs-content-fill');
            }
        }));
        this.widthStates.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            if (data) {
                _this.renderer.setStyle(_this.el, 'width', data);
            }
        }));
        this.heightStates.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            if (data) {
                _this.renderer.setStyle(_this.el, 'height', data);
            }
        }));
        this.positionStates.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            _this.renderer.removeClass(_this.el, 'flex-row');
            _this.renderer.removeClass(_this.el, 'flex-column');
            _this.renderer.removeClass(_this.el, 'flex-row-reverse');
            _this.renderer.removeClass(_this.el, 'flex-column-reverse');
            if (data === 'left') {
                _this.renderer.addClass(_this.el, 'flex-row');
            }
            if (data === 'top') {
                _this.renderer.addClass(_this.el, 'flex-column');
            }
            if (data === 'right') {
                _this.renderer.addClass(_this.el, 'flex-row-reverse');
            }
            if (data === 'bottom') {
                _this.renderer.addClass(_this.el, 'flex-column-reverse');
            }
        }));
        // 兼容结束
        this.getToolbarConf();
        this._reCalculateAll();
        this._setActive();
        this._changeTitleStyle();
        this._listenShowChanges();
        /** @type {?} */
        var self = this;
        // this.renderer.listen(document, 'keyup', function (e) {
        //     if (self.searchInputVisible) {
        //         console.log(e);
        //     }
        // });
        this._ddmHandler = this.renderer.listen(document, 'mousedown', (/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            if (!e.target.closest('.farris-tabs-header')) {
                if (_this.el && _this.el.querySelector('.dropdown-menu')) {
                    if (_this.ddm && _this.ddm.dropdown) {
                        _this.ddm.dropdown.close();
                    }
                }
            }
        }));
    };
    /**
     * @return {?}
     */
    FarrisTabsComponent.prototype.ngAfterViewChecked = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    FarrisTabsComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        // 组件销毁时  取消所有事件订阅
        this.subscription.forEach((/**
         * @param {?} sub
         * @return {?}
         */
        function (sub) {
            sub.unsubscribe();
        }));
        this.subscription = [];
        if (this.ro) {
            if (this.el.parentElement) {
                this.ro.unobserve(this.el.parentElement);
            }
            this.ro = null;
        }
        if (this._ddmHandler) {
            this._ddmHandler();
            this._ddmHandler = null;
        }
        if (this.clickSubscription) {
            this.clickSubscription.unsubscribe();
        }
    };
    /**
     * @param {?} btnInfo
     * @return {?}
     */
    FarrisTabsComponent.prototype.clickHandler = /**
     * @param {?} btnInfo
     * @return {?}
     */
    function (btnInfo) {
        if (!btnInfo) {
            return;
        }
        this.clickItems.next(btnInfo);
    };
    // 更多tab的显示隐藏
    // 更多tab的显示隐藏
    /**
     * @param {?} e
     * @return {?}
     */
    FarrisTabsComponent.prototype.openChange = 
    // 更多tab的显示隐藏
    /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this.searchInputVisible = e;
        this.searchTabText = undefined;
        this._reCalculateAll();
        // 启用了搜索，需要判断下拉面板的值
        // 因为下拉面板可能存在遮挡的问题
        if (e) {
            this.menuItemsWidth = this.ddm.resetMenuElWidthOpen() + 'px';
        }
        else {
            this.menuItemsWidth = 'auto';
        }
    };
    // 搜索tab
    // 搜索tab
    /**
     * @param {?} e
     * @return {?}
     */
    FarrisTabsComponent.prototype.searchTab = 
    // 搜索tab
    /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this._reCalculateAll();
        this.stopBubble(e);
    };
    // 阻止冒泡
    // 阻止冒泡
    /**
     * @param {?} e
     * @return {?}
     */
    FarrisTabsComponent.prototype.stopBubble = 
    // 阻止冒泡
    /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        if (e && e.stopPropagation) {
            e.stopPropagation();
        }
        else {
            window.event.cancelBubble = true;
        }
    };
    /**
     * @param {?} id
     * @param {?=} state
     * @return {?}
     */
    FarrisTabsComponent.prototype.getToolbarState = /**
     * @param {?} id
     * @param {?=} state
     * @return {?}
     */
    function (id, state) {
        if (state === void 0) { state = this.btnStates; }
        if (state) {
            return state.pipe(map((/**
             * @param {?} n
             * @return {?}
             */
            function (n) {
                if (n[id] === undefined) {
                    console.warn("\u672A\u627EID\u4E3A\uFF1A" + id + " \u76F8\u5173\u72B6\u6001\u8BBE\u7F6E\uFF01");
                    return false;
                }
                return n[id];
            })));
        }
        else {
            return of(true);
        }
    };
    // 监听子组件的隐藏显示属性
    // 监听子组件的隐藏显示属性
    /**
     * @private
     * @return {?}
     */
    FarrisTabsComponent.prototype._listenShowChanges = 
    // 监听子组件的隐藏显示属性
    /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        // 如果隐藏的组件是激活状态，先将其设置为常规
        this.tabs.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            item.showStates.subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                /** @type {?} */
                var activeIdToken;
                item._show = data;
                if (data === false && item.id === _this.activeId) {
                    item._active = false;
                    _this.activeId = '';
                    activeIdToken = false;
                }
                /** @type {?} */
                var tabs = _this.tabs.filter((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) { return item._show === true; }));
                /** @type {?} */
                var defaultTabId = tabs.length ? tabs[0].id : null;
                // 然后将显示状态下的第一个tab激活
                if (defaultTabId && activeIdToken === false) {
                    _this.tabs.forEach((/**
                     * @param {?} item
                     * @param {?} index
                     * @return {?}
                     */
                    function (item, index) {
                        if (item.id === defaultTabId) {
                            _this.activeId = item.id;
                            _this.tabs[index]._active = true;
                        }
                    }));
                    _this.getToolbarConf();
                }
                _this.cdRef.detectChanges();
            }));
        }));
    };
    /**
     * 选中Tab
     * @param  tabId tab标识
     */
    /**
     * 选中Tab
     * @param {?} tabId tab标识
     * @return {?}
     */
    FarrisTabsComponent.prototype.selectTab = /**
     * 选中Tab
     * @param {?} tabId tab标识
     * @return {?}
     */
    function (tabId) {
        /** @type {?} */
        var selectedTab = this._getTabById(tabId);
        this._selectTab(selectedTab.tab, selectedTab.index);
    };
    /**
     * @param {?} ev
     * @param {?} id
     * @param {?=} ddm
     * @return {?}
     */
    FarrisTabsComponent.prototype._cpSelectTabByIndex = /**
     * @param {?} ev
     * @param {?} id
     * @param {?=} ddm
     * @return {?}
     */
    function (ev, id, ddm) {
        if (ddm === void 0) { ddm = null; }
        /** @type {?} */
        var targetEL = (/** @type {?} */ (ev.target));
        if (targetEL.className.indexOf('st-drop-close') > -1 ||
            targetEL.parentElement.className.indexOf('st-drop-close') > -1) {
            // 阻止冒泡和捕获事件 点击删除标记 则执行删除标签方法  而不是选中标签
            ev.stopPropagation();
            this.closeTab(id);
        }
        else {
            // 阻止冒泡
            ev.preventDefault();
            this.selectTab(id);
        }
        this.getToolbarConf();
        this.cdRef.markForCheck();
        this._reCalculateAll();
        this._calculateToolbarDropdownIsShow();
        this._calculateButtonsShow();
        if (ddm) {
            ddm.dropdown.close();
        }
        return false;
    };
    /**
     * 通过tabs的索引选择 tab
     * @param index tabs索引
     */
    /**
     * 通过tabs的索引选择 tab
     * @param {?} index tabs索引
     * @return {?}
     */
    FarrisTabsComponent.prototype.selectTabByIndex = /**
     * 通过tabs的索引选择 tab
     * @param {?} index tabs索引
     * @return {?}
     */
    function (index) {
        if (index >= 0 && index < this.tabs.length) {
            /** @type {?} */
            var selectTab = this.tabs[index];
            this._selectTab(selectTab, index);
        }
    };
    /* 选中tab时  暴露出选中tab的id 和其之后的id */
    /* 选中tab时  暴露出选中tab的id 和其之后的id */
    /**
     * @private
     * @param {?} tab
     * @param {?} index
     * @return {?}
     */
    FarrisTabsComponent.prototype._selectTab = /* 选中tab时  暴露出选中tab的id 和其之后的id */
    /**
     * @private
     * @param {?} tab
     * @param {?} index
     * @return {?}
     */
    function (tab, index) {
        var _this = this;
        if (tab && !tab.disabled && this.activeId !== tab.id) {
            if (!this.beforeSelect) {
                this.beforeSelect = (/**
                 * @return {?}
                 */
                function () { return of(true); });
            }
            /** @type {?} */
            var tabsChangeEventParam_1 = {
                prevId: this.activeId,
                nextId: tab.id
            };
            this.beforeSelect(tabsChangeEventParam_1).subscribe((/**
             * @param {?} e
             * @return {?}
             */
            function (e) {
                if (e) {
                    _this.activeId = tab.id;
                    // 首先不激活所有的tab页  然后激活当前tab页
                    // let index = -1;
                    _this.tabs.forEach((/**
                     * @param {?} item
                     * @param {?} i
                     * @return {?}
                     */
                    function (item, i) {
                        item._active = false;
                    }));
                    _this.tabs[index]._active = true;
                    _this.getToolbarConf();
                    // 滚动到可见区域内
                    _this.scrollTabIntoView(index);
                    _this.cdRef.detectChanges();
                    _this.tabChange.emit(tabsChangeEventParam_1);
                }
            }));
        }
    };
    /**
     * @private
     * @return {?}
     */
    FarrisTabsComponent.prototype._setActive = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.tabs.length) {
            /** @type {?} */
            var tabs = this.tabs.filter((/**
             * @param {?} item
             * @return {?}
             */
            function (item) { return item._show === true; }));
            /** @type {?} */
            var activeTab = this._getTabById(this.activeId).tab;
            this.activeId = activeTab ? activeTab.id : this.tabs.length ? this.tabs[0].id : null;
            // 过滤掉show=false（隐藏）的tab
            if (tabs.length) {
                if (this.activeId) {
                    /** @type {?} */
                    var targetTab = tabs.find((/**
                     * @param {?} item
                     * @return {?}
                     */
                    function (item) { return item.id === _this.activeId; }));
                    if (targetTab) {
                        this.activeId = targetTab.id;
                    }
                }
                else {
                    this.activeId = tabs[0].id;
                }
            }
            else {
                this.activeId = null;
            }
            this.tabs.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                item._active = false;
                if (item.id === _this.activeId) {
                    item._active = true;
                }
            }));
        }
    };
    /**
     * @param activeId 显示某个tab
     */
    /**
     * @param {?} tabId
     * @param {?=} selectable
     * @return {?}
     */
    FarrisTabsComponent.prototype.showTab = /**
     * @param {?} tabId
     * @param {?=} selectable
     * @return {?}
     */
    function (tabId, selectable) {
        if (selectable === void 0) { selectable = true; }
        /** @type {?} */
        var len = this.tabs.length;
        for (var i = 0; i < len; i++) {
            if (this.tabs[i].id === tabId) {
                this.tabs[i]._show = true;
                if (selectable) {
                    this.selectTab(tabId);
                }
                return;
            }
        }
    };
    /**
     * @param activeId 隐藏某个tab
     */
    /**
     * @param {?} activeId 隐藏某个tab
     * @return {?}
     */
    FarrisTabsComponent.prototype.hideTab = /**
     * @param {?} activeId 隐藏某个tab
     * @return {?}
     */
    function (activeId) {
        /** @type {?} */
        var showTabs = this.tabs.filter((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            return item._show === true;
        }));
        /** @type {?} */
        var len = showTabs.length - 1;
        if (len < 0) {
            return;
        }
        /** @type {?} */
        var index;
        for (var i = 0; i <= len; i++) {
            if (showTabs[i].id === activeId) {
                showTabs[i]._show = false;
                index = i;
                break;
            }
        }
        if (index === undefined) {
            return;
        }
        else if (index === len && len < 1) {
            this.selectTab('');
        }
        else if (index === len && len >= 1) {
            this.selectTab(showTabs[len - 1].id);
        }
        else {
            this.selectTab(showTabs[index + 1].id);
        }
    };
    /**
     * 添加标签
     * @param curTabs 数组或者对象
     * @param activeId 设置
     */
    /**
     * 添加标签
     * @param {?} curTabs 数组或者对象
     * @param {?} index
     * @param {?} setActiveId
     * @return {?}
     */
    FarrisTabsComponent.prototype.addTabs = /**
     * 添加标签
     * @param {?} curTabs 数组或者对象
     * @param {?} index
     * @param {?} setActiveId
     * @return {?}
     */
    function (curTabs, index, setActiveId) {
        var _a;
        if (curTabs.length > 0) {
            (_a = this.tabs).splice.apply(_a, tslib_1.__spread([index, 0], curTabs));
            // 去重
            this.tabs = this._unique(this.tabs);
        }
        if (setActiveId && this.activeId !== setActiveId) {
            /** @type {?} */
            var filterTab = this._getTabById(setActiveId);
            if (filterTab.index >= 0) {
                this.selectTab(setActiveId);
                this.activeId = setActiveId;
                this.scrollTabIntoView(filterTab.index);
            }
        }
        this.cdRef.detectChanges();
        this._reCalculateAll();
        this._changeTitleStyle();
    };
    /**
     * 添加标签时  去重
     *
     */
    /**
     * 添加标签时  去重
     *
     * @private
     * @param {?} objArray
     * @return {?}
     */
    FarrisTabsComponent.prototype._unique = /**
     * 添加标签时  去重
     *
     * @private
     * @param {?} objArray
     * @return {?}
     */
    function (objArray) {
        /** @type {?} */
        var hash = {};
        objArray = objArray.reduce((/**
         * @param {?} item
         * @param {?} next
         * @return {?}
         */
        function (item, next) {
            if (hash[next.id]) {
                hash[next.id] = '';
            }
            else {
                hash[next.id] = true && item.push(next);
            }
            return item;
        }), []);
        return objArray;
    };
    /* 通过tab列表的序列删除tab */
    /* 通过tab列表的序列删除tab */
    /**
     * @param {?} index
     * @return {?}
     */
    FarrisTabsComponent.prototype.removeTabByIndex = /* 通过tab列表的序列删除tab */
    /**
     * @param {?} index
     * @return {?}
     */
    function (index) {
        /** @type {?} */
        var len = this.tabs.length - 1;
        if (index < 0 || index > len) {
            return;
        }
        /** @type {?} */
        var removeTab = this.tabs[index];
        removeTab._active = false;
        if (this.activeId === removeTab.id) {
            // 只有一个而且被删除
            if (len === 0) {
                // 如果所有标签均删除 激活id为空
                this.activeId = '';
            }
            else if (index === len) {
                // 如果删除的是最后一个标签 设置其前面的处于激活状态
                this.activeId = this.tabs[len - 1].id;
                this.tabs[index - 1]._active = true;
            }
            else {
                // 如果其他情况  设置其后面的处于激活状态
                this.activeId = this.tabs[index + 1].id;
                this.tabs[index + 1]._active = true;
            }
            this.tabs.splice(index, 1);
            this.scrollTabIntoView(index);
        }
        else {
            this.tabs.splice(index, 1);
        }
        this.tabRemove.emit({
            removeIndex: index,
            removeId: removeTab.id,
            activeId: this.activeId
        });
        this.cdRef.detectChanges();
    };
    /**
     * 关闭标签  跟删除标签不同
     * @param string
     */
    /**
     * 关闭标签  跟删除标签不同
     * @param {?} activeId
     * @return {?}
     */
    FarrisTabsComponent.prototype.closeTab = /**
     * 关闭标签  跟删除标签不同
     * @param {?} activeId
     * @return {?}
     */
    function (activeId) {
        /** @type {?} */
        var len = this.tabs.length;
        for (var i = 0; i < len; i++) {
            /** @type {?} */
            var tab = this.tabs[i];
            if (tab.id === activeId) {
                this.removeTabByIndex(i);
                return;
            }
        }
    };
    /**
     * 初始化
     */
    /**
     * 初始化
     * @return {?}
     */
    FarrisTabsComponent.prototype.load = /**
     * 初始化
     * @return {?}
     */
    function () {
        for (var i = 0; i < this.tabs.length; i++) {
            if (this.tabs[i].id === this.activeId) {
                this.tabs[i]._active = true;
                return;
            }
        }
    };
    /**
     * 截取tab中的title,超过6位，截断
     */
    /**
     * 截取tab中的title,超过6位，截断
     * @private
     * @return {?}
     */
    FarrisTabsComponent.prototype._truncateTitle = /**
     * 截取tab中的title,超过6位，截断
     * @private
     * @return {?}
     */
    function () {
        this.tabs = this.tabs.map((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            item.title = item.title.length > 6 ? item.title.substr(0, 6) : item.title;
            return item;
        }));
    };
    /**
     * 替换tab中的title颜色
     */
    /**
     * 替换tab中的title颜色
     * @private
     * @return {?}
     */
    FarrisTabsComponent.prototype._changeTitleStyle = /**
     * 替换tab中的title颜色
     * @private
     * @return {?}
     */
    function () {
        if (this.autoTitleWidth) {
            return;
        }
        /** @type {?} */
        var $textEls = this._tabContainerEl.querySelectorAll('.st-tab-text');
        for (var k = 0; k < $textEls.length; k++) {
            /** @type {?} */
            var parentEl = $textEls[k].parentNode;
            if ($textEls[k].scrollWidth > parentEl['offsetWidth']) {
                this.tabs[k].titleOverflow = true;
            }
            else {
                this.tabs[k].titleOverflow = false;
            }
        }
        //this.cdRef.detectChanges();
    };
    /**
     * 创建流
     */
    /**
     * 创建流
     * @private
     * @return {?}
     */
    FarrisTabsComponent.prototype._createStream = /**
     * 创建流
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        [this.rightNav, this.leftNav].forEach((/**
         * @param {?} curBtn
         * @param {?} index
         * @return {?}
         */
        function (curBtn, index) {
            /** @type {?} */
            var direction = index ? -1 : 1;
            /** @type {?} */
            var mousedown$ = fromEvent(curBtn.nativeElement, 'mousedown');
            /** @type {?} */
            var mouseup$ = fromEvent(curBtn.nativeElement, 'mouseup');
            /** @type {?} */
            var newMouseDown$ = mousedown$.pipe(switchMap((/**
             * @param {?} event
             * @return {?}
             */
            function (event) {
                event.preventDefault();
                /** @type {?} */
                var interval$ = of(0).pipe(concat(interval(80)), takeUntil(mouseup$), scan((/**
                 * @param {?} sum
                 * @param {?} num
                 * @return {?}
                 */
                function (sum, num) {
                    return sum + _this.scrollStep * direction;
                }), 0), takeWhile((/**
                 * @param {?} num
                 * @return {?}
                 */
                function (num) {
                    if (direction > 0) {
                        return !_this.disableRight;
                    }
                    return !_this.disableLeft;
                })), map((/**
                 * @param {?} v
                 * @return {?}
                 */
                function (v) {
                    return { value: v, direction: direction };
                })));
                return interval$;
            })));
            /** @type {?} */
            var mousepressSub = newMouseDown$.subscribe((/**
             * @param {?} change
             * @return {?}
             */
            function (change) {
                _this._scrollTab(change.value, change.direction);
            }));
            _this.subscription.push(mousepressSub);
        }));
        // if (this.autoResize) {
        //     // 订阅windows resize事件
        //     this.subscription.push(
        //         fromEvent(window, 'resize')
        //             .pipe(throttleTime(80))
        //             .subscribe(e => {
        //                 this.cdRef.detectChanges();
        //             })
        //     );
        // }
    };
    /**
     * 按照方向，滚动到指定位置
     * @param dist_scroll 目标滚动
     * @param direction 方向
     */
    /**
     * 按照方向，滚动到指定位置
     * @private
     * @param {?} move
     * @param {?} direction 方向
     * @return {?}
     */
    FarrisTabsComponent.prototype._scrollTab = /**
     * 按照方向，滚动到指定位置
     * @private
     * @param {?} move
     * @param {?} direction 方向
     * @return {?}
     */
    function (move, direction) {
        /** @type {?} */
        var dist_scrollleft = this._tabContainerEl.scrollLeft + move;
        /** @type {?} */
        var max_scroll_left = this._tabContainerEl.scrollWidth - this._tabContainerEl.offsetWidth;
        // 标签页左侧移动
        if (direction > 0) {
            this._tabContainerEl.scrollLeft = Math.min(dist_scrollleft, max_scroll_left);
        }
        else if (direction < 0) {
            // 标签页右侧移动
            this._tabContainerEl.scrollLeft = Math.max(dist_scrollleft, 0);
        }
        this._reCalculateSides();
        this.cdRef.detectChanges();
    };
    /**
     * 指定当前滑动到可视区域——————————————未测试
     * index
     */
    /**
     * 指定当前滑动到可视区域——————————————未测试
     * index
     * @param {?} index
     * @return {?}
     */
    FarrisTabsComponent.prototype.scrollTabIntoView = /**
     * 指定当前滑动到可视区域——————————————未测试
     * index
     * @param {?} index
     * @return {?}
     */
    function (index) {
        if (!this._tabContainerEl || this.hideButtons) {
            return;
        }
        /** @type {?} */
        var tabIndex = parseInt(index + '', 10);
        /** @type {?} */
        var tabToScroll;
        // first we find the tab element.
        if (tabIndex >= 0) {
            /** @type {?} */
            var allTabs = this._tabContainerEl.querySelectorAll('.nav-item');
            if (allTabs.length > tabIndex) {
                tabToScroll = allTabs[tabIndex];
            }
        }
        else {
            // scroll selected tab into view
            /** @type {?} */
            var activeTab = this._tabContainerEl.querySelector('li.active');
            if (activeTab) {
                tabToScroll = activeTab;
            }
        }
        if (tabToScroll) {
            /** @type {?} */
            var tab_left = parseInt(tabToScroll.getBoundingClientRect().left + '', 10);
            /** @type {?} */
            var tabs_left = parseInt(this._tabContainerEl.getBoundingClientRect().left + '', 10);
            /** @type {?} */
            var rightPosition = tab_left +
                parseInt(tabToScroll.getBoundingClientRect().width + '', 10) -
                tabs_left;
            /** @type {?} */
            var leftPosition = tab_left - tabs_left - 10;
            if (leftPosition < 0) {
                this._scrollTab(leftPosition, -1);
            }
            else if (rightPosition > this._tabContainerEl.offsetWidth) {
                this._scrollTab(rightPosition - this._tabContainerEl.offsetWidth + 20, 1);
            }
        }
    };
    /**
     * 切换tab后，重新获取需要该tab下工具条按钮的配置信息以及隐藏更多按钮
     * 以及获取该tab下的头部扩展区域
     */
    /**
     * 切换tab后，重新获取需要该tab下工具条按钮的配置信息以及隐藏更多按钮
     * 以及获取该tab下的头部扩展区域
     * @private
     * @return {?}
     */
    FarrisTabsComponent.prototype.getToolbarConf = /**
     * 切换tab后，重新获取需要该tab下工具条按钮的配置信息以及隐藏更多按钮
     * 以及获取该tab下的头部扩展区域
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var tabConfig = this.tabs.filter((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            return item._active === true;
        }))[0];
        if (!tabConfig || !tabConfig.hasOwnProperty('toolbar')) {
            this.toolbarConf = null;
        }
        else {
            this.toolbarConf = tabConfig.toolbar;
        }
        // 获取该tab下的头部扩展区域
        if (!tabConfig || !tabConfig.hasOwnProperty('farrisTabsExtendDirective')) {
            this.headerExtendConf = null;
        }
        else {
            this.headerExtendConf = tabConfig.farrisTabsExtendDirective;
        }
        // 隐藏更多按钮
        this.toolbarDpHidden = true;
        this.cdRef.detectChanges();
    };
    /**
     * 计算工具栏是否显示下拉按钮
     */
    /**
     * 计算工具栏是否显示下拉按钮
     * @private
     * @return {?}
     */
    FarrisTabsComponent.prototype._calculateToolbarDropdownIsShow = /**
     * 计算工具栏是否显示下拉按钮
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var headerExtendEl;
        /** @type {?} */
        var headerExtendElWidth = 0;
        if (!this.toolbarContainer || !this.toolbarConf) {
            return;
        }
        /** @type {?} */
        var toolbarContainer = this.hasInHeadCl() ? this.toolbarContainer.nativeElement : this.toolbarContainer.nativeElement.parentElement;
        /** @type {?} */
        var divEl = toolbarContainer.querySelector('.farris-tabs-inline-flex');
        if (!divEl) {
            return;
        }
        if (this.headerExtendConf) {
            headerExtendEl = toolbarContainer.querySelector('.farris-tabs-header-extend');
            this.renderer.removeStyle(headerExtendEl, 'overflow');
            headerExtendElWidth = headerExtendEl.offsetWidth;
        }
        // 按钮在内容区
        if (!this.hasInHeadCl() && this.btnPlaceHolder.nativeElement.offsetWidth > toolbarContainer.offsetWidth) {
            this.toolbarDpHidden = false;
        }
        else if (this.hasInHeadCl() && this.btnPlaceHolder.nativeElement.offsetWidth > toolbarContainer.offsetWidth - headerExtendElWidth) {
            // 按钮在头部工具栏
            this.toolbarDpHidden = false;
        }
        else {
            this.toolbarDpHidden = true;
        }
        this.cdRef.detectChanges();
    };
    /**
     * 计算显示的按钮个数及更多中显示的按钮个数
     */
    /**
     * 计算显示的按钮个数及更多中显示的按钮个数
     * @private
     * @return {?}
     */
    FarrisTabsComponent.prototype._calculateButtonsShow = /**
     * 计算显示的按钮个数及更多中显示的按钮个数
     * @private
     * @return {?}
     */
    function () {
        /** @type {?} */
        var headerExtendEl;
        /** @type {?} */
        var headerExtendElWidth = 0;
        if (!this.toolbarContainer || !this.toolbarConf) {
            return;
        }
        /** @type {?} */
        var toolbarContainer = this.hasInHeadCl() ? this.toolbarContainer.nativeElement : this.toolbarContainer.nativeElement.parentElement;
        /** @type {?} */
        var divEl = toolbarContainer.querySelector('.farris-tabs-inline-flex');
        /** @type {?} */
        var btnPlaceHolderEl = this.btnPlaceHolder.nativeElement;
        /** @type {?} */
        var btnPlaceHolderBtns = btnPlaceHolderEl.querySelectorAll('button');
        if (!divEl || btnPlaceHolderBtns.length == 0) {
            return;
        }
        // 此处有个Bug，如果是inContent还是headerExtendConf的情况下，按钮的位置形如inHead
        if (this.headerExtendConf) {
            headerExtendEl = toolbarContainer.querySelector('.farris-tabs-header-extend');
            headerExtendElWidth = this.hasInHeadCl() ? headerExtendEl.offsetWidth : 0;
        }
        /** @type {?} */
        var moreButton = toolbarContainer.querySelector('.morebtn');
        // 计算按钮的宽度      
        /** @type {?} */
        var basicStart = parseInt(btnPlaceHolderEl.getBoundingClientRect().left);
        /** @type {?} */
        var basicWidth = toolbarContainer.offsetWidth - moreButton.offsetWidth - 12 - headerExtendElWidth;
        /** @type {?} */
        var toolbarDropdownHidden = true;
        /** @type {?} */
        var k = 0
        // 只有一个按钮
        ;
        // 只有一个按钮
        if (btnPlaceHolderBtns.length == 1) {
            if (btnPlaceHolderEl.offsetWidth > basicWidth) {
                toolbarDropdownHidden = false;
            }
            else {
                k = 1;
            }
        }
        else {
            for (k = 1; k <= btnPlaceHolderBtns.length - 1; k++) {
                // 如果内容超出,考虑到按钮之间的间距
                if (k == btnPlaceHolderBtns.length - 1) {
                    if (btnPlaceHolderEl.offsetWidth > basicWidth) {
                        toolbarDropdownHidden = false;
                        k = k - 1;
                        break;
                    }
                }
                else if (parseInt(btnPlaceHolderBtns[k].getBoundingClientRect().left) - basicStart > basicWidth) {
                    toolbarDropdownHidden = false;
                    k = k - 1;
                    break;
                }
            }
        }
        this.toolbarDpHidden = toolbarDropdownHidden;
        /** @type {?} */
        var showBtns = divEl.querySelectorAll('button');
        for (var i = 0; i < k; i++) {
            this.renderer.setStyle(showBtns[i], 'display', '');
        }
        for (var m = k; m < showBtns.length; m++) {
            this.renderer.setStyle(showBtns[m], 'display', 'none');
        }
        if (this.toolbarConf.contents && this.toolbarConf.contents.length) {
            this.inMoreButtonContents = this.toolbarConf.contents.filter((/**
             * @param {?} item
             * @param {?} index
             * @return {?}
             */
            function (item, index) {
                return index >= k;
            }));
        }
    };
    /**
     * 重新计算是否显示按钮和下拉
     */
    /**
     * 重新计算是否显示按钮和下拉
     * @private
     * @return {?}
     */
    FarrisTabsComponent.prototype._reCalculateAll = /**
     * 重新计算是否显示按钮和下拉
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        if (!this._tabContainerEl) {
            return;
        }
        /** @type {?} */
        var tabParentWidth = this.tabParent.nativeElement.offsetWidth;
        if (!this.hideButtons) {
            /** @type {?} */
            var tr = parseInt(window.getComputedStyle(this.tabParent.nativeElement).getPropertyValue("margin-right"));
            /** @type {?} */
            var tl = parseInt(window.getComputedStyle(this.tabParent.nativeElement).getPropertyValue("margin-left"));
            tabParentWidth += tr + tl;
        }
        this.hideButtons = this._tabContainerEl.scrollWidth <= tabParentWidth;
        this.hideDropDown = this.showDropDown ? this.hideButtons : true;
        if (!this.hideButtons) {
            if (!this.hideDropDown) {
                this.dropdownTabs = [].concat(this.tabs);
            }
            if (this.searchTabText) {
                this.dropdownTabs = this.dropdownTabs.filter((/**
                 * @param {?} item
                 * @return {?}
                 */
                function (item) {
                    return item['title'].indexOf(_this.searchTabText) !== -1;
                }));
            }
            this._reCalculateSides();
        }
        this.cdRef.detectChanges();
    };
    /**
     * 重新计算左右的提示文字
     */
    /**
     * 重新计算左右的提示文字
     * @private
     * @return {?}
     */
    FarrisTabsComponent.prototype._reCalulateTooltips = /**
     * 重新计算左右的提示文字
     * @private
     * @return {?}
     */
    function () {
        if (!this._tabContainerEl || this.hideButtons) {
            return;
        }
        /** @type {?} */
        var t_right_tooltips = [];
        /** @type {?} */
        var t_left_tooltips = [];
        /** @type {?} */
        var allTabs = this._tabContainerEl.querySelectorAll('.nav-item');
        /** @type {?} */
        var len = allTabs.length;
        /** @type {?} */
        var hiddenTabs = this.tabs.filter((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            return item._show !== true;
        }));
        /** @type {?} */
        var hiddenTabsLength = hiddenTabs.length;
        for (var i = 0; i < len; i++) {
            /** @type {?} */
            var leftPosition = allTabs[i].getBoundingClientRect().left -
                this._tabContainerEl.getBoundingClientRect().left;
            /** @type {?} */
            var rightPosition = allTabs[i].getBoundingClientRect().width + leftPosition;
            if (rightPosition > this._tabContainerEl.offsetWidth) {
                t_right_tooltips.push(this.tabs[i]);
            }
            else if (leftPosition < 0) {
                t_left_tooltips.push(this.tabs[i]);
            }
        }
        this.leftTooltipTabs = []
            .concat(t_left_tooltips)
            .slice(Math.max(0, t_left_tooltips.length - this.maxTooltipLen));
        this.rightTooltipTabs = []
            .concat(t_right_tooltips)
            .slice(0, Math.min(this.maxTooltipLen, t_right_tooltips.length));
        this.disableRTooltip = this.rightTooltipTabs.length < 1;
        this.disableLTooltip = this.leftTooltipTabs.length - hiddenTabsLength < 1;
    };
    /**
     * 重新计算左右箭头状态
     */
    /**
     * 重新计算左右箭头状态
     * @private
     * @return {?}
     */
    FarrisTabsComponent.prototype._reCalculateSides = /**
     * 重新计算左右箭头状态
     * @private
     * @return {?}
     */
    function () {
        this.disableRight =
            this._tabContainerEl.scrollLeft >=
                this._tabContainerEl.scrollWidth - this._tabContainerEl.offsetWidth;
        this.disableLeft = this._tabContainerEl.scrollLeft <= 0;
        this._reCalulateTooltips();
    };
    /**
     * 通过id寻找Tab
     * @param id ID
     */
    /**
     * 通过id寻找Tab
     * @private
     * @param {?} id ID
     * @return {?}
     */
    FarrisTabsComponent.prototype._getTabById = /**
     * 通过id寻找Tab
     * @private
     * @param {?} id ID
     * @return {?}
     */
    function (id) {
        /** @type {?} */
        var indexWidthId = [];
        /** @type {?} */
        var tabsWithId = this.tabs.filter((/**
         * @param {?} tab
         * @param {?} index
         * @return {?}
         */
        function (tab, index) {
            if (tab.id === id) {
                indexWidthId.push(index);
                return true;
            }
            else {
                return false;
            }
        }));
        return {
            tab: tabsWithId.length ? tabsWithId[0] : null,
            index: indexWidthId.length ? indexWidthId[0] : -1
        };
    };
    /*宽高类型是 string或者number 解析宽高  尺寸 */
    /*宽高类型是 string或者number 解析宽高  尺寸 */
    /**
     * @param {?} size
     * @return {?}
     */
    FarrisTabsComponent.prototype.resolveSize = /*宽高类型是 string或者number 解析宽高  尺寸 */
    /**
     * @param {?} size
     * @return {?}
     */
    function (size) {
        /** @type {?} */
        var regex = /px|em|rem|pt|%/;
        // 说明是字符串
        return regex.test(size)
            ? "" + parseInt(size, 10) + size.match(regex)[0]
            : size + "px";
    };
    /*
      清空tab
       */
    // removeAllTab() {
    //     this.tabs.splice(0, this.tabs.length);
    // }
    /*
          清空tab
           */
    // removeAllTab() {
    //     this.tabs.splice(0, this.tabs.length);
    // }
    /**
     * @return {?}
     */
    FarrisTabsComponent.prototype.hasInHeadCl = /*
          清空tab
           */
    // removeAllTab() {
    //     this.tabs.splice(0, this.tabs.length);
    // }
    /**
     * @return {?}
     */
    function () {
        if (this.toolbarConf && this.toolbarConf.hasOwnProperty('position') && this.toolbarConf.hasOwnProperty('contents') && this.toolbarConf.position === 'inHead' && this.toolbarConf.contents.length > 0) {
            return true;
        }
        if (this.headerExtendConf && !(this.toolbarConf && this.toolbarConf.position === 'inContent' && this.toolbarConf.contents.length)) {
            return true;
        }
        return false;
    };
    FarrisTabsComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-tabs',
                    template: "<div #tabHeader class=\"farris-tabs-header\"\r\n    [class.farris-tabs-inHead]=\"hasInHeadCl()\"\r\n    [class.farris-tabs-inContent]=\"!hasInHeadCl()\">\r\n    <div class=\"farris-tabs-title scroll-tabs\"\r\n        [ngStyle]=\"{'width': hasInHeadCl() ? (titleWidth?titleWidth + '%':null) : null}\">\r\n        <button type=\"button\" (disabled)=\"disableLeft\" class=\"btn sc-nav-btn px-1 sc-nav-lr\"\r\n            [ngClass]=\"{'d-none':hideButtons}\" #leftNav>\r\n        </button>\r\n        <div class=\"spacer f-utils-fill\" #tabParent\r\n            [ngClass]=\"{'spacer-sides':!hideButtons&& hideDropDown,'spacer-sides-dropdown':!hideButtons&&!hideDropDown}\"\r\n            style=\"width:100%;\">\r\n            <ul class=\"nav farris-nav-tabs flex-nowrap\" [class.nav-fill]=\"fill\"\r\n                [class.flex-row]=\"position==='top'||position==='bottom'\"\r\n                [class.flex-column]=\"position==='left'||position==='right'\" #tabContainer>\r\n                <li class=\"nav-item\" *ngFor=\"let tab of tabs;index as tabIndex\"\r\n                    [ngClass]=\"{'d-none': tab._show !== true, 'f-state-active': tab.id === activeId, 'f-state-disabled': tab.disabled === true}\"\r\n                    [ngStyle]=\"{'width':tab.tabWidth+'px'}\">\r\n                    <a class=\"nav-link tabs-text-truncate\" #anchor [class.active]=\"tab.id === activeId\"\r\n                        [class.disabled]=\"tab.disabled\" (click)=\"_cpSelectTabByIndex($event,tab.id)\">\r\n                        <span class=\"st-tab-text\" [class.farris-title-auto]=\"autoTitleWidth\"\r\n                            [ngClass]=\"tab.titleCustomCls\" [tabTransclude]=\"tab.headingRef\"\r\n                            *ngIf=\"tab.headingRef\"></span>\r\n                        <span class=\"st-tab-text\" [ngbTooltip]=\"tab.title\" [referElement]=\"tabContainer\"\r\n                            [disableTooltip]=\"!tab.titleOverflow\" [class.farris-title-auto]=\"autoTitleWidth\"\r\n                            [class.farris-title-text-custom]=\"tab.titleOverflow\"\r\n                            *ngIf=\"!tab.headingRef\">{{tab.title}}</span>\r\n                        <span class=\"st-drop-close\" *ngIf=\"tab.removeable\">\r\n                            <i class=\"f-icon f-icon-close\"></i>\r\n                        </span>\r\n                    </a>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n        <div class=\"btn-group sc-nav-btn\" ngbDropdown (openChange)=\"openChange($event)\">\r\n            <button type=\"button\" (disabled)=\"disableRight\" class=\"btn sc-nav-rg\" [ngClass]=\"{'d-none':hideButtons}\"\r\n                #rightNav></button>\r\n            <button #dropDownButton class=\"btn dropdown-toggle-split \" ngbDropdownToggle\r\n                [ngClass]=\"{'d-none':hideDropDown}\">\r\n            </button>\r\n            <div class=\"dropdown-menu\" [class.tabs-pt28]=\"searchBoxVisible\" ngbDropdownMenu #ddm=\"DropdownMenu\">\r\n                <div (click)=\"stopBubble($event)\" class='pb-1 tabs-li-absolute' *ngIf=\"searchBoxVisible\">\r\n                    <input type=\"text\" class=\"form-control k-textbox\" [(ngModel)]=\"searchTabText\"\r\n                        (keyup)=\"searchTab($event)\" />\r\n                    <span class=\"f-icon f-icon-page-title-query tabs-icon-search\"></span>\r\n                </div>\r\n                <ul class=\"tab-dropdown-menu--items\" [ngStyle]=\"{'width':menuItemsWidth}\">\r\n                    <li class=\"dropdown-item text-truncate px-2\" *ngFor=\"let tab of dropdownTabs;index as tabIndex\"\r\n                        [ngClass]=\"{'disabled': tab.disabled, 'active': tab.id === activeId, 'd-none': tab._show !==true}\"\r\n                        (click)=\"_cpSelectTabByIndex($event,tab.id, ddm)\">\r\n                        <!-- <span class=\"float-right st-drop-close\">\r\n                            <i class=\"material-icons align-middle\">close</i>\r\n                        </span> -->\r\n                        <a class=\"dropdown-title\">{{tab.title}}</a>\r\n                    </li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    <div #toolbarContainer class=\"farris-tabs-toolbar\" *ngIf=\"toolbarConf || headerExtendConf\">\r\n        <div *ngIf=\"headerExtendConf && headerExtendConf.templateRef\" class=\"farris-tabs-header-extend\"\r\n            [class.margin-right-14]=\"toolbarConf && toolbarConf.contents.length\"\r\n            [ngClass]=\"headerExtendConf && headerExtendConf.extendCls\">\r\n            <template [ngTemplateOutlet]=\"headerExtendConf.templateRef\"></template>\r\n        </div>\r\n        <div class=\"farris-tabs-inline-flex\" *ngIf=\"toolbarConf\">\r\n            <ng-template ngFor let-btn [ngForOf]=\"toolbarConf.contents\" let-i=\"index\" [ngForTrackBy]=\"trackByButton\">\r\n                <button [attr.id]=\"btn.id\" [ngClass]=\"btn.appearance.class\"\r\n                    *ngIf=\"getToolbarState(btn.id, btnVisible) | async\"\r\n                    [disabled]=\"getToolbarState(btn.id, btnStates) | async\"\r\n                    (click)=\"clickHandler(btn)\">{{btn.title}}</button>\r\n            </ng-template>\r\n        </div>\r\n        <div class=\"btn-group sc-nav-btn\" ngbDropdown [hidden]=\"toolbarDpHidden\">\r\n            <button class=\"btn btn-link morebtn\" ngbDropdownToggle>{{'tabs.more' | locale}}</button>\r\n            <ul class=\"dropdown-menu\" ngbDropdownMenu *ngIf=\"inMoreButtonContents.length\">\r\n                <ng-template ngFor let-content [ngForOf]=\"inMoreButtonContents\" let-i=\"index\">\r\n                    <li class=\"dropdown-item text-truncate px-2\"\r\n                        *ngIf=\"getToolbarState(content.id, btnVisible) | async\">\r\n                        <button style=\"width:100%;\" [attr.id]=\"content.id\" class=\"btn btn-link text-left\"\r\n                            [class.disabled]=\"getToolbarState(content.id, btnStates) | async\"\r\n                            (click)=\"clickHandler(content)\">{{content.title}}</button>\r\n                    </li>\r\n                </ng-template>\r\n            </ul>\r\n        </div>\r\n    </div>\r\n    <div class=\"farris-tabs-btn-placeholder\" #btnPlaceholder *ngIf=\"toolbarConf\">\r\n        <ng-container *ngFor=\"let btn of toolbarConf.contents\">\r\n            <button [ngClass]=\"btn.appearance.class\"\r\n                *ngIf=\"getToolbarState(btn.id, btnVisible) | async\">{{btn.title}}</button>\r\n        </ng-container>\r\n    </div>\r\n</div>\r\n<ng-content></ng-content>",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    encapsulation: ViewEncapsulation.None,
                    styles: [".farris-tabs .farris-tabs-header.farris-tabs-inHead .farris-tabs-title{width:41.6666667%}.farris-tabs .farris-tabs-header.farris-tabs-inHead .farris-tabs-toolbar{-webkit-box-flex:1;flex:1;-webkit-box-align:center;align-items:center}.farris-tabs .farris-tabs-header .farris-tabs-title.scroll-tabs .spacer.spacer-sides-dropdown{margin:0 60px 0 28px}.farris-tabs .farris-tabs-header .farris-tabs-title.scroll-tabs .sc-nav-btn.dropdown{right:6px}.farris-tabs .margin-right-14{margin-right:14px}.farris-tabs .farris-tabs-header-extend{height:44px}.farris-tabs .farris-tabs-header .farris-tabs-title.scroll-tabs .spacer .farris-nav-tabs .nav-item .nav-link .farris-title-text{max-width:112px}.farris-tabs .tabs-pt28{padding:0}.farris-tabs .tab-dropdown-menu--items{max-height:200px;overflow:auto}.farris-tabs .tabs-li-absolute{padding:4px;margin:0;position:relative}.farris-tabs .tabs-icon-search{position:absolute;right:4px;top:50%;font-size:14px;padding:0 4px;width:auto;height:24px;color:rgba(0,0,0,.25);margin-top:-12px;line-height:20px}.farris-tabs .st-drop-close{line-height:1}.farris-tabs .dropdown-menu .dropdown-item .dropdown-title{overflow:hidden;display:inline-block;padding:0 5px}.farris-tabs .farris-tabs-header.farris-tabs-inHead .farris-tabs-inline-flex{overflow:hidden}.farris-tabs .farris-tabs-btn-placeholder{position:absolute;display:-webkit-inline-box;display:inline-flex;top:-30px;left:0;opacity:0;z-index:-90}"]
                }] }
    ];
    /** @nocollapse */
    FarrisTabsComponent.ctorParameters = function () { return [
        { type: TabService },
        { type: ElementRef },
        { type: Renderer2 },
        { type: ChangeDetectorRef },
        { type: NgZone }
    ]; };
    FarrisTabsComponent.propDecorators = {
        fill: [{ type: Input }],
        autoTitleWidth: [{ type: Input }],
        titleLength: [{ type: Input }],
        position: [{ type: Input }],
        showDropDown: [{ type: Input }],
        showTooltips: [{ type: Input }],
        scrollStep: [{ type: Input }],
        autoResize: [{ type: Input }],
        closeable: [{ type: Input }],
        selectId: [{ type: Input, args: ['value',] }],
        width: [{ type: Input }],
        height: [{ type: Input }],
        searchBoxVisible: [{ type: Input }],
        headerHeight: [{ type: Input, args: ['header-height',] }],
        contentDirection: [{ type: Input }],
        contentFill: [{ type: Input }],
        clickThrottleTime: [{ type: Input }],
        btnStates: [{ type: Input }],
        btnVisible: [{ type: Input }],
        tabs: [{ type: Input }],
        customClass: [{ type: Input }],
        titleWidth: [{ type: Input }],
        leftNav: [{ type: ViewChild, args: ['leftNav',] }],
        rightNav: [{ type: ViewChild, args: ['rightNav',] }],
        tabContainer: [{ type: ViewChild, args: ['tabContainer',] }],
        toolbarContainer: [{ type: ViewChild, args: ['toolbarContainer',] }],
        dropDownButton: [{ type: ViewChild, args: ['dropDownButton',] }],
        tabParent: [{ type: ViewChild, args: ['tabParent',] }],
        btnPlaceHolder: [{ type: ViewChild, args: ['btnPlaceholder',] }],
        beforeSelect: [{ type: Input }],
        tabChange: [{ type: Output }],
        tabRemove: [{ type: Output }],
        ddm: [{ type: ViewChild, args: ['ddm',] }]
    };
    return FarrisTabsComponent;
}());
export { FarrisTabsComponent };
if (false) {
    /** @type {?} */
    FarrisTabsComponent.prototype.fill;
    /** @type {?} */
    FarrisTabsComponent.prototype.autoTitleWidth;
    /** @type {?} */
    FarrisTabsComponent.prototype.titleLength;
    /** @type {?} */
    FarrisTabsComponent.prototype.searchInputVisible;
    /** @type {?} */
    FarrisTabsComponent.prototype.showDropDown;
    /** @type {?} */
    FarrisTabsComponent.prototype.showTooltips;
    /** @type {?} */
    FarrisTabsComponent.prototype.scrollStep;
    /** @type {?} */
    FarrisTabsComponent.prototype.autoResize;
    /** @type {?} */
    FarrisTabsComponent.prototype.closeable;
    /** @type {?} */
    FarrisTabsComponent.prototype.selectId;
    /** @type {?} */
    FarrisTabsComponent.prototype.searchBoxVisible;
    /** @type {?} */
    FarrisTabsComponent.prototype._headerHeight;
    /** @type {?} */
    FarrisTabsComponent.prototype.contentDirection;
    /** @type {?} */
    FarrisTabsComponent.prototype.clickThrottleTime;
    /**
     * @type {?}
     * @private
     */
    FarrisTabsComponent.prototype.clickItems;
    /**
     * @type {?}
     * @private
     */
    FarrisTabsComponent.prototype.clickSubscription;
    /** @type {?} */
    FarrisTabsComponent.prototype.btnStates;
    /** @type {?} */
    FarrisTabsComponent.prototype.btnVisible;
    /** @type {?} */
    FarrisTabsComponent.prototype.titleWidth;
    /** @type {?} */
    FarrisTabsComponent.prototype.leftNav;
    /** @type {?} */
    FarrisTabsComponent.prototype.rightNav;
    /** @type {?} */
    FarrisTabsComponent.prototype.tabContainer;
    /** @type {?} */
    FarrisTabsComponent.prototype.toolbarContainer;
    /** @type {?} */
    FarrisTabsComponent.prototype.dropDownButton;
    /** @type {?} */
    FarrisTabsComponent.prototype.tabParent;
    /** @type {?} */
    FarrisTabsComponent.prototype.btnPlaceHolder;
    /**
     * 选中tab 前事件
     * @type {?}
     */
    FarrisTabsComponent.prototype.beforeSelect;
    /** @type {?} */
    FarrisTabsComponent.prototype.tabChange;
    /** @type {?} */
    FarrisTabsComponent.prototype.tabRemove;
    /** @type {?} */
    FarrisTabsComponent.prototype.contentFillStates;
    /** @type {?} */
    FarrisTabsComponent.prototype._contentFill;
    /** @type {?} */
    FarrisTabsComponent.prototype.widthStates;
    /** @type {?} */
    FarrisTabsComponent.prototype._width;
    /** @type {?} */
    FarrisTabsComponent.prototype.heightStates;
    /** @type {?} */
    FarrisTabsComponent.prototype._height;
    /** @type {?} */
    FarrisTabsComponent.prototype._position;
    /** @type {?} */
    FarrisTabsComponent.prototype.positionStates;
    /** @type {?} */
    FarrisTabsComponent.prototype.menuItemsWidth;
    /** @type {?} */
    FarrisTabsComponent.prototype.maxDropdownW;
    /**
     * @type {?}
     * @private
     */
    FarrisTabsComponent.prototype._customClass;
    /**
     * @type {?}
     * @private
     */
    FarrisTabsComponent.prototype._tabs;
    /** @type {?} */
    FarrisTabsComponent.prototype.headerExtendConf;
    /** @type {?} */
    FarrisTabsComponent.prototype.toolbarConf;
    /** @type {?} */
    FarrisTabsComponent.prototype.toolbarDpHidden;
    /** @type {?} */
    FarrisTabsComponent.prototype.inMoreButtonContents;
    /** @type {?} */
    FarrisTabsComponent.prototype.dropdownTabs;
    /** @type {?} */
    FarrisTabsComponent.prototype.hideButtons;
    /** @type {?} */
    FarrisTabsComponent.prototype.tabWidth;
    /** @type {?} */
    FarrisTabsComponent.prototype.hideDropDown;
    /** @type {?} */
    FarrisTabsComponent.prototype.disableLeft;
    /** @type {?} */
    FarrisTabsComponent.prototype.disableRight;
    /**
     * @type {?}
     * @private
     */
    FarrisTabsComponent.prototype.el;
    /** @type {?} */
    FarrisTabsComponent.prototype.subscription;
    /** @type {?} */
    FarrisTabsComponent.prototype.disableRTooltip;
    /** @type {?} */
    FarrisTabsComponent.prototype.disableLTooltip;
    /** @type {?} */
    FarrisTabsComponent.prototype.leftTooltipTabs;
    /** @type {?} */
    FarrisTabsComponent.prototype.rightTooltipTabs;
    /**
     * @type {?}
     * @private
     */
    FarrisTabsComponent.prototype._tabContainerEl;
    /**
     * @type {?}
     * @private
     */
    FarrisTabsComponent.prototype.maxTooltipLen;
    /** @type {?} */
    FarrisTabsComponent.prototype.activeId;
    /**
     * @type {?}
     * @private
     */
    FarrisTabsComponent.prototype.ro;
    /** @type {?} */
    FarrisTabsComponent.prototype.searchTabText;
    /** @type {?} */
    FarrisTabsComponent.prototype.ddm;
    /**
     * @type {?}
     * @private
     */
    FarrisTabsComponent.prototype._ddmHandler;
    /**
     * @type {?}
     * @private
     */
    FarrisTabsComponent.prototype.stService;
    /**
     * @type {?}
     * @private
     */
    FarrisTabsComponent.prototype.elementRef;
    /**
     * @type {?}
     * @private
     */
    FarrisTabsComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    FarrisTabsComponent.prototype.cdRef;
    /**
     * @type {?}
     * @private
     */
    FarrisTabsComponent.prototype.ngZone;
}
//# sourceMappingURL=data:application/json;base64,