/**
 * @fileoverview added by tsickle
 * Generated from: lib/components/preview-checkbox/preview-checkbox.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, Output, EventEmitter, HostBinding } from '@angular/core';
var PreviewCheckboxComponent = /** @class */ (function () {
    function PreviewCheckboxComponent() {
        this.cls1 = true;
        this.cls2 = true;
        this.cls3 = true;
        this.checked = false;
        this.disabled = false;
        this.checkedChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    PreviewCheckboxComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () { };
    /**
     * @param {?} event
     * @return {?}
     */
    PreviewCheckboxComponent.prototype.clickHandler = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        event.stopPropagation();
        if (!this.disabled) {
            this.checked = !this.checked;
            this.checkedChange.emit({ checked: this.checked, id: this.id });
        }
    };
    PreviewCheckboxComponent.decorators = [
        { type: Component, args: [{
                    selector: 'f-file-preview-checkbox',
                    template: "<div class=\"custom-control custom-checkbox f-checkradio-single  m-0\" >\r\n  <input class=\"custom-control-input\" type=\"checkbox\"  [checked]=\"checked\" />\r\n  <label class=\"custom-control-label\" (click)=\"clickHandler($event)\"></label>\r\n</div>"
                }] }
    ];
    /** @nocollapse */
    PreviewCheckboxComponent.ctorParameters = function () { return []; };
    PreviewCheckboxComponent.propDecorators = {
        cls1: [{ type: HostBinding, args: ['class.align-middle',] }],
        cls2: [{ type: HostBinding, args: ['class.d-inline-flex',] }],
        cls3: [{ type: HostBinding, args: ['class.preview-checkbox',] }],
        checked: [{ type: Input }],
        id: [{ type: Input }],
        disabled: [{ type: Input }],
        checkedChange: [{ type: Output }]
    };
    return PreviewCheckboxComponent;
}());
export { PreviewCheckboxComponent };
if (false) {
    /** @type {?} */
    PreviewCheckboxComponent.prototype.cls1;
    /** @type {?} */
    PreviewCheckboxComponent.prototype.cls2;
    /** @type {?} */
    PreviewCheckboxComponent.prototype.cls3;
    /** @type {?} */
    PreviewCheckboxComponent.prototype.checked;
    /** @type {?} */
    PreviewCheckboxComponent.prototype.id;
    /** @type {?} */
    PreviewCheckboxComponent.prototype.disabled;
    /** @type {?} */
    PreviewCheckboxComponent.prototype.checkedChange;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHJldmlldy1jaGVja2JveC5jb21wb25lbnQuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2V4dGVuZC1maWxlLXVwbG9hZC8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL3ByZXZpZXctY2hlY2tib3gvcHJldmlldy1jaGVja2JveC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFVLEtBQUssRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLFdBQVcsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUU1RjtJQWdCRTtRQVZtQyxTQUFJLEdBQUMsSUFBSSxDQUFDO1FBQ1QsU0FBSSxHQUFDLElBQUksQ0FBQztRQUNQLFNBQUksR0FBQyxJQUFJLENBQUM7UUFFeEMsWUFBTyxHQUFVLEtBQUssQ0FBQztRQUV2QixhQUFRLEdBQVUsS0FBSyxDQUFDO1FBRXZCLGtCQUFhLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQUU3QixDQUFDOzs7O0lBRWpCLDJDQUFROzs7SUFBUixjQUFhLENBQUM7Ozs7O0lBRWQsK0NBQVk7Ozs7SUFBWixVQUFhLEtBQUs7UUFDaEIsS0FBSyxDQUFDLGVBQWUsRUFBRSxDQUFDO1FBQ3hCLElBQUksQ0FBQyxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2xCLElBQUksQ0FBQyxPQUFPLEdBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDO1lBQzNCLElBQUksQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEVBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPLEVBQUMsRUFBRSxFQUFDLElBQUksQ0FBQyxFQUFFLEVBQUMsQ0FBQyxDQUFDO1NBQzdEO0lBQ0gsQ0FBQzs7Z0JBMUJGLFNBQVMsU0FBQztvQkFDVCxRQUFRLEVBQUUseUJBQXlCO29CQUNuQywwUUFBZ0Q7aUJBRWpEOzs7Ozt1QkFFRSxXQUFXLFNBQUMsb0JBQW9CO3VCQUNoQyxXQUFXLFNBQUMscUJBQXFCO3VCQUNqQyxXQUFXLFNBQUMsd0JBQXdCOzBCQUVwQyxLQUFLO3FCQUNMLEtBQUs7MkJBQ0wsS0FBSztnQ0FFTCxNQUFNOztJQWFULCtCQUFDO0NBQUEsQUEzQkQsSUEyQkM7U0F0Qlksd0JBQXdCOzs7SUFDbkMsd0NBQTZDOztJQUM3Qyx3Q0FBOEM7O0lBQzlDLHdDQUFpRDs7SUFFakQsMkNBQWdDOztJQUNoQyxzQ0FBb0I7O0lBQ3BCLDRDQUFpQzs7SUFFakMsaURBQTZDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBPbkluaXQsIElucHV0LCBPdXRwdXQsIEV2ZW50RW1pdHRlciwgSG9zdEJpbmRpbmcgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnZi1maWxlLXByZXZpZXctY2hlY2tib3gnLFxyXG4gIHRlbXBsYXRlVXJsOiAnLi9wcmV2aWV3LWNoZWNrYm94LmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFtdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBQcmV2aWV3Q2hlY2tib3hDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIEBIb3N0QmluZGluZygnY2xhc3MuYWxpZ24tbWlkZGxlJykgY2xzMT10cnVlO1xyXG4gIEBIb3N0QmluZGluZygnY2xhc3MuZC1pbmxpbmUtZmxleCcpIGNsczI9dHJ1ZTtcclxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLnByZXZpZXctY2hlY2tib3gnKSBjbHMzPXRydWU7XHJcbiAgXHJcbiAgQElucHV0KCkgY2hlY2tlZDogYm9vbGVhbj1mYWxzZTtcclxuICBASW5wdXQoKSBpZDogc3RyaW5nO1xyXG4gIEBJbnB1dCgpIGRpc2FibGVkOiBib29sZWFuPWZhbHNlO1xyXG5cclxuICBAT3V0cHV0KCkgY2hlY2tlZENoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcbiAgY29uc3RydWN0b3IoKSB7IH1cclxuXHJcbiAgbmdPbkluaXQoKSB7IH1cclxuXHJcbiAgY2xpY2tIYW5kbGVyKGV2ZW50KSB7XHJcbiAgICBldmVudC5zdG9wUHJvcGFnYXRpb24oKTtcclxuICAgIGlmICghdGhpcy5kaXNhYmxlZCkge1xyXG4gICAgICB0aGlzLmNoZWNrZWQ9IXRoaXMuY2hlY2tlZDtcclxuICAgICAgdGhpcy5jaGVja2VkQ2hhbmdlLmVtaXQoe2NoZWNrZWQ6IHRoaXMuY2hlY2tlZCxpZDp0aGlzLmlkfSk7XHJcbiAgICB9XHJcbiAgfVxyXG59XHJcbiJdfQ==