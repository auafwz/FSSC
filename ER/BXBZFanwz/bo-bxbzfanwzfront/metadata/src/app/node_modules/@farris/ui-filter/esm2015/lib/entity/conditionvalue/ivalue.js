/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { ControlType } from "../controltype";
import { TextValue } from "./textvalue";
import { NumberRangeValueConvertor } from "./numberrangevaue";
import { DateRangeValue } from "./daterangevalue";
import { HelpValue } from "./helpvalue";
import { DropDownListValueConvert } from "./dropdownlistvalue";
/**
 * @record
 */
export function IValue() { }
if (false) {
    /**
     * @return {?}
     */
    IValue.prototype.getControlType = function () { };
    /**
     * @return {?}
     */
    IValue.prototype.getOriginalValue = function () { };
    /**
     * @param {?} value
     * @return {?}
     */
    IValue.prototype.setOriginalValue = function (value) { };
    /**
     * @return {?}
     */
    IValue.prototype.clearValue = function () { };
    /**
     * @return {?}
     */
    IValue.prototype.isEmpty = function () { };
    /**
     * @return {?}
     */
    IValue.prototype.getValueText = function () { };
}
export class ConditionValueConvert {
    /**
     * @param {?} obj
     * @return {?}
     */
    convertToObject(obj) {
        /** @type {?} */
        let conditionValue = (/** @type {?} */ (obj));
        /** @type {?} */
        let controlType = conditionValue.getControlType();
        /** @type {?} */
        let jobj = new Object();
        jobj["Type"] = controlType;
        if (controlType == ControlType.DropDown) {
            /** @type {?} */
            let convertor = new DropDownListValueConvert();
            jobj["Content"] = convertor.convertToObject(conditionValue);
        }
        else if (controlType == ControlType.NumberRange) {
            /** @type {?} */
            let convertor = new NumberRangeValueConvertor();
            jobj["Content"] = convertor.convertToObject(conditionValue);
        }
        else {
            jobj["Content"] = conditionValue;
        }
        return jobj;
    }
    /**
     * @param {?} jobj
     * @return {?}
     */
    initFromObject(jobj) {
        /** @type {?} */
        let controlType = (/** @type {?} */ (jobj["Type"]));
        /** @type {?} */
        let content = jobj["Content"];
        if (controlType == ControlType.Text) {
            return Object.assign(new TextValue(), (/** @type {?} */ (content)));
        }
        else if (controlType == ControlType.NumberRange) {
            /** @type {?} */
            let convertor = new NumberRangeValueConvertor();
            return convertor.initFromObject(content);
        }
        else if (controlType == ControlType.DateRange) {
            return Object.assign(new DateRangeValue(), (/** @type {?} */ (content)));
        }
        else if (controlType == ControlType.DropDown) {
            /** @type {?} */
            let convertor = new DropDownListValueConvert();
            return convertor.initFromObject(content);
        }
        else if (controlType == ControlType.Help) {
            return Object.assign(new HelpValue(), (/** @type {?} */ (content)));
        }
    }
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaXZhbHVlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1maWx0ZXIvIiwic291cmNlcyI6WyJsaWIvZW50aXR5L2NvbmRpdGlvbnZhbHVlL2l2YWx1ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDeEMsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDOUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxhQUFhLENBQUM7QUFDeEMsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0scUJBQXFCLENBQUM7Ozs7QUFFL0QsNEJBT0M7Ozs7O0lBTkcsa0RBQTZCOzs7O0lBQzdCLG9EQUF3Qjs7Ozs7SUFDeEIseURBQW1DOzs7O0lBQ25DLDhDQUFtQjs7OztJQUNuQiwyQ0FBbUI7Ozs7SUFDbkIsZ0RBQXNCOztBQUcxQixNQUFNLE9BQU8scUJBQXFCOzs7OztJQUM5QixlQUFlLENBQUMsR0FBVTs7WUFDbEIsY0FBYyxHQUFDLG1CQUFBLEdBQUcsRUFBVTs7WUFDNUIsV0FBVyxHQUFDLGNBQWMsQ0FBQyxjQUFjLEVBQUU7O1lBQzNDLElBQUksR0FBQyxJQUFJLE1BQU0sRUFBRTtRQUNyQixJQUFJLENBQUMsTUFBTSxDQUFDLEdBQUMsV0FBVyxDQUFDO1FBQ3pCLElBQUcsV0FBVyxJQUFFLFdBQVcsQ0FBQyxRQUFRLEVBQUM7O2dCQUM3QixTQUFTLEdBQUMsSUFBSSx3QkFBd0IsRUFBRTtZQUM1QyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUMsU0FBUyxDQUFDLGVBQWUsQ0FBQyxjQUFjLENBQUMsQ0FBQztTQUM3RDthQUNJLElBQUcsV0FBVyxJQUFFLFdBQVcsQ0FBQyxXQUFXLEVBQUM7O2dCQUNyQyxTQUFTLEdBQUMsSUFBSSx5QkFBeUIsRUFBRTtZQUM3QyxJQUFJLENBQUMsU0FBUyxDQUFDLEdBQUMsU0FBUyxDQUFDLGVBQWUsQ0FBQyxjQUFjLENBQUMsQ0FBQztTQUM3RDthQUNHO1lBQ0EsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFDLGNBQWMsQ0FBQztTQUNsQztRQUNELE9BQU8sSUFBSSxDQUFDO0lBQ2hCLENBQUM7Ozs7O0lBRUQsY0FBYyxDQUFDLElBQVc7O1lBQ2xCLFdBQVcsR0FBQyxtQkFBQSxJQUFJLENBQUMsTUFBTSxDQUFDLEVBQWU7O1lBQ3ZDLE9BQU8sR0FBUSxJQUFJLENBQUMsU0FBUyxDQUFDO1FBQ2xDLElBQUcsV0FBVyxJQUFFLFdBQVcsQ0FBQyxJQUFJLEVBQUM7WUFDN0IsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksU0FBUyxFQUFFLEVBQUMsbUJBQUEsT0FBTyxFQUFhLENBQUMsQ0FBQztTQUM5RDthQUNJLElBQUcsV0FBVyxJQUFFLFdBQVcsQ0FBQyxXQUFXLEVBQUM7O2dCQUNyQyxTQUFTLEdBQUMsSUFBSSx5QkFBeUIsRUFBRTtZQUM3QyxPQUFPLFNBQVMsQ0FBQyxjQUFjLENBQUMsT0FBTyxDQUFDLENBQUM7U0FDNUM7YUFDSSxJQUFHLFdBQVcsSUFBRSxXQUFXLENBQUMsU0FBUyxFQUFDO1lBQ3ZDLE9BQU8sTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLGNBQWMsRUFBRSxFQUFDLG1CQUFBLE9BQU8sRUFBa0IsQ0FBQyxDQUFDO1NBQ3hFO2FBQ0ksSUFBRyxXQUFXLElBQUUsV0FBVyxDQUFDLFFBQVEsRUFBQzs7Z0JBQ2xDLFNBQVMsR0FBQyxJQUFJLHdCQUF3QixFQUFFO1lBQzVDLE9BQU8sU0FBUyxDQUFDLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQztTQUM1QzthQUNJLElBQUcsV0FBVyxJQUFFLFdBQVcsQ0FBQyxJQUFJLEVBQUM7WUFDbEMsT0FBTyxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksU0FBUyxFQUFFLEVBQUMsbUJBQUEsT0FBTyxFQUFhLENBQUMsQ0FBQztTQUM5RDtJQUNMLENBQUM7Q0FDSiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbnRyb2xUeXBlIH0gZnJvbSBcIi4uL2NvbnRyb2x0eXBlXCI7XHJcbmltcG9ydCB7IFRleHRWYWx1ZSB9IGZyb20gXCIuL3RleHR2YWx1ZVwiO1xyXG5pbXBvcnQgeyBOdW1iZXJSYW5nZVZhbHVlQ29udmVydG9yIH0gZnJvbSBcIi4vbnVtYmVycmFuZ2V2YXVlXCI7XHJcbmltcG9ydCB7IERhdGVSYW5nZVZhbHVlIH0gZnJvbSBcIi4vZGF0ZXJhbmdldmFsdWVcIjtcclxuaW1wb3J0IHsgSGVscFZhbHVlIH0gZnJvbSBcIi4vaGVscHZhbHVlXCI7XHJcbmltcG9ydCB7IERyb3BEb3duTGlzdFZhbHVlQ29udmVydCB9IGZyb20gXCIuL2Ryb3Bkb3dubGlzdHZhbHVlXCI7XHJcblxyXG5leHBvcnQgaW50ZXJmYWNlIElWYWx1ZXtcclxuICAgIGdldENvbnRyb2xUeXBlKCk6Q29udHJvbFR5cGU7XHJcbiAgICBnZXRPcmlnaW5hbFZhbHVlKCk6IGFueTtcclxuICAgIHNldE9yaWdpbmFsVmFsdWUodmFsdWU6IGFueSk6IHZvaWQ7XHJcbiAgICBjbGVhclZhbHVlKCk6IHZvaWQ7XHJcbiAgICBpc0VtcHR5KCk6IGJvb2xlYW47XHJcbiAgICBnZXRWYWx1ZVRleHQoKTpzdHJpbmc7XHJcbn1cclxuXHJcbmV4cG9ydCBjbGFzcyBDb25kaXRpb25WYWx1ZUNvbnZlcnR7XHJcbiAgICBjb252ZXJ0VG9PYmplY3Qob2JqOklWYWx1ZSk6T2JqZWN0e1xyXG4gICAgICAgIGxldCBjb25kaXRpb25WYWx1ZT1vYmogYXMgSVZhbHVlO1xyXG4gICAgICAgIGxldCBjb250cm9sVHlwZT1jb25kaXRpb25WYWx1ZS5nZXRDb250cm9sVHlwZSgpO1xyXG4gICAgICAgIGxldCBqb2JqPW5ldyBPYmplY3QoKTtcclxuICAgICAgICBqb2JqW1wiVHlwZVwiXT1jb250cm9sVHlwZTtcclxuICAgICAgICBpZihjb250cm9sVHlwZT09Q29udHJvbFR5cGUuRHJvcERvd24pe1xyXG4gICAgICAgICAgICBsZXQgY29udmVydG9yPW5ldyBEcm9wRG93bkxpc3RWYWx1ZUNvbnZlcnQoKTtcclxuICAgICAgICAgICAgam9ialtcIkNvbnRlbnRcIl09Y29udmVydG9yLmNvbnZlcnRUb09iamVjdChjb25kaXRpb25WYWx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYoY29udHJvbFR5cGU9PUNvbnRyb2xUeXBlLk51bWJlclJhbmdlKXtcclxuICAgICAgICAgICAgbGV0IGNvbnZlcnRvcj1uZXcgTnVtYmVyUmFuZ2VWYWx1ZUNvbnZlcnRvcigpO1xyXG4gICAgICAgICAgICBqb2JqW1wiQ29udGVudFwiXT1jb252ZXJ0b3IuY29udmVydFRvT2JqZWN0KGNvbmRpdGlvblZhbHVlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgam9ialtcIkNvbnRlbnRcIl09Y29uZGl0aW9uVmFsdWU7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHJldHVybiBqb2JqO1xyXG4gICAgfVxyXG5cclxuICAgIGluaXRGcm9tT2JqZWN0KGpvYmo6T2JqZWN0KTpJVmFsdWV7XHJcbiAgICAgICAgbGV0IGNvbnRyb2xUeXBlPWpvYmpbXCJUeXBlXCJdIGFzIENvbnRyb2xUeXBlO1xyXG4gICAgICAgIGxldCBjb250ZW50OklWYWx1ZT1qb2JqW1wiQ29udGVudFwiXTtcclxuICAgICAgICBpZihjb250cm9sVHlwZT09Q29udHJvbFR5cGUuVGV4dCl7XHJcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKG5ldyBUZXh0VmFsdWUoKSxjb250ZW50IGFzIFRleHRWYWx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGVsc2UgaWYoY29udHJvbFR5cGU9PUNvbnRyb2xUeXBlLk51bWJlclJhbmdlKXtcclxuICAgICAgICAgICAgbGV0IGNvbnZlcnRvcj1uZXcgTnVtYmVyUmFuZ2VWYWx1ZUNvbnZlcnRvcigpO1xyXG4gICAgICAgICAgICByZXR1cm4gY29udmVydG9yLmluaXRGcm9tT2JqZWN0KGNvbnRlbnQpO1xyXG4gICAgICAgIH1cclxuICAgICAgICBlbHNlIGlmKGNvbnRyb2xUeXBlPT1Db250cm9sVHlwZS5EYXRlUmFuZ2Upe1xyXG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbihuZXcgRGF0ZVJhbmdlVmFsdWUoKSxjb250ZW50IGFzIERhdGVSYW5nZVZhbHVlKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZihjb250cm9sVHlwZT09Q29udHJvbFR5cGUuRHJvcERvd24pe1xyXG4gICAgICAgICAgICBsZXQgY29udmVydG9yPW5ldyBEcm9wRG93bkxpc3RWYWx1ZUNvbnZlcnQoKTtcclxuICAgICAgICAgICAgcmV0dXJuIGNvbnZlcnRvci5pbml0RnJvbU9iamVjdChjb250ZW50KTtcclxuICAgICAgICB9XHJcbiAgICAgICAgZWxzZSBpZihjb250cm9sVHlwZT09Q29udHJvbFR5cGUuSGVscCl7XHJcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKG5ldyBIZWxwVmFsdWUoKSxjb250ZW50IGFzIEhlbHBWYWx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59Il19