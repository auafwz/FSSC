{"version":3,"sources":["ng://@farris/ui-dialog/lib/dialog.service.ts","ng://@farris/ui-dialog/lib/dialog/dialog.component.ts","ng://@farris/ui-dialog/lib/dialog.module.ts"],"names":["DialogService","prototype","hasDialogOpened","tags","k","_tags","dlgs","window","document","querySelectorAll","Array","from","filter","n","classList","some","item","forEach","n1","tagName","getComputedStyle","display","querySelector","Injectable","DialogComponent","ngOnInit","_this","this","hostId","Date","getTime","render2","setProperty","el","nativeElement","beforeOpen","beforeClose","modal","onShown","subscribe","opened","emit","onHidden","closed","checkDialogSize","setTimeout","parentElement","appendChild","body","ngOnChanges","changes","ngOnDestroy","destroy","ngAfterViewInit","dlgHeaderLineHeight","getDialogHeaderLineHeight","resetPosition","removeChild","modalHeader","getBoundingClientRect","height","Object","defineProperty","contentHeight","dialogHeaderHeight","showButtons","dialogFooterHeight","width","contentWidth","_checkDialogSize","winSize","offsetWidth","innerHeight","offsetHeight","newSize","widthChange","heightChange","updateModalBodyHeight","contentEl","size","setStyle","marginLeft","Number","parseInt","marginTop","dialogEl","openDialog","flag","draggbar","show","closeDialog","canClose","hide","result","Observable","Promise","then","close","$event","stopPropagation","reSize","resized","onResizing","opts","resizing","resizeStop","dropdown","maxDialog","originalWidth","originalHeight","scrollingElement","documentElement","draggable","resizable","isMax","maxed","revertDialog","changeDialogSize","Component","args","selector","template","Renderer2","ElementRef","Input","ViewChild","ModalDirective","AngularDraggableDirective","Output","ContentChild","title","iconCls","undefined","minWidth","minHeight","maxWidth","maxHeight","showCloseButton","showMaxButton","showMinButton","buttonAlign","scrollConfig","EventEmitter","enableScroll","FarrisDialogModule","forRoot","ngModule","providers","NgModule","declarations","imports","PerfectScrollbarModule","AngularDraggableModule","ModalModule","CommonModule","exports"],"mappings":"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","sourcesContent":["import { Injectable } from '@angular/core';\r\n\r\n@Injectable()\r\nexport class DialogService {\r\n    hasDialogOpened(tags?: string): boolean {\r\n      let k = 0;\r\n      let _tags = 'farris-dialog,.overlay-pane';\r\n      if (tags) {\r\n          _tags += ',' + tags ;\r\n      }\r\n      const dlgs = window.document.querySelectorAll(_tags);\r\n      const elements = Array.from(dlgs).filter(n => !Array.from(dlgs[0].classList).some(item => item == 'f-combo-list'));\r\n      elements.forEach((n: any) => {\r\n          let n1 = '';\r\n          if (n.tagName === 'DIV') {\r\n              n1 = window.getComputedStyle(n).display;\r\n          } else {\r\n              n1 =  window.getComputedStyle( n.querySelector('div')).display;\r\n          }\r\n          if (n1 === '' || n1 === 'block') {\r\n              k++;\r\n          }\r\n      });\r\n\r\n      return k > 0;\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 08:31:57\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-08-15 16:06:58\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport {\r\n    Component, OnInit, Input, ViewChild, Renderer2,\r\n    ElementRef, Output, EventEmitter, TemplateRef,\r\n    AfterViewInit, SimpleChanges, OnChanges, OnDestroy\r\n} from '@angular/core';\r\n\r\nimport { Observable } from 'rxjs';\r\n\r\nimport { AngularDraggableDirective } from '@farris/ui-draggable';\r\nimport { ModalDirective } from '@farris/ui-modal';\r\nimport { ContentChild } from '@angular/core';\r\n\r\n@Component({\r\n    selector: 'farris-dialog',\r\n    templateUrl: './dialog.component.html',\r\n    styleUrls: ['./dialog.component.css']\r\n})\r\nexport class DialogComponent implements OnInit, AfterViewInit, OnChanges, OnDestroy {\r\n\r\n    /** çªå£æ é¢ */\r\n    @Input() title = 'ææ¯æ é¢';\r\n\r\n    /** æ é¢å¾æ  */\r\n    @Input() iconCls: string = undefined;\r\n\r\n    /** å®½åº¦ */\r\n    @Input() width = 300;\r\n    /** é«åº¦ */\r\n    @Input() height = 200;\r\n\r\n    @Input() minWidth = 100;\r\n\r\n    @Input() minHeight = 100;\r\n\r\n    @Input() maxWidth: number = null;\r\n    @Input() maxHeight: number = null;\r\n\r\n    /** æ¾ç¤ºåºé¨æé®åºåï¼é»è®¤æ¾ç¤º */\r\n    @Input() showButtons = true;\r\n    /** æ¾ç¤ºå³ä¸è§å³é­æé®ï¼é»è®¤æ¾ç¤º */\r\n    @Input() showCloseButton = true;\r\n    /** æ¾ç¤ºæå¤§åæé®ï¼é»è®¤æ¾ç¤º */\r\n    @Input() showMaxButton = true;\r\n    /** æ¾ç¤ºæå°åæé®ï¼é»è®¤ä¸æ¾ç¤º, æ¾ç¤ºåºæ¥ä¹æ²¡æç¨ */\r\n    @Input() showMinButton = false;\r\n\r\n    /** å¯ç¨ææ½æ¹åå°ºå¯¸å¤§å° */\r\n    @Input() resizable = true;\r\n    /** å¯ç¨æå¨çªå£ */\r\n    @Input() draggable = true;\r\n\r\n    /** æé®å¯¹é½æ¹å¼ */\r\n    @Input() buttonAlign = 'center';\r\n    @Input() scrollConfig = {};\r\n\r\n    @Input() beforeOpen: () => Observable<any> | Promise<any> | boolean;\r\n    @Input() beforeClose: () => Observable<any> | Promise<any> | boolean;\r\n\r\n    @ViewChild(ModalDirective) modal: ModalDirective;\r\n    @ViewChild(AngularDraggableDirective) draggbar: AngularDraggableDirective;\r\n\r\n    @Output() opened = new EventEmitter();\r\n    @Output() closed = new EventEmitter();\r\n    @Output() resized = new EventEmitter();\r\n    @Output() resizing = new EventEmitter();\r\n    @Output() maxed = new EventEmitter();\r\n    @Output() widthChange = new EventEmitter();\r\n    @Output() heightChange = new EventEmitter();\r\n\r\n    @Input() enableScroll = true;\r\n\r\n    @Input() buttons: TemplateRef<any>;\r\n\r\n    /** æ é¢æ é«åº¦ */\r\n    @Input() dialogHeaderHeight = 38;\r\n\r\n    /** æé®åºé«åº¦ */\r\n    @Input() dialogFooterHeight = 50;\r\n\r\n\r\n    @Input() parentElement = null;\r\n\r\n    /* template */\r\n    @ContentChild('toolTemplate') toolTemplate: TemplateRef<any>;\r\n    isMax = false; // æ¯å¦æå¤§çªå£\r\n    dlgHeaderLineHeight: any;\r\n\r\n    private originalWidth: number;  // è®°å½ä¸æ¬¡çå®½åº¦\r\n    private originalHeight: number; // è®°å½ä¸æ¬¡çé«åº¦\r\n\r\n    private hostId = '';\r\n    @ViewChild('modalContent') modalContent: ElementRef;\r\n    @ViewChild('header') modalHeader: ElementRef;\r\n\r\n    constructor(private render2: Renderer2, public el: ElementRef) { }\r\n\r\n    ngOnInit() {\r\n        this.hostId = `farris-dialog_${new Date().getTime()}`;\r\n        this.render2.setProperty(this.el.nativeElement, 'id', this.hostId);\r\n        if (!this.beforeOpen) {\r\n            this.beforeOpen = () => true;\r\n        }\r\n\r\n        if (!this.beforeClose) {\r\n            this.beforeClose = () => true;\r\n        }\r\n\r\n        this.modal.onShown.subscribe(() => {\r\n            // const zindex = this.modal.backdrop.location.nativeElement;\r\n            // this.render2.setStyle(this.el.nativeElement, 'position', 'absolute');\r\n            // this.render2.setStyle(this.el.nativeElement, 'z-index', '1041');\r\n            this.opened.emit();\r\n        });\r\n\r\n        this.modal.onHidden.subscribe(() => this.closed.emit());\r\n\r\n        this.checkDialogSize();\r\n        setTimeout(() => {\r\n            if (this.parentElement) {\r\n                this.parentElement.appendChild(this.el.nativeElement);\r\n            } else {\r\n                document.body.appendChild(this.el.nativeElement);\r\n            }\r\n        }, 100);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        setTimeout(() => {\r\n            this.destroy();\r\n        }, 150);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.dlgHeaderLineHeight = this.getDialogHeaderLineHeight();\r\n        this.resetPosition();\r\n    }\r\n\r\n    destroy() {\r\n        if (!this.parentElement) {\r\n            if (document.body.querySelector(`#${this.hostId}`)) {\r\n                document.body.removeChild(this.el.nativeElement);\r\n            }\r\n        } else {\r\n            if (this.parentElement.querySelector(`#${this.hostId}`)) {\r\n                this.parentElement.removeChild(this.el.nativeElement);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getDialogHeaderLineHeight() {\r\n        return this.modalHeader.nativeElement.getBoundingClientRect().height;\r\n        // const paddingTop = parseInt(modalHeaderStyles.paddingTop.replace('px', ''), 10);\r\n        // const paddingBottom = parseInt(modalHeaderStyles.paddingBottom.replace('px', ''), 10);\r\n        // return this.modalHeader.nativeElement.get\r\n    }\r\n\r\n    get size() {\r\n        let contentHeight = this.height - this.dialogHeaderHeight;\r\n        if (this.showButtons) {\r\n            contentHeight = contentHeight - this.dialogFooterHeight;\r\n        }\r\n        return {\r\n            width: this.width,\r\n            height: this.height,\r\n            contentHeight,\r\n            contentWidth: this.width\r\n        };\r\n    }\r\n\r\n    private _checkDialogSize(width: number, height: number) {\r\n\r\n        // å¯è§åºåå°ºå¯¸\r\n        const winSize = {\r\n            width: document.body.offsetWidth,\r\n            height: window.innerHeight\r\n        };\r\n\r\n        if (this.parentElement) {\r\n            winSize.width = this.parentElement.offsetWidth;\r\n            winSize.height = this.parentElement.offsetHeight;\r\n        }\r\n\r\n        if (winSize.width && winSize.width < width) {\r\n            width = winSize.width;\r\n        }\r\n\r\n        if (winSize.height && winSize.height < height) {\r\n            height = winSize.height;\r\n        }\r\n\r\n        return {\r\n            width,\r\n            height\r\n        };\r\n    }\r\n\r\n    private checkDialogSize() {\r\n        const newSize = this._checkDialogSize(this.width, this.height);\r\n        if (this.width !== newSize.width) {\r\n            this.width = newSize.width - 20;\r\n            this.widthChange.emit(this.width);\r\n        }\r\n\r\n        if (this.height !== newSize.height) {\r\n            this.height = newSize.height - 20;\r\n            this.heightChange.emit(this.height);\r\n        }\r\n    }\r\n\r\n    updateModalBodyHeight() {\r\n        const contentEl = this.el.nativeElement.querySelector('.modal-body');\r\n        const contentHeight = this.size.contentHeight;\r\n        this.render2.setStyle(contentEl, 'height', contentHeight + 'px');\r\n    }\r\n\r\n    resetPosition() {\r\n        const marginLeft = Number.parseInt('' + -this.width / 2) + 'px';\r\n        const marginTop = Number.parseInt('' + -this.height / 2) + 'px';\r\n\r\n        const dialogEl = this.el.nativeElement.querySelector('.modal-dialog');\r\n        const contentEl = this.el.nativeElement.querySelector('.modal-body');\r\n        const footerEl = this.el.nativeElement.querySelector('.modal-footer');\r\n\r\n        this.render2.setStyle(dialogEl, 'margin-left', marginLeft);\r\n        this.render2.setStyle(dialogEl, 'margin-top', marginTop);\r\n\r\n        const contentHeight = this.size.contentHeight;\r\n\r\n        this.render2.setStyle(contentEl, 'height', contentHeight + 'px');\r\n        this.render2.setStyle(contentEl, 'overflow', 'hidden');\r\n\r\n        this.render2.setStyle(dialogEl, 'transform', 'translate3d(0px, 0px, 0px)');\r\n    }\r\n\r\n    private openDialog(flag: boolean) {\r\n        if (flag) {\r\n            this.resetPosition();\r\n            this.draggbar.resetPosition();\r\n            this.modal.show();\r\n        }\r\n    }\r\n\r\n    private closeDialog(canClose: boolean) {\r\n        if (canClose) {\r\n            this.modal.hide();\r\n        }\r\n    }\r\n\r\n    show() {\r\n        const result = this.beforeOpen();\r\n        if (typeof result === 'boolean') {\r\n            this.openDialog(result);\r\n        } else {\r\n            if (result instanceof Observable) {\r\n                result.subscribe((flag: boolean) => {\r\n                    this.openDialog(flag);\r\n                });\r\n            } else {\r\n                if (result instanceof Promise) {\r\n                    result.then((flag: boolean) => {\r\n                        this.openDialog(flag);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    close($event?: MouseEvent) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        const result = this.beforeClose();\r\n        if (typeof result === 'boolean') {\r\n            this.closeDialog(result);\r\n        } else {\r\n            if (result instanceof Observable) {\r\n                result.subscribe((flag: boolean) => {\r\n                    this.closeDialog(flag);\r\n                });\r\n            } else {\r\n                if (result instanceof Promise) {\r\n                    result.then((flag: boolean) => {\r\n                        this.closeDialog(flag);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    reSize(size: { width?: number, height?: number }) {\r\n        if (size.width) {\r\n            this.width = size.width;\r\n        }\r\n        if (size.height) {\r\n            this.height = size.height;\r\n        }\r\n\r\n        this.resetPosition();\r\n        this.draggbar.resetPosition();\r\n        this.widthChange.emit(this.width);\r\n        this.heightChange.emit(this.height);\r\n        this.resized.emit({ size: { width: this.width, height: this.height } });\r\n    }\r\n\r\n    onResizing(opts: any) {\r\n        opts.size.width = opts.size.width < 100 ? 100 : opts.size.width;\r\n        opts.size.height = opts.size.height < 100 ? 100 : opts.size.height;\r\n\r\n        this.width = opts.size.width;\r\n        this.height = opts.size.height;\r\n        this.resizing.emit(opts);\r\n    }\r\n\r\n    resizeStop(opts: any) {\r\n        opts.size.width = opts.size.width < 100 ? 100 : opts.size.width;\r\n        opts.size.height = opts.size.height < 100 ? 100 : opts.size.height;\r\n\r\n        this.width = opts.size.width;\r\n        this.height = opts.size.height;\r\n        this.updateModalBodyHeight();\r\n\r\n        this.widthChange.emit(this.width);\r\n        this.heightChange.emit(this.height);\r\n\r\n        this.resized.emit(opts);\r\n    }\r\n\r\n    dropdown(el: any) {\r\n        // const rect = el.getBoundingClientRect();\r\n        // this.render2.removeStyle(el, 'margin-top');\r\n        // this.render2.removeStyle(el, 'margin-left');\r\n        // this.render2.setStyle(el, 'top', `${rect.top}px`);\r\n        // this.render2.setStyle(el, 'left', `${rect.left}px`);\r\n\r\n        // this.render2.removeStyle(el, 'transform');\r\n        // this.render2.removeStyle(el, '-webkit-transform');\r\n        // this.render2.removeStyle(el, '-ms-transform');\r\n        // this.render2.removeStyle(el, '-moz-transform');\r\n        // this.render2.removeStyle(el, '-o-transform');\r\n    }\r\n\r\n    maxDialog() {\r\n        // console.log(`${document.scrollingElement.clientWidth}`)\r\n        this.originalWidth = this.width;\r\n        this.originalHeight = this.height;\r\n        this.width = (document.scrollingElement?document.scrollingElement:document.documentElement)['clientWidth']  - 20;\r\n        this.height = (document.scrollingElement?document.scrollingElement:document.documentElement)['clientHeight'] - 20;\r\n\r\n        this.draggable = false;\r\n        this.resizable = false;\r\n\r\n        this.isMax = true;\r\n        this.resetPosition();\r\n        this.resized.emit({ size: { width: this.width, height: this.height } });\r\n        this.maxed.emit({ size: { width: this.width, height: this.height } });\r\n    }\r\n\r\n    revertDialog() {\r\n        this.isMax = false;\r\n        this.width = this.originalWidth;\r\n        this.height = this.originalHeight;\r\n        this.draggable = true;\r\n        this.resizable = true;\r\n        this.resetPosition();\r\n        this.draggbar.resetPosition();\r\n        this.resized.emit({ size: { width: this.width, height: this.height } });\r\n        this.maxed.emit({ size: { width: this.width, height: this.height } });\r\n    }\r\n\r\n    changeDialogSize() {\r\n        if (this.isMax) {\r\n            this.revertDialog();\r\n        } else {\r\n            this.maxDialog();\r\n        }\r\n    }\r\n}\r\n","import { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\n\r\nimport { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';\r\nimport { AngularDraggableModule } from '@farris/ui-draggable';\r\nimport { ModalModule } from '@farris/ui-modal';\r\n\r\nimport { DialogComponent } from './dialog/dialog.component';\r\nimport { DialogService } from './dialog.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    DialogComponent\r\n  ],\r\n  imports: [\r\n    PerfectScrollbarModule,\r\n    AngularDraggableModule,\r\n    ModalModule,\r\n    CommonModule,\r\n  ],\r\n  exports: [\r\n    DialogComponent,\r\n    ModalModule\r\n  ]\r\n})\r\nexport class FarrisDialogModule {\r\n  static forRoot(): ModuleWithProviders {\r\n    return {\r\n        ngModule: FarrisDialogModule,\r\n        providers: [\r\n            DialogService\r\n        ]\r\n    };\r\n  }\r\n}\r\n"]}