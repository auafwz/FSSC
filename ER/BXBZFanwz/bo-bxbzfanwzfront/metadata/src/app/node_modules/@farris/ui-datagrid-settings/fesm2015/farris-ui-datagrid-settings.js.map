{"version":3,"file":"farris-ui-datagrid-settings.js","sources":["ng://@farris/ui-datagrid-settings/lib/datagrid-settings.component.ts","ng://@farris/ui-datagrid-settings/lib/simple-mode/simple-columns.component.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-settings.service.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-sort-setting.component.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-view-columns.component.ts","ng://@farris/ui-datagrid-settings/lib/column-format-setting/column-format-setting.component.ts","ng://@farris/ui-datagrid-settings/lib/column-group/column-group.component.ts","ng://@farris/ui-datagrid-settings/lib/column-format-setting/column-visible-drag.directive.ts","ng://@farris/ui-datagrid-settings/lib/column-group/column-group-drag.directive.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-settings.module.ts"],"sourcesContent":["import {\r\n    Component, ViewEncapsulation, ViewChild, ElementRef, Input, EventEmitter,\r\n    OnInit, OnChanges, SimpleChanges, ChangeDetectorRef, Injector, Output\r\n} from '@angular/core';\r\nimport { BsModalRef } from '@farris/ui-modal';\r\nimport { DataColumn, DatagridComponent } from '@farris/ui-datagrid';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { MessagerService } from '@farris/ui-messager';\r\n\r\n@Component({\r\n    selector: 'datagrid-settings',\r\n    templateUrl: './datagrid-settings.component.html',\r\n    styles: [\r\n        `\r\n\r\n        .f-datagrid-settings .header {\r\n            position:relative;width:100%; height: 56px;padding: 0 24px;border:0px\r\n        }\r\n\r\n        .f-datagrid-settings .header .title {\r\n            display: block; white-space: nowrap; font-size: 17px; line-height: 56px;\r\n        }\r\n        .f-datagrid-settings .header .tabs {\r\n            height: 32px;\r\n            top: 12px; font-size: 14px;\r\n            position: relative;\r\n            line-height: 32px;\r\n        }\r\n        .f-datagrid-settings .header .tabs .tabs-labels {\r\n            background: #EFF5FF;border-radius: 17px;color:#6080AD\r\n        }\r\n\r\n        .f-datagrid-settings .header .tabs .tabs-labels .navitem.active {\r\n            line-height: 28px;\r\n            margin: 2px;\r\n            height: 28px;\r\n            background: rgb(246 250 255);\r\n            border-radius: 15px;\r\n            box-shadow: 0 4px 18px 0 rgb(2 75 193 / 20%)\r\n        }\r\n        .f-datagrid-settings .header .close {\r\n            line-height: 56px;padding: 0;width: 20px\r\n        }\r\n        .f-datagrid-settings .tabs-container {\r\n            height: 100%;overflow: hidden; position: relative; margin: 0 24px; border: 1px solid #DEE1EA; border-radius: 8px;\r\n        }\r\n        .f-datagrid-settings .buttons\r\n        {\r\n            height: 66px;text-align: right;padding: 14px 24px 20px 24px;\r\n        }\r\n\r\n        .f-datagrid-settings .buttons button {\r\n            width: 66px;height: 32px;\r\n        }\r\n        .f-datagrid-settings .buttons .cancel {\r\n            margin-left: 12px;margin-right: 8px;\r\n        }\r\n        .f-datagrid-settings .buttons .ok {\r\n            width: 100px;\r\n        }\r\n\r\n        .f-datagrid-settings .dg-column-format-setting>div{\r\n            width: 360px; min-width:260px;overflow: hidden;background:#ffffff;padding: 10px 5px 10px 8px;border-right: 1px solid #DEE1EA\r\n        }\r\n\r\n        .f-datagrid-settings .dg-column-format-setting .checkbox, .format-setting-column .checkbox{\r\n            margin-right: 5px; font-size: 14px;color: #0089FF;\r\n        }\r\n\r\n        .f-datagrid-settings  .column-group-setting .title{\r\n            height: 36px; line-height: 36px; color: #59a1ff\r\n        }\r\n\r\n        .f-datagrid-settings  .column-group-setting .all-fields {\r\n            background-color:#fff;padding-top: 0px!important;\r\n        }\r\n\r\n        .f-datagrid-settings  .column-group-setting .group-sum-fields {\r\n            height: 36px; line-height: 36px; border-top: 1px solid #e4e7ef; color: #59a1ff\r\n        }\r\n\r\n\r\n        .smooth-dnd-ghost.format-setting-column {\r\n            border: 1px solid #2a87ff;\r\n            z-index: 999999999 !important;\r\n            background-color: #e7f1ff;;\r\n            padding: 4px 8px;\r\n            color: rgb(0 0 0);\r\n        }\r\n\r\n        .smooth-dnd-ghost.format-setting-column .field-drag-handle {\r\n            float: right;\r\n        }\r\n\r\n        .dg-column-format-setting  .smooth-dnd-drop-preview-constant-class {\r\n            background-color: #dee1ea;\r\n        }\r\n        .dg-column-format-setting .format-setting-column {\r\n            background: #fafbfd;\r\n            padding: 4px 8px;\r\n            margin-bottom: 5px;\r\n            border: 1px solid #f2f4f8;\r\n            border-radius: 5px;\r\n        }\r\n        .dg-column-format-setting .format-setting-column.active {\r\n            color: rgb(0 0 0);\r\n            border: 1px solid #2a87ff;\r\n            background: #e7f1ff;\r\n            border-top: 1px solid #2a87ff!important;\r\n            border-bottom: 1px solid #2a87ff!important;\r\n        }\r\n\r\n        .dg-column-format-setting .format-setting-column .field-drag-handle{\r\n            float: right;\r\n            cursor: grab;\r\n        }\r\n\r\n        .dg-column-format-setting .format-setting-column .field-drag-handle:active{\r\n            cursor: grabbing;\r\n        }\r\n\r\n        `\r\n    ],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DatagridSettingsComponent implements OnInit, OnChanges {\r\n    modalRef: BsModalRef;\r\n    gridInstance: DatagridComponent;\r\n    activeTabIndex = 1;\r\n\r\n    /** æåºåæ°æ® */\r\n    sortTreeData = [];\r\n    sortNames = [];\r\n    sortInfo = {};\r\n\r\n    /** æ¾ç¤ºåæ°æ® */\r\n    viewTreeData = [];\r\n    viewColumns = [];\r\n\r\n    columnFormat = [];\r\n\r\n    groupFields = [];\r\n\r\n    canSetColumnSort = true;\r\n    canSetColumnVisible = true;\r\n    @Input() enableReset = false;\r\n    @Input() columns: DataColumn[][];\r\n\r\n    @Output() cancelHandle = new EventEmitter();\r\n    @Output() submitHandle = new EventEmitter();\r\n    @Output() reset = new EventEmitter();\r\n    @Output() concise = new EventEmitter();\r\n\r\n    @ViewChild('header') header: ElementRef;\r\n    searchItems = [];\r\n    alignItems = [];\r\n    summaryItems = [];\r\n    summaryItems2 = [];\r\n\r\n    private localeSer: LocaleService;\r\n    private messager: MessagerService;\r\n    constructor(private cd: ChangeDetectorRef, private inject: Injector) {\r\n        this.messager = this.inject.get(MessagerService, null);\r\n        this.localeSer = this.inject.get(LocaleService);\r\n        this.searchItems = [\r\n            { value: 'all', title: this.localeSer.getValue('datagrid.settings.allColumns') },\r\n            { value: 'visible', title: this.localeSer.getValue('datagrid.settings.visibleColumns') },\r\n            { value: 'hidden', title: this.localeSer.getValue('datagrid.settings.hiddenColumns') }\r\n        ];\r\n\r\n        this.alignItems = [\r\n            { value: 'left', title: this.localeSer.getValue('datagrid.settings.alignLeft')},\r\n            { value: 'center', title: this.localeSer.getValue('datagrid.settings.alignCenter')},\r\n            { value: 'right', title: this.localeSer.getValue('datagrid.settings.alignRight')},\r\n        ];\r\n\r\n        this.summaryItems = [\r\n            { value: -1, title: this.localeSer.getValue('datagrid.settings.summaryNone') },\r\n            { value: 2, title: this.localeSer.getValue('datagrid.settings.summarySum') },\r\n            { value: 0, title: this.localeSer.getValue('datagrid.settings.summaryMax') },\r\n            { value: 1, title: this.localeSer.getValue('datagrid.settings.summaryMin') },\r\n            { value: 3, title: this.localeSer.getValue('datagrid.settings.summaryAverage') },\r\n            { value: 4, title: this.localeSer.getValue('datagrid.settings.summarCount') },\r\n        ];\r\n\r\n        this.summaryItems2 = [\r\n            { value: -1, title: this.localeSer.getValue('datagrid.settings.summaryNone') },\r\n            { value: 4, title: this.localeSer.getValue('datagrid.settings.summarCount') },\r\n        ];\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.sortNames = this.gridInstance.sortName ? this.gridInstance.sortName.split(',') : [];\r\n        this.viewColumns = this.getViewColumns();\r\n        this.sortInfo = this.gridInstance['__sortInfo'] || {};\r\n        this.columnFormat = [...this.columns[0]];\r\n        this.groupFields = this.gridInstance.groupField ? this.gridInstance.groupField.split(',') : [];\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.columns && !changes.columns.isFirstChange()) {\r\n            // console.log(this.columns);\r\n        }\r\n    }\r\n\r\n    close($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        if (this.modalRef) {\r\n            this.modalRef.close();\r\n        }\r\n    }\r\n\r\n    changeTabs(idx) {\r\n        this.activeTabIndex = idx;\r\n    }\r\n\r\n    onSortInfoChange(sortInfo: any) {\r\n        this.sortInfo = sortInfo;\r\n    }\r\n\r\n    private getViewColumns() {\r\n        // å¤è¡¨å¤´\r\n        let visibleCls = [];\r\n        if (this.columns.length > 1 ) {\r\n            this.columns.forEach(cols => {\r\n                visibleCls = visibleCls.concat(this._getViewColumns(cols));\r\n            });\r\n        } else {\r\n            visibleCls = this.columns[0].filter(n => (n.visible || n.visible === undefined));\r\n        }\r\n\r\n        return visibleCls.map(n => n.field);\r\n    }\r\n\r\n    private _getViewColumns(cols: any[]) {\r\n        return cols.filter(c => !c.colspan && (c.visible || c.visible === undefined));\r\n    }\r\n\r\n    onColumnFormatChange(colFormatData) {\r\n        this.columnFormat = colFormatData;\r\n    }\r\n\r\n    onSubmitClick($event) {\r\n        this.submitHandle.emit($event);\r\n    }\r\n\r\n    onCancelClick($event) {\r\n        this.cancelHandle.emit($event);\r\n    }\r\n\r\n    onSettingReset($event) {\r\n        // this.reset.emit($event);\r\n        const restorDefaultText = this.localeSer.getValue('datagrid.settings.restoreDefaultSettingsText') || 'ç¡®è®¤è¦æ¢å¤é»è®¤è®¾ç½®åï¼';\r\n        this.messager.confirm(restorDefaultText).subscribe((t: boolean) => {\r\n            if (t) {\r\n                this.reset2Default();\r\n            }\r\n        });\r\n    }\r\n\r\n    private reset2Default() {\r\n        const options = this.gridInstance.dfs['_state'].initialOptions;\r\n        if (options.columnFields && options.columnFields.length) {\r\n\r\n            const newColumns = [];\r\n            options.columnFields.forEach(c => {\r\n                if (c.field !== '_datagrid-setting-control_') {\r\n                    const col = this.gridInstance.columns[0].find((n: any) => n.field === c.field);\r\n                    if (col) {\r\n                        col.visible = c.visible;\r\n                        col.halign = c.halign;\r\n                        col.align = c.align;\r\n                        col.width = c.width;\r\n                        col.footer = {...c.footer || {}};\r\n                        col.groupFooter = {...c.groupFooter || {}};\r\n                        newColumns.push(col);\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.columns = [newColumns];\r\n        }\r\n\r\n        this.viewColumns = this.getViewColumns();\r\n\r\n        if (options.sort) {\r\n            const sortOrders = options.sort.sortOrder? options.sort.sortOrder.split(',') : [];\r\n            this.sortNames = options.sort.sortName ? options.sort.sortName.split(',') : [];\r\n            this.sortInfo = { sortName: this.sortNames, sortOrder:  sortOrders };\r\n        } else {\r\n            this.sortNames = [];\r\n            this.sortInfo = {};\r\n        }\r\n        this.columnFormat = [...this.columns[0]];\r\n        this.groupFields =  options.groupField ? options.groupField.split(',') : [];\r\n    }\r\n    /** æ¾ç¤ºç®æ´æ¨¡å¼çªå£ */\r\n    showConcise($event) {\r\n\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        this.concise.emit();\r\n\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Component, EventEmitter, HostBinding, Injector, Input, OnInit,\r\n        Output, ViewEncapsulation, HostListener, ViewChild, ElementRef } from '@angular/core';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\n\r\n@Component({\r\n    selector: 'datagrid-settings-simple',\r\n    templateUrl: './simple-columns.component.html',\r\n    styles: [\r\n        `\r\n        .f-datagrid-settings-simple {\r\n            position: absolute;\r\n            top: 100px;\r\n            right: 0px;\r\n            z-index: 10000;\r\n            height: calc(100vh - 100px);\r\n            width: 468px;\r\n            background: #FFFFFF;\r\n            border: 1px solid #E6E9F0;\r\n            border-radius: 10px 0 0 10px;\r\n        }\r\n\r\n        .f-datagrid-settings-simple:focus {\r\n            outline: none;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .header {\r\n            height: 50px;\r\n            line-height: 50px;\r\n            border-bottom: 1px solid #EAEDF3;\r\n            font-size: 18px;\r\n            color: #2D2F33;\r\n        }\r\n        .f-datagrid-settings-simple .header .title {\r\n            padding-left: 21px;\r\n            font-weight:bold;\r\n        }\r\n        .f-datagrid-settings-simple .header .closed\r\n        {\r\n            width: 50px;\r\n            text-align: center;\r\n            cursor: pointer;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .content .count{font-size: 14px; color: #2D2F33;}\r\n        .f-datagrid-settings-simple .content .tip {\r\n            background: #F7FAFF; border-radius: 6px;line-height: 42px; padding-left: 10px; margin-bottom: 10px;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .content .checkall{\r\n            margin-left: 5px;\r\n            font-size: 14px;\r\n            color: #0089FF;\r\n            margin-right: 5px;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .content {\r\n            margin: 20px 24px;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .footer {\r\n            height: 32px;\r\n            margin: 20px;\r\n        }\r\n\r\n\r\n        .smooth-dnd-ghost.format-setting-column {\r\n            z-index: 999999999 !important;\r\n            padding: 4px 8px;\r\n            background-color: #e7f1ff;\r\n            border: 1px solid #2a87ff;\r\n        }\r\n        .smooth-dnd-ghost.format-setting-column .field-drag-handle {\r\n            float: right;\r\n        }\r\n        .f-datagrid-settings-simple  .smooth-dnd-drop-preview-constant-class {\r\n            background-color: #dee1ea;\r\n        }\r\n        .f-datagrid-settings-simple .format-setting-column {\r\n            background: #fafbfd;\r\n            padding: 4px 8px;\r\n            margin-bottom: 5px;\r\n            border: 1px solid #f2f4f8;\r\n            border-radius: 5px;\r\n            color: #000;\r\n        }\r\n        .f-datagrid-settings-simple .format-setting-column.active {\r\n            border: 1px solid #2a87ff;\r\n            background: #e7f1ff;\r\n            border-top: 1px solid #2a87ff!important;\r\n            border-bottom: 1px solid #2a87ff!important;\r\n        }\r\n\r\n        .format-setting-column .checkbox{\r\n            font-size: 14px;\r\n            color: #0089FF;\r\n            margin-right: 5px;\r\n            cursor:pointer;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .format-setting-column .field-drag-handle{\r\n            float: right;\r\n            cursor: grab;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .format-setting-column .field-drag-handle:active{\r\n            cursor: grabbing;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .list-group-flush:last-child .list-group-item:last-child {\r\n            border-bottom: 1px solid #f2f4f8;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .list-group-flush:first-child .list-group-item:first-child {\r\n            border-top: 1px solid #f2f4f8;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .buttons\r\n        {\r\n            text-align: right;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .buttons button {\r\n            width: 66px;height: 32px;\r\n        }\r\n        .f-datagrid-settings-simple .buttons .cancel {\r\n            margin-left: 12px;margin-right: 8px;\r\n        }\r\n        .f-datagrid-settings-simple .buttons .ok {\r\n            width: 100px;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .buttons .advanced{ width: 66px;height: 32px; float: left; }\r\n\r\n        .f-datagrid-settings-simple-host {\r\n            width: 100%;\r\n            height: 100%;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            z-index: 1000;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .visible-cols-count {\r\n            font-size: 18px;\r\n            font-weight: 500;\r\n        }\r\n        `\r\n    ],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SimpleColumnsComponent implements OnInit {\r\n\r\n    @Input() seartTypes: any = [];\r\n    /** ææå */\r\n    @Input() columns = [];\r\n    /** æ¾ç¤ºçå */\r\n    @Input() fields = [];\r\n    /** ç¹å»ä¾§è¾¹æ ·å¼ä»¥å¤çåºåéèé¢æ¿ãé»è®¤ä¸º true */\r\n    @Input() clickToHidden = true;\r\n\r\n    @Input() top = 0;\r\n\r\n    @HostBinding('class') cls = 'f-datagrid-settings-simple-host';\r\n\r\n    @ViewChild('colcontainer') container: ElementRef;\r\n    @ViewChild('okbtn') btnOk: ElementRef;\r\n    @ViewChild('inputWord') searchInput: ElementRef;\r\n\r\n    @Output() formatChange = new EventEmitter();\r\n    @Output() fieldsChange = new EventEmitter();\r\n    @Output() submit = new EventEmitter();\r\n    @Output() closed = new EventEmitter();\r\n    @Output() advanced = new EventEmitter();\r\n\r\n    allCols = [];\r\n    columnType = 'all';\r\n\r\n    gridInstance: DatagridComponent;\r\n    localeSer: LocaleService;\r\n    isEn = false;\r\n    private messager: MessagerService;\r\n\r\n    private settings: any = {};\r\n\r\n    constructor(private injector: Injector, public cd: ChangeDetectorRef) {\r\n        this.localeSer = this.injector.get(LocaleService, null);\r\n        this.messager = this.injector.get(MessagerService, null);\r\n    }\r\n\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick($event: MouseEvent) {\r\n        // console.log($event);\r\n        $event.stopPropagation();\r\n        const clsname = $event.target['className'] || '';\r\n        if (clsname.indexOf('f-datagrid-settings-simple-host') > -1) {\r\n            // éèä¾§è¾¹æ ï¼\r\n            if (this.clickToHidden) {\r\n                this.close();\r\n            }\r\n        }\r\n    }\r\n\r\n    @HostListener('window:keydown.esc', ['$event'])\r\n    onEscKeydown($event) {\r\n        $event.stopPropagation();\r\n        if (!document.querySelector('modal-container')) {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    @HostListener('window:keydown.enter', ['$event'])\r\n    onEnterKeydown($event) {\r\n        $event.stopPropagation();\r\n        if (!document.querySelector('modal-container')) {\r\n            this.onSubmitClick();\r\n        }\r\n    }\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    onControlGKeydown($event: KeyboardEvent) {\r\n        if ($event.ctrlKey && !document.querySelector('modal-container')) {\r\n            $event.preventDefault();\r\n            $event.stopPropagation();\r\n            if ($event.key.toLowerCase() === 'g') {\r\n                this.showAdvanced($event);\r\n            } else if ($event.key.toLowerCase() === 'r') {\r\n                this.onSettingReset();\r\n            } else if ($event.key.toLowerCase() === 's') {\r\n                this.searchInput.nativeElement.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.allCols = this.columns[0];\r\n        this.fields = this.getViewColumns();\r\n        this.container.nativeElement.focus();\r\n    }\r\n\r\n    private getViewColumns() {\r\n        // å¤è¡¨å¤´\r\n        let visibleCls = [];\r\n        if (this.columns.length > 1 ) {\r\n            this.columns.forEach(cols => {\r\n                visibleCls = visibleCls.concat(this._getViewColumns(cols));\r\n            });\r\n        } else {\r\n            visibleCls = this.columns[0].filter(n => (n.visible || n.visible === undefined));\r\n        }\r\n\r\n        return visibleCls.map(n => n.field);\r\n    }\r\n\r\n    private _getViewColumns(cols: any[]) {\r\n        return cols.filter(c => !c.colspan && (c.visible || c.visible === undefined));\r\n    }\r\n\r\n\r\n    // æ ¹æ®åçç±»åè¿è¡ç­éè¿æ»¤ï¼\r\n    // all ææå\r\n    // visible å¯è§å\r\n    // hidden éèå\r\n    // group åç»å\r\n    filterColumns(ct: string, searchWords = '') {\r\n        let cols = [];\r\n        switch (ct) {\r\n            case 'visible':\r\n                cols = this.columns[0].filter(n => this.fields.indexOf(n.field) > -1);\r\n                break;\r\n            case 'hidden':\r\n                cols = this.columns[0].filter(n => this.fields.indexOf(n.field) === -1);\r\n                break;\r\n            case 'all':\r\n            default:\r\n                cols = this.columns[0];\r\n                break;\r\n        }\r\n\r\n        if (searchWords) {\r\n            cols = cols.filter(c => c.title.toLowerCase().indexOf(searchWords) > -1);\r\n        }\r\n\r\n        this.allCols = cols;\r\n    }\r\n\r\n\r\n\r\n    private onFieldsChanged() {\r\n        this.fieldsChange.emit(this.fields);\r\n    }\r\n    onDblClick($event, col) {\r\n        // console.log('æ¾ç¤ºä¸éèåæ¢äºä»¶', col);\r\n        this.onCheckboxClick($event, col);\r\n    }\r\n\r\n    onCheckboxClick($event, col) {\r\n        // console.log('æ¾ç¤ºä¸éèåæ¢äºä»¶', col);\r\n        $event.stopPropagation();\r\n        const index = this.fields.indexOf(col.field);\r\n        if (index === -1) {\r\n            this.fields.push(col.field);\r\n        } else {\r\n            this.fields.splice(index, 1);\r\n        }\r\n\r\n        this.columns[0].forEach(f => {\r\n            f.visible = this.fields.indexOf(f.field) > -1;\r\n        });\r\n\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n\r\n        this.onFieldsChanged();\r\n    }\r\n\r\n    searchColumn($event, ct) {\r\n        const txt = $event.target.value;\r\n        this.filterColumns(ct, txt);\r\n    }\r\n\r\n    onFieldDrop(fieldInfo, ct, txt, ulElRef: any) {\r\n       // console.log('drop', fieldInfo);\r\n        const { removedIndex, addedIndex } = fieldInfo;\r\n\r\n        const moveItem = this.allCols[removedIndex];\r\n        const targetItem = this.allCols[addedIndex];\r\n\r\n        const moveItemIndex = this.columns[0].findIndex(n => n.field === moveItem.field);\r\n        const targetItemIndex = this.columns[0].findIndex(n => n.field === targetItem.field);\r\n\r\n        const removedItem = this.columns[0].splice(moveItemIndex, 1);\r\n        this.columns[0].splice(targetItemIndex, 0, ...removedItem);\r\n\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n        this.onFieldsChanged();\r\n\r\n        this.filterColumns(ct, txt);\r\n    }\r\n\r\n    /**\r\n     * 0: 1ä¸ªä¹æ²¡æéä¸­ï¼ 1: å¨é¨éä¸­ï¼ 2: æéä¸­çä¹ææ²¡éä¸­ç\r\n     */\r\n    private getCheckAllState() {\r\n        if (this.fields.length === 0) {\r\n            return 0;\r\n        } else {\r\n            if (this.fields.length === this.columns[0].length) {\r\n                return 1;\r\n            }\r\n            return 2;\r\n        }\r\n    }\r\n\r\n    onCheckAllClick($event, ct, txt) {\r\n        const state = this.getCheckAllState();\r\n        if (state === 0 || state === 2) {\r\n            // æ§è¡å¨é\r\n            this.columns[0].forEach(n => n.visible = true);\r\n            this.fields = this.columns[0].map(n => n.field);\r\n        } else {\r\n            // åæ¶å¨é\r\n            this.columns[0].forEach(n => n.visible = false);\r\n            this.fields = [];\r\n        }\r\n\r\n        this.onFieldsChanged();\r\n        this.filterColumns(ct, txt);\r\n    }\r\n\r\n    close($event?: MouseEvent) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        this.closed.emit();\r\n    }\r\n\r\n    showAdvanced($event) {\r\n        this.close($event);\r\n        this.advanced.emit();\r\n    }\r\n\r\n    onSettingReset($event?: any) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        const restorDefaultText = this.localeSer.getValue('datagrid.settings.restoreDefaultSettingsText') || 'ç¡®è®¤è¦æ¢å¤é»è®¤è®¾ç½®åï¼';\r\n        this.messager.confirm(restorDefaultText).subscribe((t: boolean) => {\r\n            if (t) {\r\n                this.reset2Default();\r\n            }\r\n        });\r\n    }\r\n\r\n    private reset2Default() {\r\n        const options = this.gridInstance.dfs['_state'].initialOptions;\r\n        if (options.columnFields && options.columnFields.length) {\r\n\r\n            const newColumns = [];\r\n            options.columnFields.forEach(c => {\r\n                if (c.field !== '_datagrid-setting-control_') {\r\n                    const col = this.gridInstance.columns[0].find((n: any) => n.field === c.field);\r\n                    if (col) {\r\n                        col.visible = c.visible;\r\n                        col.halign = c.halign;\r\n                        col.align = c.align;\r\n                        col.width = c.width;\r\n                        col.footer = {...c.footer || {}};\r\n                        col.groupFooter = {...c.groupFooter || {}};\r\n                        newColumns.push(col);\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.columns = [newColumns];\r\n        }\r\n\r\n        this.allCols = this.columns[0];\r\n\r\n        this.fields = this.getViewColumns();\r\n        this.settings.viewColumns = this.fields;\r\n        this.settings.columnFormat = [...this.columns[0]];\r\n        if (options.sort) {\r\n            const sortOrders = options.sort.sortOrder? options.sort.sortOrder.split(',') : [];\r\n            const sortNames = options.sort.sortName ? options.sort.sortName.split(',') : [];\r\n            this.settings.sortInfo = { sortName: sortNames, sortOrder:  sortOrders };\r\n        } else {\r\n            this.settings.sortInfo = {};\r\n        }\r\n        this.settings.groupFields =  options.groupField ? options.groupField.split(',') : [];\r\n    }\r\n\r\n    onSubmitClick($event?: any) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        this.settings.viewColumns = this.fields;\r\n        this.settings.columnFormat = [...this.columns[0]];\r\n\r\n        if (!this.settings.sortInfo) {\r\n            this.settings.sortInfo = {\r\n                sortName: this.gridInstance.sortName ? this.gridInstance.sortName.split(',') : [],\r\n                sortOrder:  this.gridInstance.sortOrder ? this.gridInstance.sortOrder.split(',') : []\r\n            };\r\n        }\r\n\r\n        if (this.settings.groupFields === undefined) {\r\n            this.settings.groupFields = this.gridInstance.groupField ? this.gridInstance.groupField.split(',') : [];\r\n        }\r\n\r\n        this.submit.emit({content: this.settings, close: this.close.bind(this), target: this.btnOk.nativeElement});\r\n    }\r\n}\r\n","import { map, switchMap, tap } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Injectable, Injector, InjectionToken, ComponentFactoryResolver, ApplicationRef } from '@angular/core';\r\nimport { DatagridComponent, DataColumn } from '@farris/ui-datagrid';\r\nimport { BsModalService, ModalOptions, ModalContainerComponent } from '@farris/ui-modal';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { DatagridSettingsComponent } from './datagrid-settings.component';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { TreeNode } from '@farris/ui-treetable';\r\nimport { IdService } from '@farris/ui-common';\r\nimport { SimpleColumnsComponent } from './simple-mode/simple-columns.component';\r\n\r\nexport const GRID_SETTINGS_WEBAPI =  new InjectionToken(' Farris DataGrid User Setting WebApi URI.');\r\n\r\n@Injectable()\r\nexport class DatagridSettingsService {\r\n\r\n    private multiSortMsg = 'åè¡¨ä¸­æªå¼å¯å¤åæåºçåè½ã è¯·æ£æ¥ï¼';\r\n    private columnsSortableMsg = 'æªå¼å¯åçæåºåè½ãè¯·æ£æ¥ï¼';\r\n    private notSupportHeaderGroupMsg = 'æä¸æ¯æå¤è¡¨å¤´è®¾ç½®';\r\n    private notShowDialog = 'å¤è¡¨å¤´æä¸æ¯æåæ¾ç¤ºè®¾ç½®ï¼åæ¶æªå¯ç¨åæåºåè½ã';\r\n\r\n    public httpRestService: any;\r\n    gridInstance: any = null;\r\n    private gridRefs: {[key: string]: DatagridComponent} = null;\r\n\r\n    private saving = false;\r\n    private cfr: ComponentFactoryResolver = null;\r\n    private app: ApplicationRef = null;\r\n    constructor(private injector: Injector, private modalSer: BsModalService,\r\n                private messager: MessagerService, private idService: IdService,\r\n                private localeSer: LocaleService) {\r\n\r\n        this.cfr = this.injector.get(ComponentFactoryResolver);\r\n        this.app = this.injector.get(ApplicationRef);\r\n    }\r\n\r\n    destroy(id?: string) {\r\n        if (id && this.gridRefs && this.gridRefs[id]) {\r\n            delete this.gridRefs[id];\r\n        } else {\r\n            this.gridRefs = null;\r\n        }\r\n    }\r\n\r\n    registerGridInstance(dg: DatagridComponent) {\r\n        if (!dg) {\r\n            console.log('DatagridSettingService: grid instance is null.');\r\n            return;\r\n        }\r\n        const id = dg.id;\r\n        this.gridRefs = this.gridRefs || {};\r\n        if (!this.gridRefs[id]) {\r\n            this.gridRefs[id] = dg;\r\n        }\r\n    }\r\n\r\n    getGridInstance(dgID: string) {\r\n        return this.gridRefs ? this.gridRefs[dgID] : null;\r\n    }\r\n\r\n    getSearchTypes() {\r\n        return [\r\n            { value: 'all', title: this.localeSer.getValue('datagrid.settings.allColumns') },\r\n            { value: 'visible', title: this.localeSer.getValue('datagrid.settings.visibleColumns') },\r\n            { value: 'hidden', title: this.localeSer.getValue('datagrid.settings.hiddenColumns') }\r\n        ];\r\n    }\r\n\r\n    showSimple(gridInstance: DatagridComponent) {\r\n        const columns = this.convertColumnsToSimple(gridInstance.columns);\r\n        columns[0] = columns[0].filter(n => n.field && n.field !== gridInstance.ControlPanelFeild);\r\n\r\n        const searchTypes = this.getSearchTypes();\r\n\r\n        if (this.cfr) {\r\n            const cmpFactory = this.cfr.resolveComponentFactory(SimpleColumnsComponent);\r\n            let simpleRef = cmpFactory.create(this.injector);\r\n            this.app.attachView(simpleRef.hostView);\r\n            simpleRef.instance.columns = columns;\r\n            simpleRef.instance.seartTypes = searchTypes;\r\n            simpleRef.instance.gridInstance = gridInstance;\r\n\r\n            if (document.querySelector('#page-wrapper')) {\r\n                simpleRef.instance.top = 76;\r\n            }\r\n\r\n            document.body.appendChild(simpleRef.location.nativeElement);\r\n\r\n\r\n            simpleRef.instance.closed.subscribe( () => {\r\n                simpleRef.location.nativeElement.remove();\r\n                simpleRef.destroy();\r\n                simpleRef = null;\r\n            });\r\n\r\n            simpleRef.instance.advanced.subscribe(() => {\r\n                this.showAdvanced(gridInstance);\r\n            });\r\n\r\n            simpleRef.instance.submit.subscribe( (e: any) => {\r\n                e.target.disabled = true;\r\n                if (this.saving) {\r\n                    return;\r\n                }\r\n                if (!this.saving) {\r\n                    this.updateGridView(e, gridInstance, e.target);\r\n                }\r\n            });\r\n\r\n            simpleRef.hostView.detectChanges();\r\n\r\n            return simpleRef;\r\n        }\r\n    }\r\n\r\n\r\n    show(gridInstance: DatagridComponent, opts?: ModalOptions) {\r\n        this.registerGridInstance(gridInstance);\r\n\r\n        if (gridInstance.enableSimpleMode) {\r\n            return this.showSimple(gridInstance);\r\n        } else {\r\n            return this.showAdvanced(gridInstance, opts);\r\n        }\r\n    }\r\n\r\n    private showAdvanced(gridInstance: DatagridComponent, opts?: ModalOptions) {\r\n        let _editColSortInfo = true;\r\n        const editColSortInfo = this.canSetColumnSort(gridInstance);\r\n        if (editColSortInfo !== true) {\r\n            // this.messager.warning(msg);\r\n            // return;\r\n            _editColSortInfo = false;\r\n        }\r\n\r\n        const showSetColumnsTab = !this.isHeaderGroup(gridInstance);\r\n        const getActiveTabIndex = () => {\r\n            if (showSetColumnsTab) {\r\n                return 1;\r\n            } else {\r\n                if (_editColSortInfo) {\r\n                    return 2;\r\n                } else {\r\n                    return -1;\r\n                }\r\n            }\r\n        };\r\n        const activeTabIndex = getActiveTabIndex();\r\n\r\n        if (activeTabIndex === -1) {\r\n            this.messager.warning(this.notShowDialog);\r\n            return;\r\n        }\r\n\r\n        const columns = this.convertColumnsToSimple(gridInstance.columns);\r\n        columns[0] = columns[0].filter(n => n.field && n.field !== gridInstance.ControlPanelFeild);\r\n        const treeData = this.convertColumns2TreeData(cloneDeep(columns), true);\r\n        const viewColumnsTreeData = this.convertColumns2TreeData(cloneDeep(columns), false);\r\n        this.checkViewTreeNodes(viewColumnsTreeData);\r\n\r\n        let modalRef = null;\r\n\r\n        const okText = this.localeSer.getValue('datagrid.settings.ok') || 'ç¡®å®';\r\n        const cancelText = this.localeSer.getValue('datagrid.settings.cancel') || 'åæ¶';\r\n        const resetText =  this.localeSer.getValue('datagrid.settings.reset') || 'éç½®';\r\n\r\n\r\n        const defaultOpts = {\r\n            width: 760, height: 560, showHeader: false, title: 'æ§å¶é¢æ¿',\r\n            initialState: {\r\n                columns,\r\n                sortTreeData: treeData,\r\n                viewTreeData: viewColumnsTreeData,\r\n                gridInstance,\r\n                canSetColumnSort: _editColSortInfo,\r\n                canSetColumnVisible: showSetColumnsTab,\r\n                activeTabIndex\r\n            },\r\n            showButtons: false\r\n        };\r\n        const modalOpts = Object.assign(defaultOpts, opts || {});\r\n\r\n        modalRef = this.modalSer.show(DatagridSettingsComponent, modalOpts);\r\n        const instance = modalRef.content as DatagridSettingsComponent;\r\n        instance.enableReset = true;\r\n        instance.modalRef = modalRef;\r\n        instance.canSetColumnSort = _editColSortInfo;\r\n        instance.canSetColumnVisible = !this.isHeaderGroup(gridInstance);\r\n\r\n        instance.submitHandle.subscribe((e) => {\r\n            e.target.disabled = true;\r\n            if (this.saving) {\r\n                return;\r\n            }\r\n            if (!this.saving) {\r\n                this.updateGridView(modalRef, gridInstance, e.target);\r\n            }\r\n        });\r\n\r\n        instance.cancelHandle.subscribe((e) => {\r\n            modalRef.close();\r\n        });\r\n\r\n        instance.concise.subscribe((e) => {\r\n            modalRef.close();\r\n            this.showSimple(gridInstance);\r\n        });\r\n\r\n        const modalContainer = modalRef.dialog.instance as ModalContainerComponent;\r\n        modalContainer.draggbar.handle = instance.header.nativeElement;\r\n        return modalRef;\r\n    }\r\n\r\n\r\n\r\n    private canSetColumnSort(gridInstance: DatagridComponent) {\r\n        if (gridInstance.multiSort && this.hasEnableSortColumns(gridInstance)) {\r\n            return true;\r\n        } else {\r\n            if (!this.hasEnableSortColumns(gridInstance)) {\r\n                return this.columnsSortableMsg;\r\n            } else if (!gridInstance.multiSort) {\r\n                return this.multiSortMsg;\r\n            }\r\n        }\r\n    }\r\n\r\n    private hasEnableSortColumns(gridInstance: DatagridComponent) {\r\n        const sortColumnsCount = gridInstance.flatColumns.reduce((c, r) => {\r\n            if (r.sortable) {\r\n                return c + 1;\r\n            }\r\n            return c;\r\n        }, 0);\r\n\r\n        return sortColumnsCount > 0;\r\n    }\r\n\r\n    private isHeaderGroup(grid: DatagridComponent) {\r\n        const flag = grid.columns.length > 1;\r\n        if (flag) {\r\n            return this.notSupportHeaderGroupMsg;\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    private getChilds(cols, rowIndex, colStartIndex, colCount, forSort = false) {\r\n        const childCols = [];\r\n        let _count = colStartIndex;\r\n        if (!cols[rowIndex]) {\r\n            return  [];\r\n        }\r\n\r\n        cols[rowIndex].slice().forEach(element => {\r\n            _count = _count + element.colspan;\r\n            if ( _count <= colCount ) {\r\n                childCols.push(element);\r\n            }\r\n        });\r\n\r\n        cols[rowIndex].splice(0, childCols.length);\r\n\r\n        return childCols.map((c, i) => {\r\n            let n: any = {\r\n                data: c,\r\n                selectable: forSort ? !!c.sortable : true\r\n            };\r\n\r\n            if (c.colspan && c.colspan > 1) {\r\n                n = {\r\n                    data: c,\r\n                    selectable: false,\r\n                    expanded: true,\r\n                    children: this.getChilds(cols, rowIndex + 1, 0 , c.colspan)\r\n                };\r\n            }\r\n            return n;\r\n        });\r\n    }\r\n    convertColumns2TreeData(cols: DataColumn[][], forSort = false) {\r\n        const columns = cols.map((c: any) => {\r\n            c.map((_) => {\r\n                _.colspan = _.colspan || 1;\r\n                return _;\r\n            });\r\n            return c;\r\n        });\r\n        if (columns.length === 1) {\r\n            return columns[0].map(c => {\r\n                return {\r\n                    data: c,\r\n                    selectable: forSort ? !!c.sortable : true\r\n                };\r\n            });\r\n        } else {\r\n            return columns[0].map((c, i) => {\r\n                if (c.colspan && c.colspan > 1) {\r\n                    return {\r\n                        data: c,\r\n                        selectable: false,\r\n                        expanded: true,\r\n                        children: this.getChilds(columns, 1, 0, c.colspan, forSort)\r\n                    };\r\n                } else {\r\n                    return {\r\n                        data: c,\r\n                        selectable: forSort ? !!c.sortable : true\r\n                    };\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    private checkViewTreeNodes(treeNodes: TreeNode[]) {\r\n        treeNodes.forEach((tn: TreeNode) => {\r\n            if (!tn.children || !tn.children.length) {\r\n                tn.selectable = true;\r\n            } else {\r\n                tn.selectable = false;\r\n                this.checkViewTreeNodes(tn.children);\r\n            }\r\n        });\r\n    }\r\n\r\n    private convertColumnsToSimple(cols: any) {\r\n        // ç§»é¤è®¾ç½®å\r\n        return cols.map( (_cols: DataColumn[]) => {\r\n            return _cols.map( (c: DataColumn) => {\r\n                if (c.field !== '_datagrid-setting-control_') {\r\n                    return {\r\n                        field: c.field,\r\n                        title: c.title,\r\n                        colspan: c.colspan,\r\n                        rowspan: c.rowspan,\r\n                        sortable: c.sortable,\r\n                        order: c.order,\r\n                        halign: c.halign || 'left',\r\n                        align: c.align || 'left',\r\n                        visible: c.visible,\r\n                        allowGrouping: c.allowGrouping,\r\n                        groupFooter: c.groupFooter,\r\n                        footer: c.footer,\r\n                        width: c.width || 100,\r\n                        dataType: c.dataType || 'string'\r\n                    };\r\n                }\r\n            }).filter(n => n);\r\n        });\r\n    }\r\n\r\n    private resetGridView(gridInstance: any) {\r\n        if (!gridInstance) {\r\n            return;\r\n        }\r\n        const dfs = gridInstance.dfs;\r\n        if (dfs) {\r\n            const options = dfs['_state'].initialOptions;\r\n\r\n            if (options.sort) {\r\n                if (options.sort.sortName) {\r\n                    gridInstance.sortName = options.sort.sortName;\r\n                }\r\n                if (options.sort.sortOrder) {\r\n                    gridInstance.sortOrder = options.sort.sortOrder;\r\n                }\r\n            }\r\n\r\n            gridInstance.groupField = options.groupField || '';\r\n            // TODO: è¿éè¦ä¿®æ­£é»è®¤åçæ¾ç¤ºé¡ºåº\r\n            if (options.columnFields && options.columnFields.length) {\r\n\r\n                const newColumns = [];\r\n                options.columnFields.forEach(c => {\r\n                    const col = gridInstance.columns[0].find((n: any) => n.field === c.field);\r\n                    if (col) {\r\n                        col.visible = c.visible;\r\n                        col.halign = c.halign;\r\n                        col.align = c.align;\r\n                        col.width = c.width;\r\n                        col.footer = c.footer;\r\n                        col.groupFooter = c.groupFooter;\r\n                        newColumns.push(col);\r\n                    }\r\n                });\r\n\r\n                gridInstance.columns[0] = newColumns;\r\n            }\r\n\r\n            // gridInstance['checkOptions']();\r\n            gridInstance['columnsChanged']();\r\n        }\r\n    }\r\n\r\n    private updateGridView(modalRef, gridInstance, btn = null) {\r\n        const settings = modalRef.content;\r\n\r\n        if (settings) {\r\n            const key = this.createConfigKey(gridInstance.id);\r\n            const { sortInfo, viewColumns, columnFormat, groupFields } = settings;\r\n\r\n            this.saving = true;\r\n\r\n            let groupField = '';\r\n            if (gridInstance.groupRows && groupFields && groupFields.length) {\r\n                groupField = groupFields.join(',') ;\r\n            }\r\n            gridInstance.groupField = groupField;\r\n\r\n            this.setUserConfig(key, { sortInfo, viewColumns, groupField, columnFormat }).subscribe( () => {\r\n                if (btn) {\r\n                    btn.disabled = false;\r\n                }\r\n                this.saving = false;\r\n                modalRef.close();\r\n\r\n                if (sortInfo && Object.keys(sortInfo).length) {\r\n                    const { sortName, sortOrder } = sortInfo;\r\n                    if (sortName && sortName.length) {\r\n                        gridInstance.sort(sortName.join(','), sortOrder.join(','));\r\n                    } else {\r\n                        gridInstance.clearSort();\r\n                    }\r\n                } else {\r\n                    gridInstance.clearSort();\r\n                }\r\n\r\n                if (viewColumns && viewColumns.length) {\r\n                    gridInstance.columns = gridInstance.columns.map(cols => {\r\n                        this.updateColumnFormat(cols, columnFormat, gridInstance);\r\n                        return this.newVisibleOrderColumns(cols, viewColumns, columnFormat);\r\n                    });\r\n                }\r\n\r\n                gridInstance.columnsChanged(true);\r\n            });\r\n        } else {\r\n            modalRef.close();\r\n        }\r\n    }\r\n\r\n\r\n    newVisibleOrderColumns(cols: any, viewColumns: any, columnFormat: any) {\r\n        const hideColumns = [];\r\n        cols.forEach((element, index) => {\r\n            if (this.isNewAddColumn(element.field, columnFormat) && element.field !== '_datagrid-setting-control_') {\r\n                viewColumns.push(element.field);\r\n            } else {\r\n                element.visible = viewColumns.includes(element.field);\r\n                if (!element.visible) {\r\n                    hideColumns.push(element);\r\n                }\r\n            }\r\n        });\r\n\r\n        // æ¸çä¸å­å¨çå\r\n        let newCols = viewColumns.map( field => {\r\n            return cols.find(c => c.field === field);\r\n        }).filter(n => n);\r\n\r\n        if (hideColumns.length) {\r\n            newCols = newCols.concat(hideColumns);\r\n        }\r\n\r\n        return newCols.filter(c => c && c.field && c.field !== '_datagrid-setting-control_' );\r\n    }\r\n\r\n    /**\r\n     * æ¯å¦ä¸ºæ°å¢å çå­æ®µ\r\n     * æ°å¢çå­æ®µï¼éè¦å¨åè¡¨ä¸­å±ç¤ºåºæ¥ï¼å¹¶ä¿å­å°ä¸ªæ§åè®¾ç½®ä¸­\r\n     */\r\n    private isNewAddColumn(field: any, columns: any) {\r\n        return !columns.find(c => c.field === field);\r\n    }\r\n\r\n\r\n    updateColumnFormat(cols: any[], columnFormat: any[], gridInstance) {\r\n        if (columnFormat && columnFormat.length) {\r\n            cols.forEach(col => {\r\n                const formatCol = columnFormat.find(f=> f.field === col.field);\r\n                if (formatCol) {\r\n                    col.width = formatCol.width;\r\n                    col.halign = formatCol.halign || 'left';\r\n                    col.align = formatCol.align || 'left';\r\n\r\n                    if (gridInstance.groupRows && (col.allowGrouping || col.allowGrouping === undefined)) {\r\n                        if (!col.groupFooter) {\r\n                            col.groupFooter = formatCol.groupFooter;\r\n                        }\r\n\r\n                        if (col.groupFooter && col.groupFooter.options) {\r\n                            col.groupFooter.options.text = formatCol.groupFooter.options.text || '';\r\n                            col.groupFooter.options.calculationType =\r\n                                formatCol.groupFooter.options.calculationType !== undefined &&\r\n                                formatCol.groupFooter.options.calculationType !== null ?\r\n                                parseInt(formatCol.groupFooter.options.calculationType, 10) : -1;\r\n                        }\r\n                    }\r\n\r\n                    if (gridInstance.showFooter && !gridInstance.footerTemplate) {\r\n                        if (!col.footer) {\r\n                            col.footer = formatCol.footer;\r\n                        }\r\n\r\n                        if (col.footer && col.footer.options) {\r\n                            col.footer.options.text = formatCol.footer.options.text || '';\r\n                            col.footer.options.calculationType =\r\n                                formatCol.footer.options.calculationType !== undefined &&\r\n                                formatCol.footer.options.calculationType !== null ?\r\n                                parseInt(formatCol.footer.options.calculationType, 10) : -1;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // åå»ºå¯ä¸key, ç±uri + gridId ç»æï¼å¹¶æ··æ·\r\n    private createConfigKey(gridId: string) {\r\n        const grid = this.getGridInstance(gridId);\r\n        if (grid) {\r\n            return grid.dgs.createConfigKey(gridId);\r\n        } else {\r\n            console.log('DatagridSettingService: Can not find the grid instance.');\r\n        }\r\n\r\n    }\r\n\r\n    saveUserConfig(gridId: string) {\r\n        const gridInstance = this.getGridInstance(gridId);\r\n        const key = this.createConfigKey(gridId);\r\n        const config = {sortInfo: {}, viewColumns: [], groupField: '', columnFormat: []};\r\n\r\n        if (gridInstance) {\r\n            const { sortName, sortOrder, columns} = gridInstance;\r\n            if (sortName) {\r\n                const sortInfo = {\r\n                    sortName: sortName.split(','),\r\n                    sortOrder: sortOrder.split(',')\r\n                };\r\n\r\n                config.sortInfo = sortInfo;\r\n            }\r\n\r\n            const viewColumns = columns[0].filter(n => n.visible || n.visible === undefined).map(n => n.field);\r\n            config.viewColumns = viewColumns;\r\n            config.columnFormat = this.convertColumnsToSimple(columns)[0];\r\n\r\n            if (gridInstance.groupRows) {\r\n                config.groupField = gridInstance.groupField;\r\n            }\r\n        }\r\n\r\n        return this.setUserConfig(key, config);\r\n    }\r\n\r\n    setUserConfig(key: string, config: any): Observable<any> {\r\n\r\n        const LOCALEID = this.localeSer.localeId;\r\n        const currentConfig = localStorage.getItem(key);\r\n        const _config = (currentConfig ? JSON.parse(currentConfig) : { }) || {};\r\n        if (config) {\r\n            if (_config) {\r\n                _config[LOCALEID] = config;\r\n            }\r\n\r\n            localStorage.setItem(key, JSON.stringify(_config));\r\n        } else {\r\n            localStorage.removeItem(key);\r\n        }\r\n        if (this.httpRestService) {\r\n            // ä¿å­è³æ°æ®åº\r\n            return this._saveUserConfig(key,  config ? _config :  '');\r\n        }\r\n\r\n        return of(true);\r\n    }\r\n\r\n    getUserConfig(key): Observable<any> {\r\n        if (this.httpRestService) {\r\n            return this._getUserConfig(key);\r\n        } else {\r\n            const config = localStorage.getItem(key);\r\n            if (config) {\r\n                const con = JSON.parse(config);\r\n                if (con[this.localeSer.localeId]) {\r\n                    return of(con[this.localeSer.localeId]);\r\n                } else {\r\n                    if (Object.keys(con).indexOf('viewColumns') > -1) {\r\n                        return of(con);\r\n                    }\r\n                    return null;\r\n                }\r\n            } else {\r\n                return of(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    getSettings(gridID: string) {\r\n        const key = this.createConfigKey(gridID);\r\n        return this.getUserConfig(key);\r\n    }\r\n\r\n\r\n    private _saveUserConfig(key, config) {\r\n        try {\r\n            const userConfigSetting = {\r\n                configkey1: key,\r\n                configkey2: '',\r\n                configkey3: '',\r\n                textvalue: config ? JSON.stringify(config) :  ''\r\n            };\r\n\r\n            return this.httpRestService.saveUserSettings(userConfigSetting);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    resetUserConfig(gridInstance, modalRef) {\r\n        const restorDefaultText = this.localeSer.getValue('datagrid.settings.restoreDefaultSettingsText') || 'ç¡®è®¤è¦æ¢å¤é»è®¤è®¾ç½®åï¼';\r\n        this.messager.confirm(restorDefaultText).pipe(\r\n            switchMap( (t: boolean) => {\r\n                if (t) {\r\n                    const key = this.createConfigKey(gridInstance.id);\r\n                    return this.setUserConfig(key, '');\r\n                }\r\n                return of(t);\r\n            })\r\n        ).subscribe((t: boolean) => {\r\n            if (t) {\r\n                this.resetGridView(gridInstance);\r\n                modalRef.close();\r\n            }\r\n        });\r\n    }\r\n\r\n    private _getUserConfig(key) {\r\n        try {\r\n            return this.httpRestService.getUserSettings(key).pipe(\r\n                map((ucs: any) => {\r\n                    if (ucs && ucs.textValue) {\r\n                        const c = JSON.parse(ucs.textValue);\r\n                        if (c) {\r\n                            if (c[this.localeSer.localeId]) {\r\n                                localStorage.setItem(key, ucs.textValue);\r\n                                return c[this.localeSer.localeId];\r\n                            } else {\r\n                                localStorage.setItem(key, JSON.stringify({[this.localeSer.localeId]: c}));\r\n                                if (Object.keys(c).indexOf('viewColumns') > -1) {\r\n                                    return c;\r\n                                }\r\n                                return null;\r\n                            }\r\n\r\n                        }\r\n                        return null;\r\n                    }\r\n                    return null;\r\n                })\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n}\r\n","import { OnInit, Component, Input, ViewChild, Injector, EventEmitter, Output, ChangeDetectorRef } from '@angular/core';\r\nimport { MultiSelectComponent } from '@farris/ui-multi-select';\r\n\r\n@Component({\r\n    selector: 'sort-setting',\r\n    templateUrl: './datagrid-sort-setting.component.html'\r\n})\r\nexport class DatagridSortSettingComponent implements OnInit {\r\n\r\n    @Input() idField = 'field';\r\n    @Input() valueField = 'field';\r\n    @Input() textField = 'title';\r\n    @Input() selectedIds = [];\r\n\r\n    @Input() treeData = [];\r\n    @ViewChild('ms') ms: MultiSelectComponent;\r\n\r\n    @Output() sortInfoChange = new EventEmitter();\r\n\r\n    constructor(private injector: Injector, private cd: ChangeDetectorRef) {}\r\n\r\n\r\n    ngOnInit() {}\r\n\r\n    setFieldSortOrder($event: MouseEvent, data: any, order: string) {\r\n        $event.stopPropagation();\r\n        data.sortable = true;\r\n        data.order = order;\r\n\r\n        if (!order) {\r\n            this.ms.moveToLeft(data);\r\n        }\r\n\r\n        this.cd.detectChanges();\r\n        this.onSelectionsChange(null);\r\n        return false;\r\n    }\r\n\r\n    getSortInfo() {\r\n        if (this.ms.selections) {\r\n            const names = [];\r\n            const orders = [];\r\n            this.ms.selections.forEach(col => {\r\n                col.order = col.order || 'asc';\r\n                names.push(col.field);\r\n                orders.push(col.order);\r\n            });\r\n\r\n            return { sortName: names, sortOrder: orders };\r\n        }\r\n        return '';\r\n    }\r\n\r\n    onSelectionsChange($event) {\r\n        const si = this.getSortInfo();\r\n        this.sortInfoChange.emit(si);\r\n    }\r\n\r\n    onBeforeMove($event) {\r\n        const items: any = $event.items as any;\r\n        if ($event.target.indexOf('rightAll') > -1) {\r\n            for (const id in items) {\r\n                if ($event.items[id]) {\r\n                    $event.items[id].order = 'asc';\r\n                }\r\n            }\r\n        } else {\r\n            if ($event.target === 'right') {\r\n                for (const id in items) {\r\n                    if ($event.items[id]) {\r\n                        $event.items[id].order = 'asc';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { OnInit, Component, Input, ViewChild, Injector, EventEmitter,\r\n    Output, ChangeDetectorRef, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { MultiSelectComponent } from '@farris/ui-multi-select';\r\n@Component({\r\n    selector: 'view-columns',\r\n    templateUrl: './datagrid-view-columns.component.html',\r\n})\r\nexport class DatagridViewColumnsComponent implements OnInit, OnChanges {\r\n    @Input() idField = 'field';\r\n    @Input() valueField = 'field';\r\n    @Input() textField = 'title';\r\n\r\n\r\n    private _selectedIds = [];\r\n    get selectedIds() {\r\n        return this._selectedIds;\r\n    }\r\n    @Input() set selectedIds(vals) {\r\n        this._selectedIds = vals;\r\n        this.selectedIdsChange.emit(vals);\r\n    }\r\n\r\n    @Input() treeData = [];\r\n    @ViewChild('ms') ms: MultiSelectComponent;\r\n\r\n    @Output() selectedIdsChange = new EventEmitter();\r\n\r\n    constructor(private injector: Injector, private cd: ChangeDetectorRef) {}\r\n\r\n\r\n    ngOnInit() {}\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n    }\r\n\r\n    onBeforeMove($event) {\r\n\r\n    }\r\n\r\n    hiddenColumn($event: MouseEvent, column: any) {\r\n        $event.stopPropagation();\r\n        this.ms.moveToLeft(column);\r\n    }\r\n}\r\n","import { LocaleService } from '@farris/ui-locale';\r\nimport { Component, Input, OnInit, Injector, ViewChild, Output, EventEmitter, ChangeDetectorRef, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { DatagridSettingsComponent } from '../datagrid-settings.component';\r\n\r\n@Component({\r\n    selector: 'column-format-setting',\r\n    templateUrl: './column-format-setting.component.html',\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ColumnFormatSettingComponent implements OnInit, OnChanges {\r\n    @Input() columns = [];\r\n    @Input() fields = [];\r\n\r\n    @ViewChild('colformatform') colForm: NgForm;\r\n\r\n    @Output() formatChange = new EventEmitter();\r\n    @Output() fieldsChange = new EventEmitter();\r\n\r\n    allCols = [];\r\n\r\n    /** format Data */\r\n    formatData = [];\r\n    columnType = 'all';\r\n    activeField = null;\r\n    showGridFooter = false;\r\n\r\n    searchItems = [];\r\n    alignItems = [];\r\n    summaryItems = [];\r\n    summaryItems2 = [];\r\n    localeSer: LocaleService;\r\n    isEn = false;\r\n    constructor(private injector: Injector, public gridSettingComponentRef: DatagridSettingsComponent, private cd: ChangeDetectorRef) {\r\n        this.showGridFooter = this.gridSettingComponentRef.gridInstance.showFooter &&\r\n                                !this.gridSettingComponentRef.gridInstance.footerTemplate;\r\n        this.localeSer = this.injector.get(LocaleService, null);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.columns && !changes.columns.isFirstChange()) {\r\n            this.setFormatData();\r\n            this.allCols = this.columns[0];\r\n            this.activeField = this.columns[0][0];\r\n            this.checkColumnOptions();\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.isEn = this.localeSer.localeId === 'en';\r\n\r\n        this.initData();\r\n\r\n        if (this.colForm) {\r\n            this.colForm.valueChanges.subscribe(v => {\r\n                if (!this.colForm.pristine) {\r\n                    this.formatChange.emit(this.formatData);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private setFormatData() {\r\n        this.formatData = this.fields.map(n => {\r\n            return this.columns[0].find(col => col.field === n);\r\n        });\r\n    }\r\n\r\n    private initData() {\r\n\r\n        this.alignItems = this.gridSettingComponentRef.alignItems;\r\n        this.searchItems = this.gridSettingComponentRef.searchItems;\r\n        this.summaryItems = this.gridSettingComponentRef.summaryItems;\r\n        this.summaryItems2 = this.gridSettingComponentRef.summaryItems2;\r\n\r\n\r\n        this.setFormatData();\r\n        this.allCols = this.columns[0];\r\n        this.activeField = this.columns[0][0];\r\n        this.checkColumnOptions();\r\n    }\r\n\r\n    private checkColumnOptions() {\r\n        if (this.activeField) {\r\n            if (this.activeField.allowGrouping === undefined) {\r\n                this.activeField.allowGrouping = true;\r\n            }\r\n\r\n            if (this.activeField.groupFooter === undefined) {\r\n                this.activeField.groupFooter = { options: {calculationType: -1} };\r\n            } else {\r\n                this.activeField.groupFooter.options = this.activeField.groupFooter.options || {calculationType: -1};\r\n                if (this.activeField.groupFooter.options.calculationType === undefined) {\r\n                    this.activeField.groupFooter.options.calculationType = -1;\r\n                }\r\n            }\r\n\r\n            if (this.activeField.footer === undefined) {\r\n                this.activeField.footer =  { options: {calculationType: -1} };\r\n            } else {\r\n                this.activeField.footer.options = this.activeField.footer.options || {calculationType: -1};\r\n                if (this.activeField.footer.options.calculationType === undefined) {\r\n                    this.activeField.footer.options.calculationType = -1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // æ ¹æ®åçç±»åè¿è¡ç­éè¿æ»¤ï¼\r\n    // all ææå\r\n    // visible å¯è§å\r\n    // hidden éèå\r\n    // group åç»å\r\n    filterColumns(ct: string, searchWords = '') {\r\n        let cols = [];\r\n        switch (ct) {\r\n            case 'visible':\r\n                cols = this.formatData;\r\n                break;\r\n            case 'hidden':\r\n                cols = this.columns[0].filter(n => this.fields.indexOf(n.field) === -1);\r\n                break;\r\n            case 'all':\r\n            default:\r\n                cols = this.columns[0];\r\n                break;\r\n        }\r\n\r\n        if (searchWords) {\r\n            cols = cols.filter(c => c.title.toLowerCase().indexOf(searchWords) > -1);\r\n        }\r\n\r\n        this.allCols = cols;\r\n    }\r\n\r\n    onFieldClick(col, $event) {\r\n        this.activeField = col;\r\n        this.checkColumnOptions();\r\n    }\r\n\r\n\r\n    private onFieldsChanged() {\r\n        this.setFormatData();\r\n        this.fieldsChange.emit(this.fields);\r\n    }\r\n\r\n    onDblClick($event, col) {\r\n        // console.log('æ¾ç¤ºä¸éèåæ¢äºä»¶', col);\r\n        this.onCheckboxClick($event, col);\r\n    }\r\n\r\n    onCheckboxClick($event, col) {\r\n        // console.log('æ¾ç¤ºä¸éèåæ¢äºä»¶', col);\r\n        $event.stopPropagation();\r\n        const index = this.fields.indexOf(col.field);\r\n        if (index === -1) {\r\n            this.fields.push(col.field);\r\n        } else {\r\n            this.fields.splice(index, 1);\r\n        }\r\n\r\n        this.columns[0].forEach(f => {\r\n            f.visible = this.fields.indexOf(f.field) > -1;\r\n        });\r\n\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n\r\n        this.onFieldsChanged();\r\n    }\r\n\r\n    searchColumn($event, ct) {\r\n        const txt = $event.target.value;\r\n        this.filterColumns(ct, txt);\r\n    }\r\n\r\n    onFieldDrop(fieldInfo, ct, txt, ulElRef: any) {\r\n       // console.log('drop', fieldInfo);\r\n        const { removedIndex, addedIndex } = fieldInfo;\r\n\r\n        const moveItem = this.allCols[removedIndex];\r\n        const targetItem = this.allCols[addedIndex];\r\n\r\n        const moveItemIndex = this.columns[0].findIndex(n => n.field === moveItem.field);\r\n        const targetItemIndex = this.columns[0].findIndex(n => n.field === targetItem.field);\r\n\r\n        const removedItem = this.columns[0].splice(moveItemIndex, 1);\r\n        this.columns[0].splice(targetItemIndex, 0, ...removedItem);\r\n\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n        this.onFieldsChanged();\r\n\r\n        this.filterColumns(ct, txt);\r\n\r\n        // if (ulElRef) {\r\n        //     ulElRef.querySelectorAll('li .field-drag-handle').forEach(el => {\r\n        //         el.style.cursor = 'grab';\r\n        //     });\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * 0: 1ä¸ªä¹æ²¡æéä¸­ï¼ 1: å¨é¨éä¸­ï¼ 2: æéä¸­çä¹ææ²¡éä¸­ç\r\n     */\r\n    private getCheckAllState() {\r\n        if (this.fields.length === 0) {\r\n            return 0;\r\n        } else {\r\n            if (this.fields.length === this.columns[0].length) {\r\n                return 1;\r\n            }\r\n            return 2;\r\n        }\r\n    }\r\n\r\n    onCheckAllClick($event, ct, txt) {\r\n        const state = this.getCheckAllState();\r\n        if (state === 0 || state === 2) {\r\n            // æ§è¡å¨é\r\n            this.columns[0].forEach(n => n.visible = true);\r\n            this.fields = this.columns[0].map(n => n.field);\r\n        } else {\r\n            // åæ¶å¨é\r\n            this.columns[0].forEach(n => n.visible = false);\r\n            this.fields = [];\r\n        }\r\n\r\n        this.onFieldsChanged();\r\n        this.filterColumns(ct, txt);\r\n    }\r\n}\r\n","import { Component, OnInit, Input, Injector, ChangeDetectorRef, ElementRef, ViewChild, EventEmitter, Output, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { DatagridSettingsComponent } from '../datagrid-settings.component';\r\n\r\n@Component({\r\n    selector: 'column-group-setting',\r\n    templateUrl: './column-group.component.html',\r\n    styles: [\r\n        `\r\n        .column-group-setting{ height: 100%; background-color: #ffffff; padding: 0 10px 10px 10px}\r\n        .smooth-dnd-ghost.group-field {\r\n            z-index: 999999999 !important;\r\n        }\r\n        .active {\r\n            background-color: rgb(231 241 255);\r\n            color: rgb(0 0 0);\r\n        }\r\n        .column-group-setting .group-field {\r\n            float: left;max-width: 200px;margin-right: 10px;\r\n            width: auto; padding: 5px;padding-right: 30px;\r\n            border-radius: 20px;padding-left: 10px; cursor:move\r\n        }\r\n        .group-field .f-icon { position: absolute;right: 2px;top: 7px; }\r\n        .btn-add-groupfield{float: left;width: 32px;padding: 0px;padding-top: 3px; border-radius: 20px;}\r\n        .group-field-panel{\r\n            height: 260px; border-radius: 5px; z-index: 3;position: absolute;\r\n            background: rgb(255 255 255); box-shadow: 1px 1px 4px rgb(156 155 155 / 75%);\r\n            overflow: hidden;\r\n            overflow-y: auto;\r\n        }\r\n        .group-field-panel ul {\r\n            display: inline-block;margin: 20px;margin-top: 5px;\r\n        }\r\n        .group-field-panel li {\r\n            float: left; cursor: pointer;max-width: 200px;margin-right: 10px;width: auto;\r\n            padding: 10px; min-width: 80px; margin-top: 15px; text-align: center;\r\n        }\r\n        .format-setting-column {\r\n            background: rgba(247,248,251,0.6);\r\n            padding: 7px 10px;\r\n            margin-bottom: 5px;\r\n            border: 1px solid rgba(233,236,243,0.45);\r\n            border-radius: 5px;\r\n        }\r\n        .format-setting-column.active {\r\n            border: 1px solid rgb(42 135 255);\r\n            background: rgb(239 247 255);\r\n            border-top: 1px solid rgb(42 135 255)!important;\r\n            border-bottom: 1px solid rgb(42 135 255)!important;\r\n        }\r\n\r\n        `\r\n    ]\r\n})\r\nexport class ColumnGroupSettingComponent implements OnInit, OnChanges {\r\n    @Input() columns;\r\n    @Input() fields = [];\r\n    @Input() formatColumns = [];\r\n\r\n    @Input() groupFields = [];\r\n\r\n    @Output() groupFieldsChange = new EventEmitter();\r\n    @Output() formatColumnsChange = new EventEmitter();\r\n\r\n    @ViewChild('groupingSetting') groupingSettingEl: ElementRef;\r\n    @ViewChild('selectcolumnspanel') selectcolumnspanel: ElementRef;\r\n    @ViewChild('groupSumform') colForm: NgForm;\r\n\r\n    groupColumns = [];\r\n    allowGroupColumns = [];\r\n    activeCalculationCol = null;\r\n\r\n    showSelectColumnsPanel = false;\r\n    summaryItems = [];\r\n    summaryItems2 = [];\r\n    constructor(private injector: Injector, public gridSettingComponentRef: DatagridSettingsComponent, private cd: ChangeDetectorRef) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.summaryItems = this.gridSettingComponentRef.summaryItems;\r\n        this.summaryItems2 = this.gridSettingComponentRef.summaryItems2;\r\n\r\n        this.setGroupColumns();\r\n        this.registerEventHandle();\r\n        this.initCalculationColumns();\r\n\r\n        if (this.colForm) {\r\n            this.colForm.valueChanges.subscribe(v => {\r\n                if (!this.colForm.pristine) {\r\n                    this.formatColumnsChange.emit(this.formatColumns);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.formatColumns.forEach(n => {\r\n            this.checkColumnOptions(n);\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.formatColumns && !changes.formatColumns.isFirstChange()) {\r\n            this.formatColumns.forEach(n => {\r\n                this.checkColumnOptions(n);\r\n            });\r\n            this.setGroupColumns();\r\n            this.initCalculationColumns();\r\n        }\r\n    }\r\n\r\n    private initCalculationColumns() {\r\n        this.activeCalculationCol = this.formatColumns[0];\r\n    }\r\n\r\n    private registerEventHandle() {\r\n        this.groupingSettingEl.nativeElement.addEventListener('click', (e) => {\r\n            if (e.target  !== this.selectcolumnspanel.nativeElement) {\r\n                this.showSelectColumnsPanel = false;\r\n            }\r\n        }, false);\r\n    }\r\n\r\n    private setGroupColumns() {\r\n        if (this.groupFields && this.groupFields.length) {\r\n            this.groupColumns = this.groupFields.map( f => {\r\n                return this.columns[0].find(col => col.field === f);\r\n            }).filter(n => n);\r\n        } else {\r\n            this.groupColumns = [];\r\n        }\r\n        this.onGroupFieldsChange();\r\n    }\r\n\r\n    private getAllowGroupingColumns() {\r\n        return this.columns[0].filter(n => n.allowGrouping || n.allowGrouping === undefined);\r\n    }\r\n\r\n    private onGroupFieldsChange() {\r\n        this.groupFieldsChange.emit(this.groupFields);\r\n    }\r\n\r\n    private checkColumnOptions(col) {\r\n        if (col) {\r\n\r\n            if (col.groupFooter === undefined) {\r\n                col.groupFooter = { options: {calculationType: -1} };\r\n            } else {\r\n                col.groupFooter.options = col.groupFooter.options || {calculationType: -1};\r\n                if (col.groupFooter.options.calculationType === undefined) {\r\n                    col.groupFooter.options.calculationType = -1;\r\n                }\r\n            }\r\n\r\n            // if (this.activeField.footer === undefined) {\r\n            //     this.activeField.footer =  { options: {calculationType: -1} };\r\n            // } else {\r\n            //     this.activeField.footer.options = this.activeField.footer.options || {calculationType: -1};\r\n            //     if (this.activeField.footer.options.calculationType === undefined) {\r\n            //         this.activeField.footer.options.calculationType = -1;\r\n            //     }\r\n            // }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ¾ç¤ºæéèå­æ®µéåé¢æ¿\r\n     */\r\n    toggleGroupingColumnPanel($event) {\r\n        $event.stopPropagation();\r\n        this.showSelectColumnsPanel = !this.showSelectColumnsPanel;\r\n        this.allowGroupColumns = this.getAllowGroupingColumns();\r\n    }\r\n\r\n    /** æ·»å åç»å­æ®µ */\r\n    addGroupColumn($event, col) {\r\n        $event.stopPropagation();\r\n        if (this.groupFields.indexOf(col.field) === -1) {\r\n            this.groupColumns = [...this.groupColumns, col];\r\n            this.groupFields = this.groupColumns.map(n => n.field);\r\n            this.onGroupFieldsChange();\r\n            this.showSelectColumnsPanel = false;\r\n        }\r\n    }\r\n\r\n    /** ç§»é¤åç»å­æ®µ */\r\n    onRemoveGroupingField($event, col) {\r\n        $event.stopPropagation();\r\n        this.groupFields = this.groupFields.filter(n => n !== col.field);\r\n        this.setGroupColumns();\r\n    }\r\n\r\n    /** æå¨åç»å­æ®µè¿è¡æåº */\r\n    onGroupingFieldDropped($event) {\r\n        console.log('grouping field droped.', $event);\r\n        const { removedIndex, addedIndex } = $event;\r\n\r\n        const removedItem = this.groupFields.splice(removedIndex, 1);\r\n        this.groupFields.splice(addedIndex, 0, ...removedItem);\r\n        this.setGroupColumns();\r\n    }\r\n\r\n    onFieldClick($event, col) {\r\n        this.activeCalculationCol = col;\r\n    }\r\n}\r\n","\r\nimport { Directive, NgZone, Injector, Renderer2, ElementRef, AfterViewInit, Input,\r\n        OnChanges, SimpleChanges, Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { dropHandlers, smoothDnD as SmoothDndForVisible, DropResult, ContainerOptions, constants } from '@farris/smooth-dnd';\r\n\r\n\r\nconst { wrapperClass, animationClass } = constants;\r\nSmoothDndForVisible.dropHandler = dropHandlers.reactDropHandler().handler;\r\nSmoothDndForVisible.wrapChild = false;\r\n\r\nexport interface DragStartEndInfo {\r\n    isSource: boolean;\r\n    payload: any;\r\n    willAcceptDrop: boolean;\r\n}\r\n\r\n@Directive({\r\n    selector: '[column-visible-drag]',\r\n})\r\nexport class ColumnVisibleDragDirective implements AfterViewInit, OnDestroy {\r\n    private container: any;\r\n    @Output() drop = new EventEmitter();\r\n    @Input() options: ContainerOptions = {\r\n        behaviour: 'move',\r\n        dragHandleSelector: '.field-drag-handle',\r\n        dropPlaceholder: {\r\n            className: 'drop-group-field',\r\n        },\r\n        getGhostParent: () => {\r\n            return document.body;\r\n        },\r\n        getChildPayload: this.getChildPayload.bind(this),\r\n        shouldAcceptDrop: (sourceContainerOptions, payload) => {\r\n            return true;\r\n        },\r\n        onDropReady: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDropReady(dropResult);\r\n            });\r\n        },\r\n        onDrop: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.drop.emit(dropResult);\r\n            });\r\n        },\r\n        onDragEnter: () => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnter();\r\n            });\r\n        },\r\n        onDragStart: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragStart(info);\r\n            });\r\n        },\r\n        onDragEnd: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnd(info);\r\n            });\r\n        }\r\n    };\r\n\r\n    constructor(private ngzone: NgZone, private injector: Injector, private render: Renderer2, private el: ElementRef) { }\r\n    ngAfterViewInit() {\r\n        this.initDnD();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disposeDnd();\r\n    }\r\n\r\n    private disposeDnd() {\r\n        if (this.container) {\r\n            this.container.dispose();\r\n            this.container = null;\r\n        }\r\n    }\r\n\r\n    private initDnD() {\r\n        this.disposeDnd();\r\n        this.container = SmoothDndForVisible(\r\n            this.el.nativeElement,\r\n            this.options\r\n        );\r\n    }\r\n\r\n    private getChildPayload(index) {\r\n        return index;\r\n    }\r\n\r\n    private onDropReady(dropResult) {\r\n        // console.log('DROP READY', dropResult);\r\n    }\r\n\r\n    private onDragStart(info) {\r\n        console.log('DRAG START', info);\r\n    }\r\n\r\n    private onDragEnd(info) {\r\n        // console.log('DRAG END', info);\r\n    }\r\n\r\n\r\n    private onDragEnter() {\r\n        // console.log('DRAG ENTER');\r\n    }\r\n\r\n}\r\n","import { Directive, NgZone, Injector, Renderer2, ElementRef, AfterViewInit, Input,  Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { dropHandlers, smoothDnD as SmoothDndForGroupingField, DropResult, ContainerOptions, constants } from '@farris/smooth-dnd';\r\n\r\nSmoothDndForGroupingField.dropHandler = dropHandlers.reactDropHandler().handler;\r\nSmoothDndForGroupingField.wrapChild = false;\r\n\r\n@Directive({\r\n    selector: '[column-group-drag]',\r\n})\r\nexport class ColumnGroupDragDirective implements AfterViewInit, OnDestroy {\r\n    private container: any;\r\n    @Output() drop = new EventEmitter();\r\n    @Input() options: ContainerOptions = {\r\n        orientation: 'horizontal',\r\n        behaviour: 'move',\r\n        dropPlaceholder: {\r\n            className: 'drop-group-field',\r\n        },\r\n        getGhostParent: () => {\r\n            return document.body;\r\n        },\r\n        getChildPayload: this.getChildPayload.bind(this),\r\n        shouldAcceptDrop: (sourceContainerOptions, payload) => {\r\n            return true;\r\n        },\r\n        onDropReady: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDropReady(dropResult);\r\n            });\r\n        },\r\n        onDrop: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.drop.emit(dropResult);\r\n            });\r\n        },\r\n        onDragEnter: () => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnter();\r\n            });\r\n        },\r\n        onDragStart: (info) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragStart(info);\r\n            });\r\n        },\r\n        onDragEnd: (info) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnd(info);\r\n            });\r\n        }\r\n    };\r\n\r\n    constructor(private ngzone: NgZone, private injector: Injector, private render: Renderer2, private el: ElementRef) { }\r\n    ngAfterViewInit() {\r\n        this.initDnD();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disposeDnd();\r\n    }\r\n\r\n    private disposeDnd() {\r\n        if (this.container) {\r\n            this.container.dispose();\r\n            this.container = null;\r\n        }\r\n    }\r\n\r\n\r\n    private initDnD() {\r\n        this.disposeDnd();\r\n        this.container = SmoothDndForGroupingField(\r\n            this.el.nativeElement,\r\n            this.options\r\n        );\r\n    }\r\n\r\n    private getChildPayload(index) {\r\n        return index;\r\n    }\r\n\r\n    private onDropReady(dropResult) {\r\n        // console.log('DROP READY', dropResult);\r\n    }\r\n\r\n    private onDragStart(info) {\r\n        // console.log('DRAG START', info);\r\n    }\r\n\r\n    private onDragEnd(info) {\r\n        // console.log('DRAG END', info);\r\n    }\r\n\r\n\r\n    private onDragEnter() {\r\n        // console.log('DRAG ENTER');\r\n    }\r\n}\r\n","\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { ModalModule } from '@farris/ui-modal';\r\nimport { GRID_SETTINGS_SERVICE} from '@farris/ui-datagrid';\r\nimport { MultiSelectModule } from '@farris/ui-multi-select';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\n\r\nimport { DatagridSettingsComponent } from './datagrid-settings.component';\r\n\r\nimport { DatagridSettingsService } from './datagrid-settings.service';\r\nimport { DatagridSortSettingComponent } from './datagrid-sort-setting.component';\r\nimport { DatagridViewColumnsComponent } from './datagrid-view-columns.component';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\nimport { ColumnFormatSettingComponent } from './column-format-setting/column-format-setting.component';\r\nimport { ColumnGroupSettingComponent } from './column-group/column-group.component';\r\nimport { ColumnVisibleDragDirective } from './column-format-setting/column-visible-drag.directive';\r\nimport { ColumnGroupDragDirective } from './column-group/column-group-drag.directive';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { SimpleColumnsComponent } from './simple-mode/simple-columns.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        DatagridSettingsComponent,\r\n        DatagridSortSettingComponent,\r\n        DatagridViewColumnsComponent,\r\n        ColumnFormatSettingComponent,\r\n        ColumnGroupSettingComponent,\r\n        ColumnVisibleDragDirective,\r\n        ColumnGroupDragDirective,\r\n        SimpleColumnsComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MultiSelectModule,\r\n        ComboListModule,\r\n        FarrisCommonModule.forRoot(),\r\n        MessagerModule.forRoot(),\r\n        LocaleModule.forRoot(),\r\n        ModalModule.forRoot(),\r\n    ],\r\n    entryComponents: [\r\n        DatagridSettingsComponent,\r\n        SimpleColumnsComponent\r\n    ],\r\n    exports: [\r\n        DatagridSettingsComponent,\r\n        SimpleColumnsComponent\r\n    ]\r\n})\r\nexport class DatagridSettingsModule {\r\n    static forRoot(apiUri = ''): ModuleWithProviders {\r\n        return {\r\n            ngModule: DatagridSettingsModule,\r\n            providers: [\r\n                { provide: GRID_SETTINGS_SERVICE, useClass: DatagridSettingsService }\r\n            ]\r\n        };\r\n    }\r\n}\r\n"],"names":["SmoothDndForVisible","SmoothDndForGroupingField"],"mappings":"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"}