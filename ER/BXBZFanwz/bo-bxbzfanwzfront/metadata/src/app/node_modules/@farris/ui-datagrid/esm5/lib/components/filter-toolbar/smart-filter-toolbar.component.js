/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, EventEmitter, Input, Output, ElementRef, Renderer2, Injector, ViewChild } from '@angular/core';
import { DatagridComponent } from '../../datagrid.component';
var SmartFilterToolbarComponent = /** @class */ (function () {
    function SmartFilterToolbarComponent(el, render, inject) {
        this.el = el;
        this.render = render;
        this.inject = inject;
        this.padding = '';
        this.height = 40;
        this.filterData = [];
        this.clearFilters = new EventEmitter();
        this.removeFilter = new EventEmitter();
        this.filterChange = new EventEmitter();
        this.resize = new EventEmitter();
        this.sk = '';
    }
    /**
     * @return {?}
     */
    SmartFilterToolbarComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.dg = this.inject.get(DatagridComponent);
        this.sk = 'smartfilter_' + this.dg.dgs.createConfigKey(this.dg.id);
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    SmartFilterToolbarComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.filterData && !changes.filterData.isFirstChange()) {
            // console.log('filterDataChanged.');
        }
    };
    /** 条件变化事件 */
    /**
     * 条件变化事件
     * @param {?} $event
     * @return {?}
     */
    SmartFilterToolbarComponent.prototype.onQuery = /**
     * 条件变化事件
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        var data = $event.data, filterItem = $event.filterItem;
        if (data && data.length) {
            /** @type {?} */
            var conditions = JSON.parse(data);
            if (conditions && conditions.length) {
                this.filterChange.emit({ conditions: conditions, filterItem: filterItem });
            }
        }
    };
    /** 清除所有条件 */
    /**
     * 清除所有条件
     * @param {?} $event
     * @return {?}
     */
    SmartFilterToolbarComponent.prototype.onResetFilter = /**
     * 清除所有条件
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.clearFilters.emit($event);
    };
    /** 移除单个条件 */
    /**
     * 移除单个条件
     * @param {?} $event
     * @return {?}
     */
    SmartFilterToolbarComponent.prototype.onRemoveFilter = /**
     * 移除单个条件
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        this.removeFilter.emit($event);
    };
    /** 展开折叠事件 */
    /**
     * 展开折叠事件
     * @param {?} $event
     * @return {?}
     */
    SmartFilterToolbarComponent.prototype.onResize = /**
     * 展开折叠事件
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () {
            /** @type {?} */
            var smartFilterWrapper = _this.el.nativeElement.querySelector('.f-filter-wrapper');
            if (smartFilterWrapper) {
                /** @type {?} */
                var h = smartFilterWrapper.offsetHeight;
                if (h) {
                    _this.resize.emit(h + 6);
                }
            }
        }));
    };
    SmartFilterToolbarComponent.decorators = [
        { type: Component, args: [{
                    selector: 'smart-filter-toolbar',
                    template: "<div class=\"f-datagrid-filter-toolbar\" [style.height.px]=\"height\" \r\n[style.padding]=\"padding\" placeholder=\"\u6B64\u5904\u663E\u793A\u5217\u8FC7\u6EE4\u6761\u4EF6\" style=\"align-items: normal;\"\r\n[style.display]=\"filterData && filterData.length ? '' : 'none'\"\r\n[style.pointer-events]=\"dg?.editable ? 'none': ''\"\r\n>\r\n<farris-filter [filterList]=\"filterData\" (query)=\"onQuery($event)\"  #farrisFilter\r\n    (resetChange)=\"onResetFilter($event)\" (clearFilter)=\"onRemoveFilter($event)\"\r\n    (filterResize)=\"onResize($event)\" (expandFilter)=\"onResize($event)\"\r\n    [localStorageKey]=\"sk\"\r\n>\r\n</farris-filter>\r\n\r\n</div>"
                }] }
    ];
    /** @nocollapse */
    SmartFilterToolbarComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: Renderer2 },
        { type: Injector }
    ]; };
    SmartFilterToolbarComponent.propDecorators = {
        padding: [{ type: Input }],
        height: [{ type: Input }],
        filterData: [{ type: Input }],
        clearFilters: [{ type: Output }],
        removeFilter: [{ type: Output }],
        filterChange: [{ type: Output }],
        resize: [{ type: Output }],
        filtebar: [{ type: ViewChild, args: ['farrisFilter',] }]
    };
    return SmartFilterToolbarComponent;
}());
export { SmartFilterToolbarComponent };
if (false) {
    /** @type {?} */
    SmartFilterToolbarComponent.prototype.padding;
    /** @type {?} */
    SmartFilterToolbarComponent.prototype.height;
    /** @type {?} */
    SmartFilterToolbarComponent.prototype.filterData;
    /** @type {?} */
    SmartFilterToolbarComponent.prototype.clearFilters;
    /** @type {?} */
    SmartFilterToolbarComponent.prototype.removeFilter;
    /** @type {?} */
    SmartFilterToolbarComponent.prototype.filterChange;
    /** @type {?} */
    SmartFilterToolbarComponent.prototype.resize;
    /** @type {?} */
    SmartFilterToolbarComponent.prototype.filtebar;
    /** @type {?} */
    SmartFilterToolbarComponent.prototype.sk;
    /** @type {?} */
    SmartFilterToolbarComponent.prototype.dg;
    /**
     * @type {?}
     * @private
     */
    SmartFilterToolbarComponent.prototype.el;
    /**
     * @type {?}
     * @private
     */
    SmartFilterToolbarComponent.prototype.render;
    /**
     * @type {?}
     * @private
     */
    SmartFilterToolbarComponent.prototype.inject;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic21hcnQtZmlsdGVyLXRvb2xiYXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1kYXRhZ3JpZC8iLCJzb3VyY2VzIjpbImxpYi9jb21wb25lbnRzL2ZpbHRlci10b29sYmFyL3NtYXJ0LWZpbHRlci10b29sYmFyLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxZQUFZLEVBQUUsS0FBSyxFQUFVLE1BQU0sRUFBRSxVQUFVLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBNEIsU0FBUyxFQUFZLE1BQU0sZUFBZSxDQUFDO0FBQy9KLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLDBCQUEwQixDQUFDO0FBRTdEO0lBaUJJLHFDQUFvQixFQUFjLEVBQVUsTUFBaUIsRUFBVSxNQUFnQjtRQUFuRSxPQUFFLEdBQUYsRUFBRSxDQUFZO1FBQVUsV0FBTSxHQUFOLE1BQU0sQ0FBVztRQUFVLFdBQU0sR0FBTixNQUFNLENBQVU7UUFaOUUsWUFBTyxHQUFHLEVBQUUsQ0FBQztRQUNiLFdBQU0sR0FBRyxFQUFFLENBQUM7UUFDWixlQUFVLEdBQUcsRUFBRSxDQUFDO1FBQ2YsaUJBQVksR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBQ2xDLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQUUsQ0FBQztRQUNsQyxpQkFBWSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFFbEMsV0FBTSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7UUFHdEMsT0FBRSxHQUFHLEVBQUUsQ0FBQztJQUVtRixDQUFDOzs7O0lBRTVGLDhDQUFROzs7SUFBUjtRQUNJLElBQUksQ0FBQyxFQUFFLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQW9CLGlCQUFpQixDQUFDLENBQUM7UUFDaEUsSUFBSSxDQUFDLEVBQUUsR0FBSSxjQUFjLEdBQUcsSUFBSSxDQUFDLEVBQUUsQ0FBQyxHQUFHLENBQUMsZUFBZSxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsRUFBRSxDQUFDLENBQUM7SUFDeEUsQ0FBQzs7Ozs7SUFFRCxpREFBVzs7OztJQUFYLFVBQVksT0FBc0I7UUFDOUIsSUFBSSxPQUFPLENBQUMsVUFBVSxJQUFJLENBQUMsT0FBTyxDQUFDLFVBQVUsQ0FBQyxhQUFhLEVBQUUsRUFBRTtZQUMzRCxxQ0FBcUM7U0FDeEM7SUFDTCxDQUFDO0lBRUQsYUFBYTs7Ozs7O0lBQ2IsNkNBQU87Ozs7O0lBQVAsVUFBUSxNQUFNO1FBQ0YsSUFBQSxrQkFBSSxFQUFFLDhCQUFVO1FBQ3hCLElBQUksSUFBSSxJQUFJLElBQUksQ0FBQyxNQUFNLEVBQUU7O2dCQUNmLFVBQVUsR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQztZQUNuQyxJQUFJLFVBQVUsSUFBSSxVQUFVLENBQUMsTUFBTSxFQUFHO2dCQUNsQyxJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxFQUFDLFVBQVUsWUFBQSxFQUFFLFVBQVUsWUFBQSxFQUFDLENBQUMsQ0FBQzthQUNwRDtTQUNKO0lBQ0wsQ0FBQztJQUVELGFBQWE7Ozs7OztJQUNiLG1EQUFhOzs7OztJQUFiLFVBQWMsTUFBTTtRQUNoQixJQUFJLENBQUMsWUFBWSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsQ0FBQztJQUNuQyxDQUFDO0lBRUQsYUFBYTs7Ozs7O0lBQ2Isb0RBQWM7Ozs7O0lBQWQsVUFBZSxNQUFNO1FBQ2pCLElBQUksQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxDQUFDO0lBQ25DLENBQUM7SUFFRCxhQUFhOzs7Ozs7SUFDYiw4Q0FBUTs7Ozs7SUFBUixVQUFTLE1BQU07UUFBZixpQkFVQztRQVRHLFVBQVU7OztRQUFDOztnQkFDRCxrQkFBa0IsR0FBRyxLQUFJLENBQUMsRUFBRSxDQUFDLGFBQWEsQ0FBQyxhQUFhLENBQUMsbUJBQW1CLENBQUM7WUFDbkYsSUFBSSxrQkFBa0IsRUFBRTs7b0JBQ2QsQ0FBQyxHQUFHLGtCQUFrQixDQUFDLFlBQVk7Z0JBQ3pDLElBQUksQ0FBQyxFQUFFO29CQUNILEtBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQztpQkFDM0I7YUFDSjtRQUNMLENBQUMsRUFBQyxDQUFDO0lBQ1AsQ0FBQzs7Z0JBOURKLFNBQVMsU0FBQztvQkFDUCxRQUFRLEVBQUUsc0JBQXNCO29CQUNoQyxncUJBQW9EO2lCQUN2RDs7OztnQkFOd0QsVUFBVTtnQkFBRSxTQUFTO2dCQUFFLFFBQVE7OzswQkFRbkYsS0FBSzt5QkFDTCxLQUFLOzZCQUNMLEtBQUs7K0JBQ0wsTUFBTTsrQkFDTixNQUFNOytCQUNOLE1BQU07eUJBRU4sTUFBTTsyQkFFTixTQUFTLFNBQUMsY0FBYzs7SUFrRDdCLGtDQUFDO0NBQUEsQUFoRUQsSUFnRUM7U0E1RFksMkJBQTJCOzs7SUFDcEMsOENBQXNCOztJQUN0Qiw2Q0FBcUI7O0lBQ3JCLGlEQUF5Qjs7SUFDekIsbURBQTRDOztJQUM1QyxtREFBNEM7O0lBQzVDLG1EQUE0Qzs7SUFFNUMsNkNBQXNDOztJQUV0QywrQ0FBeUM7O0lBQ3pDLHlDQUFROztJQUNSLHlDQUFzQjs7Ozs7SUFDVix5Q0FBc0I7Ozs7O0lBQUUsNkNBQXlCOzs7OztJQUFFLDZDQUF3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgRXZlbnRFbWl0dGVyLCBJbnB1dCwgT25Jbml0LCBPdXRwdXQsIEVsZW1lbnRSZWYsIFJlbmRlcmVyMiwgSW5qZWN0b3IsIE9uQ2hhbmdlcywgU2ltcGxlQ2hhbmdlcywgVmlld0NoaWxkLCBPcHRpb25hbCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBEYXRhZ3JpZENvbXBvbmVudCB9IGZyb20gJy4uLy4uL2RhdGFncmlkLmNvbXBvbmVudCc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnc21hcnQtZmlsdGVyLXRvb2xiYXInLFxyXG4gICAgdGVtcGxhdGVVcmw6ICcuL3NtYXJ0LWZpbHRlci10b29sYmFyLmNvbXBvbmVudC5odG1sJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIFNtYXJ0RmlsdGVyVG9vbGJhckNvbXBvbmVudCBpbXBsZW1lbnRzIE9uSW5pdCwgT25DaGFuZ2VzIHtcclxuICAgIEBJbnB1dCgpIHBhZGRpbmcgPSAnJztcclxuICAgIEBJbnB1dCgpIGhlaWdodCA9IDQwO1xyXG4gICAgQElucHV0KCkgZmlsdGVyRGF0YSA9IFtdO1xyXG4gICAgQE91dHB1dCgpIGNsZWFyRmlsdGVycyA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIEBPdXRwdXQoKSByZW1vdmVGaWx0ZXIgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgICBAT3V0cHV0KCkgZmlsdGVyQ2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG5cclxuICAgIEBPdXRwdXQoKSByZXNpemUgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gICAgQFZpZXdDaGlsZCgnZmFycmlzRmlsdGVyJykgZmlsdGViYXI6IGFueTtcclxuICAgIHNrID0gJyc7XHJcbiAgICBkZzogRGF0YWdyaWRDb21wb25lbnQ7XHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIGVsOiBFbGVtZW50UmVmLCBwcml2YXRlIHJlbmRlcjogUmVuZGVyZXIyLCBwcml2YXRlIGluamVjdDogSW5qZWN0b3IpIHsgfVxyXG5cclxuICAgIG5nT25Jbml0KCk6IHZvaWQge1xyXG4gICAgICAgIHRoaXMuZGcgPSB0aGlzLmluamVjdC5nZXQ8RGF0YWdyaWRDb21wb25lbnQ+KERhdGFncmlkQ29tcG9uZW50KTtcclxuICAgICAgICB0aGlzLnNrID0gICdzbWFydGZpbHRlcl8nICsgdGhpcy5kZy5kZ3MuY3JlYXRlQ29uZmlnS2V5KHRoaXMuZGcuaWQpO1xyXG4gICAgfVxyXG5cclxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcclxuICAgICAgICBpZiAoY2hhbmdlcy5maWx0ZXJEYXRhICYmICFjaGFuZ2VzLmZpbHRlckRhdGEuaXNGaXJzdENoYW5nZSgpKSB7XHJcbiAgICAgICAgICAgIC8vIGNvbnNvbGUubG9nKCdmaWx0ZXJEYXRhQ2hhbmdlZC4nKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOadoeS7tuWPmOWMluS6i+S7tiAqL1xyXG4gICAgb25RdWVyeSgkZXZlbnQpIHtcclxuICAgICAgICBjb25zdCB7IGRhdGEsIGZpbHRlckl0ZW0gfSA9ICRldmVudDtcclxuICAgICAgICBpZiAoZGF0YSAmJiBkYXRhLmxlbmd0aCkge1xyXG4gICAgICAgICAgICBjb25zdCBjb25kaXRpb25zID0gSlNPTi5wYXJzZShkYXRhKTtcclxuICAgICAgICAgICAgaWYgKGNvbmRpdGlvbnMgJiYgY29uZGl0aW9ucy5sZW5ndGgpICB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmZpbHRlckNoYW5nZS5lbWl0KHtjb25kaXRpb25zLCBmaWx0ZXJJdGVtfSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOa4hemZpOaJgOacieadoeS7tiAqL1xyXG4gICAgb25SZXNldEZpbHRlcigkZXZlbnQpIHtcclxuICAgICAgICB0aGlzLmNsZWFyRmlsdGVycy5lbWl0KCRldmVudCk7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOenu+mZpOWNleS4quadoeS7tiAqL1xyXG4gICAgb25SZW1vdmVGaWx0ZXIoJGV2ZW50KSB7XHJcbiAgICAgICAgdGhpcy5yZW1vdmVGaWx0ZXIuZW1pdCgkZXZlbnQpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qKiDlsZXlvIDmipjlj6Dkuovku7YgKi9cclxuICAgIG9uUmVzaXplKCRldmVudCkge1xyXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICBjb25zdCBzbWFydEZpbHRlcldyYXBwZXIgPSB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvcignLmYtZmlsdGVyLXdyYXBwZXInKTtcclxuICAgICAgICAgICAgaWYgKHNtYXJ0RmlsdGVyV3JhcHBlcikge1xyXG4gICAgICAgICAgICAgICAgY29uc3QgaCA9IHNtYXJ0RmlsdGVyV3JhcHBlci5vZmZzZXRIZWlnaHQ7XHJcbiAgICAgICAgICAgICAgICBpZiAoaCkge1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMucmVzaXplLmVtaXQoaCArIDYpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfSk7XHJcbiAgICB9XHJcblxyXG59XHJcbiJdfQ==