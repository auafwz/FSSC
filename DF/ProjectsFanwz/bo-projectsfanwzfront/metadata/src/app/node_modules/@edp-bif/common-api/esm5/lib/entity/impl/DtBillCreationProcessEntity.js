/**
 * @fileoverview added by tsickle
 * Generated from: lib/entity/impl/DtBillCreationProcessEntity.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { BpmnModelJsonHelper } from '../../ref';
import { AbstractBillCreationProcessEntity } from './AbstractBillCreationProcessEntity';
var DtBillCreationProcessEntity = /** @class */ (function (_super) {
    tslib_1.__extends(DtBillCreationProcessEntity, _super);
    function DtBillCreationProcessEntity() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * @protected
     * @return {?}
     */
    DtBillCreationProcessEntity.prototype.ResetBeforeLoadFrom = /**
     * @protected
     * @return {?}
     */
    function () {
        _super.prototype.ResetBeforeLoadFrom.call(this);
        this.eventRouterConditionsContent = null;
        this.mappingConditionsContent = null;
        this.mappingModeContent = null;
        this.saveModeContent = null;
        this.formSettingsContent = null;
        this.upBillTrackingSettings = null;
        this.downBillTrackingSettings = null;
    };
    /**
     * @return {?}
     */
    DtBillCreationProcessEntity.prototype.ConvertToJsonObject = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var obj = _super.prototype.ConvertToJsonObject.call(this);
        BpmnModelJsonHelper.SetAttributeValue(obj, "eventRouterConditionsContent", this.eventRouterConditionsContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingConditionsContent", this.mappingConditionsContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "mappingModeContent", this.mappingModeContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "saveModeContent", this.saveModeContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "formSettingsContent", this.formSettingsContent);
        BpmnModelJsonHelper.SetAttributeValue(obj, "upBillTrackingSettings", this.upBillTrackingSettings);
        BpmnModelJsonHelper.SetAttributeValue(obj, "downBillTrackingSettings", this.downBillTrackingSettings);
        return obj;
    };
    /**
     * @param {?} obj
     * @return {?}
     */
    DtBillCreationProcessEntity.prototype.LoadFromJsonObject = /**
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        _super.prototype.LoadFromJsonObject.call(this, obj);
        this.eventRouterConditionsContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "eventRouterConditionsContent");
        this.mappingConditionsContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingConditionsContent");
        this.mappingModeContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "mappingModeContent");
        this.saveModeContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "saveModeContent");
        this.formSettingsContent = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "formSettingsContent");
        this.upBillTrackingSettings = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "upBillTrackingSettings");
        this.downBillTrackingSettings = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "downBillTrackingSettings");
    };
    return DtBillCreationProcessEntity;
}(AbstractBillCreationProcessEntity));
export { DtBillCreationProcessEntity };
if (false) {
    /** @type {?} */
    DtBillCreationProcessEntity.prototype.eventRouterConditionsContent;
    /** @type {?} */
    DtBillCreationProcessEntity.prototype.mappingConditionsContent;
    /** @type {?} */
    DtBillCreationProcessEntity.prototype.mappingModeContent;
    /** @type {?} */
    DtBillCreationProcessEntity.prototype.saveModeContent;
    /** @type {?} */
    DtBillCreationProcessEntity.prototype.formSettingsContent;
    /** @type {?} */
    DtBillCreationProcessEntity.prototype.upBillTrackingSettings;
    /** @type {?} */
    DtBillCreationProcessEntity.prototype.downBillTrackingSettings;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiRHRCaWxsQ3JlYXRpb25Qcm9jZXNzRW50aXR5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGVkcC1iaWYvY29tbW9uLWFwaS8iLCJzb3VyY2VzIjpbImxpYi9lbnRpdHkvaW1wbC9EdEJpbGxDcmVhdGlvblByb2Nlc3NFbnRpdHkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7O0FBQUEsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ2hELE9BQU8sRUFBRSxpQ0FBaUMsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBR3hGO0lBQWlELHVEQUFpQztJQUFsRjs7SUE4Q0EsQ0FBQzs7Ozs7SUFyQ2EseURBQW1COzs7O0lBQTdCO1FBQ0ksaUJBQU0sbUJBQW1CLFdBQUUsQ0FBQztRQUU1QixJQUFJLENBQUMsNEJBQTRCLEdBQUcsSUFBSSxDQUFDO1FBQ3pDLElBQUksQ0FBQyx3QkFBd0IsR0FBRyxJQUFJLENBQUM7UUFDckMsSUFBSSxDQUFDLGtCQUFrQixHQUFHLElBQUksQ0FBQztRQUMvQixJQUFJLENBQUMsZUFBZSxHQUFHLElBQUksQ0FBQztRQUM1QixJQUFJLENBQUMsbUJBQW1CLEdBQUcsSUFBSSxDQUFDO1FBQ2hDLElBQUksQ0FBQyxzQkFBc0IsR0FBRyxJQUFJLENBQUM7UUFDbkMsSUFBSSxDQUFDLHdCQUF3QixHQUFHLElBQUksQ0FBQztJQUN6QyxDQUFDOzs7O0lBRU0seURBQW1COzs7SUFBMUI7O1lBQ1EsR0FBRyxHQUFPLGlCQUFNLG1CQUFtQixXQUFFO1FBRXpDLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSw4QkFBOEIsRUFBRSxJQUFJLENBQUMsNEJBQTRCLENBQUMsQ0FBQztRQUM5RyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsMEJBQTBCLEVBQUUsSUFBSSxDQUFDLHdCQUF3QixDQUFDLENBQUM7UUFDdEcsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLG9CQUFvQixFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO1FBQzFGLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSxpQkFBaUIsRUFBRSxJQUFJLENBQUMsZUFBZSxDQUFDLENBQUM7UUFDcEYsbUJBQW1CLENBQUMsaUJBQWlCLENBQUMsR0FBRyxFQUFFLHFCQUFxQixFQUFFLElBQUksQ0FBQyxtQkFBbUIsQ0FBQyxDQUFDO1FBQzVGLG1CQUFtQixDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRSx3QkFBd0IsRUFBRSxJQUFJLENBQUMsc0JBQXNCLENBQUMsQ0FBQztRQUNsRyxtQkFBbUIsQ0FBQyxpQkFBaUIsQ0FBQyxHQUFHLEVBQUUsMEJBQTBCLEVBQUUsSUFBSSxDQUFDLHdCQUF3QixDQUFDLENBQUM7UUFFdEcsT0FBTyxHQUFHLENBQUM7SUFDZixDQUFDOzs7OztJQUVNLHdEQUFrQjs7OztJQUF6QixVQUEwQixHQUFPO1FBQzdCLGlCQUFNLGtCQUFrQixZQUFDLEdBQUcsQ0FBQyxDQUFDO1FBRTlCLElBQUksQ0FBQyw0QkFBNEIsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsOEJBQThCLENBQUMsQ0FBQztRQUN2SCxJQUFJLENBQUMsd0JBQXdCLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLDBCQUEwQixDQUFDLENBQUM7UUFDL0csSUFBSSxDQUFDLGtCQUFrQixHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxvQkFBb0IsQ0FBQyxDQUFDO1FBQ25HLElBQUksQ0FBQyxlQUFlLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLGlCQUFpQixDQUFDLENBQUM7UUFDN0YsSUFBSSxDQUFDLG1CQUFtQixHQUFHLG1CQUFtQixDQUFDLHlCQUF5QixDQUFDLEdBQUcsRUFBRSxxQkFBcUIsQ0FBQyxDQUFDO1FBQ3JHLElBQUksQ0FBQyxzQkFBc0IsR0FBRyxtQkFBbUIsQ0FBQyx5QkFBeUIsQ0FBQyxHQUFHLEVBQUUsd0JBQXdCLENBQUMsQ0FBQztRQUMzRyxJQUFJLENBQUMsd0JBQXdCLEdBQUcsbUJBQW1CLENBQUMseUJBQXlCLENBQUMsR0FBRyxFQUFFLDBCQUEwQixDQUFDLENBQUM7SUFDbkgsQ0FBQztJQUNMLGtDQUFDO0FBQUQsQ0FBQyxBQTlDRCxDQUFpRCxpQ0FBaUMsR0E4Q2pGOzs7O0lBN0NHLG1FQUFxQzs7SUFDckMsK0RBQWlDOztJQUNqQyx5REFBMkI7O0lBQzNCLHNEQUF3Qjs7SUFDeEIsMERBQTRCOztJQUM1Qiw2REFBK0I7O0lBQy9CLCtEQUFpQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEJwbW5Nb2RlbEpzb25IZWxwZXIgfSBmcm9tICcuLi8uLi9yZWYnO1xyXG5pbXBvcnQgeyBBYnN0cmFjdEJpbGxDcmVhdGlvblByb2Nlc3NFbnRpdHkgfSBmcm9tICcuL0Fic3RyYWN0QmlsbENyZWF0aW9uUHJvY2Vzc0VudGl0eSc7XHJcbmltcG9ydCB7IElEdEJpbGxDcmVhdGlvblByb2Nlc3NFbnRpdHkgfSBmcm9tICcuLi9JRHRCaWxsQ3JlYXRpb25Qcm9jZXNzRW50aXR5JztcclxuXHJcbmV4cG9ydCBjbGFzcyBEdEJpbGxDcmVhdGlvblByb2Nlc3NFbnRpdHkgZXh0ZW5kcyBBYnN0cmFjdEJpbGxDcmVhdGlvblByb2Nlc3NFbnRpdHkgaW1wbGVtZW50cyBJRHRCaWxsQ3JlYXRpb25Qcm9jZXNzRW50aXR5IHtcclxuICAgIGV2ZW50Um91dGVyQ29uZGl0aW9uc0NvbnRlbnQ6IHN0cmluZztcclxuICAgIG1hcHBpbmdDb25kaXRpb25zQ29udGVudDogc3RyaW5nO1xyXG4gICAgbWFwcGluZ01vZGVDb250ZW50OiBzdHJpbmc7XHJcbiAgICBzYXZlTW9kZUNvbnRlbnQ6IHN0cmluZztcclxuICAgIGZvcm1TZXR0aW5nc0NvbnRlbnQ6IHN0cmluZztcclxuICAgIHVwQmlsbFRyYWNraW5nU2V0dGluZ3M6IHN0cmluZztcclxuICAgIGRvd25CaWxsVHJhY2tpbmdTZXR0aW5nczogc3RyaW5nO1xyXG5cclxuICAgIHByb3RlY3RlZCBSZXNldEJlZm9yZUxvYWRGcm9tKCk6IHZvaWQge1xyXG4gICAgICAgIHN1cGVyLlJlc2V0QmVmb3JlTG9hZEZyb20oKTtcclxuXHJcbiAgICAgICAgdGhpcy5ldmVudFJvdXRlckNvbmRpdGlvbnNDb250ZW50ID0gbnVsbDtcclxuICAgICAgICB0aGlzLm1hcHBpbmdDb25kaXRpb25zQ29udGVudCA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5tYXBwaW5nTW9kZUNvbnRlbnQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMuc2F2ZU1vZGVDb250ZW50ID0gbnVsbDtcclxuICAgICAgICB0aGlzLmZvcm1TZXR0aW5nc0NvbnRlbnQgPSBudWxsO1xyXG4gICAgICAgIHRoaXMudXBCaWxsVHJhY2tpbmdTZXR0aW5ncyA9IG51bGw7XHJcbiAgICAgICAgdGhpcy5kb3duQmlsbFRyYWNraW5nU2V0dGluZ3MgPSBudWxsO1xyXG4gICAgfVxyXG5cclxuICAgIHB1YmxpYyBDb252ZXJ0VG9Kc29uT2JqZWN0KCk6IHt9IHtcclxuICAgICAgICBsZXQgb2JqOiB7fSA9IHN1cGVyLkNvbnZlcnRUb0pzb25PYmplY3QoKTtcclxuXHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiZXZlbnRSb3V0ZXJDb25kaXRpb25zQ29udGVudFwiLCB0aGlzLmV2ZW50Um91dGVyQ29uZGl0aW9uc0NvbnRlbnQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcIm1hcHBpbmdDb25kaXRpb25zQ29udGVudFwiLCB0aGlzLm1hcHBpbmdDb25kaXRpb25zQ29udGVudCk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwibWFwcGluZ01vZGVDb250ZW50XCIsIHRoaXMubWFwcGluZ01vZGVDb250ZW50KTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJzYXZlTW9kZUNvbnRlbnRcIiwgdGhpcy5zYXZlTW9kZUNvbnRlbnQpO1xyXG4gICAgICAgIEJwbW5Nb2RlbEpzb25IZWxwZXIuU2V0QXR0cmlidXRlVmFsdWUob2JqLCBcImZvcm1TZXR0aW5nc0NvbnRlbnRcIiwgdGhpcy5mb3JtU2V0dGluZ3NDb250ZW50KTtcclxuICAgICAgICBCcG1uTW9kZWxKc29uSGVscGVyLlNldEF0dHJpYnV0ZVZhbHVlKG9iaiwgXCJ1cEJpbGxUcmFja2luZ1NldHRpbmdzXCIsIHRoaXMudXBCaWxsVHJhY2tpbmdTZXR0aW5ncyk7XHJcbiAgICAgICAgQnBtbk1vZGVsSnNvbkhlbHBlci5TZXRBdHRyaWJ1dGVWYWx1ZShvYmosIFwiZG93bkJpbGxUcmFja2luZ1NldHRpbmdzXCIsIHRoaXMuZG93bkJpbGxUcmFja2luZ1NldHRpbmdzKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIG9iajtcclxuICAgIH1cclxuXHJcbiAgICBwdWJsaWMgTG9hZEZyb21Kc29uT2JqZWN0KG9iajoge30pOiB2b2lkIHtcclxuICAgICAgICBzdXBlci5Mb2FkRnJvbUpzb25PYmplY3Qob2JqKTtcclxuXHJcbiAgICAgICAgdGhpcy5ldmVudFJvdXRlckNvbmRpdGlvbnNDb250ZW50ID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJldmVudFJvdXRlckNvbmRpdGlvbnNDb250ZW50XCIpO1xyXG4gICAgICAgIHRoaXMubWFwcGluZ0NvbmRpdGlvbnNDb250ZW50ID0gQnBtbk1vZGVsSnNvbkhlbHBlci5HZXRBdHRyaWJ1dGVWYWx1ZUFzU3RyaW5nKG9iaiwgXCJtYXBwaW5nQ29uZGl0aW9uc0NvbnRlbnRcIik7XHJcbiAgICAgICAgdGhpcy5tYXBwaW5nTW9kZUNvbnRlbnQgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcIm1hcHBpbmdNb2RlQ29udGVudFwiKTtcclxuICAgICAgICB0aGlzLnNhdmVNb2RlQ29udGVudCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwic2F2ZU1vZGVDb250ZW50XCIpO1xyXG4gICAgICAgIHRoaXMuZm9ybVNldHRpbmdzQ29udGVudCA9IEJwbW5Nb2RlbEpzb25IZWxwZXIuR2V0QXR0cmlidXRlVmFsdWVBc1N0cmluZyhvYmosIFwiZm9ybVNldHRpbmdzQ29udGVudFwiKTtcclxuICAgICAgICB0aGlzLnVwQmlsbFRyYWNraW5nU2V0dGluZ3MgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcInVwQmlsbFRyYWNraW5nU2V0dGluZ3NcIik7XHJcbiAgICAgICAgdGhpcy5kb3duQmlsbFRyYWNraW5nU2V0dGluZ3MgPSBCcG1uTW9kZWxKc29uSGVscGVyLkdldEF0dHJpYnV0ZVZhbHVlQXNTdHJpbmcob2JqLCBcImRvd25CaWxsVHJhY2tpbmdTZXR0aW5nc1wiKTtcclxuICAgIH1cclxufSJdfQ==