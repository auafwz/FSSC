/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
var MapUtil = /** @class */ (function () {
    function MapUtil() {
    }
    /** 将Map转为Object，便于序列化。（因为JSON.stringfy(Map)返回的值总为{}） */
    /**
     * 将Map转为Object，便于序列化。（因为JSON.stringfy(Map)返回的值总为{}）
     * @param {?} map
     * @return {?}
     */
    MapUtil.convertMapToObject = /**
     * 将Map转为Object，便于序列化。（因为JSON.stringfy(Map)返回的值总为{}）
     * @param {?} map
     * @return {?}
     */
    function (map) {
        if (!map) {
            return null;
        }
        /** @type {?} */
        var obj = Object.create(null);
        map.forEach((/**
         * @param {?} value
         * @param {?} key
         * @return {?}
         */
        function (value, key) {
            obj[key] = value;
        }));
        return obj;
    };
    /** 将Object转为Map，因为JSON.parse无法识别类型，反序列化后只能是Object类型 */
    /**
     * 将Object转为Map，因为JSON.parse无法识别类型，反序列化后只能是Object类型
     * @param {?} obj
     * @return {?}
     */
    MapUtil.convertObjectToMap = /**
     * 将Object转为Map，因为JSON.parse无法识别类型，反序列化后只能是Object类型
     * @param {?} obj
     * @return {?}
     */
    function (obj) {
        var e_1, _a;
        if (obj === undefined || obj === null) {
            return null;
        }
        /** @type {?} */
        var strMap = new Map();
        try {
            for (var _b = tslib_1.__values(Object.keys(obj)), _c = _b.next(); !_c.done; _c = _b.next()) {
                var k = _c.value;
                strMap.set(k, obj[k]);
            }
        }
        catch (e_1_1) { e_1 = { error: e_1_1 }; }
        finally {
            try {
                if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
            }
            finally { if (e_1) throw e_1.error; }
        }
        return strMap;
    };
    return MapUtil;
}());
export { MapUtil };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFwLnV0aWwuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZ3NwLWNtcC9jaGdkci8iLCJzb3VyY2VzIjpbImxpYi91dGlsL21hcC51dGlsLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7O0FBQUE7SUFBQTtJQXlCQSxDQUFDO0lBeEJHLHdEQUF3RDs7Ozs7O0lBQ2pELDBCQUFrQjs7Ozs7SUFBekIsVUFBMEIsR0FBcUI7UUFDM0MsSUFBSSxDQUFDLEdBQUcsRUFBRTtZQUNOLE9BQU8sSUFBSSxDQUFDO1NBQ2Y7O1lBQ0csR0FBRyxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDO1FBQzdCLEdBQUcsQ0FBQyxPQUFPOzs7OztRQUFDLFVBQUMsS0FBSyxFQUFFLEdBQVE7WUFDeEIsR0FBRyxDQUFDLEdBQUcsQ0FBQyxHQUFHLEtBQUssQ0FBQztRQUNyQixDQUFDLEVBQUMsQ0FBQTtRQUNGLE9BQU8sR0FBRyxDQUFDO0lBQ2YsQ0FBQztJQUVELHVEQUF1RDs7Ozs7O0lBQ2hELDBCQUFrQjs7Ozs7SUFBekIsVUFBMEIsR0FBUTs7UUFDOUIsSUFBSSxHQUFHLEtBQUssU0FBUyxJQUFJLEdBQUcsS0FBSyxJQUFJLEVBQUU7WUFDbkMsT0FBTyxJQUFJLENBQUM7U0FDZjs7WUFFRyxNQUFNLEdBQUcsSUFBSSxHQUFHLEVBQUU7O1lBQ3RCLEtBQWMsSUFBQSxLQUFBLGlCQUFBLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUEsZ0JBQUEsNEJBQUU7Z0JBQTNCLElBQUksQ0FBQyxXQUFBO2dCQUNOLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxFQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO2FBQ3pCOzs7Ozs7Ozs7UUFDRCxPQUFPLE1BQU0sQ0FBQztJQUNsQixDQUFDO0lBQ0wsY0FBQztBQUFELENBQUMsQUF6QkQsSUF5QkMiLCJzb3VyY2VzQ29udGVudCI6WyJleHBvcnQgY2xhc3MgTWFwVXRpbCB7XHJcbiAgICAvKiog5bCGTWFw6L2s5Li6T2JqZWN077yM5L6/5LqO5bqP5YiX5YyW44CC77yI5Zug5Li6SlNPTi5zdHJpbmdmeShNYXAp6L+U5Zue55qE5YC85oC75Li6e33vvIkgKi9cclxuICAgIHN0YXRpYyBjb252ZXJ0TWFwVG9PYmplY3QobWFwOiBNYXA8U3RyaW5nLCBhbnk+KSB7XHJcbiAgICAgICAgaWYgKCFtYXApIHtcclxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIGxldCBvYmogPSBPYmplY3QuY3JlYXRlKG51bGwpO1xyXG4gICAgICAgIG1hcC5mb3JFYWNoKCh2YWx1ZSwga2V5OiBhbnkpID0+IHtcclxuICAgICAgICAgICAgb2JqW2tleV0gPSB2YWx1ZTtcclxuICAgICAgICB9KVxyXG4gICAgICAgIHJldHVybiBvYmo7XHJcbiAgICB9XHJcblxyXG4gICAgLyoqIOWwhk9iamVjdOi9rOS4uk1hcO+8jOWboOS4ukpTT04ucGFyc2Xml6Dms5Xor4bliKvnsbvlnovvvIzlj43luo/liJfljJblkI7lj6rog73mmK9PYmplY3TnsbvlnosgKi9cclxuICAgIHN0YXRpYyBjb252ZXJ0T2JqZWN0VG9NYXAob2JqOiBhbnkpOiBNYXA8c3RyaW5nLCBhbnk+IHtcclxuICAgICAgICBpZiAob2JqID09PSB1bmRlZmluZWQgfHwgb2JqID09PSBudWxsKSB7XHJcbiAgICAgICAgICAgIHJldHVybiBudWxsO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgbGV0IHN0ck1hcCA9IG5ldyBNYXAoKTtcclxuICAgICAgICBmb3IgKGxldCBrIG9mIE9iamVjdC5rZXlzKG9iaikpIHtcclxuICAgICAgICAgICAgc3RyTWFwLnNldChrLCBvYmpba10pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gc3RyTWFwO1xyXG4gICAgfVxyXG59Il19