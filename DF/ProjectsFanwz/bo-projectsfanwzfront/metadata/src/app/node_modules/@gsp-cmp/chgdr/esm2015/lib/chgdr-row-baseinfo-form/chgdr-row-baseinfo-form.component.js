/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Injector, Input } from '@angular/core';
import { ChgdrTreeNode } from '../chgdr-data-viewer/chgdr-tree-builder';
export class ChgdrRowBaseinfoFormComponent {
    /**
     * @param {?} injector
     */
    constructor(injector) {
        this.injector = injector;
        this.showDataId = false;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
}
ChgdrRowBaseinfoFormComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-chgdr-row-baseinfo-form',
                template: "<div *ngIf=\"!!chgdrTreeNode\" class=\"farris-form farris-form-controls-inline\">\r\n  <form class=\"f-section-formgroup\">\r\n    <div class=\"f-section-formgroup-inputs\">\r\n      <div class=\"col-12 row\">\r\n\r\n        <div class=\"farris-group-wrap col-6\" *ngIf=\"showDataId\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-text\">\u6280\u672F\u4E3B\u952E</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input type=\"text\" class=\"form-control\" [ngModel]=\"chgdrTreeNode.chgdrRow.dataId\" name=\"dataId\"\r\n                [readonly]=\"true\">\r\n              <div class=\"farris-feedback valid-feedback\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"farris-group-wrap col-6\" *ngFor=\"let field of chgdrTreeNode.chgdrRow.dataCodes\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-text\">{{field.fieldName}}</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input type=\"text\" class=\"form-control\" [ngModel]=\"field.fieldValue\" name=\"dataCode-{{field.fieldName}}\"\r\n                [readonly]=\"true\">\r\n              <div class=\"farris-feedback valid-feedback\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"chgdrTreeNode.isRoot\" class=\"farris-group-wrap col-6\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-text\">\u53D8\u66F4\u4EBA</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input type=\"text\" class=\"form-control\" [ngModel]=\"chgdrTreeNode.chgdrData.userName\" name=\"userName\"\r\n                [readonly]=\"true\">\r\n              <div class=\"farris-feedback valid-feedback\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"chgdrTreeNode.isRoot\" class=\"farris-group-wrap col-6\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-text\">\u53D8\u66F4\u65F6\u95F4</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input type=\"text\" class=\"form-control\" value=\"{{chgdrTreeNode.chgdrData.changeTime | date:'yyyy-MM-dd HH:mm:ss'}}\" name=\"changeTime\"\r\n                [readonly]=\"true\">\r\n              <div class=\"farris-feedback valid-feedback\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"farris-group-wrap col-6\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-text\">\u53D8\u66F4\u65B9\u5F0F</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input type=\"text\" class=\"form-control\" [ngModel]=\"chgdrTreeNode.chgdrRow.operateType.name\" name=\"operateType\"\r\n              [readonly]=\"true\">\r\n              <div class=\"farris-feedback valid-feedback\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>",
                styles: [""]
            }] }
];
/** @nocollapse */
ChgdrRowBaseinfoFormComponent.ctorParameters = () => [
    { type: Injector }
];
ChgdrRowBaseinfoFormComponent.propDecorators = {
    chgdrTreeNode: [{ type: Input }],
    showDataId: [{ type: Input }]
};
if (false) {
    /** @type {?} */
    ChgdrRowBaseinfoFormComponent.prototype.chgdrTreeNode;
    /** @type {?} */
    ChgdrRowBaseinfoFormComponent.prototype.showDataId;
    /**
     * @type {?}
     * @private
     */
    ChgdrRowBaseinfoFormComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hnZHItcm93LWJhc2VpbmZvLWZvcm0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1jbXAvY2hnZHIvIiwic291cmNlcyI6WyJsaWIvY2hnZHItcm93LWJhc2VpbmZvLWZvcm0vY2hnZHItcm93LWJhc2VpbmZvLWZvcm0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDbkUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBT3hFLE1BQU0sT0FBTyw2QkFBNkI7Ozs7SUFLeEMsWUFBb0IsUUFBa0I7UUFBbEIsYUFBUSxHQUFSLFFBQVEsQ0FBVTtRQUY3QixlQUFVLEdBQVcsS0FBSyxDQUFDO0lBRU0sQ0FBQzs7OztJQUUzQyxRQUFRO0lBQ1IsQ0FBQzs7O1lBYkYsU0FBUyxTQUFDO2dCQUNULFFBQVEsRUFBRSw2QkFBNkI7Z0JBQ3ZDLGc4R0FBdUQ7O2FBRXhEOzs7O1lBUG1CLFFBQVE7Ozs0QkFTekIsS0FBSzt5QkFFTCxLQUFLOzs7O0lBRk4sc0RBQzRCOztJQUM1QixtREFBb0M7Ozs7O0lBRXhCLGlEQUEwQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5qZWN0b3IsIElucHV0LCBPbkluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ2hnZHJUcmVlTm9kZSB9IGZyb20gJy4uL2NoZ2RyLWRhdGEtdmlld2VyL2NoZ2RyLXRyZWUtYnVpbGRlcic7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICBzZWxlY3RvcjogJ2xpYi1jaGdkci1yb3ctYmFzZWluZm8tZm9ybScsXHJcbiAgdGVtcGxhdGVVcmw6ICcuL2NoZ2RyLXJvdy1iYXNlaW5mby1mb3JtLmNvbXBvbmVudC5odG1sJyxcclxuICBzdHlsZVVybHM6IFsnLi9jaGdkci1yb3ctYmFzZWluZm8tZm9ybS5jb21wb25lbnQuY3NzJ11cclxufSlcclxuZXhwb3J0IGNsYXNzIENoZ2RyUm93QmFzZWluZm9Gb3JtQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0IHtcclxuICBASW5wdXQoKVxyXG4gIGNoZ2RyVHJlZU5vZGU6Q2hnZHJUcmVlTm9kZTtcclxuICBASW5wdXQoKSBzaG93RGF0YUlkOmJvb2xlYW4gPSBmYWxzZTtcclxuXHJcbiAgY29uc3RydWN0b3IocHJpdmF0ZSBpbmplY3RvcjogSW5qZWN0b3IpIHsgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICB9XHJcbn1cclxuIl19