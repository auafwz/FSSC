/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Injector, Input } from '@angular/core';
import { ChgdrTreeNode } from '../chgdr-data-viewer/chgdr-tree-builder';
var ChgdrRowBaseinfoFormComponent = /** @class */ (function () {
    function ChgdrRowBaseinfoFormComponent(injector) {
        this.injector = injector;
        this.showDataId = false;
    }
    /**
     * @return {?}
     */
    ChgdrRowBaseinfoFormComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    ChgdrRowBaseinfoFormComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-chgdr-row-baseinfo-form',
                    template: "<div *ngIf=\"!!chgdrTreeNode\" class=\"farris-form farris-form-controls-inline\">\r\n  <form class=\"f-section-formgroup\">\r\n    <div class=\"f-section-formgroup-inputs\">\r\n      <div class=\"col-12 row\">\r\n\r\n        <div class=\"farris-group-wrap col-6\" *ngIf=\"showDataId\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-text\">\u6280\u672F\u4E3B\u952E</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input type=\"text\" class=\"form-control\" [ngModel]=\"chgdrTreeNode.chgdrRow.dataId\" name=\"dataId\"\r\n                [readonly]=\"true\">\r\n              <div class=\"farris-feedback valid-feedback\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"farris-group-wrap col-6\" *ngFor=\"let field of chgdrTreeNode.chgdrRow.dataCodes\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-text\">{{field.fieldName}}</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input type=\"text\" class=\"form-control\" [ngModel]=\"field.fieldValue\" name=\"dataCode-{{field.fieldName}}\"\r\n                [readonly]=\"true\">\r\n              <div class=\"farris-feedback valid-feedback\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"chgdrTreeNode.isRoot\" class=\"farris-group-wrap col-6\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-text\">\u53D8\u66F4\u4EBA</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input type=\"text\" class=\"form-control\" [ngModel]=\"chgdrTreeNode.chgdrData.userName\" name=\"userName\"\r\n                [readonly]=\"true\">\r\n              <div class=\"farris-feedback valid-feedback\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div *ngIf=\"chgdrTreeNode.isRoot\" class=\"farris-group-wrap col-6\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-text\">\u53D8\u66F4\u65F6\u95F4</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input type=\"text\" class=\"form-control\" value=\"{{chgdrTreeNode.chgdrData.changeTime | date:'yyyy-MM-dd HH:mm:ss'}}\" name=\"changeTime\"\r\n                [readonly]=\"true\">\r\n              <div class=\"farris-feedback valid-feedback\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n\r\n        <div class=\"farris-group-wrap col-6\">\r\n          <div class=\"form-group farris-form-group\">\r\n            <label class=\"col-form-label\">\r\n              <span class=\"farris-label-text\">\u53D8\u66F4\u65B9\u5F0F</span>\r\n            </label>\r\n            <div class=\"farris-input-wrap\">\r\n              <input type=\"text\" class=\"form-control\" [ngModel]=\"chgdrTreeNode.chgdrRow.operateType.name\" name=\"operateType\"\r\n              [readonly]=\"true\">\r\n              <div class=\"farris-feedback valid-feedback\"></div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  </form>\r\n</div>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    ChgdrRowBaseinfoFormComponent.ctorParameters = function () { return [
        { type: Injector }
    ]; };
    ChgdrRowBaseinfoFormComponent.propDecorators = {
        chgdrTreeNode: [{ type: Input }],
        showDataId: [{ type: Input }]
    };
    return ChgdrRowBaseinfoFormComponent;
}());
export { ChgdrRowBaseinfoFormComponent };
if (false) {
    /** @type {?} */
    ChgdrRowBaseinfoFormComponent.prototype.chgdrTreeNode;
    /** @type {?} */
    ChgdrRowBaseinfoFormComponent.prototype.showDataId;
    /**
     * @type {?}
     * @private
     */
    ChgdrRowBaseinfoFormComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hnZHItcm93LWJhc2VpbmZvLWZvcm0uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGdzcC1jbXAvY2hnZHIvIiwic291cmNlcyI6WyJsaWIvY2hnZHItcm93LWJhc2VpbmZvLWZvcm0vY2hnZHItcm93LWJhc2VpbmZvLWZvcm0uY29tcG9uZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLFFBQVEsRUFBRSxLQUFLLEVBQVUsTUFBTSxlQUFlLENBQUM7QUFDbkUsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLHlDQUF5QyxDQUFDO0FBRXhFO0lBVUUsdUNBQW9CLFFBQWtCO1FBQWxCLGFBQVEsR0FBUixRQUFRLENBQVU7UUFGN0IsZUFBVSxHQUFXLEtBQUssQ0FBQztJQUVNLENBQUM7Ozs7SUFFM0MsZ0RBQVE7OztJQUFSO0lBQ0EsQ0FBQzs7Z0JBYkYsU0FBUyxTQUFDO29CQUNULFFBQVEsRUFBRSw2QkFBNkI7b0JBQ3ZDLGc4R0FBdUQ7O2lCQUV4RDs7OztnQkFQbUIsUUFBUTs7O2dDQVN6QixLQUFLOzZCQUVMLEtBQUs7O0lBTVIsb0NBQUM7Q0FBQSxBQWRELElBY0M7U0FUWSw2QkFBNkI7OztJQUN4QyxzREFDNEI7O0lBQzVCLG1EQUFvQzs7Ozs7SUFFeEIsaURBQTBCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbmplY3RvciwgSW5wdXQsIE9uSW5pdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBDaGdkclRyZWVOb2RlIH0gZnJvbSAnLi4vY2hnZHItZGF0YS12aWV3ZXIvY2hnZHItdHJlZS1idWlsZGVyJztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnbGliLWNoZ2RyLXJvdy1iYXNlaW5mby1mb3JtJyxcclxuICB0ZW1wbGF0ZVVybDogJy4vY2hnZHItcm93LWJhc2VpbmZvLWZvcm0uY29tcG9uZW50Lmh0bWwnLFxyXG4gIHN0eWxlVXJsczogWycuL2NoZ2RyLXJvdy1iYXNlaW5mby1mb3JtLmNvbXBvbmVudC5jc3MnXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgQ2hnZHJSb3dCYXNlaW5mb0Zvcm1Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQge1xyXG4gIEBJbnB1dCgpXHJcbiAgY2hnZHJUcmVlTm9kZTpDaGdkclRyZWVOb2RlO1xyXG4gIEBJbnB1dCgpIHNob3dEYXRhSWQ6Ym9vbGVhbiA9IGZhbHNlO1xyXG5cclxuICBjb25zdHJ1Y3Rvcihwcml2YXRlIGluamVjdG9yOiBJbmplY3RvcikgeyB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG4gIH1cclxufVxyXG4iXX0=