{"version":3,"file":"gsp-cmp-chgdr.js.map","sources":["ng://@gsp-cmp/chgdr/lib/model/change-data-header.ts","ng://@gsp-cmp/chgdr/lib/chgdr-data-viewer/chgdr-data.ts","ng://@gsp-cmp/chgdr/lib/chgdr-data-viewer/chgdr-data-builder.ts","ng://@gsp-cmp/chgdr/lib/util/guid.util.ts","ng://@gsp-cmp/chgdr/lib/chgdr-data-viewer/chgdr-tree-builder.ts","ng://@gsp-cmp/chgdr/lib/service/chgdr-metadata.service.ts","ng://@gsp-cmp/chgdr/lib/service/chgdr-config.service.ts","ng://@gsp-cmp/chgdr/lib/service/chgdr-config-handler.ts","ng://@gsp-cmp/chgdr/lib/service/chgdr-inner.service.ts","ng://@gsp-cmp/chgdr/lib/chgdr-data-viewer/chgdr-data-viewer.component.ts","ng://@gsp-cmp/chgdr/lib/model/operate-type.ts","ng://@gsp-cmp/chgdr/lib/util/map.util.ts","ng://@gsp-cmp/chgdr/lib/service/chgdr.service.ts","ng://@gsp-cmp/chgdr/lib/model/change-data-query-param.ts","ng://@gsp-cmp/chgdr/lib/model/change-data-query-result.ts","ng://@gsp-cmp/chgdr/lib/util/error.util.ts","ng://@gsp-cmp/chgdr/lib/util/time.util.ts","ng://@gsp-cmp/chgdr/lib/chgdr-list/chgdr-list.component.ts","ng://@gsp-cmp/chgdr/lib/chgdr-row-baseinfo-form/chgdr-row-baseinfo-form.component.ts","ng://@gsp-cmp/chgdr/lib/chgdr-row-grid/chgdr-row-grid.component.ts","ng://@gsp-cmp/chgdr/lib/chgdr-list-dialog-content/chgdr-list-dialog-content.component.ts","ng://@gsp-cmp/chgdr/lib/service/chgdr-list-ui.service.ts","ng://@gsp-cmp/chgdr/lib/chgdr-header-datagrid/chgdr-header-datagrid.component.ts","ng://@gsp-cmp/chgdr/lib/chgdr.module.ts","ng://@gsp-cmp/chgdr/lib/model/change-data-row.ts"],"sourcesContent":["import { ChangeDataRow } from './change-data-row';\r\nimport { OperateType } from './operate-type';\r\n\r\nexport class ChangeDataHeader {\r\n    id: string;\r\n    /**\r\n     * ç¨æ·ID\r\n     */\r\n    userId: string;\r\n    /**\r\n     * ç¨æ·ç¼å·\r\n     */\r\n    userCode: string;\r\n    /**\r\n     * ç¨æ·åç§°\r\n     */\r\n    userName: string;\r\n    /**\r\n     * å®ä½ID\r\n     */\r\n    entityId: string;\r\n    /**\r\n     * æ°æ®ä¸»é®\r\n     */\r\n    dataId: string;\r\n    /**\r\n     * æ°æ®ç¼å·\r\n     */\r\n    dataCode: Map<string, string>;\r\n    /**\r\n     * åæ´æ¶é´\r\n     */\r\n    changeTime: Date;\r\n    /**\r\n     * åæ´ç±»å\r\n     */\r\n    operateType: OperateType;\r\n    /**\r\n     * åæ´åå \r\n     */\r\n    reason: string;\r\n\r\n    /**\r\n     * åæ´è¡åè¡¨\r\n     */\r\n    rows: ChangeDataRow[];\r\n}","import { OperateType } from '../model/operate-type';\r\n\r\n/** åºæ¬ä¿¡æ¯ */\r\nexport class ChgdrData {\r\n    entityName: string;\r\n    userName: string;\r\n    operateType: OperateType;\r\n    reason: string;\r\n    dataId: string;\r\n    dataCode: Map<string, string>;\r\n    dataCodes: DataCodeField[];\r\n    changeTime: Date;\r\n    /** æ¬åæ´æ¥å¿çæ ¹èç¹ */\r\n    entityNodes: ChgdrDataEntityNode[];\r\n}\r\n\r\n/** åçåæ´çå®ä½èç¹ */\r\nexport class ChgdrDataEntityNode {\r\n    entityCode: string;\r\n    entityName: string;\r\n    rows: ChgdrDataRowNode[];\r\n}\r\n\r\n/** åçåæ´çè¡ */\r\nexport class ChgdrDataRowNode {\r\n    id: string;\r\n    entityCode: string;\r\n    entityName: string;\r\n    parentDataId: string;\r\n    dataId: string;\r\n    dataCode: Map<string, string>;\r\n    dataCodes: DataCodeField[];\r\n    operateType: OperateType;\r\n    changes: ChangeColumnItem[];\r\n    /** åçåæ´çè¡çä¸çº§å®ä½ */\r\n    entityNodes: ChgdrDataEntityNode[];\r\n}\r\n\r\nexport class ChangeColumnItem {\r\n    fieldLabel: string;\r\n    fieldName: string;\r\n    oldValue: string;\r\n    newValue: string;\r\n    /** æ¯å¦å³èå­æ®µ */\r\n    hasAssociation: boolean;\r\n    /** åå§å³èå­æ®µ */\r\n    originalColumnItem: ChangeColumnItem;\r\n    /** æ¯å¦å³èå¸¦åºå­æ®µ */\r\n    isAssociationRefField: boolean;\r\n    /** å³èå¸¦åºå­æ®µæå±çå­æ®µ */\r\n    belongFieldLabelId: string;\r\n    /** å¦æå½åå­æ®µä¸ºå³èå­æ®µï¼åå±æ§ä¸ºå½åå­æ®µçå³èå¸¦åºå­æ®µ */\r\n    children: ChangeColumnItem[] = [];\r\n}\r\n\r\nexport class DataCodeField {\r\n    fieldLabelId: string;\r\n    fieldName: string;\r\n    fieldValue: string;\r\n}","import { isToday, format } from 'date-fns';\r\nimport { GSPBusinessEntity } from '@gsp-bef/gsp-be-metadata';\r\nimport { IGSPCommonObject, IGSPCommonElement, GSPAssociation, GSPCommonElement, GSPElementDataType, GSPElementObjectType, GSPEnumValue } from '@gsp-bef/gsp-cm-metadata';\r\nimport { ChangeDataHeader } from '../model/change-data-header';\r\nimport { ChangeDataRow } from '../model/change-data-row';\r\nimport { MapUtil } from '../util/map.util';\r\nimport { ChgdrData, ChgdrDataRowNode, ChangeColumnItem, ChgdrDataEntityNode, DataCodeField } from './chgdr-data';\r\nimport { ChgdrConfigHandler } from '../service/chgdr-config-handler';\r\n\r\nexport class ChgdrDataBuilder {\r\n    private handler: ChgdrConfigHandler;\r\n\r\n    buildChgdrData(data: ChangeDataHeader, handler: ChgdrConfigHandler): ChgdrData {\r\n        this.handler = handler;\r\n        //åå§ååæ´æ¥å¿åºæ¬ä¿¡æ¯\r\n        let chgdrData = new ChgdrData();\r\n        chgdrData.entityName = this.handler.getBeName();\r\n        chgdrData.operateType = data.operateType;\r\n        chgdrData.userName = data.userName;\r\n        chgdrData.dataId = data.dataId;\r\n        chgdrData.dataCode = data.dataCode;\r\n        chgdrData.dataCodes = this.buildDataCodes(data.dataCode, this.handler.getMainObjectCode());\r\n        chgdrData.reason = data.reason;\r\n        chgdrData.changeTime = data.changeTime;\r\n        chgdrData.entityNodes = [];\r\n\r\n        //åå±ç»ç»åæ´æ¥å¿è¡\r\n        let rowNodes: ChgdrDataRowNode[] = [];\r\n        !!data.rows && data.rows.forEach(row => {\r\n            if (!row) {\r\n                return;\r\n            }\r\n            let rowNode = new ChgdrDataRowNode();\r\n            rowNode.id = row.id;\r\n            rowNode.parentDataId = row.parentDataId;\r\n            rowNode.dataId = row.dataId;\r\n            rowNode.dataCode = row.dataCode;\r\n            rowNode.dataCodes = this.buildDataCodes(row.dataCode, row.entityCode);\r\n            rowNode.entityCode = row.entityCode;\r\n            rowNode.entityName = this.handler.getEntityNameOrDefault(row.entityCode);\r\n            rowNode.operateType = row.operateType;\r\n            rowNode.entityNodes = [];\r\n\r\n            //ç»ç»åçåæ´ä¿¡æ¯\r\n            let changeColumnKeys: string[] = this.extractChangeColumnKeys(row);\r\n            let columnValueChanges: ChangeColumnItem[] = [];\r\n            changeColumnKeys.forEach((key) => {\r\n                let column = new ChangeColumnItem();\r\n                column.fieldLabel = key;\r\n                column.fieldName = this.handler.getEntityFieldNameOrDefault(row.entityCode, key);\r\n                column.oldValue = this.handler.formatFieldValue(row.oldContent.get(key), row.entityCode, key);\r\n                column.newValue = this.handler.formatFieldValue(row.newContent.get(key), row.entityCode, key);\r\n\r\n                let ele: IGSPCommonElement = this.handler.getElement(row.entityCode, key);\r\n                if (ele) {\r\n                    //å¤æ­æ¯å¦æ¯å³èå­æ®µ\r\n                    column.hasAssociation = ele.ObjectType == \"Association\" && ele.IsUdt == false;\r\n                    column.isAssociationRefField = ele.IsRefElement;\r\n                    let parentElement = this.handler.getParentElement(row.entityCode, key);\r\n                    if (parentElement) {\r\n                        column.belongFieldLabelId = parentElement.LabelID;\r\n                    }\r\n                }\r\n\r\n                columnValueChanges.push(column);\r\n            })\r\n            //åæ´å¼æåº\r\n            this.handler.sort(columnValueChanges, row.entityCode, (column)=>column.fieldLabel);\r\n\r\n            //åå¹¶å³èå¸¦åºå­æ®µ\r\n            let columnMap: Map<string, ChangeColumnItem> = new Map();\r\n            columnValueChanges.forEach((column) => {\r\n                columnMap.set(column.fieldLabel, column);\r\n            });\r\n            //1. ç§»é¤ææå³èå¸¦åºå­æ®µï¼å¹¶éå å°å¶æå±å³èå­æ®µçchildrenå±æ§ä¸\r\n            columnValueChanges = columnValueChanges.filter((column) => {\r\n                if (column.isAssociationRefField) {\r\n                    let parentColumn: ChangeColumnItem = columnMap.get(column.belongFieldLabelId);\r\n                    if (parentColumn) {\r\n                        //æ¾å°ç¶çº§å­æ®µåæ·»å ä¸ºç¶\r\n                        parentColumn.children.push(column);\r\n                        return false;\r\n                    } else {\r\n                        return true;\r\n                    }\r\n                } else {\r\n                    return true;\r\n                }\r\n            });\r\n            //2. è½¬æ¢å³èå­æ®µï¼å°å¶å­çº§çåæ´å¼æ¼æ¥ä½ä¸ºå¶åæ´å¼\r\n            columnValueChanges = columnValueChanges.map<ChangeColumnItem>(column => {\r\n                if (column.hasAssociation && column.children.length > 0) {\r\n                    //å¦ææ¯å³èå­æ®µï¼ä¸å­å¨å³èå¸¦åºå­æ®µ\r\n                    let virtualColumn: ChangeColumnItem = Object.assign(new ChangeColumnItem(), column);\r\n                    virtualColumn.originalColumnItem = column;\r\n                    virtualColumn.oldValue = column.children.map(child => child.oldValue).join(\";\");\r\n                    virtualColumn.newValue = column.children.map(child => child.newValue).join(\";\");\r\n                    return virtualColumn;\r\n                } else {\r\n                    return column;\r\n                }\r\n            });\r\n\r\n            rowNode.changes = columnValueChanges;\r\n\r\n            rowNodes.push(rowNode);\r\n        });\r\n\r\n        /** dataIdä¸åæ´è¡çMap */\r\n        let dataIdRowMap: Map<string, ChgdrDataRowNode> = new Map();\r\n        rowNodes.forEach(node => dataIdRowMap.set(node.dataId, node));\r\n\r\n        rowNodes.forEach(node => {\r\n            if (!node.parentDataId) {\r\n                //æ ¹èç¹\r\n                let entityNode = this.genChgdrDataEntityNode(node.entityCode, node.entityName);\r\n                entityNode.rows.push(node);\r\n                chgdrData.entityNodes.push(entityNode);\r\n                return;\r\n            }\r\n            let parentRowNode = dataIdRowMap.get(node.parentDataId);\r\n            if (!!parentRowNode) {\r\n                //ä¸çº§èç¹å­å¨çèç¹\r\n                let entityNode = parentRowNode.entityNodes.find(en => en.entityCode == node.entityCode);\r\n                if (!entityNode) {\r\n                    entityNode = this.genChgdrDataEntityNode(node.entityCode, node.entityName);\r\n                    parentRowNode.entityNodes.push(entityNode);\r\n                }\r\n                entityNode.rows.push(node);\r\n            } else {\r\n                //ä¸çº§èç¹ä¸å­å¨çèç¹\r\n                //TODO ä¸çº§èç¹ä¸å­å¨çèç¹æ¯å¦éè¦æé å®æ´çä¸çº§ç»æï¼\r\n                let entityNode = this.genChgdrDataEntityNode(node.entityCode, node.entityName);\r\n                entityNode.rows.push(node);\r\n                chgdrData.entityNodes.push(entityNode);\r\n            }\r\n        })\r\n\r\n        return chgdrData;\r\n    }\r\n\r\n    private buildDataCodes(dataCode: Map<string, string>, entityCode: string): DataCodeField[] {\r\n        let dataCodes: DataCodeField[] = [];\r\n        dataCode && dataCode.forEach((value, key) => {\r\n            let dataCodeField: DataCodeField = new DataCodeField();\r\n            if (key == \"_$dataCode\") {\r\n                dataCodeField.fieldLabelId = \"dataCode\";\r\n                dataCodeField.fieldName = \"ä¸å¡ç¼å·\";\r\n                dataCodeField.fieldValue = value;\r\n            } else {\r\n                dataCodeField.fieldLabelId = key;\r\n                dataCodeField.fieldName = this.handler.getEntityFieldNameOrDefault(entityCode, key);\r\n                dataCodeField.fieldValue = this.handler.formatFieldValue(value, entityCode, key);\r\n            }\r\n            dataCodes.push(dataCodeField);\r\n        })\r\n\r\n        //ä¸å¡ç¼å·æåº\r\n        this.handler.sort(dataCodes, entityCode, (dataCode)=>dataCode.fieldLabelId);\r\n\r\n        return dataCodes;\r\n    }\r\n\r\n    /** å¾å°æ°æ§åå®¹ä¸­ææçkey */\r\n    private extractChangeColumnKeys(row: ChangeDataRow): string[] {\r\n        let keysSet: Set<string> = new Set();\r\n        row.oldContent && row.oldContent.forEach((value, key) => keysSet.add(key));\r\n        row.newContent && row.newContent.forEach((value, key) => keysSet.add(key));\r\n        const keys: string[] = Array.from(keysSet.keys());\r\n        return keys;\r\n    }\r\n\r\n\r\n    private genChgdrDataEntityNode(entityCode: string, entityName: string): ChgdrDataEntityNode {\r\n        let node = new ChgdrDataEntityNode();\r\n        node.entityCode = entityCode;\r\n        node.entityName = entityName;\r\n        node.rows = [];\r\n        return node;\r\n    }\r\n\r\n}","export class Guid {\r\n  static newGuid() {\r\n    const initString = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx';\r\n    const result = initString.replace(/[xy]/g, (c) => {\r\n      return this.convert(c);\r\n    });\r\n    return result;\r\n  }\r\n\r\n  private static convert(c) {\r\n    // tslint:disable-next-line:no-bitwise\r\n    const r = Math.random() * 16 | 0;\r\n    // tslint:disable-next-line:no-bitwise\r\n    const v = c === 'x' ? r : (r & 0x3 | 0x8);\r\n    return v.toString(16);\r\n  }\r\n}\r\n","import { Guid } from '../util/guid.util';\r\nimport { ChgdrData, ChgdrDataRowNode } from './chgdr-data';\r\n\r\n// åèï¼ Farris TreeTableçèç¹ç»æ\r\n// export interface TreeNode {\r\n//     id?: string;\r\n//     data: any;\r\n//     /** å¶å­èç¹å¾æ  */\r\n//     icon?: any;\r\n//     /** èç¹å±å¼å¾æ  */\r\n//     expandedIcon?: any;\r\n//     /** èç¹æå å¾æ  */\r\n//     collapsedIcon?: any;\r\n//     /** å­èç¹ */\r\n//     children?: TreeNode[];\r\n//     /** æ¯å¦ä¸ºå¶å­èç¹ */\r\n//     leaf?: boolean;\r\n//     /** æ¯å¦å±å¼ */\r\n//     expanded?: boolean;\r\n//     type?: string;\r\n//     /** ç¶èç¹ */\r\n//     parent?: TreeNode;\r\n//     /** æ¯å¦åè®¸éä¸­ */\r\n//     selectable?: boolean;\r\n//  }\r\n\r\nexport class ChgdrTreeNode {\r\n    // æ éç½®ä¸­è®¾ç½®äºidFieldçæåµä¸ï¼idä¼è¢«èªå¨èµå¼ä¸ºdata[idField]çå¼ãæä»¥å¨æ­¤è®¾ç½®å¿é¡»è®¾ç½®ä¸ºä¸data.idä¸­ç¸åã\r\n    /** èç¹IDï¼ç¨äºåé¨å¤çï¼è¯·å¿ä½¿ç¨ */\r\n    id: string;\r\n    /** èç¹åç§° */\r\n    name: string;\r\n\r\n    /** ç¶èç¹ */\r\n    parent: ChgdrTreeNode;\r\n    /** å­èç¹åè¡¨ */\r\n    children: ChgdrTreeNode[];\r\n\r\n    /** æ¯å¦å±å¼ */\r\n    expanded: boolean;\r\n    /** æ¯å¦éè */\r\n    hidden: boolean;\r\n\r\n    /** å±ç¤ºæ ç»æç¨çæ°æ®å®ä½ */\r\n    data: any;\r\n    chgdrRow: ChgdrDataRowNode;\r\n    chgdrData: ChgdrData;\r\n    isRoot: boolean;\r\n}\r\n\r\nexport class ChgdrTreeBuilder {\r\n    private chgdrData: ChgdrData;\r\n\r\n    public build(chgdrData: ChgdrData): ChgdrTreeNode[] {\r\n        this.chgdrData = chgdrData;\r\n        if (chgdrData.entityNodes.length == 0) {\r\n            console.warn(\"æ åæ´æ¥å¿\");\r\n            return [];\r\n        }\r\n        let rootEntityNode = chgdrData.entityNodes[0];\r\n        let rootRows = rootEntityNode.rows;\r\n        if (rootRows.length == 0) {\r\n            console.warn(\"æ æ ¹åæ´æ¥å¿è¡\");\r\n            return [];\r\n        }\r\n        let rootRow = rootRows[0];\r\n\r\n        let node = this.rowToNode(rootRow);\r\n        node.isRoot = true;\r\n        node.expanded = true;\r\n\r\n        return [node];\r\n    }\r\n\r\n    private rowToNode(row: ChgdrDataRowNode): ChgdrTreeNode {\r\n        const node: ChgdrTreeNode = new ChgdrTreeNode();\r\n        node.id = Guid.newGuid();\r\n        node.name = this.buildTreeNodeName(row);\r\n        node.data = {\r\n            id: node.id,\r\n            name: node.name\r\n        };\r\n        node.chgdrRow = row;\r\n        node.chgdrData = this.chgdrData;\r\n        node.children = [];\r\n        row.entityNodes.forEach(entityNode => {\r\n            entityNode.rows.forEach(childRow => {\r\n                const childNode: ChgdrTreeNode = this.rowToNode(childRow);\r\n                childNode.parent = node;\r\n                node.children.push(childNode);\r\n            })\r\n        })\r\n        return node;\r\n    }\r\n\r\n    private buildTreeNodeName(row: ChgdrDataRowNode): string{\r\n        let dataCodeName;\r\n        if(row.dataCodes && row.dataCodes.length>0){\r\n            dataCodeName = row.dataCodes[0].fieldValue;\r\n        }\r\n        if(dataCodeName){\r\n            return row.entityName + \"-\" + dataCodeName + \"ã\" + row.operateType.getName() + \"ã\";\r\n        }else{\r\n            return row.entityName + \"ã\" + row.operateType.getName() + \"ã\";\r\n        }\r\n    }\r\n}","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpService, SessionService } from '@ecp-caf/caf-common';\r\nimport { GSPBusinessEntity } from '@gsp-bef/gsp-be-metadata';\r\nimport { GSPMetadataRTService } from '@gsp-lcm/metadatart-selector';\r\nimport { Observable, of } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { ChangeDataHeader } from '../model/change-data-header';\r\nimport { ChangeDataQueryParam } from '../model/change-data-query-param';\r\nimport { ChgLogConfigField } from '../model/chgdr-config-field';\r\nimport { OperateType } from '../model/operate-type';\r\nimport { MapUtil } from '../util/map.util';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ChgdrMetadataService {\r\n  private beMetadataCache: Map<string, GSPBusinessEntity> = new Map();\r\n\r\n  constructor(private http: HttpService,\r\n    private sessionService: SessionService,\r\n    private metadataService: GSPMetadataRTService,\r\n    private injector: Injector) { }\r\n\r\n    /** è·åBEåæ°æ® */\r\n    public getGSPBusinessEntity(beId: string):Observable<GSPBusinessEntity>{\r\n      if(this.beMetadataCache.has(beId)){\r\n        let be = this.beMetadataCache.get(beId);\r\n        return of(be);\r\n      }else{\r\n        return this.metadataService.GetMetadataRT(beId).pipe(map(metadata => {\r\n          const be: GSPBusinessEntity = JSON.parse(metadata.content);\r\n          this.beMetadataCache.set(beId, be);\r\n          return be;\r\n        }));\r\n      }\r\n    }\r\n\r\n  // public getBeMetadataAndUdts(beId: string): Observable<any> {\r\n  //   this.metadataService.GetMetadataRT(beId).subscribe((metadata) => {\r\n  //     const be: GSPBusinessEntity = JSON.parse(metadata.content);\r\n  //     let udtids:string[] = this.getAllUdtIds(be.MainObject);\r\n  //     this.metadataService.\r\n  //   });\r\n  // }\r\n}\r\n","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpHeaders, HttpClient } from '@angular/common/http';\r\nimport { HttpService, SessionService } from '@ecp-caf/caf-common';\r\nimport { Observable, of } from 'rxjs';\r\nimport { tap } from 'rxjs/operators';\r\nimport { ChgLogConfigEntity } from '../model/chgdr-config-entity';\r\nimport { ChgLogConfigField } from '../model/chgdr-config-field';\r\nimport { ChgdrInnerService } from './chgdr-inner.service';\r\n\r\nconst CHGDR_CONFIG_ROUTER = '/api/runtime/bcc/v1.0/chgdr/config';\r\nconst CHGDR_CONFIG_GET_BY_BIZOBJID_AND_MODELID = `${CHGDR_CONFIG_ROUTER}/{bizObjId}/{modelId}`;\r\n\r\nconst ServerIP = '/';\r\nconst chgdrUrl = `${ServerIP}api/runtime/chgdr/v1.0`;\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ChgdrConfigService {\r\n\r\n    constructor(private http: HttpService,\r\n        private sessionService: SessionService,\r\n        private injector: Injector) {\r\n    }\r\n\r\n    /**\r\n     * æ ¹æ®ä¸å¡å®ä½IDè·åææçéç½®ä¿¡æ¯\r\n     */\r\n    getBeChgdrConfig(beId: string): Observable<ChgLogConfigEntity[]> {\r\n        let queryUrl = `${chgdrUrl}/config?beId=${beId}`;\r\n        return (<Observable<ChgLogConfigEntity[]>><unknown>this.http.get(queryUrl)).pipe(tap(data => {\r\n            let configEntities: ChgLogConfigEntity[] = data || [];\r\n            configEntities.forEach(entity => {\r\n                //å¤çå­æ®µé¡ºåºå·\r\n                let fields: Array<ChgLogConfigField> = entity.fields || [];\r\n                //èµäºèæ°æ®é»è®¤é¡ºåºå·\r\n                fields.forEach((field, index) => {\r\n                    if (field.showIndex === undefined || field.showIndex === null) {\r\n                        field.showIndex = index;\r\n                    }\r\n                });\r\n                //æç§é¡ºåºå·æåº\r\n                entity.fields = fields.sort((a, b) => a.showIndex - b.showIndex);\r\n                //æ ¹æ®æåºç»æéç½®é¡ºåºå·\r\n                fields.forEach((field, index) => {\r\n                    field.showIndex = index;\r\n                })\r\n            })\r\n        }));\r\n    }\r\n}","import { isToday, format } from 'date-fns';\r\nimport { GSPBusinessEntity } from '@gsp-bef/gsp-be-metadata';\r\nimport { IGSPCommonObject, IGSPCommonElement, GSPAssociation, GSPCommonElement, GSPElementDataType, GSPElementObjectType, GSPEnumValue } from '@gsp-bef/gsp-cm-metadata';\r\nimport { ChangeDataHeader } from '../model/change-data-header';\r\nimport { ChangeDataRow } from '../model/change-data-row';\r\nimport { MapUtil } from '../util/map.util';\r\nimport { ChgdrData, ChgdrDataRowNode, ChangeColumnItem, ChgdrDataEntityNode, DataCodeField } from '../chgdr-data-viewer/chgdr-data';\r\nimport { ChgLogConfigEntity } from '../model/chgdr-config-entity';\r\nimport { ChgLogConfigField } from '../model/chgdr-config-field';\r\n\r\nexport class ChgdrConfigHandler {\r\n    private be: GSPBusinessEntity;\r\n    private entityCodeMap: Map<string, IGSPCommonObject> = new Map();\r\n    private entityFieldMap: Map<string, IGSPCommonElement> = new Map();\r\n    private entityFieldShowOrderMap: Map<string, number> = new Map();\r\n    private entityFieldParentMap: Map<string, IGSPCommonElement> = new Map();\r\n\r\n    private entityConfigs: ChgLogConfigEntity[];\r\n    private entityFieldConfigMap: Map<string, ChgLogConfigField> = new Map();\r\n\r\n    public constructor(be: GSPBusinessEntity, entityConfigs: ChgLogConfigEntity[]) {\r\n        //åå§åææBEå¯¹è±¡ä¿¡æ¯\r\n        this.be = be;\r\n        if (!!be) {\r\n            let mainObject = be.MainObject;\r\n            this.updateEntityMap(mainObject, this.entityCodeMap, this.entityFieldMap);\r\n        }\r\n\r\n        //åå§åéç½®ä¿¡æ¯\r\n        this.entityConfigs = entityConfigs || [];\r\n        this.updateEntityConfigs();\r\n\r\n        //æ´æ°æ¾ç¤ºé¡ºåº\r\n        this.updateShowIndex();\r\n    }\r\n\r\n    /** æ´æ°æ¾ç¤ºé¡ºåºå· */\r\n    private updateShowIndex() {\r\n        let entityFieldShowOrderMap: Map<string, number> = new Map();\r\n        //é¦åç¨BEå­æ®µé¡ºåºèµäºåå§é¡ºåºï¼é¿åéç½®ä¸­æ é¡ºåºå·é ææ¾ç¤ºéä¹±\r\n        this.entityFieldMap.forEach((value, key) => {\r\n            entityFieldShowOrderMap.set(key, entityFieldShowOrderMap.size);\r\n        });\r\n        //ç¶åç¨éç½®é¡ºåºæ¿ä»£åå§é¡ºåº\r\n        this.entityFieldConfigMap.forEach((value, key) => {\r\n            if (value.showIndex !== undefined && value.showIndex !== null) {\r\n                entityFieldShowOrderMap.set(key, value.showIndex);\r\n            }\r\n        })\r\n\r\n        this.entityFieldShowOrderMap = entityFieldShowOrderMap;\r\n    }\r\n\r\n    /** æ´æ°éç½®ä¿¡æ¯çç¸å³æ°æ® */\r\n    private updateEntityConfigs() {\r\n        let fieldConfigMap: Map<string, ChgLogConfigField> = new Map();\r\n        this.entityConfigs.forEach(entityConfig => {\r\n            let tabCode = entityConfig.tabCode;\r\n            (entityConfig.fields || []).forEach(field => {\r\n                let fieldLabel = field.fieldLabelId;\r\n                let key = tabCode + \"#\" + fieldLabel;\r\n                fieldConfigMap.set(key, field);\r\n            })\r\n        });\r\n        this.entityFieldConfigMap = fieldConfigMap;\r\n    }\r\n\r\n    private updateEntityMap(entity: IGSPCommonObject, entityCodeMap: Map<string, IGSPCommonObject>, entityFieldMap: Map<string, IGSPCommonElement>) {\r\n        if (!entity) {\r\n            return;\r\n        }\r\n        entityCodeMap.set(entity.Code, entity);\r\n\r\n        //å®ä½å¯¹è±¡çå­æ®µä¿¡æ¯\r\n        entity.ContainElements.forEach(ele => {\r\n            this.updateEntityFieldMap(entity, ele, null, entityFieldMap);\r\n        })\r\n\r\n        //å¤çå­èç¹ä¿¡æ¯\r\n        let children: IGSPCommonObject[] = entity.ContainChildObjects;\r\n        if (!children || !children.length) {\r\n            return;\r\n        }\r\n\r\n        children.forEach(childEntity => {\r\n            this.updateEntityMap(childEntity, entityCodeMap, entityFieldMap);\r\n        })\r\n    }\r\n\r\n    /** æ´æ°BEèç¹çæå®å­æ®µä¿¡æ¯ï¼å¦æè¯¥å­æ®µæ¯å³èå­æ®µï¼åæ¶æ´æ°å¶å¸¦åºå­æ®µ */\r\n    private updateEntityFieldMap(entity: IGSPCommonObject, element: IGSPCommonElement, parentElement: IGSPCommonElement, entityFieldMap: Map<string, IGSPCommonElement>): void {\r\n        let key = entity.Code + \"#\" + element.LabelID;\r\n        entityFieldMap.set(key, element);\r\n        if (parentElement) {\r\n            this.entityFieldParentMap.set(key, parentElement);\r\n        }\r\n\r\n        const childAssociations: GSPAssociation[] = element.ChildAssociations;\r\n        if (!!childAssociations && childAssociations.length > 0) {\r\n            childAssociations.forEach(childAssociation => {\r\n                const refElementCollection: GSPCommonElement[] = childAssociation.RefElementCollection;\r\n                if (!!refElementCollection && refElementCollection.length > 0) {\r\n                    refElementCollection.forEach(rele => {\r\n                        this.updateEntityFieldMap(entity, rele, element, entityFieldMap);\r\n                    })\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    public sort(items: any[], entityCode: string, fieldLabelIdFunc: (item: any) => string) {\r\n        items.sort((a, b) => {\r\n            const aKey = entityCode + \"#\" + fieldLabelIdFunc(a);\r\n            const bKey = entityCode + \"#\" + fieldLabelIdFunc(b);\r\n            if (!this.entityFieldShowOrderMap.has(aKey) && !this.entityFieldShowOrderMap.has(bKey)) {\r\n                //å¦æåæ¹åæ é¡ºåºå·ï¼åæç§èªç¶æåº\r\n                return aKey.localeCompare(bKey);\r\n            } else if (!this.entityFieldShowOrderMap.has(aKey)) {\r\n                //å¦ææä¸æ¹æ é¡ºåºå·ï¼åæ é¡ºåºå·çé å\r\n                return -1;\r\n            } else if (!this.entityFieldShowOrderMap.has(bKey)) {\r\n                //å¦ææä¸æ¹æ é¡ºåºå·ï¼åæ é¡ºåºå·çé å\r\n                return 1;\r\n            } else {\r\n                //å¦æä¸¤æ¹é½æé¡ºåºå·ï¼åæç§é¡ºåºå·æåº\r\n                const aOrder = this.entityFieldShowOrderMap.get(aKey);\r\n                const bOrder = this.entityFieldShowOrderMap.get(bKey);\r\n                return aOrder - bOrder;\r\n            }\r\n        });\r\n    }\r\n\r\n    /** æ ¼å¼åä¸»å¯¹è±¡èç¹ä¸­å­æ®µçå¼ */\r\n    public formatMainObjectFieldValue(originalValue: string, fieldLabelId: string) {\r\n        let entityCode = this.getMainObjectCode();\r\n        return this.formatFieldValue(originalValue, entityCode, fieldLabelId);\r\n    }\r\n\r\n    /** æ ¼å¼åå­æ®µå¼ */\r\n    public formatFieldValue(originalValue: string, entityCode: string, fieldLabelId: string): string {\r\n        let element: IGSPCommonElement = this.getElement(entityCode, fieldLabelId);\r\n        if (!element) {\r\n            console.error(\"æªæ¾å°ä¸å¡å®ä½ã\" + this.be.ID + \"-\" + this.be.Name + \"ãèç¹ã\" + entityCode + \"ãçå­æ®µã\" + fieldLabelId + \"ã\");\r\n            return originalValue;\r\n        }\r\n        if (!element) {\r\n            return originalValue;\r\n        }\r\n\r\n        try {\r\n            //å¤çåå²éççæ°å­æ ¼å¼\r\n            if ((element.MDataType == GSPElementDataType.Decimal || element.MDataType == GSPElementDataType.Integer)\r\n                && originalValue && originalValue.toLowerCase().includes(\"e\")) {\r\n                //å¦æå­æ®µæ¯æ°å­ç±»åï¼ä¸æ¯ç§å­¦è®¡æ°æ³æ ¼å¼\r\n                //è½¬ä¸ºåè¿å¶æ ¼å¼æ¾ç¤º\r\n                let num = Number(originalValue);\r\n                if (isNaN(num)) {\r\n                    console.log(\"ä¸å¡å®ä½ã\" + this.be.ID + \"-\" + this.be.Name + \"ãèç¹ã\" + entityCode + \"ãçå­æ®µã\" + fieldLabelId + \"ãçå¼ä¸æ¯ææçæ°å­æ ¼å¼ï¼\" + originalValue);\r\n                    return originalValue;\r\n                } else {\r\n                    let result = this.toNonExponential(num);\r\n                    return result;\r\n                }\r\n            }\r\n\r\n            //å¤çå¸å°å¼ç±»å\r\n            if (element.MDataType == GSPElementDataType.Boolean) {\r\n                //æ³¨æï¼new Boolean(\"false\") == true\r\n                if (originalValue === null || originalValue === undefined || originalValue.length == 0) {\r\n                    return originalValue;\r\n                } else if (originalValue.toLowerCase() == \"false\") {\r\n                    return \"å¦\";\r\n                } else if (originalValue.toLowerCase() == \"true\") {\r\n                    return \"æ¯\";\r\n                } else {\r\n                    return originalValue;\r\n                }\r\n            }\r\n\r\n            //å¤çæ¥ææ ¼å¼\r\n            if (element.MDataType == GSPElementDataType.Date) {\r\n                if (originalValue === null || originalValue === undefined || originalValue.length == 0) {\r\n                    //ä¸åå«å¼ï¼ç´æ¥è¿ååå§å¼\r\n                    return originalValue;\r\n                } else {\r\n                    let date = new Date(originalValue);\r\n                    let str = format(date, \"yyyy-MM-dd\");\r\n                    return str;\r\n                }\r\n            }\r\n\r\n            //å¤çæ¥ææ¶é´æ ¼å¼\r\n            if (element.MDataType == GSPElementDataType.DateTime) {\r\n                if (originalValue === null || originalValue === undefined || originalValue.length == 0) {\r\n                    //ä¸åå«å¼ï¼ç´æ¥è¿ååå§å¼\r\n                    return originalValue;\r\n                } else {\r\n                    let date = new Date(originalValue);\r\n                    let str = format(date, \"yyyy-MM-dd HH:mm:ss\");\r\n                    return str;\r\n                }\r\n            }\r\n\r\n            //å¤çæä¸¾æ ¼å¼\r\n            if (element.ObjectType == GSPElementObjectType.Enum) {\r\n                let enumValues: GSPEnumValue[] = element.ContainEnumValues || [];\r\n                let enumValue = enumValues.find(item => item.Value == originalValue);\r\n                if (enumValue) {\r\n                    return enumValue.Name;\r\n                } else if (originalValue === null || originalValue === undefined || originalValue.length == 0) {\r\n                    //å¦ææ¾ä¸å°å¯¹åºçæä¸¾é¡¹ï¼å¹¶ä¸åå§å¼ä¸ºç©ºï¼è¯´ææªèµå¼ï¼ä¸æ¥é\r\n                    return originalValue;\r\n                } else {\r\n                    //æå°å¼å¸¸\r\n                    console.log(\"ä¸å¡å®ä½ã\" + this.be.ID + \"-\" + this.be.Name + \"ãèç¹ã\" + entityCode + \"ãçå­æ®µã\" + fieldLabelId + \"ãçå¼æªæ¾å°å¹éçæä¸¾é¡¹ï¼\" + originalValue);\r\n                    return originalValue;\r\n                }\r\n            }\r\n\r\n            return originalValue;\r\n        } catch (error) {\r\n            console.error(\"ä¸å¡å®ä½ã\" + this.be.ID + \"-\" + this.be.Name + \"ãèç¹ã\" + entityCode + \"ãçå­æ®µã\" + fieldLabelId + \"ãçå¼ã\" + originalValue + \"ãæ ¼å¼ååºéï¼\", error);\r\n            return originalValue;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /** JavaScriptä¸­ç§å­¦è®¡æ°æ³è½¬åä¸ºæ°å¼å­ç¬¦ä¸²å½¢å¼ã\r\n     * ä»¥ä¸ä¸¤ç§æåµï¼JavaScript ä¼èªå¨å°æ°å¼è½¬ä¸ºç§å­¦è®¡æ°æ³è¡¨ç¤º\r\n     * (1) å°äº1ä¸å°æ°ç¹åé¢å¸¦æ6ä¸ª0ä»¥ä¸çæµ®ç¹æ°å¼ï¼\r\n     * (2) æ´æ°ä½æ°å­å¤äº21ä½ï¼\r\n     * é¦åççæ´æ°ä½æ°å­å¤äº21ä½çæåµï¼å¶å®è¿ä¸ªä¸è¬ä¸ä¼ç¢°å°ï¼æ´æ°ä½æ°å­å¤äº21ä½å·²ç»è¶åºäº JavaScript ç²¾ç¡®æ´æ°èå´ã\r\n     * è¿ä¸ªæ¹æ³ç¨äºå¤çå°æ°é®é¢\r\n     * fromï¼https://www.cnblogs.com/xianfengzhike/p/9939029.html */\r\n    private toNonExponential(num) {\r\n        var m = num.toExponential().match(/\\d(?:\\.(\\d*))?e([+-]\\d+)/);\r\n        return num.toFixed(Math.max(0, (m[1] || '').length - m[2]));\r\n    }\r\n\r\n    public getBeName(): string {\r\n        return this.be ? this.be.Name : null;\r\n    }\r\n\r\n    public getMainObjectCode(): string {\r\n        return this.be && this.be.MainObject ? this.be.MainObject.Code : null;\r\n    }\r\n\r\n    public getElement(entityCode: string, fieldLabelId: string): IGSPCommonElement {\r\n        let key = entityCode + \"#\" + fieldLabelId;\r\n        return this.entityFieldMap.get(key);\r\n    }\r\n\r\n    public getParentElement(entityCode: string, fieldLabelId: string): IGSPCommonElement {\r\n        let key = entityCode + \"#\" + fieldLabelId;\r\n        return this.entityFieldParentMap.get(key);\r\n    }\r\n\r\n    public getEntityNameOrDefault(entityCode: string) {\r\n        let entity = this.entityCodeMap.get(entityCode);\r\n        return !!entity ? entity.Name : entityCode;\r\n    }\r\n\r\n    public getEntityFieldNameOrDefault(entityCode: string, fieldLabelId: string) {\r\n        let key = entityCode + \"#\" + fieldLabelId;\r\n        let fieldConfig = this.entityFieldConfigMap.get(key);\r\n        if (fieldConfig && fieldConfig.fieldName && fieldConfig.fieldName != \"\") {\r\n            //ä¼åè¿åéç½®çåç§°\r\n            return fieldConfig.fieldName;\r\n        }\r\n        //å¦æä¸å­å¨éç½®åç§°ï¼åè¿åBEå­æ®µåç§°\r\n        let ele = this.entityFieldMap.get(key);\r\n        return !!ele ? ele.Name : fieldLabelId;\r\n    }\r\n}","import { Injectable, Injector } from '@angular/core';\r\nimport { HttpService, SessionService } from '@ecp-caf/caf-common';\r\nimport { GSPBusinessEntity } from '@gsp-bef/gsp-be-metadata';\r\nimport { GSPMetadataRTService } from '@gsp-lcm/metadatart-selector';\r\nimport { forkJoin, Observable, of } from 'rxjs';\r\nimport { map, tap } from 'rxjs/operators';\r\nimport { ChangeDataHeader } from '../model/change-data-header';\r\nimport { ChangeDataQueryParam } from '../model/change-data-query-param';\r\nimport { ChgLogConfigEntity } from '../model/chgdr-config-entity';\r\nimport { ChgLogConfigField } from '../model/chgdr-config-field';\r\nimport { OperateType } from '../model/operate-type';\r\nimport { MapUtil } from '../util/map.util';\r\nimport { ChgdrConfigHandler } from './chgdr-config-handler';\r\nimport { ChgdrConfigService } from './chgdr-config.service';\r\nimport { ChgdrMetadataService } from './chgdr-metadata.service';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ChgdrInnerService {\r\n    private beMetadataCache: Map<string, ChgdrConfigHandler> = new Map();\r\n\r\n    constructor(private http: HttpService,\r\n        private sessionService: SessionService,\r\n        private metadataService: GSPMetadataRTService,\r\n        private chgdrMetadataService: ChgdrMetadataService,\r\n        private chgdrConfigService: ChgdrConfigService,\r\n        private injector: Injector\r\n    ) { }\r\n\r\n    /** è·åBEåæ°æ® */\r\n    public getChgdrConfigHandler(beId: string): Observable<ChgdrConfigHandler> {\r\n        if (this.beMetadataCache.has(beId)) {\r\n            let be = this.beMetadataCache.get(beId);\r\n            return of(be);\r\n        } else {\r\n            let requests = [];\r\n            requests.push(this.chgdrMetadataService.getGSPBusinessEntity(beId));\r\n            requests.push(this.chgdrConfigService.getBeChgdrConfig(beId));\r\n\r\n            return forkJoin(requests).pipe(map(data => {\r\n                const be = data[0];\r\n                const entityConfigs: ChgLogConfigEntity[] = data[1] || [];\r\n                const handler = new ChgdrConfigHandler(be, entityConfigs);\r\n                this.beMetadataCache.set(beId, handler);\r\n                return handler;\r\n            }));\r\n        }\r\n    }\r\n}\r\n","import { Component, Injector, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { GSPMetadataRTService } from '@gsp-lcm/metadatart-selector';\r\nimport { GSPBusinessEntity } from '@gsp-bef/gsp-be-metadata';\r\nimport { ChangeDataHeader } from '../model/change-data-header';\r\nimport { ChangeColumnItem, ChgdrData, ChgdrDataEntityNode, ChgdrDataRowNode } from './chgdr-data';\r\nimport { GSPAssociation, GSPCommonElement, GSPCommonObject, IGSPCommonElement, IGSPCommonObject } from '@gsp-bef/gsp-cm-metadata';\r\nimport { ChangeDataRow } from '../model/change-data-row';\r\nimport { ChgdrDataBuilder } from './chgdr-data-builder';\r\nimport { ChgdrTreeBuilder, ChgdrTreeNode } from './chgdr-tree-builder';\r\nimport { TreeTableComponent } from '@farris/ui-treetable';\r\nimport { ChgdrMetadataService } from '../service/chgdr-metadata.service';\r\nimport { ChgdrConfigService } from '../service/chgdr-config.service';\r\nimport { forkJoin } from 'rxjs';\r\nimport { ChgLogConfigEntity } from '../model/chgdr-config-entity';\r\nimport { ChgdrInnerService } from '../service/chgdr-inner.service';\r\n\r\n@Component({\r\n  selector: 'chgdr-data-viewer',\r\n  templateUrl: './chgdr-data-viewer.component.html',\r\n  styleUrls: ['./chgdr-data-viewer.component.css']\r\n})\r\nexport class ChgdrDataViewerComponent implements OnInit, OnChanges {\r\n  @Input()\r\n  data: ChangeDataHeader;\r\n  @Input() showDataId: boolean = false;\r\n  @ViewChild(\"treeTable\")\r\n  private treeTableComponent: TreeTableComponent\r\n\r\n  treeConfig: any = {\r\n    idField: 'id',\r\n    columns: [\r\n      { field: 'name', title: 'Name', width: 200 }\r\n    ],\r\n    /** å¶å­èç¹å¾æ  */\r\n    leafIcon: 'f-icon f-icon-page-title-type text-info mr-2',\r\n    /** èç¹å±å¼å¾æ  */\r\n    expandIcon: 'f-iconÂ f-icon-file-folder-open text-info mr-2',\r\n    /** èç¹æå å¾æ  */\r\n    collapseIcon: 'f-iconÂ f-icon-file-folder-close text-info mr-2',\r\n    showLevel: -1,\r\n    disabled: false,\r\n    init: false,\r\n    selectValues: []\r\n  };\r\n\r\n  chgdrData: ChgdrData;\r\n  treeData: ChgdrTreeNode[];\r\n  currentNode: ChgdrTreeNode;\r\n\r\n  constructor(private metadataService: GSPMetadataRTService,\r\n    private injector: Injector,\r\n    private chgdrMetadataService: ChgdrMetadataService,\r\n    private chgdrConfigService: ChgdrConfigService,\r\n    private chgdrInnerService: ChgdrInnerService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (!!this.data) {\r\n      let beId = this.data.entityId;\r\n      this.chgdrInnerService.getChgdrConfigHandler(beId).subscribe(handler=>{\r\n        this.chgdrData = new ChgdrDataBuilder().buildChgdrData(this.data, handler);\r\n        this.treeData = new ChgdrTreeBuilder().build(this.chgdrData);\r\n        if (this.treeTableComponent) {\r\n          //ç§»é¤å·²éä¸­é¡¹ã\r\n          //é¿åæ´æ¢æ°æ®æºåï¼treeGridæ¾ä¸å°ä¹åçéä¸­æ°æ®ï¼å¯¼è´æ§å¶å°åè­¦\r\n          this.treeTableComponent.clearSelections();\r\n        }\r\n        setTimeout(() => {\r\n          this.treeTableComponent.selectNode(this.treeData[0].id);\r\n        }, 0);\r\n      })\r\n    }\r\n  }\r\n\r\n  public handleTreeSelection($event): void {\r\n    const node: ChgdrTreeNode = $event.node;\r\n    if (this.currentNode != null && this.currentNode.id == node.id) {\r\n      //å¦æéä¸­ç¸åèç¹ï¼ç´æ¥è¿å\r\n      return;\r\n    }\r\n    this.currentNode = node;\r\n  }\r\n}\r\n","export class OperateType {\r\n    /** æ°å¢ */\r\n    static ADD: OperateType = new OperateType(0, \"ADD\", \"æ°å¢\");\r\n    /** ä¿®æ¹ */\r\n    static MODIFY: OperateType = new OperateType(1, \"MODIFY\", \"ä¿®æ¹\");\r\n    /** å é¤ */\r\n    static DELETE: OperateType = new OperateType(2, \"DELETE\", \"å é¤\");\r\n\r\n    private constructor(public ordinal: number, public code: string, public name: string) {\r\n    }\r\n\r\n    public getOrdinal() {\r\n        return this.ordinal;\r\n    }\r\n\r\n    public getCode() {\r\n        return this.code;\r\n    }\r\n\r\n    public getName() {\r\n        return this.name;\r\n    }\r\n\r\n    public static values(): OperateType[] {\r\n        return [OperateType.ADD, OperateType.MODIFY, OperateType.DELETE];\r\n    }\r\n\r\n    public toJson() {\r\n        return this.code;\r\n    }\r\n\r\n    public static parse(obj: any): OperateType {\r\n        if (obj === undefined || obj === null) {\r\n            return null;\r\n        }\r\n        if (obj instanceof OperateType) {\r\n            return obj;\r\n        }\r\n        if (typeof obj === \"string\") {\r\n            return OperateType.values().find(ot => ot.code == obj);\r\n        }\r\n        if (typeof obj === \"number\") {\r\n            return OperateType.values().find(ot => ot.ordinal == obj);\r\n        }\r\n        if (!!obj.code) {\r\n            return OperateType.values().find(ot => ot.code == obj.code);\r\n        }\r\n        return null;\r\n    }\r\n}","export class MapUtil {\r\n    /** å°Mapè½¬ä¸ºObjectï¼ä¾¿äºåºååãï¼å ä¸ºJSON.stringfy(Map)è¿åçå¼æ»ä¸º{}ï¼ */\r\n    static convertMapToObject(map: Map<String, any>) {\r\n        if (!map) {\r\n            return null;\r\n        }\r\n        let obj = Object.create(null);\r\n        map.forEach((value, key: any) => {\r\n            obj[key] = value;\r\n        })\r\n        return obj;\r\n    }\r\n\r\n    /** å°Objectè½¬ä¸ºMapï¼å ä¸ºJSON.parseæ æ³è¯å«ç±»åï¼ååºååååªè½æ¯Objectç±»å */\r\n    static convertObjectToMap(obj: any): Map<string, any> {\r\n        if (obj === undefined || obj === null) {\r\n            return null;\r\n        }\r\n\r\n        let strMap = new Map();\r\n        for (let k of Object.keys(obj)) {\r\n            strMap.set(k, obj[k]);\r\n        }\r\n        return strMap;\r\n    }\r\n}","import { Injectable, Injector } from '@angular/core';\nimport { HttpService, SessionService } from '@ecp-caf/caf-common';\nimport { Observable, of } from 'rxjs';\nimport { map, tap } from 'rxjs/operators';\nimport { ChangeDataHeader } from '../model/change-data-header';\nimport { ChangeDataQueryParam } from '../model/change-data-query-param';\nimport { ChangeDataQueryResult } from '../model/change-data-query-result';\nimport { ChgLogConfigField } from '../model/chgdr-config-field';\nimport { OperateType } from '../model/operate-type';\nimport { MapUtil } from '../util/map.util';\n\nconst ServerIP = '/';\nconst chgdrUrl = `${ServerIP}api/runtime/chgdr/v1.0`;\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChgdrService {\n  private rootDataCodeFieldsMap: Map<string, ChgLogConfigField[]> = new Map();\n\n  constructor(private http: HttpService,\n    private sessionService: SessionService,\n    private injector: Injector) { }\n\n  public queryChangeDataHeader(currentQueryParam: ChangeDataQueryParam): Observable<any> {\n    let obj: any = Object.assign({}, currentQueryParam);\n    if (currentQueryParam.dataCode) {\n      obj.dataCode = MapUtil.convertMapToObject(currentQueryParam.dataCode);\n    }\n\n    let json = JSON.stringify(obj);\n    let queryParam = encodeURIComponent(json);\n    let url = `${chgdrUrl}?queryParam=${queryParam}`;\n    return this.http.get(url).pipe(map(data => {\n      if (!data) {\n        return data;\n      }\n      let queryResult: ChangeDataQueryResult = <ChangeDataQueryResult><unknown>data;\n      queryResult && queryResult.headers && queryResult.headers.forEach(header => {\n        //TODO å¾å ï¼å¼å®¹èæ°æ®æ ¼å¼\n        if (typeof header.dataCode == \"string\") {\n          header.dataCode = JSON.parse(header.dataCode);\n        }\n\n        header.dataCode = MapUtil.convertObjectToMap(header.dataCode);\n        header.changeTime = this.toDate(header.changeTime);\n        header.operateType = OperateType.parse(header.operateType);\n      })\n      return queryResult;\n    }));\n  }\n\n  public getRootEntityDataCodeFields(beId: string): Observable<ChgLogConfigField[]> {\n    if (!beId) {\n      return of([]);\n    }\n    if (this.rootDataCodeFieldsMap.has(beId)) {\n      //ç´æ¥ä»ç¼å­ä¸­è·å\n      return of(this.rootDataCodeFieldsMap.get(beId));\n    } else {\n      //è·åç»æå¹¶å­å¥ç¼å­\n      let url = `${chgdrUrl}/rootDataCodeFields?beId=${beId}`;\n      return (<Observable<ChgLogConfigField[]>><unknown>(this.http.get(url)))\n        .pipe(tap(data => this.rootDataCodeFieldsMap.set(beId, data)));\n    }\n  }\n\n  /** å°å­ç¬¦ä¸²ææ°å­è½¬ä¸ºDate */\n  private toDate(date: any): Date {\n    if (typeof date == \"string\") {\n      return new Date(date);\n    } else if (typeof date == \"number\") {\n      return new Date(date);\n    } else {\n      return date;\n    }\n  }\n\n  public getChangeData(id: string, changeTime: Date): Observable<any> {\n    let json = JSON.stringify(changeTime);\n    let queryParam = encodeURIComponent(json);\n    let url = `${chgdrUrl}/${id}?changeTime=${queryParam}`;\n    return this.http.get(url).pipe(map(data => {\n      if (!data) {\n        return data;\n      }\n      let sh: ChangeDataHeader = <ChangeDataHeader><unknown>data;\n      //TODO å¾å ï¼å¼å®¹èæ°æ®æ ¼å¼\n      if (typeof sh.dataCode == \"string\") {\n        sh.dataCode = JSON.parse(sh.dataCode);\n      }\n      sh.dataCode = MapUtil.convertObjectToMap(sh.dataCode);\n      sh.changeTime = this.toDate(sh.changeTime);\n      sh.operateType = OperateType.parse(sh.operateType);\n\n      sh.rows = sh.rows || [];\n\n      sh.rows.forEach(row => {\n        if (!row) {\n          return;\n        }\n        row.operateType = OperateType.parse(row.operateType);\n        //TODO å¾å ï¼å¼å®¹èæ°æ®æ ¼å¼\n        if (typeof row.dataCode == \"string\") {\n          row.dataCode = JSON.parse(row.dataCode);\n        }\n        row.dataCode = MapUtil.convertObjectToMap(row.dataCode);\n        row.oldContent = <Map<string, string>>MapUtil.convertObjectToMap(row.oldContent) || new Map();\n        row.newContent = <Map<string, string>>MapUtil.convertObjectToMap(row.newContent) || new Map();\n      });\n      return sh;\n    }));\n  }\n}\n","export class ChangeDataQueryParam {\r\n    /** ç¨æ·ID */\r\n    userId: string;\r\n    /** å®ä½ID */\r\n    entityId: string;\r\n    /** æ°æ®ä¸»é® */\r\n    dataId: string;\r\n    /** æ°æ®ç¼å· */\r\n    dataCode: Map<string, string>;\r\n    /** åæ´æ¶é´-èµ·å§ */\r\n    changeTimeStart: Date;\r\n    /** åæ´æ¶é´-ç»æ */\r\n    changeTimeEnd: Date;\r\n    /** æ¯é¡µæ°é */\r\n    pageSize: number;\r\n    /** é¡µç ï¼ä»1å¼å§ */\r\n    pageIndex: number;\r\n}","import { ChangeDataHeader } from './change-data-header';\r\n\r\nexport class ChangeDataQueryResult {\r\n    /** å½åé¡µé¢ï¼ä»1å¼å§ */\r\n    pageIndex: number;\r\n    /** æ¯é¡µæ°é */\r\n    pageSize: number;\r\n    /** æ»æ¡æ° */\r\n    total: number;\r\n    /** å½åé¡µæ°æ® */\r\n    headers: ChangeDataHeader[];\r\n}","export class ErrorUtil {\r\n    static getErrorMessage(e: any) {\r\n        if (!e) {\r\n            return \"\";\r\n        } else if (!e.error) {\r\n            return \"\";\r\n        } else if (!e.error.Message) {\r\n            return \"\";\r\n        } else {\r\n            return e.error.Message;\r\n        }\r\n    }\r\n}","export class TimeUtil{\r\n    public static getStartTimeInDay(date:Date){\r\n        let d:Date = new Date(date);\r\n        d.setHours(0);\r\n        d.setMinutes(0);\r\n        d.setSeconds(0);\r\n        d.setMilliseconds(0);\r\n        return d;\r\n    }\r\n\r\n    public static getEndTimeInDay(date:Date){\r\n        let d:Date = new Date(date);\r\n        d.setHours(23);\r\n        d.setMinutes(59);\r\n        d.setSeconds(59);\r\n        d.setMilliseconds(999);\r\n        return d;\r\n    }\r\n}","import { Component, HostBinding, Injector, Input, OnChanges, OnInit, SimpleChanges, TemplateRef, ViewChild } from '@angular/core';\nimport { DialogComponent } from '@farris/ui-dialog';\nimport { MessagerService } from '@farris/ui-messager';\nimport { NotifyService } from '@farris/ui-notify';\nimport { ChgdrService } from '../service/chgdr.service';\nimport { ChangeDataHeader } from '../model/change-data-header';\nimport { ChangeDataQueryParam } from '../model/change-data-query-param';\nimport { ChangeDataQueryResult } from '../model/change-data-query-result';\nimport { OperateType } from '../model/operate-type';\nimport { ErrorUtil } from '../util/error.util';\nimport { TimeUtil } from '../util/time.util';\n\n@Component({\n  selector: 'chgdr-list',\n  templateUrl: './chgdr-list.component.html',\n  styleUrls: ['./chgdr-list.component.css']\n})\nexport class ChgdrListComponent implements OnInit, OnChanges {\n  @HostBinding('class.f-utils-fill-flex-column') baseCls = true;\n\n  @Input()\n  /** ä¸å¡å®ä½ID */\n  entityId: string;\n  @Input()\n  /** æ°æ®ID */\n  dataId: string;\n  @Input()\n  /** åæ´æ¶é´-èµ·å§ */\n  changeTimeStart: Date;\n  @Input()\n  /** åæ´æ¶é´-ç»æ */\n  changeTimeEnd: Date;\n\n  private currentQueryParam: ChangeDataQueryParam;\n  chgdrs: ChangeDataQueryResult;\n\n  constructor(private chgdrService: ChgdrService,\n    private messageService: MessagerService,\n    private notifyService: NotifyService,\n    private injector: Injector) { }\n\n  ngOnInit() {\n    let chgdrs = new ChangeDataQueryResult();\n    chgdrs.total = 0;\n    chgdrs.pageSize = 20;\n    chgdrs.pageIndex = 1;\n    chgdrs.headers = [];\n    this.chgdrs = chgdrs;\n  }\n\n  ngOnChanges(changes: SimpleChanges): void {\n    if (!this.changeTimeStart && !this.changeTimeEnd) {\n      //æªå½å¥åæ´æ¶é´èå´ï¼åæ¥è¯¢æè¿ä¸å¨ç\n      this.changeTimeEnd = TimeUtil.getEndTimeInDay(new Date());\n      this.changeTimeStart = TimeUtil.getStartTimeInDay(new Date(new Date().getTime() - 7 * 24 * 60 * 60 * 1000));\n    } else if (!this.changeTimeEnd) {\n      //å¦ææªè®¾ç½®æªè³æ¶é´ï¼åä¸å¼å§æ¶é´ç¸å\n      this.changeTimeEnd = TimeUtil.getEndTimeInDay(this.changeTimeStart);\n    } else if (!this.changeTimeStart) {\n      //å¦ææªè®¾ç½®å¼å§æ¶é´ï¼åä¸æªè³æ¶é´ç¸å\n      this.changeTimeStart = TimeUtil.getEndTimeInDay(this.changeTimeEnd);\n    }\n    if (!!this.entityId) {\n      let param = this.buildQueryParam();\n      this.doQuery(param);\n    }\n  }\n\n  public query(){\n    let param = this.buildQueryParam();\n    this.doQuery(param);\n  }\n\n  private buildQueryParam() {\n    let param = new ChangeDataQueryParam();\n    param.pageIndex = 1;\n    param.pageSize = 20;\n    param.entityId = this.entityId;\n    param.dataId = this.dataId;\n    param.changeTimeStart = this.changeTimeStart;\n    param.changeTimeEnd = this.changeTimeEnd;\n    return param;\n  }\n\n  private doQuery(param) {\n    this.chgdrService.queryChangeDataHeader(param).subscribe(data => {\n      this.currentQueryParam = param;\n      this.chgdrs = data;\n    }, error => {\n      console.error(\"æ¥è¯¢ä¸å¡åæ´æ¥å¿åºé\", error);\n      this.messageService.error(\"æ¥è¯¢ä¸å¡åæ´æ¥å¿åºéï¼\" + ErrorUtil.getErrorMessage(error));\n    });\n  }\n\n  onPageChanged($event) {\n    if (!$event) {\n      return;\n    }\n\n    if ($event.pageIndex) {\n      this.currentQueryParam.pageIndex = $event.pageIndex;\n    }\n    if ($event.pageSize) {\n      this.currentQueryParam.pageSize = $event.pageSize;\n    }\n    this.doQuery(this.currentQueryParam);\n  }\n\n  onPageSizeChanged($event) {\n    this.currentQueryParam.pageSize = $event;\n    this.doQuery(this.currentQueryParam);\n  }\n}\n","import { Component, Injector, Input, OnInit } from '@angular/core';\r\nimport { ChgdrTreeNode } from '../chgdr-data-viewer/chgdr-tree-builder';\r\n\r\n@Component({\r\n  selector: 'lib-chgdr-row-baseinfo-form',\r\n  templateUrl: './chgdr-row-baseinfo-form.component.html',\r\n  styleUrls: ['./chgdr-row-baseinfo-form.component.css']\r\n})\r\nexport class ChgdrRowBaseinfoFormComponent implements OnInit {\r\n  @Input()\r\n  chgdrTreeNode:ChgdrTreeNode;\r\n  @Input() showDataId:boolean = false;\r\n\r\n  constructor(private injector: Injector) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","import { Component, Injector, Input, OnChanges, OnInit, SimpleChanges, ViewChild } from '@angular/core';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\nimport { ChangeColumnItem, ChgdrDataRowNode } from '../chgdr-data-viewer/chgdr-data';\r\nimport { ChgdrTreeNode } from '../chgdr-data-viewer/chgdr-tree-builder';\r\nimport { OperateType } from '../model/operate-type';\r\n\r\n@Component({\r\n  selector: 'lib-chgdr-row-grid',\r\n  templateUrl: './chgdr-row-grid.component.html',\r\n  styleUrls: ['./chgdr-row-grid.component.css']\r\n})\r\nexport class ChgdrRowGridComponent implements OnInit, OnChanges {\r\n  @Input()\r\n  chgdrTreeNode: ChgdrTreeNode;\r\n  @ViewChild(\"chgdrRowGrid\")\r\n  dataGrid: DatagridComponent;\r\n\r\n  columns: any[];\r\n  data: ChangeColumnItem[];\r\n\r\n  constructor(private injector: Injector) { }\r\n\r\n  ngOnInit() {\r\n    this.columns = [\r\n      { field: 'fieldName', width: 130, title: 'å­æ®µå' },\r\n      { field: 'oldValue', width: 130, title: 'åå¼', showTips: true },\r\n      { field: 'newValue', width: 130, title: 'åæ´å¼', showTips: true }\r\n    ];\r\n    let oldValueField = this.columns[1];\r\n    let newValueField = this.columns[2];\r\n\r\n    if (!!this.chgdrTreeNode) {\r\n      //æ ¹æ®åå§çåæ´ç±»åæ´æ¹æ¾ç¤ºåçä¿¡æ¯\r\n      //æ­¤å¤ä¸è½ç´æ¥è°ç¨DataGridç»ä»¶çæ¹æ³æ´æ¹ï¼å ä¸ºæ­¤å¤å°æªåå»ºDataGrid\r\n      let type: OperateType = this.chgdrTreeNode.chgdrRow.operateType;\r\n      if (type == OperateType.ADD) {\r\n        oldValueField.visible = false;\r\n        newValueField.title = \"å¼\";\r\n      } else if (type == OperateType.DELETE) {\r\n        newValueField.visible = false;\r\n        oldValueField.title = \"å¼\";\r\n      }\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    //åæ¥åæ´è¡ç±»å\r\n    let oldType: OperateType;\r\n    if (!changes.chgdrTreeNode) {\r\n      oldType = null;\r\n    } else if (!changes.chgdrTreeNode.previousValue) {\r\n      oldType = null;\r\n    } else {\r\n      oldType = changes.chgdrTreeNode.previousValue.chgdrRow.operateType;\r\n    }\r\n\r\n    //ç°å¨åæ´è¡ç±»å\r\n    let newType: OperateType;\r\n    if (!changes.chgdrTreeNode) {\r\n      newType = null;\r\n    } else if (!changes.chgdrTreeNode.currentValue) {\r\n      newType = null;\r\n    } else {\r\n      newType = changes.chgdrTreeNode.currentValue.chgdrRow.operateType;\r\n    }\r\n\r\n    if (oldType == newType || !this.dataGrid || !this.dataGrid.columns) {\r\n      //å¦ææ°èç±»åä¸è´(æDataGridå°æªåå»º)ï¼åä¸åå¨\r\n      //do nothing\r\n    } else if (newType == OperateType.ADD) {\r\n      this.dataGrid.showColumn(\"newValue\");\r\n      this.dataGrid.hideColumn(\"oldValue\");\r\n      this.dataGrid.setColumnTitle(\"newValue\", \"å¼\");\r\n    } else if (newType == OperateType.DELETE) {\r\n      this.dataGrid.showColumn(\"oldValue\");\r\n      this.dataGrid.hideColumn(\"newValue\");\r\n      this.dataGrid.setColumnTitle(\"oldValue\", \"å¼\");\r\n    } else {\r\n      this.dataGrid.showColumn(\"oldValue\");\r\n      this.dataGrid.showColumn(\"newValue\");\r\n      this.dataGrid.setColumnTitle(\"oldValue\", \"åå¼\");\r\n      this.dataGrid.setColumnTitle(\"newValue\", \"åæ´å¼\");\r\n    }\r\n\r\n    if (changes.chgdrTreeNode && changes.chgdrTreeNode.currentValue) {\r\n      this.data = changes.chgdrTreeNode.currentValue.chgdrRow.changes;\r\n    }\r\n  }\r\n\r\n}\r\n","import { Component, Injector, Input, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-chgdr-list-dialog-content',\n  templateUrl: './chgdr-list-dialog-content.component.html',\n  styleUrls: ['./chgdr-list-dialog-content.component.css']\n})\nexport class ChgdrListDialogContentComponent implements OnInit {\n  @Input()\n  /** ä¸å¡å®ä½ID */\n  entityId: string;\n  @Input()\n  /** æ°æ®ID */\n  dataId: string;\n\n  constructor(private injector: Injector) { }\n\n  ngOnInit() {\n  }\n\n}\n","import { Injectable, ComponentFactoryResolver, Injector } from '@angular/core';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { BsModalService } from '@farris/ui-modal';\r\nimport { ChgdrListDialogContentComponent } from '../chgdr-list-dialog-content/chgdr-list-dialog-content.component';\r\n\r\n@Injectable({ providedIn: 'root' })\r\nexport class ChgdrListUiService {\r\n\r\n    constructor(\r\n        private resolver: ComponentFactoryResolver,\r\n        private injector: Injector,\r\n        private modalService: BsModalService,\r\n        private messagerService: MessagerService\r\n    ) { }\r\n\r\n    showDialog(entityId: string, dataId: string) {\r\n        return this.create(entityId, dataId);\r\n    }\r\n\r\n    private create(entityId: string, dataId: string) {\r\n        if(!entityId){\r\n            console.error(\"åå»ºä¸å¡åæ´æ¥å¿åè¡¨ç»ä»¶å¤±è´¥ï¼ä¸å¡å®ä½ä¸è½ä¸ºç©ºï¼è¯·æ£æ¥\", entityId, dataId);\r\n            return;\r\n        }\r\n\r\n        let fac = this.resolver.resolveComponentFactory(ChgdrListDialogContentComponent);\r\n        let cmpRef = fac.create(this.injector);\r\n        let modalConfig = {\r\n            title: 'åæ´æ¥å¿åè¡¨',\r\n            width: 1000,\r\n            height: 550,\r\n            resizable: true,\r\n            showButtons: false,\r\n            showMaxButton: true\r\n        }\r\n\r\n        cmpRef.instance.entityId = entityId;\r\n        cmpRef.instance.dataId = dataId;\r\n        let dialog = this.modalService.show(cmpRef, modalConfig);\r\n    }\r\n\r\n}\r\n","import { ChangeDetectorRef, Component, EventEmitter, HostBinding, Injector, Input, OnInit, Output, SimpleChanges, TemplateRef, ViewChild } from '@angular/core';\r\nimport { DataColumn } from '@farris/ui-common/column';\r\nimport { DialogComponent } from '@farris/ui-dialog';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { ChgdrService } from '../service/chgdr.service';\r\nimport { ChangeDataHeader } from '../model/change-data-header';\r\nimport { ChangeDataQueryResult } from '../model/change-data-query-result';\r\nimport { OperateType } from '../model/operate-type';\r\nimport { ErrorUtil } from '../util/error.util';\r\nimport { ChgLogConfigField } from '../model/chgdr-config-field';\r\nimport { tap } from 'rxjs/operators';\r\nimport { forkJoin, of } from 'rxjs';\r\nimport { MapUtil } from '../util/map.util';\r\nimport { ChgdrMetadataService } from '../service/chgdr-metadata.service';\r\nimport { GSPBusinessEntity } from '@gsp-bef/gsp-be-metadata';\r\nimport { GSPMetadataRTService } from '@gsp-lcm/metadatart-selector';\r\nimport { GSPCommonElement } from '@gsp-bef/gsp-cm-metadata';\r\nimport { ChgdrInnerService } from '../service/chgdr-inner.service';\r\nimport { ChgdrConfigHandler } from '../service/chgdr-config-handler';\r\n\r\n@Component({\r\n  selector: 'lib-chgdr-header-datagrid',\r\n  templateUrl: './chgdr-header-datagrid.component.html',\r\n  styleUrls: ['./chgdr-header-datagrid.component.css']\r\n})\r\nexport class ChgdrHeaderDatagridComponent implements OnInit {\r\n  @HostBinding('class.f-utils-fill') baseCls = true;\r\n  @Input() chgdrs: ChangeDataQueryResult;\r\n  @Input() showDataId: boolean = true;\r\n  headers: ChangeDataHeader[] = [];\r\n  dataCodeFields: ChgLogConfigField[] = [];\r\n  private chgdrConfigHandler: ChgdrConfigHandler;\r\n  @Output()\r\n  pageChanged: EventEmitter<number> = new EventEmitter();\r\n  @Output()\r\n  pageSizeChanged: EventEmitter<number> = new EventEmitter();\r\n\r\n  // è·åå®ä¹çååæ ¼æ¨¡æ¿\r\n  @ViewChild('opCell') opCell: TemplateRef<any>;\r\n  @ViewChild(\"chgdrInfoDialog\")\r\n  chgdrInfoDialog: DialogComponent;\r\n\r\n  columns: any[];\r\n\r\n  currentChgdrData: ChangeDataHeader;\r\n\r\n  constructor(private chgdrService: ChgdrService,\r\n    private messageService: MessagerService,\r\n    private notifyService: NotifyService,\r\n    private ref: ChangeDetectorRef,\r\n    private chgdrInnerService: ChgdrInnerService,\r\n    private injector: Injector) {\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.resetColumnAndData(null, []);\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges): void {\r\n    if (!changes.chgdrs) {\r\n      //å¦æchgdrsæ²¡ææ´æ°ï¼åç´æ¥è¿å\r\n      return;\r\n    }\r\n\r\n    let prevEntityId = this.getEntityId(changes.chgdrs.previousValue);\r\n    let curEntityId = this.getEntityId(changes.chgdrs.currentValue);\r\n    let requests = [\r\n      this.updateChgdrConfigHandler(curEntityId),\r\n      this.updateDataCodeFields(prevEntityId, curEntityId)\r\n    ]\r\n    forkJoin(requests).subscribe(data => {\r\n      let chgdrDatas: ChangeDataQueryResult = changes.chgdrs.currentValue;\r\n      if (!!chgdrDatas) {\r\n        this.formatHeaders(chgdrDatas.headers);\r\n      }\r\n\r\n      //å¦æä¸å¡å®ä½åæ´ï¼åéç½®åä¿¡æ¯\r\n      if (curEntityId != null && curEntityId != prevEntityId) {\r\n        this.resetColumnAndData(curEntityId, chgdrDatas.headers);\r\n      } else {\r\n        this.headers = chgdrDatas.headers;\r\n      }\r\n    }, err => {\r\n      console.error(\"è·åBEã\" + curEntityId + \"ãçéç½®çä¸å¡åæ´æ¥å¿çä¸å¡ç¼å·å¤±è´¥ï¼\", err);\r\n      this.messageService.error(\"è·åä¸å¡ç¼å·éç½®å¤±è´¥ï¼\" + ErrorUtil.getErrorMessage(err));\r\n    });\r\n  }\r\n\r\n  /** æ´æ°ä¸å¡å®ä½åæ°æ® */\r\n  private updateChgdrConfigHandler(entityId: string) {\r\n    if (entityId) {\r\n      return this.chgdrInnerService.getChgdrConfigHandler(entityId).pipe(tap(data => this.chgdrConfigHandler = data));\r\n    } else {\r\n      return of(this.chgdrConfigHandler);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * æ´æ°dataCodeFieldæ°æ®\r\n   * @param prevEntityId åBeId\r\n   * @param curEntityId å½åBeId\r\n   */\r\n  updateDataCodeFields(prevEntityId: string, curEntityId: string) {\r\n    if (curEntityId != null && curEntityId != prevEntityId) {\r\n      //åªæåçåæ´æ¶ææ´æ°\r\n      return this.chgdrService.getRootEntityDataCodeFields(curEntityId).pipe(tap(data => this.dataCodeFields = data || []));\r\n    } else {\r\n      //å¦åç´æ¥è¿åå½åå¼\r\n      return of(this.dataCodeFields);\r\n    }\r\n  }\r\n\r\n  /**\r\n   * æ ¼å¼åheadersãä¸»è¦æ¯è§£æå¶ä¸­çdataCodeï¼å°å¶è½¬ä¸ºObject\r\n   * ä½¿ç¨dataCodeObjå­æ¾dataCodeè§£æåçç»æ\r\n   * dataCodeObjå±æ§å¨ChangeDataHeaderä¸­ä¸å­å¨ï¼æ­¤å¤éè¿å¼ºå¶èµå¼ä½¿ç¨ï¼å¹¶ä¸åªéäºè¯¥å¤ä½¿ç¨ã\r\n   */\r\n  private formatHeaders(headers: ChangeDataHeader[]) {\r\n    if (!headers) {\r\n      return;\r\n    }\r\n    headers.forEach(header => {\r\n      let dataCodeObj: any;\r\n      this.formatDataCodeMap(header.dataCode);\r\n      if (header.dataCode && header.dataCode.size == 1 && header.dataCode.has(\"_$dataCode\")) {\r\n        //å¼å®¹èæ°æ®\r\n        //èæ°æ®dataCodeä¸ºèªç±ææ¬\r\n        dataCodeObj = {};\r\n        if (this.dataCodeFields && this.dataCodeFields.length > 0) {\r\n          dataCodeObj[this.dataCodeFields[0].fieldLabelId] = header.dataCode.get(\"_$dataCode\");\r\n        }\r\n      } else {\r\n        dataCodeObj = MapUtil.convertMapToObject(header.dataCode);\r\n      }\r\n      (<any>header).dataCodeObj = dataCodeObj;\r\n    })\r\n  }\r\n\r\n  /** æ ¼å¼åä¸å¡ä¸»é®Map */\r\n  private formatDataCodeMap(dataCode: Map<string, string>): void {\r\n    if (!dataCode || !this.chgdrConfigHandler) {\r\n      return;\r\n    }\r\n    Array.from(dataCode.keys()).forEach(fieldLabelId => {\r\n      let value = dataCode.get(fieldLabelId);\r\n      let formatedValue = this.chgdrConfigHandler.formatMainObjectFieldValue(value, fieldLabelId);\r\n      dataCode.set(fieldLabelId, formatedValue);\r\n    })\r\n  }\r\n\r\n  private getEntityId(chgdrs: ChangeDataQueryResult): string {\r\n    if (!chgdrs || !chgdrs.headers || chgdrs.headers.length == 0) {\r\n      return null;\r\n    } else {\r\n      return chgdrs.headers[0].entityId;\r\n    }\r\n  }\r\n\r\n  private resetColumnAndData(entityId: string, headers: ChangeDataHeader[]) {\r\n    let columns: any[] = [\r\n      { field: 'userName', width: 130, title: 'ç¨æ·' },\r\n      { field: 'changeTime', width: 130, title: 'æ¶é´', formatter: { type: 'datetime', options: { format: 'yyyyå¹´MMæddæ¥ HH:mm:ss' } } },\r\n      { field: 'operateType.name', width: 60, title: 'æä½ç±»å' },\r\n      { field: 'dataId', width: 130, title: 'ææ¯ä¸»é®', visible: this.showDataId }];\r\n    //{field: 'dataCode', width: 130, title: 'ä¸å¡ç¼å·'},\r\n    // {field: 'reason', width: 130, title: 'åæ´åå '},\r\n    this.dataCodeFields.forEach((field) => {\r\n      let column: DataColumn = {\r\n        field: \"dataCodeObj.\" + field.fieldLabelId,\r\n        title: field.fieldName,\r\n        width: 130\r\n      };\r\n      columns.push(column);\r\n    })\r\n    let opColumn = { title: 'æä½', width: 130, template: this.opCell, halign: 'center', align: 'center' };\r\n    columns.push(opColumn);\r\n\r\n    //å ä¸ºdatagridä¸åè®¸åæ¶åæ´dataåcolumnï¼å æ­¤æå¨è§¦åèæ£æ¥é¿ååºé\r\n    //åå¨ç©ºæ°æ®çåºç¡ä¸åæ´å\r\n    this.headers = [];\r\n    this.ref.detectChanges();\r\n    this.columns = columns;\r\n    this.ref.detectChanges();\r\n    //å¨éæ°èµå¼æ°æ®\r\n    this.headers = headers;\r\n  }\r\n\r\n  onPageChanged($event) {\r\n    this.pageChanged.emit($event);\r\n  }\r\n\r\n  onPageSizeChanged($event) {\r\n    this.pageSizeChanged.emit($event);\r\n  }\r\n\r\n  showChangeDetail(ctx) {\r\n    let header: ChangeDataHeader = ctx.rowData;\r\n    if (!header) {\r\n      return;\r\n    }\r\n    this.chgdrService.getChangeData(header.id, header.changeTime).subscribe(data => {\r\n      if (!data) {\r\n        this.notifyService.error(\"æªæ¾å°ç¼å·ä¸ºã\" + header.id + \"ãçåæ´æ¥å¿\");\r\n      } else {\r\n        this.currentChgdrData = data;\r\n        this.chgdrInfoDialog.show();\r\n      }\r\n    }, error => {\r\n      console.error(\"æ¥è¯¢ä¸å¡åæ´æ¥å¿åºé\", error);\r\n      this.messageService.error(\"æ¥è¯¢ä¸å¡åæ´æ¥å¿åºéï¼\" + ErrorUtil.getErrorMessage(error));\r\n    })\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule, registerLocaleData } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { FormsModule } from '@angular/forms';\r\n\r\nimport { SplitterModule } from \"@farris/ui-splitter\";\r\nimport { AngularDraggableModule } from '@farris/ui-draggable';\r\nimport { DatagridModule } from \"@farris/ui-datagrid\";\r\nimport { TreeTableModule } from '@farris/ui-treetable';\r\nimport { FarrisSectionModule } from \"@farris/ui-section\";\r\nimport { MessagerModule, MessagerService } from '@farris/ui-messager';\r\nimport { NotifyModule, NotifyService } from '@farris/ui-notify';\r\nimport { FarrisDialogModule } from '@farris/ui-dialog';\r\nimport { FarrisDatePickerModule } from '@farris/ui-datepicker';\r\n\r\nimport { HttpService, SessionService, CacheService } from '@ecp-caf/caf-common';\r\nimport { MetadataRTSelectModule, SelectMetadataRTComponent, GSPMetadataRTServiceModule } from '@gsp-lcm/metadatart-selector';\r\n\r\nimport { ChgdrDataViewerComponent } from './chgdr-data-viewer/chgdr-data-viewer.component';\r\n\r\nimport zh from '@angular/common/locales/zh';\r\nimport { ChgdrListComponent } from './chgdr-list/chgdr-list.component';\r\nimport { ChgdrRowBaseinfoFormComponent } from './chgdr-row-baseinfo-form/chgdr-row-baseinfo-form.component';\r\nimport { ChgdrRowGridComponent } from './chgdr-row-grid/chgdr-row-grid.component';\r\nimport { ChgdrListUiService } from './service/chgdr-list-ui.service';\r\nimport { ChgdrListDialogContentComponent } from './chgdr-list-dialog-content/chgdr-list-dialog-content.component';\r\nimport { ChgdrHeaderDatagridComponent } from './chgdr-header-datagrid/chgdr-header-datagrid.component';\r\nimport { ChgdrMetadataService } from './service/chgdr-metadata.service';\r\nimport { ChgdrConfigService } from './service/chgdr-config.service';\r\nimport { ChgdrInnerService } from './service/chgdr-inner.service';\r\nimport { ChgdrService } from '../public-api';\r\nregisterLocaleData(zh);\r\n\r\n@NgModule({\r\n  declarations: [ChgdrDataViewerComponent, ChgdrListComponent, ChgdrRowBaseinfoFormComponent, ChgdrRowGridComponent, ChgdrListDialogContentComponent, ChgdrHeaderDatagridComponent],\r\n  imports: [\r\n    CommonModule,\r\n    FormsModule,\r\n    SplitterModule,\r\n    AngularDraggableModule,\r\n    DatagridModule,\r\n    TreeTableModule,\r\n    FarrisSectionModule,\r\n    MessagerModule.forRoot(),\r\n    NotifyModule,\r\n    FarrisDialogModule,\r\n    FarrisDatePickerModule,\r\n    MetadataRTSelectModule,\r\n    GSPMetadataRTServiceModule.forRoot('')\r\n  ],\r\n  providers: [\r\n    MessagerService,\r\n    NotifyService,\r\n    HttpService,\r\n    SessionService,\r\n    CacheService,\r\n    ChgdrListUiService,\r\n    ChgdrMetadataService,\r\n    ChgdrConfigService,\r\n    ChgdrInnerService,\r\n    ChgdrService\r\n  ],\r\n  entryComponents: [\r\n    ChgdrDataViewerComponent,\r\n    ChgdrListComponent,\r\n    ChgdrListDialogContentComponent\r\n  ],\r\n  exports: [ChgdrDataViewerComponent, ChgdrListComponent, ChgdrHeaderDatagridComponent]\r\n})\r\nexport class ChgdrModule { }\r\n","import { OperateType } from './operate-type';\r\n\r\nexport class ChangeDataRow {\r\n    id: string;\r\n    /**\r\n     * headeråç \r\n     */\r\n    headerId: string;\r\n    /**\r\n     * å®ä½ç¼å·\r\n     */\r\n    entityCode: string;\r\n    /**\r\n     * æ°æ®ä¸»é®\r\n     */\r\n    dataId: string;\r\n    /**\r\n     * æ°æ®ç¼å·\r\n     */\r\n    dataCode: Map<string, string>;\r\n    /**\r\n     * æä½ç±»å\r\n     */\r\n    operateType: OperateType;\r\n    /**\r\n     * æ§åå®¹\r\n     */\r\n    oldContent: Map<string, string>;\r\n    /**\r\n     * æ°åå®¹\r\n     */\r\n    newContent: Map<string, string>;\r\n    /**\r\n     * ç¶æ°æ®ä¸»é®\r\n     */\r\n    parentDataId: string;\r\n}"],"names":["map","tslib_1.__values","ServerIP","chgdrUrl"],"mappings":"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"}
