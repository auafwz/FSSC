/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { JsonConvertableImpl } from '../../JsonConvertableImpl';
import { BpmnModelJsonHelper } from '../../BpmnModelJsonHelper';
/**
 * 手工生单界面相关配置。
 */
export class FormSettings extends JsonConvertableImpl {
    /**
     * @protected
     * @return {?}
     */
    ResetBeforeLoadFrom() {
        super.ResetBeforeLoadFrom();
        this.sourceDataSelectorModuleUrl = null;
        this.sourceDataSelectorAppId = null;
        this.sourceDataSelectorAppName = null;
        this.sourceDataSelectorAppEntrance = null;
        this.sourceDataSelectorAppEntranceName = null;
        this.targetCardAppId = null;
        this.targetCardAppName = null;
        this.targetCardAppEntrance = null;
        this.targetCardAppEntranceName = null;
        this.targetListAppId = null;
        this.targetListAppName = null;
        this.targetListAppEntrance = null;
        this.targetListAppEntranceName = null;
    }
    /**
     * @return {?}
     */
    ConvertToJsonObject() {
        /** @type {?} */
        let obj = super.ConvertToJsonObject();
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceDataSelectorModuleUrl", this.sourceDataSelectorModuleUrl);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceDataSelectorAppId", this.sourceDataSelectorAppId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceDataSelectorAppName", this.sourceDataSelectorAppName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceDataSelectorAppEntrance", this.sourceDataSelectorAppEntrance);
        BpmnModelJsonHelper.SetAttributeValue(obj, "sourceDataSelectorAppEntranceName", this.sourceDataSelectorAppEntranceName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetCardAppId", this.targetCardAppId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetCardAppName", this.targetCardAppName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetCardAppEntrance", this.targetCardAppEntrance);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetCardAppEntranceName", this.targetCardAppEntranceName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetListAppId", this.targetListAppId);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetListAppName", this.targetListAppName);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetListAppEntrance", this.targetListAppEntrance);
        BpmnModelJsonHelper.SetAttributeValue(obj, "targetListAppEntranceName", this.targetListAppEntranceName);
        return obj;
    }
    /**
     * @param {?} obj
     * @return {?}
     */
    LoadFromJsonObject(obj) {
        super.LoadFromJsonObject(obj);
        this.sourceDataSelectorModuleUrl = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceDataSelectorModuleUrl");
        this.sourceDataSelectorAppId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceDataSelectorAppId");
        this.sourceDataSelectorAppName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceDataSelectorAppName");
        this.sourceDataSelectorAppEntrance = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceDataSelectorAppEntrance");
        this.sourceDataSelectorAppEntranceName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "sourceDataSelectorAppEntranceName");
        this.targetCardAppId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetCardAppId");
        this.targetCardAppName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetCardAppName");
        this.targetCardAppEntrance = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetCardAppEntrance");
        this.targetCardAppEntranceName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetCardAppEntranceName");
        this.targetListAppId = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetListAppId");
        this.targetListAppName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetListAppName");
        this.targetListAppEntrance = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetListAppEntrance");
        this.targetListAppEntranceName = BpmnModelJsonHelper.GetAttributeValueAsString(obj, "targetListAppEntranceName");
    }
}
if (false) {
    /**
     * 自定义来源单据选择器url，格式为“包含angular模块且使用systemjs模块的js文件的绝对路
     * 径（不加.js）#模块类名，此模块需实现IAifSelectorModule接口”。例如/apps/aiftestapp/
     * aiftestsua/web/bo-aiftestboafront/aif-test/aif-test#AifTestModule。
     * @type {?}
     */
    FormSettings.prototype.sourceDataSelectorModuleUrl;
    /**
     * 来源单据选择器appId
     * @type {?}
     */
    FormSettings.prototype.sourceDataSelectorAppId;
    /**
     * 来源单据选择器app名称
     * @type {?}
     */
    FormSettings.prototype.sourceDataSelectorAppName;
    /**
     * 来源单据选择器appEntrance
     * @type {?}
     */
    FormSettings.prototype.sourceDataSelectorAppEntrance;
    /**
     * 来源单据选择器app入口名称
     * @type {?}
     */
    FormSettings.prototype.sourceDataSelectorAppEntranceName;
    /**
     * 单条目标单据制单界面appId。
     * @type {?}
     */
    FormSettings.prototype.targetCardAppId;
    /**
     * 单条目标单据制单界面app名称。
     * @type {?}
     */
    FormSettings.prototype.targetCardAppName;
    /**
     * 单条目标单据制单界面appEntrance。
     * @type {?}
     */
    FormSettings.prototype.targetCardAppEntrance;
    /**
     * 单条目标单据制单界面appEntrance名称。
     * @type {?}
     */
    FormSettings.prototype.targetCardAppEntranceName;
    /**
     * 多条目标单据制单界面appId。该值为空且生成多条单据时打开多个单条单据制单界面。
     * @type {?}
     */
    FormSettings.prototype.targetListAppId;
    /**
     * 多条目标单据制单界面appId。该值为空且生成多条单据时打开多个单条单据制单界面。
     * @type {?}
     */
    FormSettings.prototype.targetListAppName;
    /**
     * 多条目标单据制单界面appEntrance。
     * @type {?}
     */
    FormSettings.prototype.targetListAppEntrance;
    /**
     * 多条目标单据制单界面appEntrance名称。
     * @type {?}
     */
    FormSettings.prototype.targetListAppEntranceName;
}
//# sourceMappingURL=data:application/json;base64,