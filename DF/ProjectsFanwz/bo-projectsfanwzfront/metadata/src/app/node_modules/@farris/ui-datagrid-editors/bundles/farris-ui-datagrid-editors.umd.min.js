!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("@angular/core"),require("@farris/ui-datagrid"),require("@farris/ui-datepicker"),require("@farris/ui-messager"),require("@angular/platform-browser"),require("@farris/ui-modal"),require("@farris/ui-forms"),require("@farris/ui-enum-editor"),require("@farris/ui-filter-editor"),require("@farris/ui-sort-editor"),require("@farris/ui-input-group"),require("@farris/ui-lookup"),require("@farris/ui-common"),require("@farris/ui-number-spinner"),require("@farris/ui-combo-list"),require("@farris/ui-switch"),require("@farris/ui-time-picker"),require("@farris/ui-combo-lookup"),require("@farris/ui-language-textbox"),require("@angular/forms"),require("@angular/common")):"function"==typeof define&&define.amd?define("@farris/ui-datagrid-editors",["exports","@angular/core","@farris/ui-datagrid","@farris/ui-datepicker","@farris/ui-messager","@angular/platform-browser","@farris/ui-modal","@farris/ui-forms","@farris/ui-enum-editor","@farris/ui-filter-editor","@farris/ui-sort-editor","@farris/ui-input-group","@farris/ui-lookup","@farris/ui-common","@farris/ui-number-spinner","@farris/ui-combo-list","@farris/ui-switch","@farris/ui-time-picker","@farris/ui-combo-lookup","@farris/ui-language-textbox","@angular/forms","@angular/common"],t):t(((e=e||self).farris=e.farris||{},e.farris["ui-datagrid-editors"]={}),e.ng.core,e.uiDatagrid,e.uiDatepicker,e.uiMessager,e.ng.platformBrowser,e.uiModal,e.uiForms,e.uiEnumEditor,e.uiFilterEditor,e.uiSortEditor,e.uiInputGroup,e.uiLookup,e.uiCommon,e.uiNumberSpinner,e.uiComboList,e.uiSwitch,e.uiTimePicker,e.uiComboLookup,e.uiLanguageTextbox,e.ng.forms,e.ng.common)}(this,function(e,t,n,o,i,r,s,a,l,p,u,c,d,h,g,m,f,y,v,C,b,E){"use strict";var w=function(e,t){return(w=Object.setPrototypeOf||{__proto__:[]}instanceof Array&&function(e,t){e.__proto__=t}||function(e,t){for(var n in t)t.hasOwnProperty(n)&&(e[n]=t[n])})(e,t)};function I(e,t){function n(){this.constructor=e}w(e,t),e.prototype=null===t?Object.create(t):(n.prototype=t.prototype,new n)}function x(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var o,i,r=n.call(e),s=[];try{for(;(void 0===t||t-- >0)&&!(o=r.next()).done;)s.push(o.value)}catch(a){i={error:a}}finally{try{o&&!o.done&&(n=r["return"])&&n.call(r)}finally{if(i)throw i.error}}return s}function D(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(x(arguments[t]));return e}var O=function(){function e(e,o,i){var r=this;this.render=e,this.el=o,this.injector=i,this.placeholder="",this.height="",this.options={},this.pending=!1,this.stopPropagation=!0,this.focus=!0,this.validators=[],this._editorClickEvent=null,this.cls="datagrid-editor",this.width="100%",this.eventParams=function(e){var t=null,n=null;return r.dr&&(t=r.dr.rowData,n=r.dr.rowId),{rowData:t,rowId:n,value:e,form:r.group,formControl:r.formControl}},this.vms=this.injector.get(n.ValidatorMessagerService),this.dg=this.injector.get(n.DatagridComponent),this.dfs=this.injector.get(n.DatagridFacadeService),this.ngZone=this.injector.get(t.NgZone)}return Object.defineProperty(e.prototype,"dr",{get:function(){return this.dg.selectedRow.dr},enumerable:!0,configurable:!0}),e.prototype.ngOnInit=function(){var e=this;this.column&&this.column.editor&&(this.options=this.column.editor.options,this.validators=this.column.editor.validators||[],this.options&&this.options.nosearch!==undefined&&this.options.nosearch&&this.options.maxLength!==undefined&&this.options.maxLength<=0&&(this.options.maxLength=undefined)),this.clickEvent=this.render.listen(this.el.nativeElement,"click",function(t){t.stopPropagation(),e.dg.focusElement=e.inputElement}),this.mouseDownEvent=this.render.listen(this.el.nativeElement,"mousedown",function(t){e._editorClickEvent=t}),this.mouseUpEvent=this.render.listen(this.el.nativeElement,"mouseup",function(t){e._editorClickEvent=null}),this.group&&(this.formControl=this.group.controls[this.column.field],this.formControl&&this.formControl.valueChanges.subscribe(function(t){var n;if(!e.formControl.pristine){var o=e.dg.selectedRow?e.dg.selectedRow.id:"";if(o){var i=((n={})[e.dg.idField]=o,n[e.column.field]=t,n);e.dfs.appendChanges(i)}}e.setErrorMessage()}))},e.prototype.ngAfterViewInit=function(){this.setFocus(),this.instance&&(this.instance.inDatagrid=!0),this.setErrorMessage(),this.render.listen(this.inputElement,"keydown",function(e){(e.ctrlKey||e.shiftKey)&&e.stopPropagation()})},e.prototype.ngOnDestroy=function(){this.clickEvent&&this.clickEvent(),this.dblClickEvent&&this.dblClickEvent(),this.mouseDownEvent&&this.mouseDownEvent(),this.mouseUpEvent&&this.mouseUpEvent()},e.prototype.setErrorMessage=function(){var e=this;this.formControl&&this.formControl.invalid&&Object.keys(this.formControl.errors).forEach(function(t){e.errorMessage=e.vms.getValidatorErrorMessage(t,e.validators)})},e.prototype.setFocus=function(){var e=this;this.focus&&this.inputElement&&"cell"===this.dg.editMode&&this.ngZone&&this.ngZone.runOutsideAngular(function(){setTimeout(function(){e.dg.selectOnEditing?e.inputElement.select&&e.inputElement.select():e.inputElement.focus(),e.dg.focusElement=e.inputElement})})},e.prototype.onValueChange=function(e){this.options.valueChange&&this.options.valueChange(this.eventParams(e))},e.prototype.startPending=function(){this.pending=!0,this.dg.pending=!0},e.prototype.endPending=function(){this.pending=!1,this.dg.pending=!1},e.decorators=[{type:t.Directive,args:[{selector:"datagrid-editor"}]}],e.ctorParameters=function(){return[{type:t.Renderer2},{type:t.ElementRef},{type:t.Injector}]},e.propDecorators={placeholder:[{type:t.Input}],height:[{type:t.Input}],cls:[{type:t.HostBinding,args:["class"]}],width:[{type:t.HostBinding,args:["style.width"]}]},e}(),P={placeholder:"",isPassword:!1,minLength:undefined,maxLength:undefined},S={dialogWidth:500,textAlign:"left",dialogHeight:600,showMaxButton:!0,showCloseButton:!0,resizable:!0,buttonAlign:"center",searchOnServer:!0,nosearch:!1,editable:!1,expandLevel:-1,readonly:!1,useTip:!1,useFavorite:!1,isRecordSize:!1,loadTreeDataType:"default",enableFullTree:!1,enableCascade:!1,cascadeStatus:"enable",enableClear:!0,useExtendInfo:!1,extInfoFields:"",extInfoFormatter:null,customFormatter:null,customNavFormatter:null,selectFirstInNav:!1,loadDataWhenOpen:!0,treeInfo:null},T={showClear:!0,groupText:"",disabled:!1,readonly:!1,editable:!0,isPassword:!1,enableViewPassword:!0,textAlign:"left",minLength:undefined,maxLength:undefined},k={disabled:!1,readonly:!1,editable:!0,locale:"zh-cn",dateRange:!1,dateRangeDatesDelimiter:"~",showTime:!1,showType:o.ShowType.all,dateFormat:"",placeholder:"",maxDate:{year:2030,month:12,day:31},minDate:{year:1840,month:1,day:1},useDefault:!1,returnType:"String",returnFormat:""},R={disabled:!1,readonly:!1,editable:!0,placeholder:"请选择",panelWidth:300,panelHeight:"auto",autoWidth:!0,data:[],idField:"id",multiSelect:!1,uri:"",textField:"",valueField:"",enableCancelSelected:!0,enableClear:!0,itemTemplate:null,nosearch:!1},F={disabled:!1,readonly:!1,editable:!0,bigNumber:!1,placeholder:"",precision:0,step:1,canNull:!0,groupSeparator:",",showButton:!0,showZero:!0,textAlign:""},V={readonly:!1,disabled:!1,square:!1},H={readonly:!1,disabled:!1,hourStep:1,minuteStep:1,secondStep:1,format:"HH:mm:ss",placeholder:"",use12Hours:!1},L={readonly:!1,disabled:!1,editable:!1,panelHeight:300,panelWidth:400,enableClear:!0,enableCancelSelected:!0,nosearch:!1,showHeader:!0},M={languages:[],readonly:!1,disabled:!1,enableClear:!0},j={outType:0,readonly:!1,editable:!1,disabled:!1,enableClear:!0,textField:"name",valueField:"value"},N={columns:[],showCode:!1,showSql:!1,disabled:!1,readonly:!1,editable:!1,enableClear:!1,fieldEditor:{type:"select"},enableExpress:!1,returnType:"string"},A={columns:[],enableClear:!1,disabled:!1,readonly:!1,editable:!1,fieldEditor:{type:"select"},returnType:"string"},G=function(e){function n(t,n,o){var i=e.call(this,t,n,o)||this;return i.inputType="text",i}return I(n,e),n.prototype.ngOnInit=function(){e.prototype.ngOnInit.call(this),this.options=Object.assign({},P,this.options),this.inputElement=this.instance.nativeElement,this.options.isPassword?this.inputType="password":this.inputType="text"},n.decorators=[{type:t.Component,args:[{selector:"grid-editor-textbox",template:'\n    <div [formGroup]="group" class="f-datagrid-cell-formgroup farris-group-auto">\n        <input #input [attr.type]="inputType" class="form-control "\n            [attr.placeholder]="options?.placeholder" [formControlName]="column.field"  maxlength="{{options?.maxLength}}">\n    </div>\n    '}]}],n.ctorParameters=function(){return[{type:t.Renderer2},{type:t.ElementRef},{type:t.Injector}]},n.propDecorators={instance:[{type:t.ViewChild,args:["input"]}]},n}(O),B=function(e){function n(t,n,o,a){var l=e.call(this,t,n,a)||this;return l.ngzone=o,l.injector=a,l.altEnterHandler=null,l.modalService=l.injector.get(s.BsModalService),l.messagerService=l.injector.get(i.MessagerService),l.eventManager=l.injector.get(r.EventManager),l}return I(n,e),n.prototype.ngOnInit=function(){var t=this;e.prototype.ngOnInit.call(this),this.dg.nowrap||this.render.setStyle(this.instance.nativeElement,"height",this.height+"px"),this.inputElement=this.instance.nativeElement,this.ngzone.runOutsideAngular(function(){t.inputClickHandler=t.render.listen(t.instance.nativeElement,"click",function(e){return e.stopPropagation(),!1})}),this.bindEventHandler()},n.prototype.ngOnDestroy=function(){this.instance&&(this.inputClickHandler(),this.altEnterHandler&&this.altEnterHandler())},n.prototype.bindEventHandler=function(){this.altEnterHandler=this.eventManager.addEventListener(this.inputElement,"keydown.alt.enter",function(e){var t=e.target,n=t.value+"\n";return t.value=n,e.preventDefault(),e.stopPropagation(),!1})},n.prototype.showDialog=function(){var e=this,t=this.options,n={width:t.dialogWidth||500,height:t.dialogHeight||400,showFontSize:!0,enableWordCount:this.options.enableWordCount,countType:this.options.countType,maxLength:this.options.maxLength};this.messagerService.prompt2(this.column.title,this.formControl.value,n).subscribe(function(t){t&&e.formControl.setValue(t),e.inputElement.focus(),!e.options.onlyShowInDialog&&e.wordcountref&&e.wordcountref.updateWordsCount()})},n.decorators=[{type:t.Component,args:[{selector:"grid-editor-textarea",template:'\n    <div [formGroup]="group" class="f-datagrid-cell-formgroup farris-group-auto" style="position:relative">\n        <datagrid-tooltip [control]="formControl" [tooltipPosition]="\'top-left\'" [message]="errorMessage">\n            <textarea #input class="form-control"\n                style="height:100%;resize:none;min-height:auto;"\n                [formControlName]="column.field"\n                [word-count]="options?.enableWordCount"\n                [countType]="options?.countType"\n                #wordcount="WordCountRef"\n                [onlyShowInDialog]="options?.onlyShowInDialog"\n                maxlength="{{options?.maxLength}}"></textarea>\n        </datagrid-tooltip>\n        <span class="f-icon modal_maximize" title="弹出窗口进行编辑" *ngIf="options?.editType && options?.editType !== \'default\'"\n             style="position: absolute;top: 2px;right: 2px; cursor:pointer" (click)="showDialog()"></span>\n    </div>\n    '}]}],n.ctorParameters=function(){return[{type:t.Renderer2},{type:t.ElementRef},{type:t.NgZone},{type:t.Injector}]},n.propDecorators={instance:[{type:t.ViewChild,args:["input"]}],wordcountref:[{type:t.ViewChild,args:["wordcount"]}]},n}(O),_=function(e){function n(t,n,o,i){var r=e.call(this,t,n,i)||this;return r.ngzone=o,r.injector=i,r}return I(n,e),n.prototype.ngOnInit=function(){e.prototype.ngOnInit.call(this),this.options=Object.assign({},j,this.options)},n.prototype.ngAfterViewInit=function(){this.inputElement=this.instance.inputGroupRef.textbox.nativeElement,e.prototype.ngAfterViewInit.call(this)},n.decorators=[{type:t.Component,args:[{selector:"datagrid-enum-editor",template:'\n    <div [formGroup]="group" class="f-datagrid-cell-formgroup farris-group-auto">\n    <enum-editor-input #eei\n        style="width: 100%"\n        [formControlName]="column.field"\n        [readonly]="options.readonly"\n        [editable]="options.editable"\n        [disabled]="options.disabled"\n        [enableClear]="options.enableClear"\n        [outType]="options.outType"\n        [textField]="options.textField"\n        [valueField]="options.valueField">\n    </enum-editor-input>\n    </div>\n    '}]}],n.ctorParameters=function(){return[{type:t.Renderer2},{type:t.ElementRef},{type:t.NgZone},{type:t.Injector}]},n.propDecorators={instance:[{type:t.ViewChild,args:["eei"]}]},n}(O),W=function(e){function n(t,n,o,i){var r=e.call(this,t,n,i)||this;return r.ngzone=o,r.injector=i,r}return I(n,e),n.prototype.ngOnInit=function(){e.prototype.ngOnInit.call(this),this.options=Object.assign({},N,this.options)},n.prototype.ngAfterViewInit=function(){this.inputElement=this.instance.textbox.nativeElement,e.prototype.ngAfterViewInit.call(this)},n.decorators=[{type:t.Component,args:[{selector:"datagrid-filter-editor",template:'\n    <div [formGroup]="group" class="f-datagrid-cell-formgroup farris-group-auto">\n        <filter #filterEditor\n            style="width: 100%"\n            [formControlName]="column.field"\n            [columns]="options.columns"\n            [showCode]="options.showCode"\n            [showSql]="options.showSql"\n            [disabled]="options.disabled"\n            [readonly]="options.readonly"\n            [editable]="options.editable"\n            [enableClear]="options.enableClear"\n            [fieldEditor]="options.fieldEditor"\n            [enableExpress]="options.enableExpress"\n            [returnType]="options.returnType"\n            (showExpress)="options?.onshowExpress($event)"></filter>\n    </div>\n    '}]}],n.ctorParameters=function(){return[{type:t.Renderer2},{type:t.ElementRef},{type:t.NgZone},{type:t.Injector}]},n.propDecorators={instance:[{type:t.ViewChild,args:["filterEditor"]}]},n}(O),q=function(e){function n(t,n,o,i){var r=e.call(this,t,n,i)||this;return r.ngzone=o,r.injector=i,r}return I(n,e),n.prototype.ngOnInit=function(){e.prototype.ngOnInit.call(this),this.options=Object.assign({},A,this.options)},n.prototype.ngAfterViewInit=function(){this.inputElement=this.instance.textbox.nativeElement,e.prototype.ngAfterViewInit.call(this)},n.decorators=[{type:t.Component,args:[{selector:"datagrid-sort-editor",template:'\n    <div [formGroup]="group" class="f-datagrid-cell-formgroup farris-group-auto">\n        <sorter #sorter\n            style="width: 100%"\n            [formControlName]="column.field"\n            [columns]="options.columns"\n            [fieldEditor]="options.fieldEditor"\n            [enableClear]="options.enableClear"\n            [disabled]="options.disabled"\n            [readonly]="options.readonly"\n            [editable]="options.editable"\n            [returnType]="options.returnType"\n        ></sorter>\n    </div>\n    '}]}],n.ctorParameters=function(){return[{type:t.Renderer2},{type:t.ElementRef},{type:t.NgZone},{type:t.Injector}]},n.propDecorators={instance:[{type:t.ViewChild,args:["sorter"]}]},n}(O),$=function(e){function n(t,n,o,i){var r=e.call(this,t,n,i)||this;return r.ngzone=o,r.injector=i,r}return I(n,e),n.prototype.ngOnInit=function(){e.prototype.ngOnInit.call(this),this.inputElement=this.instance.nativeElement,this.checked=this.formControl.value;var t=this.column.align||"left";this.render.setStyle(this.chkboxEl.nativeElement,"justify-content",t),this.render.listen(this.inputElement,"keydow.Sapce",this.onSpaceHandle)},n.prototype.onSpaceHandle=function(e){e.preventDefault(),e.stopPropagation(),this.checkedChanges()},n.prototype.handleClick=function(e){e.stopPropagation(),this.checkedChanges()},n.prototype.checkedChanges=function(){if(this.checked=!this.checked,this.formControl.setValue(this.checked),this.formControl.markAsDirty(),this.options&&this.options.valueChange){var e=this.eventParams(event);e.value=this.checked,e.instance=this.instance,e.editor=this,this.options.valueChange(e)}},n.decorators=[{type:t.Component,args:[{selector:"grid-editor-checkbox",template:'<div [formGroup]="group" class="f-datagrid-cell-formgroup" #chkbox>\n    <div class="custom-control custom-checkbox f-checkradio-single">\n        <input type="checkbox" #chk class="custom-control-input" [formControlName]="column.field" [checked]="checked">\n        <label class="custom-control-label" (click)="handleClick($event)"></label>\n    </div></div>\n    '}]}],n.ctorParameters=function(){return[{type:t.Renderer2},{type:t.ElementRef},{type:t.NgZone},{type:t.Injector}]},n.propDecorators={instance:[{type:t.ViewChild,args:["chk"]}],chkboxEl:[{type:t.ViewChild,args:["chkbox"]}]},n}(O),z=function(e){function n(t,n,o,i){var r=e.call(this,t,n,i)||this;return r.ngzone=o,r.injector=i,r}return I(n,e),n.prototype.ngOnInit=function(){e.prototype.ngOnInit.call(this),this.options=Object.assign({},k,this.options)},n.prototype.ngAfterViewInit=function(){this.inputElement=this.instance.dateInput?this.instance.dateInput.nativeElement:this.el.nativeElement.querySelector("input"),e.prototype.ngAfterViewInit.call(this)},n.prototype.onClear=function(e){this.options.clear&&this.options.clear(this.eventPrams(e))},n.prototype.onValueChange=function(e){this.options.valueChange&&this.options.valueChange(this.eventPrams(e)),this.inputElement&&this.inputElement.focus()},n.prototype.eventPrams=function(e){var t=this.eventParams(e);return t.instance=this.instance,t.editor=this,t},n.decorators=[{type:t.Component,args:[{selector:"grid-editor-datepicker",template:'\n    <div [formGroup]="group" class="f-datagrid-cell-formgroup farris-group-auto">\n        <farris-datepicker\n            #datepicker\n            style="width: 100%"\n            [formControlName]="column.field"\n            [readonly]="options.readonly"\n            [editable]="options.editable"\n            [locale]="options.locale"\n            [dateRange]="options.dateRange"\n            [showTime]="options.showTime"\n            [showType]="options.showType"\n            [dateFormat]="options.dateFormat"\n            [returnFormat]="options.returnFormat"\n            [returnType]="options.returnType"\n            [useDefault]="options.useDefault"\n            [placeholder]="options.placeholder"\n            [maxDate]="options.maxDate"\n            [minDate]="options.minDate"\n            [dateRangeDatesDelimiter]="options.dateRangeDatesDelimiter"\n            [shortcuts]="[]"\n            (clear)="onClear($event)"\n            (valueChange)="onValueChange($event)"\n        ></farris-datepicker>\n    </div>\n\n\n    '}]}],n.ctorParameters=function(){return[{type:t.Renderer2},{type:t.ElementRef},{type:t.NgZone},{type:t.Injector}]},n.propDecorators={instance:[{type:t.ViewChild,args:["datepicker"]}]},n}(O),U=function(e){function n(n,o,i){var r=e.call(this,n,o,i)||this;return r.injector=i,r.clear=new t.EventEmitter,r.clickHandle=new t.EventEmitter,r}return I(n,e),n.prototype.ngOnInit=function(){e.prototype.ngOnInit.call(this),this.inputElement=this.instance.textbox.nativeElement,this.options=Object.assign({},T,this.options)},n.prototype.onClear=function(e){return this.options.clear?this.options.clear.call(this,this.eParams(e)):this.clear.emit(),this.instance.cd.detectChanges(),!1},n.prototype.onClick=function(e){return this.options.clickHandle?this.options.clickHandle.call(this,this.eParams(e)):this.clickHandle.emit(),this.instance.cd.detectChanges(),!1},n.prototype.onValueChange=function(e){this.options.valueChange&&this.options.valueChange.call(this,this.eParams(e))},n.prototype.eParams=function(e){var t=this.eventParams(e);return t.$event=e,t.instance=this.instance,t.editor=this,t.value=e?e.value:"",t},n.decorators=[{type:t.Component,args:[{selector:"grid-editor-inputgroup",template:'\n    <div [formGroup]="group" class="f-datagrid-cell-formgroup farris-group-auto">\n        <input-group #ig style="width: 100%"\n            (clear)="onClear($event)"\n            (clickHandle)="onClick($event)"\n            (valueChange)="onValueChange($event)"\n            [readonly] = "options.readonly"\n            [editable] = "options.editable"\n            [enableClear] = "options.showClear"\n            [groupText] = "options.groupText"\n            [isPassword] = "options.isPassword"\n            [textAlign]="options.textAlign"\n            [enableViewPassword]="options.enableViewPassword"\n            [formControlName]="column.field"\n            [maxLength]="options.maxLength"\n            ></input-group>\n    </div>\n    '}]}],n.ctorParameters=function(){return[{type:t.Renderer2},{type:t.ElementRef},{type:t.Injector}]},n.propDecorators={clear:[{type:t.Output}],clickHandle:[{type:t.Output}],instance:[{type:t.ViewChild,args:["ig"]}]},n}(O),Z=function(e){function n(t,n,o){var i=e.call(this,t,n,o)||this;return i.enumData=[],i}return I(n,e),n.prototype.ngOnInit=function(){e.prototype.ngOnInit.call(this),this.inputElement=this.instance.nativeElement,this.options&&(this.enumData=this.options.data)},n.prototype.onClick=function(e){return e.stopPropagation(),!1},n.decorators=[{type:t.Component,args:[{selector:"grid-editor-select",template:'\n    <div [formGroup]="group" class="f-datagrid-cell-formgroup">\n        <select #sel class="custom-select" [formControlName]="column.field" (click)="onClick($event)" >\n            <option *ngFor="let col of enumData" value="{{col[options.valueField]}}">{{ col[options.textField] }}</option>\n        </select>\n    </div>\n    '}]}],n.ctorParameters=function(){return[{type:t.Renderer2},{type:t.ElementRef},{type:t.Injector}]},n.propDecorators={instance:[{type:t.ViewChild,args:["sel"]}]},n}(O),K=function(e){function n(t,n,o,i){var r=e.call(this,t,n,i)||this;return r.rts=o,r.stopPropagation=!1,r.extInfoFormatter=function(e){return r.options.extInfoFormatter?r.options.extInfoFormatter({bindingData:r.dr.rowData,instance:e.instance}):""},r.rts.state$.subscribe(function(e){e&&e.form&&e.form.lookup&&(r.pending=e.form.lookup.pending,r.dg.pending=r.pending)}),r}return I(n,e),Object.defineProperty(n.prototype,"controlId",{set:function(e){this.instance.controlId=e,this.instance.uri&&(this.instance.controlId+="_"+this.instance.uri)},enumerable:!0,configurable:!0}),n.prototype.ngOnInit=function(){e.prototype.ngOnInit.call(this),this.options=Object.assign({},S,this.options)},n.prototype.ngAfterViewInit=function(){this.instance.changeDetector.detectChanges(),this.inputElement=this.instance.inputGroup.textbox.nativeElement,e.prototype.ngAfterViewInit.call(this),this.options.loader&&(this.instance.http={getData:this.options.loader}),this.instance.host=this.dg},n.prototype.onDialogClosed=function(){},n.prototype.onDialogOpen=function(){this.instance.changeDetector.detectChanges()},n.prototype.onLoadSuccess=function(){this.instance.changeDetector.detectChanges()},n.prototype.onClear=function(e){this.instance.changeDetector.detectChanges(),this.options.clear&&this.options.clear()},n.decorators=[{type:t.Component,args:[{selector:"grid-editor-lookup",template:'\n    <div [formGroup]="group" class="f-datagrid-cell-formgroup farris-group-auto">\n        <datagrid-tooltip [control]="formControl" [tooltipPosition]="\'top-left\'" [message]="errorMessage">\n            <farris-lookup-grid #lookup style="width: 100%"\n                id="{{ controlId }}"\n                [formControlName]="column.field"\n                [uri]="options.uri"\n                [helpId]="options.helpId"\n                [displayType]="options.displayType"\n                [singleSelect]="options.singleSelect"\n                [idField]="options.idField"\n                [pageSize]="options.pageSize || 20"\n                [pageIndex]="options.pageSize || 1"\n                [pagination]="options.pageination"\n                [textField]="options.textField"\n                [valueField]="options.valueField"\n                [title]="options.title"\n                [useFavorite]="options.useFavorite"\n                [isRecordSize]="options.isRecordSize"\n                [useTip]="options.useTip"\n                [editable]="options.editable"\n                [readonly]="options.readonly"\n                [dialogWidth]="options.dialogWidth"\n                [dialogHeight]="options.dialogHeight"\n                [showMaxButton]="options.showMaxButton"\n                [showCloseButton]="options.showCloseButton"\n                [resizable]="options.resizable"\n                [buttonAlign]="options.buttonAlign"\n                [enableClear]="options.enableClear"\n                [searchOnServer]="options.searchOnServer"\n                [nosearch]="options.nosearch"\n                [maxLength]="options.maxLength"\n                [mappingFn]="options.mappingFn"\n                [mapFields]="options.mapFields"\n                [context]="options.context"\n                [expandLevel]="options.expandLevel"\n                [dictPicking]="options.dictPicking"\n                [dictPicked]="options.dictPicked"\n                [enableFullTree]="options.enableFullTree"\n                [loadTreeDataType]="options.loadTreeDataType"\n                [enableCascade]="options.enableCascade"\n                [cascadeStatus]="options.cascadeStatus"\n                [useExtendInfo]="options.useExtendInfo"\n                [extInfoFields]="options.extInfoFields"\n                [extInfoFormatter]="options.extInfoFormatter"\n                [textAlign]="options.textAlign"\n                [loadDataWhenOpen]="options.loadDataWhenOpen"\n                [selectFirstInNav]="options.selectFirstInNav"\n                [customNavFormatter]="options.customNavFormatter"\n                [customFormatter]="options.customFormatter"\n                [treeInfo]="options?.treeInfo"\n                (dialogClosed)="onDialogClosed()"\n                (dialogOpened)="onDialogOpen()"\n                (clear)="onClear($event)"\n                (loadSuccess)="onLoadSuccess()"\n            ></farris-lookup-grid>\n        </datagrid-tooltip>\n    </div>\n    '}]}],n.ctorParameters=function(){return[{type:t.Renderer2},{type:t.ElementRef},{type:h.RuntimeStateService},{type:t.Injector}]},n.propDecorators={instance:[{type:t.ViewChild,args:["lookup"]}]},n}(O),X=function(e){function n(t,n,o){return e.call(this,t,n,o)||this}return I(n,e),n.prototype.ngOnInit=function(){e.prototype.ngOnInit.call(this),this.options=Object.assign({},F,this.options),this.options.textAlign||(this.options.textAlign=this.column.align||"left"),this.inputElement=this.instance.input.nativeElement},n.prototype.onValueChange=function(e){this.options.valueChange&&this.options.valueChange(this.eventPrams(e))},n.prototype.eventPrams=function(e){var t=this.eventParams(e);return t.instance=this.instance,t.editor=this,t},n.decorators=[{type:t.Component,args:[{selector:"grid-editor-numberspinner",template:'\n    <div [formGroup]="group" class="f-datagrid-cell-formgroup farris-group-auto">\n        <datagrid-tooltip [control]="formControl" [tooltipPosition]="\'top-left\'" [message]="errorMessage">\n            <farris-number-spinner #num [step]="options.step"\n                [max]="options.max"\n                [min]="options.min"\n                [canNull]="options.canNull"\n                [precision]="options.precision"\n                [editable]="options.editable"\n                [bigNumber]="options.bigNumber"\n                [showButton]="options.showButton"\n                [showZero]="options.showZero"\n                [groupSeparator]="options.groupSeparator"\n                (valueChange)="onValueChange($event)"\n                [textAlign]="options.textAlign"\n                [formControlName]="column.field" style="width: 100%"></farris-number-spinner>\n        </datagrid-tooltip>\n    </div>\n    '}]}],n.ctorParameters=function(){return[{type:t.Renderer2},{type:t.ElementRef},{type:t.Injector}]},n.propDecorators={instance:[{type:t.ViewChild,args:["num"]}]},n}(O),J=function(e){function n(t,n,o,i){var r=e.call(this,t,n,i)||this;return r.ngzone=o,r.injector=i,r.stopPropagation=!1,r}return I(n,e),n.prototype.ngOnInit=function(){e.prototype.ngOnInit.call(this),this.options=Object.assign({},R,this.options),this.options.showClear!==undefined&&(this.options.enableClear=this.options.showClear),this.formControl&&this.formControl.value&&(this.options.selectedValues=this.formControl.value)},n.prototype.ngAfterViewInit=function(){this.inputElement=this.instance.input.textbox.nativeElement,e.prototype.ngAfterViewInit.call(this)},n.prototype.onShowPanel=function(e){this.options.showPanel?this.options.showPanel(this.eventPrams(e)):this.options.onShown&&this.options.onShown(this.eventPrams(e))},n.prototype.onHidePanel=function(e){this.options.hidePanel?this.options.hidePanel(this.eventPrams(e)):this.options.onHidden&&this.options.onHidden(this.eventPrams(e))},n.prototype.onClear=function(e){this.options.clear&&this.options.clear(this.eventPrams(e))},n.prototype.onValueChange=function(e){this.options.valueChange&&this.options.valueChange(this.eventPrams(e))},n.prototype.onSelectChange=function(e){this.options.selectChange&&this.options.selectChange(this.eventPrams(e))},n.prototype.hide=function(){this.instance.hide()},n.prototype.eventPrams=function(e){var t=this.eventParams(e);return t.instance=this.instance,t.editor=this,t},n.decorators=[{type:t.Component,args:[{selector:"grid-editor-combolist",template:'\n        <div [formGroup]="group" class="f-datagrid-cell-formgroup farris-group-auto">\n            <farris-combo-list #cmblist style="width: 100%"\n                [formControlName]="column.field"\n                [readonly]= "options.readonly"\n                [editable]= "options.editable"\n                [(selectedValues)]="options.selectedValues"\n                [idField]="options.idField"\n                [textField]="options.textField"\n                [multiSelect]="options.multiSelect"\n                [valueField]="options.valueField"\n                [uri]="options.uri"\n                [data]="options.data"\n                [nosearch]="options.nosearch"\n                [maxLength]="options?.maxLength"\n                [context]="options?.context"\n                [itemTemplate]="options?.itemTemplate"\n                [enableClear]="options.enableClear"\n                [autoWidth]="options.autoWidth"\n                [panelHeight]="options.panelHeight"\n                [panelWidth]="options.panelWidth"\n                [enableCancelSelected]="options.enableCancelSelected"\n                [beforeShow]="options?.beforeShow"\n                [beforeHide]="options?.beforeHide"\n                (showPanel)="onShowPanel($event)"\n                (hidePanel)="onHidePanel($event)"\n                (clear)="onClear($event)"\n                (valueChange)="onValueChange($event)"\n                (selectChange)="onSelectChange($event)"\n                [showPanelType]="options?.showPanelEvent || \'click\'"\n                [mappingField]="options?.mappingField"\n            ></farris-combo-list>\n        </div>\n    '}]}],n.ctorParameters=function(){return[{type:t.Renderer2},{type:t.ElementRef},{type:t.NgZone},{type:t.Injector}]},n.propDecorators={instance:[{type:t.ViewChild,args:["cmblist"]}]},n}(O),Q=function(e){function n(t,n,o){return e.call(this,t,n,o)||this}return I(n,e),n.prototype.ngOnInit=function(){e.prototype.ngOnInit.call(this),this.options=Object.assign({},V,this.options),this.options&&!this.options.valueChange&&(this.options.valueChange=function(e){});var t=this.column.align||"left";"left"===t&&(this.render.setStyle(this.ctrlBoxEl.nativeElement,"justify-content",t),this.render.setStyle(this.ctrlBoxEl.nativeElement,"padding-left","0.75rem")),this.inputElement=this.instance.switchElRef.nativeElement},n.prototype.onValueChange=function(e){var t=this.eventParams(e);t.checked=this.instance.checked,t.value=this.instance.getValue(this.instance.checked),t.instance=this.instance,t.editor=this,this.options.valueChange(t)},n.decorators=[{type:t.Component,args:[{selector:"grid-editor-switch",template:'\n    <div [formGroup]="group" class="f-datagrid-cell-formgroup farris-group-auto" style="line-height:100%" #ctrlbox hidefocus="true">\n        <farris-switch #switch [formControlName]="column.field"\n        [square]="options.square"\n        [readonly]="options.readonly"\n        [disabled]="options.disabled"\n        [checkedLabel]="options.checkedLabel"\n        [uncheckedLabel]="options.uncheckedLabel"\n        [trueValue]="options?.trueValue"\n        [falseValue]="options?.falseValue"\n        (valueChange)="onValueChange($event)"></farris-switch>\n    </div>\n    '}]}],n.ctorParameters=function(){return[{type:t.Renderer2},{type:t.ElementRef},{type:t.Injector}]},n.propDecorators={ctrlBoxEl:[{type:t.ViewChild,args:["ctrlbox"]}],instance:[{type:t.ViewChild,args:["switch"]}]},n}(O),Y=function(e){function n(t,n,o){return e.call(this,t,n,o)||this}return I(n,e),n.prototype.ngOnInit=function(){e.prototype.ngOnInit.call(this),this.inputElement=this.instance.timeInput.nativeElement,this.options=Object.assign({},H,this.options),this.options&&!this.options.valueChange&&(this.options.valueChange=function(e){})},n.prototype.onValueChange=function(e){var t=this.eventParams(e);t.value=this.instance.value,t.instance=this.instance,t.editor=this,this.options.valueChange(t)},n.decorators=[{type:t.Component,args:[{selector:"grid-editor-timer",template:'\n    <div [formGroup]="group" class="f-datagrid-cell-formgroup farris-group-auto" >\n        <farris-time-picker #timepicker\n            style="width: 100%"\n            [formControlName]="column.field"\n            [readonly]= "options.readonly"\n            [editable]= "options.editable"\n            [hourStep] = "options.hourStep"\n            [minuteStep] = "options.minuteStep"\n            [secondStep] = "options.secondStep"\n            [format]="options.format"\n            [placeholder]="options.placeholder"\n            [use12Hours]="options.use12Hours"\n            (valueChange)="onValueChange($event)">\n        </farris-time-picker>\n    </div>\n    '}]}],n.ctorParameters=function(){return[{type:t.Renderer2},{type:t.ElementRef},{type:t.Injector}]},n.propDecorators={instance:[{type:t.ViewChild,args:["timepicker"]}]},n}(O),ee=function(e){function n(t,n,o,i){var r=e.call(this,t,n,i)||this;return r.ngzone=o,r.injector=i,r}return I(n,e),n.prototype.ngOnInit=function(){e.prototype.ngOnInit.call(this),this.options=Object.assign({},L,this.options),this.options.multiSelect===undefined&&this.options.singleSelect!==undefined&&null!==this.options.singleSelect&&(this.options.multiSelect=!this.options.singleSelect),this.formControl&&this.formControl.value&&(this.options.selectedValues=this.formControl.value)},n.prototype.ngAfterViewInit=function(){this.inputElement=this.instance.input.textbox.nativeElement,e.prototype.ngAfterViewInit.call(this)},n.prototype.onShowPanel=function(e){this.options.showPanel&&this.options.showPanel(this.eventPrams(e))},n.prototype.onHidePanel=function(e){this.options.hidePanel&&this.options.hidePanel(this.eventPrams(e))},n.prototype.onClear=function(e){this.options.clear&&this.options.clear(this.eventPrams(e))},n.prototype.onValueChange=function(e){this.options.valueChange&&this.options.valueChange(this.eventPrams(e))},n.prototype.onSelectChange=function(e){this.options.selectChange&&this.options.selectChange(this.eventPrams(e))},n.prototype.hide=function(){this.instance.hide()},n.prototype.eventPrams=function(e){var t=this.eventParams(e);return t.instance=this.instance,t.editor=this,t},n.decorators=[{type:t.Component,args:[{selector:"grid-editor-combolookup",template:'\n    <div [formGroup]="group" class="f-datagrid-cell-formgroup farris-group-auto">\n        <datagrid-tooltip [control]="formControl" [tooltipPosition]="\'top-left\'" [message]="errorMessage">\n            <farris-combo-lookup style="width: 100%"\n                #cmblookup\n                [formControlName]="column.field"\n                [idField]="options.idField"\n                [textField]="options.textField"\n                [displayType]="options.displayType"\n                [multiSelect]="options.multiSelect"\n                [mapFields]="options.mapFields"\n                [uri]="options.uri"\n                [nosearch]="options.nosearch"\n                [maxLength]="options?.maxLength"\n                [readonly]= "options.readonly"\n                [editable]= "options.editable"\n                [autoWidth]="false"\n                [panelWidth]="options.panelWidth"\n                [panelHeight]="options.panelHeight"\n                [enableCancelSelected]="options.enableCancelSelected"\n                [beforeShow]="options?.beforeShow"\n                [beforeHide]="options?.beforeHide"\n                [context]="options?.context"\n                [enableClear]="options.enableClear"\n                [showHeader]="options.showHeader"\n                (showPanel)="onShowPanel($event)"\n                (hidePanel)="onHidePanel($event)"\n                (clear)="onClear($event)"\n                (valueChange)="onValueChange($event)"\n                (selectChange)="onSelectChange($event)"\n                [data]="options?.data"\n                [useTreeView]="options?.useTreeView"\n                [columns]="options?.columns"\n            ></farris-combo-lookup>\n        </datagrid-tooltip>\n    </div>\n    '}]}],n.ctorParameters=function(){return[{type:t.Renderer2},{type:t.ElementRef},{type:t.NgZone},{type:t.Injector}]},n.propDecorators={instance:[{type:t.ViewChild,args:["cmblookup"]}]},n}(O),te=function(e){function n(t,n,o){return e.call(this,t,n,o)||this}return I(n,e),n.prototype.ngOnInit=function(){e.prototype.ngOnInit.call(this),this.inputElement=this.instance.input.textbox.nativeElement,this.options=Object.assign({},M,this.options),this.options&&!this.options.valueChange&&(this.options.valueChange=function(e){})},n.decorators=[{type:t.Component,args:[{selector:"grid-editor-language-textbox",template:'\n    <div [formGroup]="group" class="f-datagrid-cell-formgroup farris-group-auto" style="line-height:100%">\n        <language-textbox #ins style="width: 100%"\n            [languages]="options.languages" [formControlName]="column.field"\n            [enableClear]="options.enableClear"\n            [readonly]="options.readonly"\n            [currentLanguage]="options.currentLanguage"\n            ></language-textbox>\n    </div>\n    '}]}],n.ctorParameters=function(){return[{type:t.Renderer2},{type:t.ElementRef},{type:t.Injector}]},n.propDecorators={instance:[{type:t.ViewChild,args:["ins"]}]},n}(O),ne={TEXTAREA:"textarea",TEXTBOX:"textbox",CHECKBOX:"checkbox",DATEPICKER:"datepicker",INPUTGROUP:"input-group",SELECT:"select",LOOKUP:"lookup",NUMBERBOX:"numberbox",COMBOLIST:"combolist",SWITCH:"switch",TIMEPICKER:"timepicker",COMBOLOOKUP:"combo-lookup",LANGUAGETEXTBOX:"language-textbox",ENUMEDITOR:"enum-editor",FILTEREDITOR:"filter-editor",SORTEDITOR:"sort-editor"},oe=[{provide:n.GRID_EDITORS,useValue:{name:ne.TEXTAREA,value:B},multi:!0},{provide:n.GRID_EDITORS,useValue:{name:ne.TEXTBOX,value:G},multi:!0},{provide:n.GRID_EDITORS,useValue:{name:ne.CHECKBOX,value:$},multi:!0},{provide:n.GRID_EDITORS,useValue:{name:ne.DATEPICKER,value:z},multi:!0},{provide:n.GRID_EDITORS,useValue:{name:ne.INPUTGROUP,value:U},multi:!0},{provide:n.GRID_EDITORS,useValue:{name:ne.SELECT,value:Z},multi:!0},{provide:n.GRID_EDITORS,useValue:{name:ne.LOOKUP,value:K},multi:!0},{provide:n.GRID_EDITORS,useValue:{name:ne.NUMBERBOX,value:X},multi:!0},{provide:n.GRID_EDITORS,useValue:{name:ne.COMBOLIST,value:J},multi:!0},{provide:n.GRID_EDITORS,useValue:{name:ne.SWITCH,value:Q},multi:!0},{provide:n.GRID_EDITORS,useValue:{name:ne.TIMEPICKER,value:Y},multi:!0},{provide:n.GRID_EDITORS,useValue:{name:ne.COMBOLOOKUP,value:ee},multi:!0},{provide:n.GRID_EDITORS,useValue:{name:ne.LANGUAGETEXTBOX,value:te},multi:!0},{provide:n.GRID_EDITORS,useValue:{name:ne.ENUMEDITOR,value:_},multi:!0},{provide:n.GRID_EDITORS,useValue:{name:ne.FILTEREDITOR,value:W},multi:!0},{provide:n.GRID_EDITORS,useValue:{name:ne.SORTEDITOR,value:q},multi:!0}],ie=function(){function e(e){this.el=e,this.tooltipPosition="right",this.cls="",this.type="danger"}return e.prototype.onMouseEnter=function(){this.control.invalid&&this.showErrMsg()},e.prototype.onMouseLeave=function(){this.hide()},e.prototype.onFocusIn=function(){this.control.invalid&&this.showErrMsg()},e.prototype.onFocusOut=function(){this.hide()},e.prototype.onKeyup=function(){this.control.invalid?this.showErrMsg():this.hide()},e.prototype.showErrMsg=function(){null!==this.message&&this.message!==undefined&&this.show()},e.prototype.hide=function(){this.ngOnDestroy()},e.prototype.show=function(){this.container?n.DomHandler.findSingle(this.container,".f-tooltip-text").innerText=this.message:this.create();var e,t,o=this.el.nativeElement.parentElement,i=n.DomHandler.getOffset(o),r=i.top,s=i.left;switch(this.container.style.display="block",this.tooltipPosition){case"right":e=s+n.DomHandler.getOuterWidth(o),t=r+(n.DomHandler.getOuterHeight(o)-n.DomHandler.getOuterHeight(this.container))/2;break;case"left":e=s-n.DomHandler.getOuterWidth(this.container),t=r+(n.DomHandler.getOuterHeight(o)-n.DomHandler.getOuterHeight(this.container))/2;break;case"top":e=s+(n.DomHandler.getOuterWidth(o)-n.DomHandler.getOuterWidth(this.container))/2,t=r-n.DomHandler.getOuterHeight(this.container);break;case"bottom":e=s+(n.DomHandler.getOuterWidth(o)-n.DomHandler.getOuterWidth(this.container))/2,t=r+n.DomHandler.getOuterHeight(o);break;case"top-left":e=s,t=r-n.DomHandler.getOuterHeight(this.container)}this.container.style.left=e+"px",this.container.style.top=t+"px",this.container.style.zIndex=999999},e.prototype.create=function(){var e="f-tooltip "+this.getThemeCls()+" f-tooltip-"+this.tooltipPosition+" "+this.cls;this.container=document.createElement("div"),this.tooltipStyleClass&&(e+=" "+this.tooltipStyleClass),this.container.className=e;var t=document.createElement("div");t.className="f-tooltip-arrow ",this.container.appendChild(t);var n=document.createElement("div");n.className="f-tooltip-text ",n.innerHTML=this.message,this.positionStyle&&(this.container.style.position=this.positionStyle),this.container.appendChild(n),document.body.appendChild(this.container)},e.prototype.getThemeCls=function(){return this.type?"f-tooltip-"+this.type:""},e.prototype.ngOnDestroy=function(){this.container&&this.container.parentElement&&document.body.removeChild(this.container),this.container=null},e.decorators=[{type:t.Component,args:[{selector:"datagrid-tooltip",template:"\n    <ng-content></ng-content>\n    ",encapsulation:t.ViewEncapsulation.None}]}],e.ctorParameters=function(){return[{type:t.ElementRef}]},e.propDecorators={tooltipPosition:[{type:t.Input}],control:[{type:t.Input}],positionStyle:[{type:t.Input}],tooltipStyleClass:[{type:t.Input}],message:[{type:t.Input}],cls:[{type:t.Input}],type:[{type:t.Input}],onMouseEnter:[{type:t.HostListener,args:["mouseenter"]}],onMouseLeave:[{type:t.HostListener,args:["mouseleave"]}],onFocusIn:[{type:t.HostListener,args:["focusin"]}],onFocusOut:[{type:t.HostListener,args:["focusout"]}],onKeyup:[{type:t.HostListener,args:["keyup"]}]},e}(),re=[ie,G,B,$,z,U,Z,K,X,J,Q,Y,ee,te,_,q,W],se=function(){function e(){}return e.decorators=[{type:t.NgModule,args:[{declarations:D([O],re),imports:[E.CommonModule,b.FormsModule,o.FarrisDatePickerModule,c.InputGroupModule,d.LookupModule,m.ComboListModule,v.ComboLookupModule,g.NumberSpinnerModule,f.SwitchModule,y.TimePickerModule,C.LanguageTextboxModule,b.ReactiveFormsModule,l.EnumEditorModule,a.FarrisFormsModule,p.FilterModule,u.SorterModule],exports:D([O],re),entryComponents:D(re),providers:[]}]}],e}();e.DatagridBaseEditorDirective=O,e.DatagridEditorsModule=se,e.DatagridEnumEditorComponent=_,e.DatagridFilterEditorComponent=W,e.DatagridSortEditorComponent=q,e.DatagridTextareaComponent=B,e.DatagridTextboxComponent=G,e.EditorProviders=oe,e.EditorTypes=ne,e.ɵa=$,e.ɵb=z,e.ɵc=U,e.ɵd=Z,e.ɵe=K,e.ɵf=X,e.ɵg=J,e.ɵh=Q,e.ɵi=Y,e.ɵj=ee,e.ɵk=te,e.ɵl=ie,Object.defineProperty(e,"__esModule",{value:!0})});
//# sourceMappingURL=farris-ui-datagrid-editors.umd.min.js.map