{"version":3,"sources":["ng://@farris/ui-dropdown/lib/f-dropdown.directive.ts","ng://@farris/ui-dropdown/lib/f-dropdown-menu.directive.ts","ng://@farris/ui-dropdown/lib/f-dropdown-toggle.directive.ts","ng://@farris/ui-dropdown/lib/f-dropdown.module.ts","ng://@farris/ui-dropdown/lib/component/dropdown.component.ts","ng://@farris/ui-dropdown/lib/component/dropdown.item.component.ts","ng://@farris/ui-dropdown/lib/component/dropdown.module.ts"],"names":["FDropdownDirective","Object","defineProperty","prototype","value","length","this","close","_internalOpen","isOpenState","next","_placement","newClsName","_getClsName","oldClsName","render","removeClass","_seflEl","addClass","isSubDP","ngOnInit","getNativeElement","bindDocumentEvents","documentClickEventListener","onDocumentClick","bind","document","addEventListener","selfDefineEventListener","onSelfDefineHandler","unbindDocumentEvents","removeEventListener","event","button","isEventFromToggle","needToCalculate","autoRectify","_calculateMenu","resetCalculate","open","closeSiblingDropdowns","dpChangeEvent","emit","toggle","getOpenState","ngOnDestroy","unsubscribe","dpParentEl","parentNode","indexOf","dropdowns","querySelectorAll","k","className","compatibleDispatchEvent","eventEl","eventName","Event","createEvent","initEvent","dispatchEvent","position","toggleElement","contains","target","getRectifyReferenceEl","resultWidth","window","innerWidth","resultHeight","innerHeight","rectifyReference","getBoundingClientRect","right","rectifyReferenceV","bottom","width","height","Directive","args","selector","exportAs","ElementRef","Renderer2","Input","Output","HostBinding","elementRef","_this","EventEmitter","Subject","nativeElement","subscribe","state","FDropdownMenuDirective","ngAfterViewChecked","getRealPlacement","pment","result","openStateChange","dpIsOpen","dropdown","_docRect","setTimeout","changeDirection","replace","rect","placement","newplacement","left","showDropdownMenu","me","isOpen","FDropdownToggleDirective","_disabled","onclick","ev","stopImmediatePropagation","HostListener","haspopup","nativeEle","_DROPDOWN_DIRECTIVES","FDropdownDirectiveTypeModule","NgModule","declarations","exports","FarrisDropdownComponent","_width","resolveSize","menu","el","querySelector","ngAfterViewInit","globalListenFunc","showDropMenu","hover","stopPropagation","show","visibleChange","renderer","listen","closeDropMenu","hideOnClick","menuListenFunc","e","hoverDropdown","selectItem","model","select","leftButtonClick","leftClick","size","regex","test","parseInt","match","Component","template","ContentChild","type","splitButton","label","FarrisDropdownItemComponent","disabled","FarrisDropdownModule","imports","CommonModule"],"mappings":"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","sourcesContent":["import {\r\n    Directive,\r\n    Input,\r\n    Output,\r\n    HostBinding,\r\n    EventEmitter,\r\n    ElementRef,\r\n    Renderer2,\r\n    OnDestroy,\r\n    OnInit\r\n} from '@angular/core';\r\nimport { Observable, Subject } from 'rxjs';\r\n@Directive({\r\n    selector: '[fDropdown]',\r\n    exportAs: 'fDropdown'\r\n})\r\nexport class FDropdownDirective implements OnDestroy, OnInit {\r\n    toggleElement: any;\r\n    documentClickEventListener: any;\r\n    selfDefineEventListener: any;\r\n    private _seflEl: HTMLElement;\r\n    // tslint:disable-next-line:no-input-rename\r\n    private _internalOpen = false;\r\n    // è®¡ç®å®½åº¦\r\n    private _calculateMenu = false;\r\n    // çº æ­£ä½ç½®çåç§ æwindowåparentä¸¤ä¸ªå¼\r\n    @Input() rectifyReference;\r\n    // çº æ­£çºµåä½ç½®çåç§ \r\n    @Input() rectifyReferenceV;\r\n    // æ¯å¦èªå¨çº æ­£ä½ç½®\r\n    @Input() autoRectify = false;\r\n    // å¨å¤é¢å¼ºå¶æ§å¶å³é­ç¶æ\r\n    @Input('forceState')\r\n    set forceState(value: Array<boolean>) {\r\n\r\n        if (value && value.length) {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    @Input('open')\r\n    set openState(value: boolean) {\r\n        this._internalOpen = value[0];\r\n        this.isOpenState.next(value[0]);\r\n    }\r\n    @Output() dpChangeEvent = new EventEmitter<boolean>();\r\n    private _placement = 'bottom'; // è®°å½ position\r\n\r\n    @Input() isSubDP = false; // æ¯å¦æ¯å­ä¸æ\r\n\r\n    @Input('placement')\r\n    set placement(value) {\r\n        // å¦æç¸ç­\r\n        if (!value) {\r\n            return;\r\n        }\r\n        //\r\n        if (value !== this._placement) {\r\n            const newClsName = this._getClsName(value);\r\n            const oldClsName = this._getClsName(this._placement);\r\n            this.render.removeClass(this._seflEl, oldClsName);\r\n            this.render.addClass(this._seflEl, newClsName);\r\n            this._placement = value;\r\n        }\r\n    }\r\n    get placement(): string {\r\n        return this._placement;\r\n    }\r\n\r\n    // @HostBinding('class.show')\r\n    get isOpen(): boolean {\r\n        return this._internalOpen;\r\n    }\r\n\r\n    private isOpenState = new Subject();\r\n\r\n\r\n    @HostBinding('class.dropdown-submenu')\r\n    get submenuCls(): boolean {\r\n        return this.isSubDP;\r\n    }\r\n    @HostBinding('class.dropdown')\r\n    get dropdownCls(): boolean {\r\n        return !this.isSubDP;\r\n    }\r\n    private ngZone;\r\n\r\n    constructor(\r\n        elementRef: ElementRef,\r\n        private render: Renderer2\r\n    ) {\r\n        this._seflEl = elementRef.nativeElement;\r\n        this.isOpenState.subscribe((state: boolean) => {\r\n            if (this._internalOpen !== state) {\r\n                this._internalOpen = state;\r\n                if (this._internalOpen) {\r\n                    this.render.addClass(this._seflEl, 'show');\r\n                } else {\r\n                    this.render.removeClass(this._seflEl, 'show');\r\n                }\r\n            }\r\n        });\r\n    }\r\n    ngOnInit() {\r\n    }\r\n    getNativeElement() {\r\n        return this._seflEl;\r\n    }\r\n    private bindDocumentEvents() {\r\n        //   this.ngzone.runOutsideAngular(() => {\r\n        this.documentClickEventListener = this.onDocumentClick.bind(this);\r\n        document.addEventListener('click', this.documentClickEventListener);\r\n        // ç»å®è¢«æä½nativeæ¶è§¦å\r\n        this.selfDefineEventListener = this.onSelfDefineHandler.bind(this);\r\n        this._seflEl.addEventListener('selfClose', this.selfDefineEventListener);\r\n        // });\r\n    }\r\n\r\n    private onSelfDefineHandler() {\r\n        this.close();\r\n    }\r\n    private unbindDocumentEvents() {\r\n        if (this.documentClickEventListener) {\r\n            document.removeEventListener(\r\n                'click',\r\n                this.documentClickEventListener\r\n            );\r\n            this.documentClickEventListener = null;\r\n        }\r\n        if (this.selfDefineEventListener) {\r\n            this._seflEl.removeEventListener(\r\n                'selfClose',\r\n                this.selfDefineEventListener\r\n            );\r\n            this.selfDefineEventListener = null;\r\n        }\r\n    }\r\n    private onDocumentClick(event: MouseEvent) {\r\n        // å¦æå·²ç»å³é­ï¼ä¸éè¦åååº\r\n        if (!this._internalOpen) {\r\n            return;\r\n        }\r\n        if (event.button !== 2 && !this.isEventFromToggle(event)) {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    // å¤æ­menuå±å¼æ¶æ¯å¦è¦è®¡ç®\r\n    needToCalculate() {\r\n        return this.autoRectify && this._calculateMenu;\r\n    }\r\n    resetCalculate(value) {\r\n        this._calculateMenu = value;\r\n    }\r\n    open() {\r\n\r\n        if (!this._internalOpen) {\r\n            this.closeSiblingDropdowns();\r\n            this._calculateMenu = true;\r\n            this.render.addClass(this._seflEl, 'show');\r\n            this.isOpenState.next(true);\r\n            this.dpChangeEvent.emit(true);\r\n            // æ§è¡ç»å®äºä»¶\r\n            this.bindDocumentEvents();\r\n        }\r\n    }\r\n\r\n    close() {\r\n        if (this._internalOpen) {\r\n            this._calculateMenu = false;\r\n            this.render.removeClass(this._seflEl, 'show');\r\n            this.isOpenState.next(false);\r\n            this.dpChangeEvent.emit(false);\r\n            this.unbindDocumentEvents();\r\n        }\r\n    }\r\n\r\n    toggle() {\r\n        if (this._internalOpen) {\r\n            this.close();\r\n        } else {\r\n            this.open();\r\n        }\r\n    }\r\n    getOpenState() {\r\n        return this.isOpenState;\r\n    }\r\n    ngOnDestroy() {\r\n        this.isOpenState.unsubscribe();\r\n        this.unbindDocumentEvents();\r\n    }\r\n    private closeSiblingDropdowns() {\r\n        let dpParentEl = this._seflEl.parentNode;\r\n        if (dpParentEl && dpParentEl['className'].indexOf('dropdown-menu') > -1) {\r\n            let dropdowns = dpParentEl.querySelectorAll('[fDropdown]');\r\n            if (dropdowns && dropdowns.length > 1) {\r\n                for (var k = 0; k < dropdowns.length; k++) {\r\n                    if (dropdowns[k].className.indexOf('show')) {\r\n                        // è§¦åäºä»¶è¯è¯\r\n                        this.compatibleDispatchEvent(dropdowns[k], 'selfClose');\r\n                        // dropdowns[k].dispatchEvent(new Event('selfClose'));\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n    private compatibleDispatchEvent(eventEl, eventName) {\r\n        var event;\r\n        if (typeof Event === \"function\") {\r\n            event = new Event(eventName);\r\n        } else {\r\n            event = document.createEvent(\"Event\");\r\n            event.initEvent(eventName, false, false);\r\n        }\r\n        eventEl.dispatchEvent(event);\r\n    }\r\n    private _getClsName(position: string) {\r\n        let className = '';\r\n        switch (position) {\r\n            case 'top-right':\r\n            case 'top':\r\n                // æä¸ï¼æä¸-æå³\r\n                className = 'dropup';\r\n                break;\r\n            case 'top-left':\r\n                // æä¸-æå·¦\r\n                className = 'dropup-left';\r\n                break;\r\n            case 'left-bottom':\r\n            case 'left':\r\n                // æ¨ªåââæå·¦ââæä¸\r\n                className = 'dropleft';\r\n                break;\r\n            case 'left-top':\r\n                // æ¨ªåââæå·¦ââæä¸\r\n                className = 'dropleft-up';\r\n                break;\r\n            case 'right-bottom':\r\n            case 'right':\r\n                // æ¨ªåââæå³ââæä¸\r\n                className = 'dropright';\r\n                break;\r\n            case 'right-top':\r\n                // æ¨ªåââæå³ââæä¸\r\n                className = 'dropright-up';\r\n                break;\r\n            case 'bottom-left':\r\n                // æä¸ââæå·¦\r\n                className = 'dropdown-left';\r\n                break;\r\n            case 'bottom-right':\r\n                className = 'dropdown';\r\n                break;\r\n            default:\r\n                // æä¸ï¼æä¸ââæå³\r\n                className = 'dropdown';\r\n        }\r\n        return className;\r\n    }\r\n    private isEventFromToggle(event: MouseEvent) {\r\n        const result =\r\n            this.toggleElement && this.toggleElement.contains(event.target);\r\n        return result;\r\n    }\r\n\r\n    getRectifyReferenceEl() {\r\n        \r\n        var resultWidth = window.innerWidth, resultHeight = window.innerHeight;\r\n        // æ¨ªåè®¡ç®\r\n        if (this.rectifyReference) {\r\n            resultWidth = this.rectifyReference.getBoundingClientRect().right;\r\n        }\r\n        // çºµåè®¡ç®\r\n        if (this.rectifyReferenceV) {\r\n            resultWidth = this.rectifyReference.getBoundingClientRect().bottom;\r\n        }\r\n        return { width: resultWidth, height: resultHeight };\r\n\r\n    }\r\n}\r\n\r\n// export enum FDropdownPlacement{\r\n//   \"top\", \"top-left\", \"top-right\", \"bottom\", \"bottom-left\", \"bottom-right\",\r\n//   *    \"left\", \"left-top\", \"left-bottom\", \"right\", \"right-top\", \"right-bottom\"\r\n// }\r\n","import {\r\n  Directive,\r\n  HostBinding,\r\n  AfterViewChecked,\r\n  ElementRef,\r\n  Optional,\r\n  Input\r\n} from '@angular/core';\r\nimport { FDropdownDirective } from './f-dropdown.directive';\r\n\r\n@Directive({\r\n  selector: '[fDropdownMenu]'\r\n})\r\nexport class FDropdownMenuDirective implements AfterViewChecked {\r\n  private _docRect = { width: 0, height: 0 };\r\n  @HostBinding('class.dropdown-menu') showDropdownMenu = true;\r\n  // åé¨ä½¿ç¨ï¼å¨ä¸åæ´ä¾èµçæåµä¸ï¼è§¦åæ¹å\r\n  @Input()  dpIsOpen=false;\r\n\r\n  constructor(\r\n    private elementRef: ElementRef,\r\n    private dropdown: FDropdownDirective\r\n  ) {\r\n    var me = this;\r\n    this.dropdown.getOpenState().subscribe((state: boolean) => {\r\n      me.dpIsOpen = me.dropdown.isOpen;\r\n      me.openStateChange()\r\n    });\r\n  }\r\n  ngAfterViewChecked() {\r\n  \r\n  }\r\n  private getRealPlacement(pment) {\r\n    var result = 'bottom-right';\r\n    switch (pment) {\r\n      case 'top':\r\n        result = 'top-right';\r\n        break;\r\n      case 'left':\r\n        result = 'left-bottom';\r\n        break;\r\n      case 'right':\r\n        result = 'right-bottom';\r\n        break;\r\n      case 'bottom':\r\n        result = 'bottom-right';\r\n        break;\r\n      default:\r\n        result = pment;\r\n    }\r\n    return result;\r\n  }\r\n  private openStateChange() {\r\n    if (this.dpIsOpen) {\r\n      if (this.elementRef.nativeElement.className.indexOf('show') < 0) {\r\n        \r\n        this.elementRef.nativeElement.className += ' show';\r\n        if (this.dropdown.needToCalculate()) {\r\n          this._docRect = this.dropdown.getRectifyReferenceEl();\r\n        }\r\n        setTimeout(()=>{\r\n          this.changeDirection();\r\n        },0);\r\n      }\r\n    } else {\r\n      if (this.elementRef.nativeElement.className.indexOf('show') > -1) {\r\n        this.elementRef.nativeElement.className = this.elementRef.nativeElement.className.replace(' show', ' ');\r\n      }\r\n    }\r\n  }\r\n  private changeDirection(){\r\n    if (this.dropdown.needToCalculate()) {\r\n      const rect = this.elementRef.nativeElement.getBoundingClientRect();\r\n      let placement = this.dropdown.placement;\r\n      let newplacement = this.getRealPlacement(placement);\r\n      placement = newplacement;\r\n      //\r\n      if (newplacement.indexOf('right') > -1 &&\r\n        rect.right > this._docRect.width\r\n      ) {\r\n        placement = placement.replace('right', 'left');\r\n      }\r\n      if (\r\n        newplacement.indexOf('left') > -1 &&\r\n        rect.left - rect.width < 0\r\n      ) {\r\n        placement = placement.replace('left', 'right');\r\n      }\r\n\r\n      if (\r\n        newplacement.indexOf('bottom') > -1 &&\r\n        rect.bottom > this._docRect.height\r\n      ) {\r\n        placement = placement.replace('down', 'up');\r\n      }\r\n      if (\r\n        newplacement.indexOf('up') > -1 &&\r\n        rect.bottom - rect.height < 0\r\n      ) {\r\n        placement = placement.replace('up', 'bottom');\r\n      }\r\n      if (newplacement !== this.dropdown.placement) {\r\n        this.dropdown.placement = newplacement;\r\n      }\r\n      if (placement !== newplacement) {\r\n        this.dropdown.placement = placement;\r\n      }\r\n      this.dropdown.resetCalculate(false);\r\n    }\r\n  }\r\n}\r\n","import {\r\n  Directive,\r\n  Host,\r\n  HostBinding,\r\n  HostListener,\r\n  ElementRef,\r\n  Renderer2,\r\n  Input\r\n} from '@angular/core';\r\nimport { FDropdownDirective } from './f-dropdown.directive';\r\n\r\n@Directive({\r\n  selector: '[fDropdownToggle]'\r\n})\r\nexport class FDropdownToggleDirective {\r\n  private _disabled = false;\r\n  @Input()\r\n  set dpDisabled(value: boolean) {\r\n    this._disabled = value;\r\n  }\r\n  @HostBinding('class.disabled')\r\n  get disableCls() {\r\n    return this._disabled;\r\n  }\r\n\r\n  @HostBinding('attr.aria-haspopup') haspopup = true;\r\n  @HostListener('click', ['$event'])\r\n  onclick(ev: MouseEvent) {\r\n    if (this._disabled) {\r\n      return;\r\n    }\r\n    if (this.dropdown.isSubDP) {\r\n      ev.stopImmediatePropagation();\r\n    }\r\n    this.dropdown.toggle();\r\n  }\r\n  private nativeEle = null;\r\n  constructor(private dropdown: FDropdownDirective, private elementRef: ElementRef) {\r\n    dropdown.toggleElement = elementRef.nativeElement;\r\n    this.nativeEle=elementRef.nativeElement;\r\n    this.dropdown.getOpenState().subscribe((state: boolean) => {\r\n      if (this.dropdown.isSubDP && this.dropdown.isOpen) {\r\n        if (this.nativeEle.className.indexOf('active') < 0) {\r\n          this.nativeEle.className += ' active';\r\n        }\r\n      } else {\r\n        if (this.nativeEle.className.indexOf('active') > -1) {\r\n          this.nativeEle.className=this.nativeEle.className.replace(' active', ' ');\r\n        }\r\n      }\r\n    });\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { FDropdownDirective } from './f-dropdown.directive';\r\nimport { FDropdownMenuDirective } from './f-dropdown-menu.directive';\r\nimport { FDropdownToggleDirective } from './f-dropdown-toggle.directive';\r\n\r\nconst _DROPDOWN_DIRECTIVES = [\r\n  FDropdownDirective,\r\n  FDropdownMenuDirective,\r\n  FDropdownToggleDirective\r\n];\r\n\r\n@NgModule({\r\n  declarations: _DROPDOWN_DIRECTIVES,\r\n  exports: _DROPDOWN_DIRECTIVES\r\n})\r\nexport class FDropdownDirectiveTypeModule { }\r\n","import {\r\n    Component,\r\n    Input,\r\n    AfterViewInit,\r\n    OnInit,\r\n    ElementRef,\r\n    ContentChild,\r\n    TemplateRef,\r\n    Output,\r\n    EventEmitter,\r\n    Renderer2,\r\n    OnDestroy\r\n} from '@angular/core';\r\nimport { DropdownItem } from './dropdown.item.props';\r\n\r\n@Component({\r\n    selector: 'farris-dropdown',\r\n    template: `\r\n        <div\r\n            class=\"farris-dropdown btn-group\"\r\n            [class.dropup]=\"position === 'top'\"\r\n            [class.dropdown]=\"position === 'bottom'\"\r\n            [class.dropleft]=\"position === 'left'\"\r\n            [class.dropright]=\"position === 'right'\"\r\n            [style.width]=\"width\"\r\n        >\r\n            <span\r\n                [class.btn]=\"!nest\"\r\n                [class.dropdown-item]=\"nest\"\r\n                [class.btn-lg]=\"size === 'large'\"\r\n                [class.btn-sm]=\"size === 'small'\"\r\n                [class.btn-primary]=\"type === 'primary'\"\r\n                [class.btn-success]=\"type === 'success'\"\r\n                [class.btn-warning]=\"type === 'warning'\"\r\n                [class.btn-danger]=\"type === 'danger'\"\r\n                [class.btn-info]=\"type === 'info'\"\r\n                (click)=\"leftButtonClick()\"\r\n                style=\"width:100%\"\r\n                *ngIf=\"splitButton\"\r\n                >{{ title }}</span\r\n            >\r\n            <span\r\n                class=\"dropdown-toggle\"\r\n                [class.btn]=\"!nest\"\r\n                [class.dropdown-item]=\"nest\"\r\n                [class.dropdown-toggle-split]=\"splitButton\"\r\n                [class.btn-lg]=\"size === 'large'\"\r\n                [class.btn-sm]=\"size === 'small'\"\r\n                [class.btn-primary]=\"type === 'primary'\"\r\n                [class.btn-success]=\"type === 'success'\"\r\n                [class.btn-warning]=\"type === 'warning'\"\r\n                [class.btn-danger]=\"type === 'danger'\"\r\n                [class.btn-info]=\"type === 'info'\"\r\n                [class.btn-secondary]=\"type === 'secondary'\"\r\n                (click)=\"showDropMenu($event)\"\r\n                (mouseenter)=\"hoverDropdown()\"\r\n                (mouseleave)=\"hoverDropdown()\"\r\n                style=\"width:100%\"\r\n            >\r\n                <span class=\"sr-only\" *ngIf=\"splitButton\"></span>\r\n                {{ splitButton ? '' : title }}\r\n            </span>\r\n            <div class=\"dropdown-menu\" [class.show]=\"show\">\r\n                <ng-template [ngTemplateOutlet]=\"dropdownTempl\"></ng-template>\r\n                <farris-dropdown-item\r\n                    *ngFor=\"let item of model\"\r\n                    [model]=\"item\"\r\n                    (select)=\"selectItem($event)\"\r\n                >\r\n                </farris-dropdown-item>\r\n            </div>\r\n        </div>\r\n    `\r\n})\r\nexport class FarrisDropdownComponent implements OnInit, AfterViewInit, OnDestroy {\r\n    @Input() nest: boolean;\r\n    // è®¾ç½®å®½ é«å±æ§\r\n    _width: string | number;\r\n    _height: string | number;\r\n    @Input()\r\n    get width() {\r\n        // å¯¹åä¸ªåä½è¿è¡å¤ç\r\n        return this._width;\r\n    }\r\n    set width(width: any) {\r\n        this._width = this.resolveSize(width);\r\n    }\r\n    // ä¸ææ¡æ é¢\r\n    @Input() title: string;\r\n    // hoverå±ç¤ºä¸æåè¡¨\r\n    @Input() hover: boolean;\r\n    // ä¸ææ¡å°ºå¯¸\r\n    @Input() size: string;\r\n    // ä¸ææ¡ç±»å\r\n    // tslint:disable-next-line:no-inferrable-types\r\n    @Input() type: string = 'primary';\r\n    // ç¹å»åè¡¨é¡¹ç®åæ¯å¦å³é­åè¡¨é¡¹\r\n    // tslint:disable-next-line:no-input-rename\r\n    // tslint:disable-next-line:no-inferrable-types\r\n    @Input('hide-on-click') hideOnClick: boolean = true;\r\n    // æé®ç»\r\n    // tslint:disable-next-line:no-input-rename\r\n    @Input('split-button') splitButton = false;\r\n    // åè¡¨æ¾ç¤ºä½ç½®\r\n    @Input() position = 'bottom';\r\n    // åè¡¨é¡¹æ°æ®\r\n    @Input() model: DropdownItem[] = [\r\n        { label: 'é¡¹ç®ä¸', value: 'asdasd' },\r\n        { label: 'é¡¹ç®äº', value: 'asdasd' },\r\n        { label: 'é¡¹ç®ä¸', value: 'asdasd' }\r\n    ];\r\n    @ContentChild('dropdownTempl') dropdownTempl: TemplateRef<any>;\r\n    // æé®åç»ä¹å  å·¦è¾¹æé®äºä»¶\r\n    // tslint:disable-next-line:no-output-rename\r\n    @Output('left-click') leftClick: EventEmitter<any> = new EventEmitter<\r\n        any\r\n    >();\r\n    @Output() select: EventEmitter<any> = new EventEmitter<any>();\r\n    // ä¸æåè¡¨æ¾ç¤ºæèéèè§¦åçäºä»¶\r\n    // tslint:disable-next-line:no-output-rename\r\n    @Output('visible-change') visibleChange: EventEmitter<\r\n        any\r\n    > = new EventEmitter<any>();\r\n    dropdownButton: HTMLButtonElement;\r\n    menu: HTMLDivElement;\r\n    // åè¡¨é¡¹çæ¾ç¤ºä¸å¦\r\n    show = false;\r\n    globalListenFunc: Function;\r\n    menuListenFunc: Function;\r\n    constructor(private el: ElementRef, private renderer: Renderer2) {}\r\n    ngOnInit(): void {\r\n        this.menu = this.el.nativeElement.querySelector('.dropdown-menu');\r\n    }\r\n    ngAfterViewInit(): void {}\r\n    ngOnDestroy(): void {\r\n        if (this.globalListenFunc) {\r\n            this.globalListenFunc();\r\n        }\r\n    }\r\n    // ç¹å»åè¡¨é¡¹æ¾ç¤ºä¸å¦\r\n    showDropMenu(event?: Event) {\r\n        if (this.hover) {\r\n            return;\r\n        }\r\n        if (event) {\r\n            event.stopPropagation();\r\n        }\r\n        this.show = !this.show;\r\n        this.visibleChange.emit();\r\n\r\n        this.globalListenFunc = this.renderer.listen(\r\n            'document',\r\n            'click',\r\n            () => {\r\n                this.closeDropMenu();\r\n            }\r\n        );\r\n        // å¦æä¸è®¾ç½®hide-on-click,åè¯´æç¹å»ä¸æä¹åä¸æä¸æ¶å¤±\r\n        if (!this.hideOnClick) {\r\n            this.menuListenFunc = this.renderer.listen(\r\n                this.menu,\r\n                'click',\r\n                e => {\r\n                    e.stopPropagation();\r\n                }\r\n            );\r\n        }\r\n    }\r\n    // ç¹å»åç´ ä¹å¤  åè¡¨é¡¹æ¶å¤±\r\n    closeDropMenu() {\r\n        if (this.hover) {\r\n            return;\r\n        }\r\n        this.show = false;\r\n        this.visibleChange.emit();\r\n        // è§£é¤äºä»¶ç»å®\r\n        if (this.globalListenFunc) {\r\n            this.globalListenFunc();\r\n        }\r\n        if (this.menuListenFunc) {\r\n            this.menuListenFunc();\r\n        }\r\n    }\r\n    // hover å®ç°\r\n    hoverDropdown() {\r\n        if (!this.hover) {\r\n            return;\r\n        }\r\n        this.show = !this.show;\r\n        this.visibleChange.emit();\r\n    }\r\n    /**\r\n     * å¼¹åºäºä»¶\r\n     */\r\n    selectItem(model) {\r\n        this.select.emit(model);\r\n    }\r\n    leftButtonClick() {\r\n        this.leftClick.emit();\r\n    }\r\n    resolveSize(size) {\r\n        const regex = /px|em|rem|pt|%/;\r\n        // è¯´ææ¯å­ç¬¦ä¸²\r\n        return regex.test(size)\r\n            ? `${parseInt(size, 10)}${size.match(regex)[0]}`\r\n            : `${size}px`;\r\n    }\r\n}\r\n","import { Component, Input, Output, EventEmitter } from '@angular/core';\r\nimport { DropdownItem } from './dropdown.item.props';\r\n@Component({\r\n    selector: 'farris-dropdown-item',\r\n    template: `\r\n        <div class=\"dropdown-divider\" *ngIf=\"model.divide\"></div>\r\n        <a\r\n            class=\"dropdown-item\"\r\n            [class.active]=\"model.active\"\r\n            [class.disabled]=\"model.disabled\"\r\n            href=\"javascript:void(0)\"\r\n            (click)=\"selectItem()\"\r\n            >{{ model.label }}</a\r\n        >\r\n    `\r\n})\r\nexport class FarrisDropdownItemComponent {\r\n    @Input() model: DropdownItem;\r\n    @Output() select: EventEmitter<any> = new EventEmitter<any>();\r\n    selectItem() {\r\n        if (this.model.disabled) {\r\n            return;\r\n        }\r\n        this.select.emit(this.model);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { FarrisDropdownComponent } from './dropdown.component';\r\nimport { FarrisDropdownItemComponent } from './dropdown.item.component';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule\r\n    ],\r\n    declarations: [\r\n        FarrisDropdownComponent,\r\n        FarrisDropdownItemComponent\r\n    ],\r\n    exports: [\r\n        FarrisDropdownComponent,\r\n        FarrisDropdownItemComponent\r\n    ]\r\n})\r\nexport class FarrisDropdownModule {\r\n\r\n}\r\n"]}