/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Subject } from 'rxjs';
import { FarrisContextMenuComponent } from './context-menu.component';
import { Injectable, ComponentFactoryResolver, Injector } from '@angular/core';
var FarrisContextMenuService = /** @class */ (function () {
    function FarrisContextMenuService(cfr, injector) {
        this.cfr = cfr;
        this.injector = injector;
        this.overlayEle = null;
        this.contextMenuDom = null;
        this.contextMenuRefs = {};
        this.activeDom = null;
        this.showContextMenu = new Subject();
    }
    /**
     * @private
     * @param {?=} cls
     * @param {?=} opts
     * @return {?}
     */
    FarrisContextMenuService.prototype.createOverlay = /**
     * @private
     * @param {?=} cls
     * @param {?=} opts
     * @return {?}
     */
    function (cls, opts) {
        var _this = this;
        /** @type {?} */
        var overlayEle = document.querySelector('.f-context-menu-overlay');
        if (!overlayEle) {
            overlayEle = document.createElement('div');
            overlayEle.classList.add('f-context-menu-overlay', cls);
            document.body.appendChild(overlayEle);
            if (opts.highlight) {
                this.activeDom = document.createElement('div');
                this.activeDom.classList.add('f-context-target-focus');
                overlayEle.appendChild(this.activeDom);
            }
            overlayEle.addEventListener('click', (/**
             * @param {?} e
             * @return {?}
             */
            function (e) {
                if (((/** @type {?} */ (e.target))).className.indexOf('f-context-menu-overlay') > -1) {
                    _this.hide();
                }
            }));
            overlayEle.addEventListener('contextmenu', (/**
             * @param {?} e
             * @return {?}
             */
            function (e) {
                e.preventDefault();
                e.stopPropagation();
                _this.hide();
            }));
        }
        return overlayEle;
    };
    /**
     * @param {?} options
     * @return {?}
     */
    FarrisContextMenuService.prototype.show = /**
     * @param {?} options
     * @return {?}
     */
    function (options) {
        var menuItems = options.menuItems, event = options.event, id = options.id, activeDom = options.activeDom, context = options.context, menuClass = options.menuClass, target = options.target, activeWidth = options.activeWidth;
        /** @type {?} */
        var cmpRef = null;
        if (!this.contextMenuRefs) {
            this.contextMenuRefs = {};
        }
        if (!this.contextMenuRefs[id]) {
            /** @type {?} */
            var cmpFactory = this.cfr.resolveComponentFactory(FarrisContextMenuComponent);
            cmpRef = cmpFactory.create(this.injector);
            cmpRef.instance.menuItems = menuItems;
            cmpRef.instance.id = id;
            cmpRef.instance.left = event.pageX;
            cmpRef.instance.top = event.pageY;
            this.contextMenuDom = activeDom;
            this.contextMenuRefs[cmpRef.instance.id] = cmpRef;
        }
        else {
            cmpRef = this.contextMenuRefs[id];
        }
        cmpRef.instance.context = context;
        this.overlayEle = this.createOverlay(menuClass, options);
        this.overlayEle.appendChild(cmpRef.location.nativeElement);
        if (this.activeDom) {
            // const w = target.offsetWidth > this.contextMenuDom.offsetWidth ? this.contextMenuDom.offsetWidth : target.offsetWidth;
            /** @type {?} */
            var w = activeWidth || this.contextMenuDom.offsetWidth;
            this.activeDom.style.width = w + 'px';
            this.activeDom.style.height = this.contextMenuDom.offsetHeight + 'px';
            this.activeDom.style.left = target.getBoundingClientRect().left + 'px';
            this.activeDom.style.top = this.contextMenuDom.getBoundingClientRect().top + 'px';
            this.activeDom.style.display = 'block';
        }
        cmpRef.changeDetectorRef.detectChanges();
        /** @type {?} */
        var menuPanelDom = cmpRef.instance.menuPanel.nativeElement;
        /** @type {?} */
        var menuPanelHeight = menuPanelDom.offsetHeight;
        if (window.innerHeight - event.pageY < menuPanelHeight) {
            cmpRef.instance.top = event.pageY - menuPanelHeight;
        }
        if (window.innerWidth - event.pageX < menuPanelDom.offsetWidth) {
            cmpRef.instance.left = event.pageX - menuPanelDom.offsetWidth;
        }
        cmpRef.changeDetectorRef.detectChanges();
    };
    /**
     * @return {?}
     */
    FarrisContextMenuService.prototype.hide = /**
     * @return {?}
     */
    function () {
        var e_1, _a;
        if (this.overlayEle) {
            this.overlayEle.style.display = 'none';
            if (this.contextMenuRefs) {
                try {
                    for (var _b = tslib_1.__values(Object.keys(this.contextMenuRefs)), _c = _b.next(); !_c.done; _c = _b.next()) {
                        var key = _c.value;
                        this.contextMenuRefs[key].hostView.destroy();
                    }
                }
                catch (e_1_1) { e_1 = { error: e_1_1 }; }
                finally {
                    try {
                        if (_c && !_c.done && (_a = _b.return)) _a.call(_b);
                    }
                    finally { if (e_1) throw e_1.error; }
                }
                this.contextMenuRefs = null;
            }
            // 移除DOM 样式
            if (this.contextMenuDom) {
                this.contextMenuDom.className = this.contextMenuDom.className.replace('f-context-menu-active', '');
            }
            this.overlayEle.remove();
            this.overlayEle = null;
        }
    };
    FarrisContextMenuService.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    FarrisContextMenuService.ctorParameters = function () { return [
        { type: ComponentFactoryResolver },
        { type: Injector }
    ]; };
    return FarrisContextMenuService;
}());
export { FarrisContextMenuService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    FarrisContextMenuService.prototype.overlayEle;
    /** @type {?} */
    FarrisContextMenuService.prototype.contextMenuDom;
    /**
     * @type {?}
     * @private
     */
    FarrisContextMenuService.prototype.contextMenuRefs;
    /**
     * @type {?}
     * @private
     */
    FarrisContextMenuService.prototype.activeDom;
    /** @type {?} */
    FarrisContextMenuService.prototype.showContextMenu;
    /**
     * @type {?}
     * @private
     */
    FarrisContextMenuService.prototype.cfr;
    /**
     * @type {?}
     * @private
     */
    FarrisContextMenuService.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29udGV4dC1tZW51LnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWNvbnRleHQtbWVudS8iLCJzb3VyY2VzIjpbImxpYi9jb250ZXh0LW1lbnUuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxPQUFPLEVBQUUsTUFBTSxNQUFNLENBQUM7QUFDL0IsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDdEUsT0FBTyxFQUFFLFVBQVUsRUFBRSx3QkFBd0IsRUFBRSxRQUFRLEVBQWdCLE1BQU0sZUFBZSxDQUFDO0FBRzdGO0lBV0ksa0NBQW9CLEdBQTZCLEVBQzdCLFFBQWtCO1FBRGxCLFFBQUcsR0FBSCxHQUFHLENBQTBCO1FBQzdCLGFBQVEsR0FBUixRQUFRLENBQVU7UUFUOUIsZUFBVSxHQUFHLElBQUksQ0FBQztRQUNuQixtQkFBYyxHQUFHLElBQUksQ0FBQztRQUNyQixvQkFBZSxHQUFnRSxFQUFFLENBQUM7UUFFbEYsY0FBUyxHQUFHLElBQUksQ0FBQztRQUV6QixvQkFBZSxHQUFHLElBQUksT0FBTyxFQUFFLENBQUM7SUFJaEMsQ0FBQzs7Ozs7OztJQUlPLGdEQUFhOzs7Ozs7SUFBckIsVUFBc0IsR0FBWSxFQUFFLElBQXlCO1FBQTdELGlCQTBCQzs7WUF6Qk8sVUFBVSxHQUFHLFFBQVEsQ0FBQyxhQUFhLENBQUMseUJBQXlCLENBQUM7UUFDbEUsSUFBSSxDQUFDLFVBQVUsRUFBRTtZQUNiLFVBQVUsR0FBRyxRQUFRLENBQUMsYUFBYSxDQUFDLEtBQUssQ0FBQyxDQUFDO1lBQzNDLFVBQVUsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLHdCQUF3QixFQUFFLEdBQUcsQ0FBQyxDQUFDO1lBQ3hELFFBQVEsQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLFVBQVUsQ0FBQyxDQUFDO1lBRXRDLElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRTtnQkFDaEIsSUFBSSxD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QUFJLENBQUMsZUFBZSxDQUFDLENBQUEsZ0JBQUEsNEJBQUU7d0JBQWhELElBQU0sR0FBRyxXQUFBO3dCQUNWLElBQUksQ0FBQyxlQUFlLENBQUMsR0FBRyxDQUFDLENBQUMsUUFBUSxDQUFDLE9BQU8sRUFBRSxDQUFDO3FCQUNoRDs7Ozs7Ozs7O2dCQUNELElBQUksQ0FBQyxlQUFlLEdBQUcsSUFBSSxDQUFDO2FBQy9CO1lBRUQsV0FBVztZQUNYLElBQUksSUFBSSxDQUFDLGNBQWMsRUFBRTtnQkFDckIsSUFBSSxDQUFDLGNBQWMsQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFDLGNBQWMsQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLHVCQUF1QixFQUFFLEVBQUUsQ0FBQyxDQUFDO2FBQ3RHO1lBRUQsSUFBSSxDQUFDLFVBQVUsQ0FBQyxNQUFNLEVBQUUsQ0FBQztZQUN6QixJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQztTQUMxQjtJQUNMLENBQUM7O2dCQXBISixVQUFVOzs7O2dCQUhVLHdCQUF3QjtnQkFBRSxRQUFROztJQXdIdkQsK0JBQUM7Q0FBQSxBQXJIRCxJQXFIQztTQXBIWSx3QkFBd0I7Ozs7OztJQUVqQyw4Q0FBMEI7O0lBQzFCLGtEQUE2Qjs7Ozs7SUFDN0IsbURBQTBGOzs7OztJQUUxRiw2Q0FBeUI7O0lBRXpCLG1EQUFnQzs7Ozs7SUFFcEIsdUNBQXFDOzs7OztJQUNyQyw0Q0FBMEIiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTdWJqZWN0IH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IEZhcnJpc0NvbnRleHRNZW51Q29tcG9uZW50IH0gZnJvbSAnLi9jb250ZXh0LW1lbnUuY29tcG9uZW50JztcclxuaW1wb3J0IHsgSW5qZWN0YWJsZSwgQ29tcG9uZW50RmFjdG9yeVJlc29sdmVyLCBJbmplY3RvciwgQ29tcG9uZW50UmVmIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbnRleHRNZW51T3B0aW9ucyB9IGZyb20gJy4vbWVudS1pdGVtLmludGVyZmFjZSc7XHJcblxyXG5ASW5qZWN0YWJsZSgpXHJcbmV4cG9ydCBjbGFzcyBGYXJyaXNDb250ZXh0TWVudVNlcnZpY2Uge1xyXG5cclxuICAgIHByaXZhdGUgb3ZlcmxheUVsZSA9IG51bGw7XHJcbiAgICBwdWJsaWMgY29udGV4dE1lbnVEb20gPSBudWxsO1xyXG4gICAgcHJpdmF0ZSBjb250ZXh0TWVudVJlZnM6IHsgW2tleTogc3RyaW5nXTogQ29tcG9uZW50UmVmPEZhcnJpc0NvbnRleHRNZW51Q29tcG9uZW50PiB9ID0ge307XHJcblxyXG4gICAgcHJpdmF0ZSBhY3RpdmVEb20gPSBudWxsO1xyXG5cclxuICAgIHNob3dDb250ZXh0TWVudSA9IG5ldyBTdWJqZWN0KCk7XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBjZnI6IENvbXBvbmVudEZhY3RvcnlSZXNvbHZlcixcclxuICAgICAgICAgICAgICAgIHByaXZhdGUgaW5qZWN0b3I6IEluamVjdG9yKSB7XHJcbiAgICB9XHJcblxyXG5cclxuXHJcbiAgICBwcml2YXRlIGNyZWF0ZU92ZXJsYXkoY2xzPzogc3RyaW5nLCBvcHRzPzogQ29udGV4dE1lbnVPcHRpb25zKSB7XHJcbiAgICAgICAgbGV0IG92ZXJsYXlFbGUgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKCcuZi1jb250ZXh0LW1lbnUtb3ZlcmxheScpO1xyXG4gICAgICAgIGlmICghb3ZlcmxheUVsZSkge1xyXG4gICAgICAgICAgICBvdmVybGF5RWxlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgICAgIG92ZXJsYXlFbGUuY2xhc3NMaXN0LmFkZCgnZi1jb250ZXh0LW1lbnUtb3ZlcmxheScsIGNscyk7XHJcbiAgICAgICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQob3ZlcmxheUVsZSk7XHJcblxyXG4gICAgICAgICAgICBpZiAob3B0cy5oaWdobGlnaHQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuYWN0aXZlRG9tID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmFjdGl2ZURvbS5jbGFzc0xpc3QuYWRkKCdmLWNvbnRleHQtdGFyZ2V0LWZvY3VzJyk7XHJcbiAgICAgICAgICAgICAgICBvdmVybGF5RWxlLmFwcGVuZENoaWxkKHRoaXMuYWN0aXZlRG9tKTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgb3ZlcmxheUVsZS5hZGRFdmVudExpc3RlbmVyKCdjbGljaycsIChlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBpZiAoKGUudGFyZ2V0IGFzIGFueSkuY2xhc3NOYW1lLmluZGV4T2YoJ2YtY29udGV4dC1tZW51LW92ZXJsYXknKSA+IC0xKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5oaWRlKCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgb3ZlcmxheUVsZS5hZGRFdmVudExpc3RlbmVyKCdjb250ZXh0bWVudScsIChlKSA9PiB7XHJcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XHJcbiAgICAgICAgICAgICAgICBlLnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgICAgICAgICAgdGhpcy5oaWRlKCk7XHJcbiAgICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgICByZXR1cm4gb3ZlcmxheUVsZTtcclxuICAgIH1cclxuXHJcbiAgICBzaG93KG9wdGlvbnM6IENvbnRleHRNZW51T3B0aW9ucykge1xyXG5cclxuICAgICAgICBjb25zdCB7IG1lbnVJdGVtcywgZXZlbnQsIGlkLCBhY3RpdmVEb20sIGNvbnRleHQsIG1lbnVDbGFzcywgdGFyZ2V0LCBhY3RpdmVXaWR0aCB9ID0gb3B0aW9ucztcclxuICAgICAgICBsZXQgY21wUmVmID0gbnVsbDtcclxuXHJcbiAgICAgICAgaWYgKCF0aGlzLmNvbnRleHRNZW51UmVmcykge1xyXG4gICAgICAgICAgICB0aGlzLmNvbnRleHRNZW51UmVmcyA9IHt9O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKCF0aGlzLmNvbnRleHRNZW51UmVmc1tpZF0pIHtcclxuICAgICAgICAgICAgY29uc3QgY21wRmFjdG9yeSA9IHRoaXMuY2ZyLnJlc29sdmVDb21wb25lbnRGYWN0b3J5KEZhcnJpc0NvbnRleHRNZW51Q29tcG9uZW50KTtcclxuICAgICAgICAgICAgY21wUmVmID0gY21wRmFjdG9yeS5jcmVhdGUodGhpcy5pbmplY3Rvcik7XHJcbiAgICAgICAgICAgIGNtcFJlZi5pbnN0YW5jZS5tZW51SXRlbXMgPSBtZW51SXRlbXM7XHJcbiAgICAgICAgICAgIGNtcFJlZi5pbnN0YW5jZS5pZCA9IGlkO1xyXG5cclxuICAgICAgICAgICAgY21wUmVmLmluc3RhbmNlLmxlZnQgPSBldmVudC5wYWdlWDtcclxuICAgICAgICAgICAgY21wUmVmLmluc3RhbmNlLnRvcCA9IGV2ZW50LnBhZ2VZO1xyXG5cclxuICAgICAgICAgICAgdGhpcy5jb250ZXh0TWVudURvbSA9IGFjdGl2ZURvbTtcclxuICAgICAgICAgICAgdGhpcy5jb250ZXh0TWVudVJlZnNbY21wUmVmLmluc3RhbmNlLmlkXSA9IGNtcFJlZjtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICBjbXBSZWYgPSB0aGlzLmNvbnRleHRNZW51UmVmc1tpZF07XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBjbXBSZWYuaW5zdGFuY2UuY29udGV4dCA9IGNvbnRleHQ7XHJcblxyXG4gICAgICAgIHRoaXMub3ZlcmxheUVsZSA9IHRoaXMuY3JlYXRlT3ZlcmxheShtZW51Q2xhc3MsIG9wdGlvbnMpO1xyXG4gICAgICAgIHRoaXMub3ZlcmxheUVsZS5hcHBlbmRDaGlsZChjbXBSZWYubG9jYXRpb24ubmF0aXZlRWxlbWVudCk7XHJcblxyXG4gICAgICAgIGlmICh0aGlzLmFjdGl2ZURvbSkge1xyXG4gICAgICAgICAgICAvLyBjb25zdCB3ID0gdGFyZ2V0Lm9mZnNldFdpZHRoID4gdGhpcy5jb250ZXh0TWVudURvbS5vZmZzZXRXaWR0aCA/IHRoaXMuY29udGV4dE1lbnVEb20ub2Zmc2V0V2lkdGggOiB0YXJnZXQub2Zmc2V0V2lkdGg7XHJcbiAgICAgICAgICAgIGNvbnN0IHcgPSBhY3RpdmVXaWR0aCB8fCB0aGlzLmNvbnRleHRNZW51RG9tLm9mZnNldFdpZHRoO1xyXG4gICAgICAgICAgICB0aGlzLmFjdGl2ZURvbS5zdHlsZS53aWR0aCA9ICB3ICsgJ3B4JztcclxuICAgICAgICAgICAgdGhpcy5hY3RpdmVEb20uc3R5bGUuaGVpZ2h0ID0gdGhpcy5jb250ZXh0TWVudURvbS5vZmZzZXRIZWlnaHQgKyAncHgnO1xyXG4gICAgICAgICAgICB0aGlzLmFjdGl2ZURvbS5zdHlsZS5sZWZ0ID0gdGFyZ2V0LmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLmxlZnQgKyAncHgnO1xyXG4gICAgICAgICAgICB0aGlzLmFjdGl2ZURvbS5zdHlsZS50b3AgPSB0aGlzLmNvbnRleHRNZW51RG9tLmdldEJvdW5kaW5nQ2xpZW50UmVjdCgpLnRvcCArICdweCc7XHJcbiAgICAgICAgICAgIHRoaXMuYWN0aXZlRG9tLnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjbXBSZWYuY2hhbmdlRGV0ZWN0b3JSZWYuZGV0ZWN0Q2hhbmdlcygpO1xyXG5cclxuICAgICAgICBjb25zdCBtZW51UGFuZWxEb20gPSBjbXBSZWYuaW5zdGFuY2UubWVudVBhbmVsLm5hdGl2ZUVsZW1lbnQ7XHJcbiAgICAgICAgY29uc3QgbWVudVBhbmVsSGVpZ2h0ID0gIG1lbnVQYW5lbERvbS5vZmZzZXRIZWlnaHQ7XHJcbiAgICAgICAgaWYgKHdpbmRvdy5pbm5lckhlaWdodCAtICBldmVudC5wYWdlWSA8IG1lbnVQYW5lbEhlaWdodCkge1xyXG4gICAgICAgICAgICBjbXBSZWYuaW5zdGFuY2UudG9wID0gZXZlbnQucGFnZVkgLSBtZW51UGFuZWxIZWlnaHQ7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAod2luZG93LmlubmVyV2lkdGggLSBldmVudC5wYWdlWCA8IG1lbnVQYW5lbERvbS5vZmZzZXRXaWR0aCkge1xyXG4gICAgICAgICAgICBjbXBSZWYuaW5zdGFuY2UubGVmdCA9IGV2ZW50LnBhZ2VYIC0gbWVudVBhbmVsRG9tLm9mZnNldFdpZHRoO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgY21wUmVmLmNoYW5nZURldGVjdG9yUmVmLmRldGVjdENoYW5nZXMoKTtcclxuICAgIH1cclxuXHJcbiAgICBoaWRlKCkge1xyXG4gICAgICAgIGlmICh0aGlzLm92ZXJsYXlFbGUpIHtcclxuICAgICAgICAgICAgdGhpcy5vdmVybGF5RWxlLnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmNvbnRleHRNZW51UmVmcykge1xyXG4gICAgICAgICAgICAgICAgZm9yIChjb25zdCBrZXkgb2YgT2JqZWN0LmtleXModGhpcy5jb250ZXh0TWVudVJlZnMpKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5jb250ZXh0TWVudVJlZnNba2V5XS5ob3N0Vmlldy5kZXN0cm95KCk7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB0aGlzLmNvbnRleHRNZW51UmVmcyA9IG51bGw7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIC8vIOenu+mZpERPTSDmoLflvI9cclxuICAgICAgICAgICAgaWYgKHRoaXMuY29udGV4dE1lbnVEb20pIHtcclxuICAgICAgICAgICAgICAgIHRoaXMuY29udGV4dE1lbnVEb20uY2xhc3NOYW1lID0gdGhpcy5jb250ZXh0TWVudURvbS5jbGFzc05hbWUucmVwbGFjZSgnZi1jb250ZXh0LW1lbnUtYWN0aXZlJywgJycpO1xyXG4gICAgICAgICAgICB9XHJcblxyXG4gICAgICAgICAgICB0aGlzLm92ZXJsYXlFbGUucmVtb3ZlKCk7XHJcbiAgICAgICAgICAgIHRoaXMub3ZlcmxheUVsZSA9IG51bGw7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG59XHJcbiJdfQ==