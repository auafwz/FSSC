/**
 * @fileoverview added by tsickle
 * Generated from: lib/ffilepreview-adapt-unifile.directive.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, HostListener, Input } from '@angular/core';
import { FfilepreviewAdaptUnifileService } from './ffilepreview-adapt-unifile.service';
export class FFilePreviewAdaptUnifileDirective {
    /**
     * @param {?} previewSer
     */
    constructor(previewSer) {
        this.previewSer = previewSer;
        /**
         * 处理扩展的服务器端配置
         */
        this._extendServeConfig = null;
    }
    /**
     * 捕获预览事件
     * @param {?} fileInfo
     * @return {?}
     */
    filePreviewEventHandler(fileInfo) {
        this.previewSer.previewFile(fileInfo, this.extendServerConfig);
    }
    /**
     * 捕获下载事件
     * @param {?} downloadEv
     * @return {?}
     */
    fileDownloadEventHandler(downloadEv) {
        // 如果是批量下载, downloadEv={fileInfos:[],name:}
        if (downloadEv && downloadEv['fileInfos'].length > 0) {
            if (downloadEv['fileInfos'].length > 1) {
                this.previewSer.multiDownloadFilesWidthName(downloadEv['fileInfos'], downloadEv['name'], this.extendServerConfig);
            }
            else {
                this.previewSer.downloadFile(downloadEv['fileInfos'][0], this.extendServerConfig);
            }
        }
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set extendServerConfig(value) {
        this._extendServeConfig = value;
        this.previewSer.setPreviwExtendServerConfig(value);
    }
    /**
     * @return {?}
     */
    get extendServerConfig() {
        return this._extendServeConfig;
    }
}
FFilePreviewAdaptUnifileDirective.decorators = [
    { type: Directive, args: [{
                selector: '[fFilePreviewAdaptUnifile]',
                providers: [FfilepreviewAdaptUnifileService]
            },] }
];
/** @nocollapse */
FFilePreviewAdaptUnifileDirective.ctorParameters = () => [
    { type: FfilepreviewAdaptUnifileService }
];
FFilePreviewAdaptUnifileDirective.propDecorators = {
    filePreviewEventHandler: [{ type: HostListener, args: ['filePreviewEvent', ['$event'],] }],
    fileDownloadEventHandler: [{ type: HostListener, args: ['fileDownloadEvent', ['$event'],] }],
    extendServerConfig: [{ type: Input }]
};
if (false) {
    /**
     * 处理扩展的服务器端配置
     * @type {?}
     * @private
     */
    FFilePreviewAdaptUnifileDirective.prototype._extendServeConfig;
    /**
     * @type {?}
     * @private
     */
    FFilePreviewAdaptUnifileDirective.prototype.previewSer;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmZpbGVwcmV2aWV3LWFkYXB0LXVuaWZpbGUuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9leHRlbmQtZmlsZXVwbG9hZC1hZGFwdC11bmlmaWxlLyIsInNvdXJjZXMiOlsibGliL2ZmaWxlcHJldmlldy1hZGFwdC11bmlmaWxlLmRpcmVjdGl2ZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLEtBQUssRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMvRCxPQUFPLEVBQUUsK0JBQStCLEVBQUUsTUFBTSxzQ0FBc0MsQ0FBQztBQU12RixNQUFNLE9BQU8saUNBQWlDOzs7O0lBcUMxQyxZQUFvQixVQUEyQztRQUEzQyxlQUFVLEdBQVYsVUFBVSxDQUFpQzs7OztRQVR2RCx1QkFBa0IsR0FBQyxJQUFJLENBQUM7SUFXaEMsQ0FBQzs7Ozs7O0lBakNELHVCQUF1QixDQUFDLFFBQVE7UUFDNUIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxXQUFXLENBQUMsUUFBUSxFQUFFLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxDQUFDO0lBQ25FLENBQUM7Ozs7OztJQU1ELHdCQUF3QixDQUFDLFVBQVU7UUFDL0IsMkNBQTJDO1FBQzNDLElBQUksVUFBVSxJQUFFLFVBQVUsQ0FBQyxXQUFXLENBQUMsQ0FBQyxNQUFNLEdBQUMsQ0FBQyxFQUFFO1lBQzlDLElBQUksVUFBVSxDQUFDLFdBQVcsQ0FBQyxDQUFDLE1BQU0sR0FBQyxDQUFDLEVBQUU7Z0JBQ2xDLElBQUksQ0FBQyxVQUFVLENBQUMsMkJBQTJCLENBQUMsVUFBVSxDQUFDLFdBQVcsQ0FBQyxFQUFDLFVBQVUsQ0FBQyxNQUFNLENBQUMsRUFBRSxJQUFJLENBQUMsa0JBQWtCLENBQUMsQ0FBQzthQUNwSDtpQkFBSTtnQkFDRCxJQUFJLENBQUMsVUFBVSxDQUFDLFlBQVksQ0FBQyxVQUFVLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUUsSUFBSSxDQUFDLGtCQUFrQixDQUFDLENBQUM7YUFDckY7U0FDSjtJQUNMLENBQUM7Ozs7O0lBTUQsSUFDSSxrQkFBa0IsQ0FBQyxLQUFLO1FBQ3hCLElBQUksQ0FBQyxrQkFBa0IsR0FBQyxLQUFLLENBQUM7UUFDOUIsSUFBSSxDQUFDLFVBQVUsQ0FBQywyQkFBMkIsQ0FBQyxLQUFLLENBQUMsQ0FBQztJQUN2RCxDQUFDOzs7O0lBQ0QsSUFBSSxrQkFBa0I7UUFDbEIsT0FBTyxJQUFJLENBQUMsa0JBQWtCLENBQUM7SUFDbkMsQ0FBQzs7O1lBeENKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsNEJBQTRCO2dCQUN0QyxTQUFTLEVBQUMsQ0FBQywrQkFBK0IsQ0FBQzthQUM5Qzs7OztZQUxRLCtCQUErQjs7O3NDQVduQyxZQUFZLFNBQUMsa0JBQWtCLEVBQUUsQ0FBQyxRQUFRLENBQUM7dUNBUTNDLFlBQVksU0FBQyxtQkFBbUIsRUFBRSxDQUFDLFFBQVEsQ0FBQztpQ0FnQjVDLEtBQUs7Ozs7Ozs7O0lBRE4sK0RBQWdDOzs7OztJQVNwQix1REFBbUQiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBEaXJlY3RpdmUsIEhvc3RMaXN0ZW5lciwgSW5wdXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRmZpbGVwcmV2aWV3QWRhcHRVbmlmaWxlU2VydmljZSB9IGZyb20gJy4vZmZpbGVwcmV2aWV3LWFkYXB0LXVuaWZpbGUuc2VydmljZSc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICAgIHNlbGVjdG9yOiAnW2ZGaWxlUHJldmlld0FkYXB0VW5pZmlsZV0nLFxyXG4gICAgcHJvdmlkZXJzOltGZmlsZXByZXZpZXdBZGFwdFVuaWZpbGVTZXJ2aWNlXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgRkZpbGVQcmV2aWV3QWRhcHRVbmlmaWxlRGlyZWN0aXZlIHtcclxuICAgIC8qKlxyXG4gICAgICog5o2V6I636aKE6KeI5LqL5Lu2XHJcbiAgICAgKiBAcGFyYW0gZmlsZUluZm8gXHJcbiAgICAgKi9cclxuICAgIEBIb3N0TGlzdGVuZXIoJ2ZpbGVQcmV2aWV3RXZlbnQnLCBbJyRldmVudCddKVxyXG4gICAgZmlsZVByZXZpZXdFdmVudEhhbmRsZXIoZmlsZUluZm8pIHtcclxuICAgICAgICB0aGlzLnByZXZpZXdTZXIucHJldmlld0ZpbGUoZmlsZUluZm8sIHRoaXMuZXh0ZW5kU2VydmVyQ29uZmlnKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5o2V6I635LiL6L295LqL5Lu2XHJcbiAgICAgKiBAcGFyYW0gZmlsZUluZm8gXHJcbiAgICAgKi9cclxuICAgIEBIb3N0TGlzdGVuZXIoJ2ZpbGVEb3dubG9hZEV2ZW50JywgWyckZXZlbnQnXSlcclxuICAgIGZpbGVEb3dubG9hZEV2ZW50SGFuZGxlcihkb3dubG9hZEV2KSB7XHJcbiAgICAgICAgLy8g5aaC5p6c5piv5om56YeP5LiL6L29LCBkb3dubG9hZEV2PXtmaWxlSW5mb3M6W10sbmFtZTp9XHJcbiAgICAgICAgaWYgKGRvd25sb2FkRXYmJmRvd25sb2FkRXZbJ2ZpbGVJbmZvcyddLmxlbmd0aD4wKSB7XHJcbiAgICAgICAgICAgIGlmIChkb3dubG9hZEV2WydmaWxlSW5mb3MnXS5sZW5ndGg+MSkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5wcmV2aWV3U2VyLm11bHRpRG93bmxvYWRGaWxlc1dpZHRoTmFtZShkb3dubG9hZEV2WydmaWxlSW5mb3MnXSxkb3dubG9hZEV2WyduYW1lJ10sIHRoaXMuZXh0ZW5kU2VydmVyQ29uZmlnKTtcclxuICAgICAgICAgICAgfWVsc2V7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnByZXZpZXdTZXIuZG93bmxvYWRGaWxlKGRvd25sb2FkRXZbJ2ZpbGVJbmZvcyddWzBdLCB0aGlzLmV4dGVuZFNlcnZlckNvbmZpZyk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9ICAgICAgICBcclxuICAgIH1cclxuXHJcbiAgICAvKipcclxuICAgICAqIOWkhOeQhuaJqeWxleeahOacjeWKoeWZqOerr+mFjee9rlxyXG4gICAgICovXHJcbiAgICBwcml2YXRlIF9leHRlbmRTZXJ2ZUNvbmZpZz1udWxsO1xyXG4gICAgQElucHV0KCkgXHJcbiAgICBzZXQgZXh0ZW5kU2VydmVyQ29uZmlnKHZhbHVlKXtcclxuICAgICAgICB0aGlzLl9leHRlbmRTZXJ2ZUNvbmZpZz12YWx1ZTtcclxuICAgICAgICB0aGlzLnByZXZpZXdTZXIuc2V0UHJldml3RXh0ZW5kU2VydmVyQ29uZmlnKHZhbHVlKTtcclxuICAgIH0gXHJcbiAgICBnZXQgZXh0ZW5kU2VydmVyQ29uZmlnKCl7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2V4dGVuZFNlcnZlQ29uZmlnO1xyXG4gICAgfVxyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBwcmV2aWV3U2VyOiBGZmlsZXByZXZpZXdBZGFwdFVuaWZpbGVTZXJ2aWNlKSB7XHJcblxyXG4gICAgfVxyXG5cclxufVxyXG4iXX0=