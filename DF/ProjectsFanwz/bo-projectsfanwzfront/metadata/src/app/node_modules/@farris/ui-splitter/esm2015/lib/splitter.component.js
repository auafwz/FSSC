/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, HostBinding, Input, ContentChildren, QueryList } from '@angular/core';
import { SplitterPaneComponent } from './splitter-pane.component';
export class SplitterComponent {
    constructor() {
        this.cls = true;
        this.orientation = "horizontal";
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        // console.log(this.splitterPane)
        // const length = this.splitterPane.length;
        // const cls = 'f-col-w' + Math.floor(12 / length);
        // if (this.orientation === 'horizontal') {
        //   this.splitterPane.forEach((item, index) => {
        //     if (index < length - 1) {
        //       item.cls += 'd-flex flex-column farris-lsection ' + cls;
        //     }
        //     if (index === length - 1) {
        //       item.cls += 'farris-rsection farris-overflow-y-auto f-utils-fill';
        //     }
        //   })
        // }
    }
}
SplitterComponent.decorators = [
    { type: Component, args: [{
                selector: 'farris-splitter',
                template: `
    <ng-content></ng-content>
  `
            }] }
];
/** @nocollapse */
SplitterComponent.ctorParameters = () => [];
SplitterComponent.propDecorators = {
    cls: [{ type: HostBinding, args: ['class.f-component-splitter',] }],
    orientation: [{ type: Input }],
    splitterPane: [{ type: ContentChildren, args: [SplitterPaneComponent,] }]
};
if (false) {
    /** @type {?} */
    SplitterComponent.prototype.cls;
    /** @type {?} */
    SplitterComponent.prototype.orientation;
    /** @type {?} */
    SplitterComponent.prototype.splitterPane;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoic3BsaXR0ZXIuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1zcGxpdHRlci8iLCJzb3VyY2VzIjpbImxpYi9zcGxpdHRlci5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxTQUFTLEVBQVUsV0FBVyxFQUFFLEtBQUssRUFBRSxlQUFlLEVBQW9CLFNBQVMsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUNwSCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQkFBMkIsQ0FBQztBQVNsRSxNQUFNLE9BQU8saUJBQWlCO0lBUTVCO1FBTjJDLFFBQUcsR0FBRyxJQUFJLENBQUM7UUFFN0MsZ0JBQVcsR0FBRyxZQUFZLENBQUM7SUFJcEIsQ0FBQzs7OztJQUVqQixRQUFRO0lBRVIsQ0FBQzs7OztJQUVELGtCQUFrQjtRQUNoQixpQ0FBaUM7UUFDakMsMkNBQTJDO1FBQzNDLG1EQUFtRDtRQUNuRCwyQ0FBMkM7UUFDM0MsaURBQWlEO1FBQ2pELGdDQUFnQztRQUNoQyxpRUFBaUU7UUFDakUsUUFBUTtRQUNSLGtDQUFrQztRQUNsQywyRUFBMkU7UUFDM0UsUUFBUTtRQUNSLE9BQU87UUFDUCxJQUFJO0lBQ04sQ0FBQzs7O1lBbkNGLFNBQVMsU0FBQztnQkFDVCxRQUFRLEVBQUUsaUJBQWlCO2dCQUMzQixRQUFRLEVBQUU7O0dBRVQ7YUFFRjs7Ozs7a0JBR0UsV0FBVyxTQUFDLDRCQUE0QjswQkFFeEMsS0FBSzsyQkFFTCxlQUFlLFNBQUMscUJBQXFCOzs7O0lBSnRDLGdDQUFzRDs7SUFFdEQsd0NBQW9DOztJQUVwQyx5Q0FBdUYiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIE9uSW5pdCwgSG9zdEJpbmRpbmcsIElucHV0LCBDb250ZW50Q2hpbGRyZW4sIEFmdGVyQ29udGVudEluaXQsIFF1ZXJ5TGlzdCB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBTcGxpdHRlclBhbmVDb21wb25lbnQgfSBmcm9tICcuL3NwbGl0dGVyLXBhbmUuY29tcG9uZW50JztcclxuXHJcbkBDb21wb25lbnQoe1xyXG4gIHNlbGVjdG9yOiAnZmFycmlzLXNwbGl0dGVyJyxcclxuICB0ZW1wbGF0ZTogYFxyXG4gICAgPG5nLWNvbnRlbnQ+PC9uZy1jb250ZW50PlxyXG4gIGAsXHJcbiAgc3R5bGVzOiBbXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgU3BsaXR0ZXJDb21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsIEFmdGVyQ29udGVudEluaXQge1xyXG5cclxuICBASG9zdEJpbmRpbmcoJ2NsYXNzLmYtY29tcG9uZW50LXNwbGl0dGVyJykgY2xzID0gdHJ1ZTtcclxuXHJcbiAgQElucHV0KCkgb3JpZW50YXRpb24gPSBcImhvcml6b250YWxcIjtcclxuXHJcbiAgQENvbnRlbnRDaGlsZHJlbihTcGxpdHRlclBhbmVDb21wb25lbnQpIHNwbGl0dGVyUGFuZTogUXVlcnlMaXN0PFNwbGl0dGVyUGFuZUNvbXBvbmVudD47XHJcblxyXG4gIGNvbnN0cnVjdG9yKCkgeyB9XHJcblxyXG4gIG5nT25Jbml0KCkge1xyXG5cclxuICB9XHJcblxyXG4gIG5nQWZ0ZXJDb250ZW50SW5pdCgpIHtcclxuICAgIC8vIGNvbnNvbGUubG9nKHRoaXMuc3BsaXR0ZXJQYW5lKVxyXG4gICAgLy8gY29uc3QgbGVuZ3RoID0gdGhpcy5zcGxpdHRlclBhbmUubGVuZ3RoO1xyXG4gICAgLy8gY29uc3QgY2xzID0gJ2YtY29sLXcnICsgTWF0aC5mbG9vcigxMiAvIGxlbmd0aCk7XHJcbiAgICAvLyBpZiAodGhpcy5vcmllbnRhdGlvbiA9PT0gJ2hvcml6b250YWwnKSB7XHJcbiAgICAvLyAgIHRoaXMuc3BsaXR0ZXJQYW5lLmZvckVhY2goKGl0ZW0sIGluZGV4KSA9PiB7XHJcbiAgICAvLyAgICAgaWYgKGluZGV4IDwgbGVuZ3RoIC0gMSkge1xyXG4gICAgLy8gICAgICAgaXRlbS5jbHMgKz0gJ2QtZmxleCBmbGV4LWNvbHVtbiBmYXJyaXMtbHNlY3Rpb24gJyArIGNscztcclxuICAgIC8vICAgICB9XHJcbiAgICAvLyAgICAgaWYgKGluZGV4ID09PSBsZW5ndGggLSAxKSB7XHJcbiAgICAvLyAgICAgICBpdGVtLmNscyArPSAnZmFycmlzLXJzZWN0aW9uIGZhcnJpcy1vdmVyZmxvdy15LWF1dG8gZi11dGlscy1maWxsJztcclxuICAgIC8vICAgICB9XHJcbiAgICAvLyAgIH0pXHJcbiAgICAvLyB9XHJcbiAgfVxyXG5cclxufVxyXG4iXX0=