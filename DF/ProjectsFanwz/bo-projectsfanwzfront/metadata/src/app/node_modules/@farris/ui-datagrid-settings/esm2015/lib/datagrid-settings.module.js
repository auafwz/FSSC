/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { FormsModule } from '@angular/forms';
import { CommonModule } from '@angular/common';
import { NgModule } from '@angular/core';
import { ModalModule } from '@farris/ui-modal';
import { GRID_SETTINGS_SERVICE } from '@farris/ui-datagrid';
import { MultiSelectModule } from '@farris/ui-multi-select';
import { LocaleModule } from '@farris/ui-locale';
import { MessagerModule } from '@farris/ui-messager';
import { DatagridSettingsComponent } from './datagrid-settings.component';
import { DatagridSettingsService } from './datagrid-settings.service';
import { DatagridSortSettingComponent } from './datagrid-sort-setting.component';
import { DatagridViewColumnsComponent } from './datagrid-view-columns.component';
import { FarrisCommonModule } from '@farris/ui-common';
import { ColumnFormatSettingComponent } from './column-format-setting/column-format-setting.component';
import { ColumnGroupSettingComponent } from './column-group/column-group.component';
import { ColumnVisibleDragDirective } from './column-format-setting/column-visible-drag.directive';
import { ColumnGroupDragDirective } from './column-group/column-group-drag.directive';
import { ComboListModule } from '@farris/ui-combo-list';
import { SimpleColumnsComponent } from './simple-mode/simple-columns.component';
export class DatagridSettingsModule {
    /**
     * @param {?=} apiUri
     * @return {?}
     */
    static forRoot(apiUri = '') {
        return {
            ngModule: DatagridSettingsModule,
            providers: [
                { provide: GRID_SETTINGS_SERVICE, useClass: DatagridSettingsService }
            ]
        };
    }
}
DatagridSettingsModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    DatagridSettingsComponent,
                    DatagridSortSettingComponent,
                    DatagridViewColumnsComponent,
                    ColumnFormatSettingComponent,
                    ColumnGroupSettingComponent,
                    ColumnVisibleDragDirective,
                    ColumnGroupDragDirective,
                    SimpleColumnsComponent
                ],
                imports: [
                    CommonModule,
                    FormsModule,
                    MultiSelectModule,
                    ComboListModule,
                    FarrisCommonModule.forRoot(),
                    MessagerModule.forRoot(),
                    LocaleModule.forRoot(),
                    ModalModule.forRoot(),
                ],
                entryComponents: [
                    DatagridSettingsComponent,
                    SimpleColumnsComponent
                ],
                exports: [
                    DatagridSettingsComponent,
                    SimpleColumnsComponent
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWdyaWQtc2V0dGluZ3MubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1kYXRhZ3JpZC1zZXR0aW5ncy8iLCJzb3VyY2VzIjpbImxpYi9kYXRhZ3JpZC1zZXR0aW5ncy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUNBLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxxQkFBcUIsRUFBQyxNQUFNLHFCQUFxQixDQUFDO0FBQzNELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzVELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFFckQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFFMUUsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNkJBQTZCLENBQUM7QUFDdEUsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDakYsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0sbUNBQW1DLENBQUM7QUFDakYsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLDRCQUE0QixFQUFFLE1BQU0seURBQXlELENBQUM7QUFDdkcsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sdUNBQXVDLENBQUM7QUFDcEYsT0FBTyxFQUFFLDBCQUEwQixFQUFFLE1BQU0sdURBQXVELENBQUM7QUFDbkcsT0FBTyxFQUFFLHdCQUF3QixFQUFFLE1BQU0sNENBQTRDLENBQUM7QUFDdEYsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQ3hELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHdDQUF3QyxDQUFDO0FBaUNoRixNQUFNLE9BQU8sc0JBQXNCOzs7OztJQUMvQixNQUFNLENBQUMsT0FBTyxDQUFDLE1BQU0sR0FBRyxFQUFFO1FBQ3RCLE9BQU87WUFDSCxRQUFRLEVBQUUsc0JBQXNCO1lBQ2hDLFNBQVMsRUFBRTtnQkFDUCxFQUFFLE9BQU8sRUFBRSxxQkFBcUIsRUFBRSxRQUFRLEVBQUUsdUJBQXVCLEVBQUU7YUFDeEU7U0FDSixDQUFDO0lBQ04sQ0FBQzs7O1lBdENKLFFBQVEsU0FBQztnQkFDTixZQUFZLEVBQUU7b0JBQ1YseUJBQXlCO29CQUN6Qiw0QkFBNEI7b0JBQzVCLDRCQUE0QjtvQkFDNUIsNEJBQTRCO29CQUM1QiwyQkFBMkI7b0JBQzNCLDBCQUEwQjtvQkFDMUIsd0JBQXdCO29CQUN4QixzQkFBc0I7aUJBQ3pCO2dCQUNELE9BQU8sRUFBRTtvQkFDTCxZQUFZO29CQUNaLFdBQVc7b0JBQ1gsaUJBQWlCO29CQUNqQixlQUFlO29CQUNmLGtCQUFrQixDQUFDLE9BQU8sRUFBRTtvQkFDNUIsY0FBYyxDQUFDLE9BQU8sRUFBRTtvQkFDeEIsWUFBWSxDQUFDLE9BQU8sRUFBRTtvQkFDdEIsV0FBVyxDQUFDLE9BQU8sRUFBRTtpQkFDeEI7Z0JBQ0QsZUFBZSxFQUFFO29CQUNiLHlCQUF5QjtvQkFDekIsc0JBQXNCO2lCQUN6QjtnQkFDRCxPQUFPLEVBQUU7b0JBQ0wseUJBQXlCO29CQUN6QixzQkFBc0I7aUJBQ3pCO2FBQ0oiLCJzb3VyY2VzQ29udGVudCI6WyJcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbic7XHJcbmltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE1vZGFsTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1tb2RhbCc7XHJcbmltcG9ydCB7IEdSSURfU0VUVElOR1NfU0VSVklDRX0gZnJvbSAnQGZhcnJpcy91aS1kYXRhZ3JpZCc7XHJcbmltcG9ydCB7IE11bHRpU2VsZWN0TW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1tdWx0aS1zZWxlY3QnO1xyXG5pbXBvcnQgeyBMb2NhbGVNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWxvY2FsZSc7XHJcbmltcG9ydCB7IE1lc3NhZ2VyTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1tZXNzYWdlcic7XHJcblxyXG5pbXBvcnQgeyBEYXRhZ3JpZFNldHRpbmdzQ29tcG9uZW50IH0gZnJvbSAnLi9kYXRhZ3JpZC1zZXR0aW5ncy5jb21wb25lbnQnO1xyXG5cclxuaW1wb3J0IHsgRGF0YWdyaWRTZXR0aW5nc1NlcnZpY2UgfSBmcm9tICcuL2RhdGFncmlkLXNldHRpbmdzLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBEYXRhZ3JpZFNvcnRTZXR0aW5nQ29tcG9uZW50IH0gZnJvbSAnLi9kYXRhZ3JpZC1zb3J0LXNldHRpbmcuY29tcG9uZW50JztcclxuaW1wb3J0IHsgRGF0YWdyaWRWaWV3Q29sdW1uc0NvbXBvbmVudCB9IGZyb20gJy4vZGF0YWdyaWQtdmlldy1jb2x1bW5zLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IEZhcnJpc0NvbW1vbk1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktY29tbW9uJztcclxuaW1wb3J0IHsgQ29sdW1uRm9ybWF0U2V0dGluZ0NvbXBvbmVudCB9IGZyb20gJy4vY29sdW1uLWZvcm1hdC1zZXR0aW5nL2NvbHVtbi1mb3JtYXQtc2V0dGluZy5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBDb2x1bW5Hcm91cFNldHRpbmdDb21wb25lbnQgfSBmcm9tICcuL2NvbHVtbi1ncm91cC9jb2x1bW4tZ3JvdXAuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQ29sdW1uVmlzaWJsZURyYWdEaXJlY3RpdmUgfSBmcm9tICcuL2NvbHVtbi1mb3JtYXQtc2V0dGluZy9jb2x1bW4tdmlzaWJsZS1kcmFnLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IENvbHVtbkdyb3VwRHJhZ0RpcmVjdGl2ZSB9IGZyb20gJy4vY29sdW1uLWdyb3VwL2NvbHVtbi1ncm91cC1kcmFnLmRpcmVjdGl2ZSc7XHJcbmltcG9ydCB7IENvbWJvTGlzdE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktY29tYm8tbGlzdCc7XHJcbmltcG9ydCB7IFNpbXBsZUNvbHVtbnNDb21wb25lbnQgfSBmcm9tICcuL3NpbXBsZS1tb2RlL3NpbXBsZS1jb2x1bW5zLmNvbXBvbmVudCc7XHJcblxyXG5cclxuQE5nTW9kdWxlKHtcclxuICAgIGRlY2xhcmF0aW9uczogW1xyXG4gICAgICAgIERhdGFncmlkU2V0dGluZ3NDb21wb25lbnQsXHJcbiAgICAgICAgRGF0YWdyaWRTb3J0U2V0dGluZ0NvbXBvbmVudCxcclxuICAgICAgICBEYXRhZ3JpZFZpZXdDb2x1bW5zQ29tcG9uZW50LFxyXG4gICAgICAgIENvbHVtbkZvcm1hdFNldHRpbmdDb21wb25lbnQsXHJcbiAgICAgICAgQ29sdW1uR3JvdXBTZXR0aW5nQ29tcG9uZW50LFxyXG4gICAgICAgIENvbHVtblZpc2libGVEcmFnRGlyZWN0aXZlLFxyXG4gICAgICAgIENvbHVtbkdyb3VwRHJhZ0RpcmVjdGl2ZSxcclxuICAgICAgICBTaW1wbGVDb2x1bW5zQ29tcG9uZW50XHJcbiAgICBdLFxyXG4gICAgaW1wb3J0czogW1xyXG4gICAgICAgIENvbW1vbk1vZHVsZSxcclxuICAgICAgICBGb3Jtc01vZHVsZSxcclxuICAgICAgICBNdWx0aVNlbGVjdE1vZHVsZSxcclxuICAgICAgICBDb21ib0xpc3RNb2R1bGUsXHJcbiAgICAgICAgRmFycmlzQ29tbW9uTW9kdWxlLmZvclJvb3QoKSxcclxuICAgICAgICBNZXNzYWdlck1vZHVsZS5mb3JSb290KCksXHJcbiAgICAgICAgTG9jYWxlTW9kdWxlLmZvclJvb3QoKSxcclxuICAgICAgICBNb2RhbE1vZHVsZS5mb3JSb290KCksXHJcbiAgICBdLFxyXG4gICAgZW50cnlDb21wb25lbnRzOiBbXHJcbiAgICAgICAgRGF0YWdyaWRTZXR0aW5nc0NvbXBvbmVudCxcclxuICAgICAgICBTaW1wbGVDb2x1bW5zQ29tcG9uZW50XHJcbiAgICBdLFxyXG4gICAgZXhwb3J0czogW1xyXG4gICAgICAgIERhdGFncmlkU2V0dGluZ3NDb21wb25lbnQsXHJcbiAgICAgICAgU2ltcGxlQ29sdW1uc0NvbXBvbmVudFxyXG4gICAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgRGF0YWdyaWRTZXR0aW5nc01vZHVsZSB7XHJcbiAgICBzdGF0aWMgZm9yUm9vdChhcGlVcmkgPSAnJyk6IE1vZHVsZVdpdGhQcm92aWRlcnMge1xyXG4gICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgIG5nTW9kdWxlOiBEYXRhZ3JpZFNldHRpbmdzTW9kdWxlLFxyXG4gICAgICAgICAgICBwcm92aWRlcnM6IFtcclxuICAgICAgICAgICAgICAgIHsgcHJvdmlkZTogR1JJRF9TRVRUSU5HU19TRVJWSUNFLCB1c2VDbGFzczogRGF0YWdyaWRTZXR0aW5nc1NlcnZpY2UgfVxyXG4gICAgICAgICAgICBdXHJcbiAgICAgICAgfTtcclxuICAgIH1cclxufVxyXG4iXX0=