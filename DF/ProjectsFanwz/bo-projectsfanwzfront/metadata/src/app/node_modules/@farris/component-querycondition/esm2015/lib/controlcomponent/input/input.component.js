/**
 * @fileoverview added by tsickle
 * Generated from: lib/controlcomponent/input/input.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output } from '@angular/core';
import { SolutionService } from '../../service/solution.service';
export class InputComponent {
    /**
     * @param {?} solutionService
     */
    constructor(solutionService) {
        this.solutionService = solutionService;
        this.conditionChange = new EventEmitter();
    }
    /**
     * @param {?} textItem
     * @return {?}
     */
    set item(textItem) {
        this._inputItem = textItem;
    }
    /**
     * @return {?}
     */
    get item() {
        return this.constructTextItem(this._inputItem);
    }
    /**
     * @param {?} textItem
     * @return {?}
     */
    constructTextItem(textItem) {
        /** @type {?} */
        const textValueObj = (/** @type {?} */ (textItem.value));
        textValueObj.value = textValueObj.value && textValueObj.value.trim();
        textItem.value = textValueObj;
        return textItem;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        this.testId = this.solutionService.getGuid();
        this.placeholder = (this.item.placeHolder) ? (this.item.placeHolder) : (this.item.control.placeholder);
    }
    /**
     * @param {?} field
     * @return {?}
     */
    getConditionItemTitle(field) {
        return this.solutionService.getConditionItemTitle(field);
    }
    /**
     * @return {?}
     */
    onBlur() {
        this.conditionChange.emit();
    }
}
InputComponent.decorators = [
    { type: Component, args: [{
                selector: 'app-solution-input',
                template: "<div class=\"farris-group-wrap\" id=\"{{item.id}}\">\r\n    <div class=\"form-group farris-form-group  common-group\"  [ngClass]=\"{'q-state-readonly':item.readonly}\">\r\n        <label class=\"col-form-label\" *ngIf=\"item\" title=\"{{getConditionItemTitle(item)}}\">\r\n            <span class=\"farris-label-info text-danger\" *ngIf=\"item.control.isRequired()\">*</span>\r\n            <span class=\"farris-label-text\">{{item.fieldName}}</span>\r\n        </label>\r\n        <div class=\"farris-input-wrap\">\r\n            <input-group \r\n                [(ngModel)]=\"item.value.value\" \r\n                name=\"{{item.fieldName}}\" \r\n                id=\"{{testId}}\"\r\n                (blurHandle)=\"onBlur()\"\r\n                [placeholder]=\"placeholder\"\r\n                [readonly]=\"item.readonly\">\r\n            </input-group>\r\n        </div>\r\n    </div>\r\n</div>"
            }] }
];
/** @nocollapse */
InputComponent.ctorParameters = () => [
    { type: SolutionService }
];
InputComponent.propDecorators = {
    item: [{ type: Input }],
    conditionChange: [{ type: Output, args: ['conditionChange',] }]
};
if (false) {
    /**
     * QueryCondition类型
     * @type {?}
     */
    InputComponent.prototype._inputItem;
    /** @type {?} */
    InputComponent.prototype.placeholder;
    /** @type {?} */
    InputComponent.prototype.testId;
    /** @type {?} */
    InputComponent.prototype.conditionChange;
    /**
     * @type {?}
     * @private
     */
    InputComponent.prototype.solutionService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5wdXQuY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9jb21wb25lbnQtcXVlcnljb25kaXRpb24vIiwic291cmNlcyI6WyJsaWIvY29udHJvbGNvbXBvbmVudC9pbnB1dC9pbnB1dC5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsU0FBUyxFQUFFLEtBQUssRUFBcUIsWUFBWSxFQUFFLE1BQU0sRUFBQyxNQUFNLGVBQWUsQ0FBQztBQUV6RixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFRakUsTUFBTSxPQUFPLGNBQWM7Ozs7SUEwQnZCLFlBQW9CLGVBQStCO1FBQS9CLG9CQUFlLEdBQWYsZUFBZSxDQUFnQjtRQVR4QixvQkFBZSxHQUFHLElBQUksWUFBWSxFQUFFLENBQUM7SUFTWCxDQUFDOzs7OztJQWxCdEQsSUFDSSxJQUFJLENBQUMsUUFBYTtRQUNsQixJQUFJLENBQUMsVUFBVSxHQUFHLFFBQVEsQ0FBQztJQUMvQixDQUFDOzs7O0lBQ0QsSUFBSSxJQUFJO1FBQ0osT0FBTyxJQUFJLENBQUMsaUJBQWlCLENBQUMsSUFBSSxDQUFDLFVBQVUsQ0FBQyxDQUFDO0lBQ25ELENBQUM7Ozs7O0lBS0QsaUJBQWlCLENBQUMsUUFBd0I7O2NBQ2hDLFlBQVksR0FBRyxtQkFBQSxRQUFRLENBQUMsS0FBSyxFQUFhO1FBQ2hELFlBQVksQ0FBQyxLQUFLLEdBQUcsWUFBWSxDQUFDLEtBQUssSUFBSSxZQUFZLENBQUMsS0FBSyxDQUFDLElBQUksRUFBRSxDQUFDO1FBQ3JFLFFBQVEsQ0FBQyxLQUFLLEdBQUcsWUFBWSxDQUFDO1FBQzlCLE9BQU8sUUFBUSxDQUFDO0lBQ3BCLENBQUM7Ozs7SUFJRCxRQUFRO1FBQ0osSUFBSSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFDLE9BQU8sRUFBRSxDQUFDO1FBQzdDLElBQUksQ0FBQyxXQUFXLEdBQUcsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsV0FBVyxDQUFDLENBQUM7SUFDM0csQ0FBQzs7Ozs7SUFFRCxxQkFBcUIsQ0FBQyxLQUFvQjtRQUN0QyxPQUFPLElBQUksQ0FBQyxlQUFlLENBQUMscUJBQXFCLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDN0QsQ0FBQzs7OztJQUVELE1BQU07UUFDRixJQUFJLENBQUMsZUFBZSxDQUFDLElBQUksRUFBRSxDQUFDO0lBQ2hDLENBQUM7OztZQTVDSixTQUFTLFNBQUM7Z0JBQ1AsUUFBUSxFQUFFLG9CQUFvQjtnQkFDOUIsNjRCQUFxQzthQUN4Qzs7OztZQU5RLGVBQWU7OzttQkFnQm5CLEtBQUs7OEJBU0wsTUFBTSxTQUFDLGlCQUFpQjs7Ozs7OztJQWJ6QixvQ0FBMkI7O0lBRTNCLHFDQUFvQjs7SUFTcEIsZ0NBQWU7O0lBRWYseUNBQWdFOzs7OztJQVNwRCx5Q0FBdUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBDb21wb25lbnQsIElucHV0LCBPbkluaXQsIE9uQ2hhbmdlcywgRXZlbnRFbWl0dGVyLCBPdXRwdXR9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBRdWVyeUNvbmRpdGlvbiB9IGZyb20gJy4uLy4uL2VudGl0eS9xdWVyeWNvbmRpdGlvbic7XHJcbmltcG9ydCB7IFNvbHV0aW9uU2VydmljZSB9IGZyb20gJy4uLy4uL3NlcnZpY2Uvc29sdXRpb24uc2VydmljZSc7XHJcbmltcG9ydCB7IFRleHRWYWx1ZSB9IGZyb20gJy4uLy4uL2VudGl0eS9jb25kaXRpb252YWx1ZS90ZXh0dmFsdWUnO1xyXG5cclxuQENvbXBvbmVudCh7XHJcbiAgICBzZWxlY3RvcjogJ2FwcC1zb2x1dGlvbi1pbnB1dCcsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vaW5wdXQuY29tcG9uZW50Lmh0bWwnLFxyXG59KVxyXG5cclxuZXhwb3J0IGNsYXNzIElucHV0Q29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0e1xyXG4gICAgLyoqXHJcbiAgICAgKiBRdWVyeUNvbmRpdGlvbuexu+Wei1xyXG4gICAgICovXHJcbiAgICBfaW5wdXRJdGVtOiBRdWVyeUNvbmRpdGlvbjtcclxuXHJcbiAgICBwbGFjZWhvbGRlcjogc3RyaW5nO1xyXG5cclxuICAgIEBJbnB1dCgpXHJcbiAgICBzZXQgaXRlbSh0ZXh0SXRlbTogYW55KSB7XHJcbiAgICAgICAgdGhpcy5faW5wdXRJdGVtID0gdGV4dEl0ZW07XHJcbiAgICB9XHJcbiAgICBnZXQgaXRlbSgpOiBhbnl7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuY29uc3RydWN0VGV4dEl0ZW0odGhpcy5faW5wdXRJdGVtKTtcclxuICAgIH1cclxuICAgIHRlc3RJZDogc3RyaW5nO1xyXG5cclxuICAgIEBPdXRwdXQoJ2NvbmRpdGlvbkNoYW5nZScpIGNvbmRpdGlvbkNoYW5nZSA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuXHJcbiAgICBjb25zdHJ1Y3RUZXh0SXRlbSh0ZXh0SXRlbTogUXVlcnlDb25kaXRpb24pOiBRdWVyeUNvbmRpdGlvbiB7XHJcbiAgICAgICAgY29uc3QgdGV4dFZhbHVlT2JqID0gdGV4dEl0ZW0udmFsdWUgYXMgVGV4dFZhbHVlO1xyXG4gICAgICAgIHRleHRWYWx1ZU9iai52YWx1ZSA9IHRleHRWYWx1ZU9iai52YWx1ZSAmJiB0ZXh0VmFsdWVPYmoudmFsdWUudHJpbSgpO1xyXG4gICAgICAgIHRleHRJdGVtLnZhbHVlID0gdGV4dFZhbHVlT2JqO1xyXG4gICAgICAgIHJldHVybiB0ZXh0SXRlbTtcclxuICAgIH1cclxuXHJcbiAgICBjb25zdHJ1Y3Rvcihwcml2YXRlIHNvbHV0aW9uU2VydmljZTpTb2x1dGlvblNlcnZpY2Upe31cclxuXHJcbiAgICBuZ09uSW5pdCgpOiB2b2lkIHtcclxuICAgICAgICB0aGlzLnRlc3RJZCA9IHRoaXMuc29sdXRpb25TZXJ2aWNlLmdldEd1aWQoKTtcclxuICAgICAgICB0aGlzLnBsYWNlaG9sZGVyID0gKHRoaXMuaXRlbS5wbGFjZUhvbGRlcikgPyAodGhpcy5pdGVtLnBsYWNlSG9sZGVyKSA6ICh0aGlzLml0ZW0uY29udHJvbC5wbGFjZWhvbGRlcik7XHJcbiAgICB9XHJcblxyXG4gICAgZ2V0Q29uZGl0aW9uSXRlbVRpdGxlKGZpZWxkOlF1ZXJ5Q29uZGl0aW9uKXtcclxuICAgICAgICByZXR1cm4gdGhpcy5zb2x1dGlvblNlcnZpY2UuZ2V0Q29uZGl0aW9uSXRlbVRpdGxlKGZpZWxkKTtcclxuICAgIH1cclxuICAgIFxyXG4gICAgb25CbHVyKCl7XHJcbiAgICAgICAgdGhpcy5jb25kaXRpb25DaGFuZ2UuZW1pdCgpO1xyXG4gICAgfVxyXG59Il19