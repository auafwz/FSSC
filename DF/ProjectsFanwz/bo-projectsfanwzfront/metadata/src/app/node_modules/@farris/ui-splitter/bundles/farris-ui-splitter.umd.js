(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@farris/ui-draggable')) :
    typeof define === 'function' && define.amd ? define('@farris/ui-splitter', ['exports', '@angular/core', '@farris/ui-draggable'], factory) :
    (factory((global.farris = global.farris || {}, global.farris['ui-splitter'] = {}),global.ng.core,global.uiDraggable));
}(this, (function (exports,i0,uiDraggable) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SplitterService = /** @class */ (function () {
        function SplitterService() {
        }
        SplitterService.decorators = [
            { type: i0.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        /** @nocollapse */
        SplitterService.ctorParameters = function () { return []; };
        /** @nocollapse */ SplitterService.ngInjectableDef = i0.defineInjectable({ factory: function SplitterService_Factory() { return new SplitterService(); }, token: SplitterService, providedIn: "root" });
        return SplitterService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SplitterPaneComponent = /** @class */ (function () {
        function SplitterPaneComponent() {
            this.cls = true;
        }
        /**
         * @return {?}
         */
        SplitterPaneComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
            };
        SplitterPaneComponent.decorators = [
            { type: i0.Component, args: [{
                        selector: 'farris-splitter-pane',
                        template: "\n    <ng-content></ng-content>\n  "
                    }] }
        ];
        /** @nocollapse */
        SplitterPaneComponent.ctorParameters = function () { return []; };
        SplitterPaneComponent.propDecorators = {
            cls: [{ type: i0.HostBinding, args: ['class.f-component-splitter-pane',] }]
        };
        return SplitterPaneComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SplitterComponent = /** @class */ (function () {
        function SplitterComponent() {
            this.cls = true;
            this.orientation = "horizontal";
        }
        /**
         * @return {?}
         */
        SplitterComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
            };
        /**
         * @return {?}
         */
        SplitterComponent.prototype.ngAfterContentInit = /**
         * @return {?}
         */
            function () {
                // console.log(this.splitterPane)
                // const length = this.splitterPane.length;
                // const cls = 'f-col-w' + Math.floor(12 / length);
                // if (this.orientation === 'horizontal') {
                //   this.splitterPane.forEach((item, index) => {
                //     if (index < length - 1) {
                //       item.cls += 'd-flex flex-column farris-lsection ' + cls;
                //     }
                //     if (index === length - 1) {
                //       item.cls += 'farris-rsection farris-overflow-y-auto f-utils-fill';
                //     }
                //   })
                // }
            };
        SplitterComponent.decorators = [
            { type: i0.Component, args: [{
                        selector: 'farris-splitter',
                        template: "\n    <ng-content></ng-content>\n  "
                    }] }
        ];
        /** @nocollapse */
        SplitterComponent.ctorParameters = function () { return []; };
        SplitterComponent.propDecorators = {
            cls: [{ type: i0.HostBinding, args: ['class.f-component-splitter',] }],
            orientation: [{ type: i0.Input }],
            splitterPane: [{ type: i0.ContentChildren, args: [SplitterPaneComponent,] }]
        };
        return SplitterComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SplitterModule = /** @class */ (function () {
        function SplitterModule() {
        }
        SplitterModule.decorators = [
            { type: i0.NgModule, args: [{
                        declarations: [
                            SplitterComponent,
                            SplitterPaneComponent
                        ],
                        imports: [
                            uiDraggable.AngularDraggableModule
                        ],
                        exports: [
                            SplitterComponent,
                            SplitterPaneComponent
                        ]
                    },] }
        ];
        return SplitterModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.SplitterService = SplitterService;
    exports.SplitterComponent = SplitterComponent;
    exports.SplitterPaneComponent = SplitterPaneComponent;
    exports.SplitterModule = SplitterModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=farris-ui-splitter.umd.js.map