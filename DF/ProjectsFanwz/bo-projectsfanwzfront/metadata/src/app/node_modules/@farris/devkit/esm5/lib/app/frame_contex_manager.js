/*
 * @Author: Witt
 * @Date: 2018-12-30 17:11:37
 * @Last Modified by: Witt
 * @Last Modified time: 2018-12-30 17:19:01
 */
// tslint:disable: max-line-length
import { Injectable } from '@angular/core';
import { AppContext } from './app_context';
/**
 * FrameContext管理类
 */
var FrameContextManager = /** @class */ (function () {
    /**
     * 构造函数
     */
    function FrameContextManager(appContext) {
        this.frameContextMap = new Map();
        this.frameContextSet = new Set();
        this.appContext = appContext;
    }
    /**
     * 注册FrameContext
     */
    FrameContextManager.prototype.regFrameContext = function (frameContext) {
        var frameId = frameContext.frameId;
        // 如果存在，先删除
        if (this.frameContextMap.has(frameId) === true) {
            var existedFrameContext = this.frameContextMap.get(frameId);
            this.frameContextMap.delete(frameId);
            this.frameContextSet.delete(existedFrameContext);
        }
        frameContext.index = this.frameContextSet.size;
        this.frameContextMap.set(frameId, frameContext);
        this.frameContextSet.add(frameContext);
    };
    /**
     * 注销组件注册
     */
    FrameContextManager.prototype.unregFrameContext = function (frameContext) {
        var frameId = frameContext.frameId;
        this.frameContextMap.delete(frameId);
        this.frameContextSet.delete(frameContext);
    };
    /**
     * 获取FrameContextMap
     */
    FrameContextManager.prototype.getFrameContextMap = function () {
        return this.frameContextMap;
    };
    /**
     * 获取全部FrameContext
     */
    FrameContextManager.prototype.getFrameContexts = function () {
        return Array.from(this.frameContextSet);
    };
    /**
     * 获取组合表单某个表单的所有frameContext
     * @param namespace 命名空间
     */
    FrameContextManager.prototype.getFrameContextsByNamespace = function (namespace) {
        return Array.from(this.frameContextSet).filter(function (frameContext) { return frameContext && frameContext.namespace === namespace; });
    };
    /**
     * 根据id获取FrameContext
     */
    FrameContextManager.prototype.getFrameContextById = function (frameId) {
        var targetFrameContext = this.frameContextMap.get(frameId);
        if (targetFrameContext) {
            return targetFrameContext;
        }
        return this.getFrameContextFromAllAppContexts(frameId);
    };
    /**
     * Get the root FrameContext instance
     * @return Return the FrameContext instance whose parent is null, and undefined otherwise.
     */
    FrameContextManager.prototype.getRootFrameContext = function () {
        var frameContexts = this.getFrameContexts();
        var rootFrameContext = frameContexts.find(function (frameContext) {
            return frameContext.parent === null;
        });
        return rootFrameContext;
    };
    /**
     * 遍历所有的AppContext查找指定的
     * @summary
     * 1、老表单中所有的frameId均不重复；
     * 2、现在隔离了AppContxt，在当前AppContext找不到的时候，查找所有AppContext；
     * 3、隔离后，标准的访问方式是通过事件通信，此处仅仅是临时兼容。
     */
    FrameContextManager.prototype.getFrameContextFromAllAppContexts = function (frameId) {
        if (!this.appContext.appContextManager) {
            return;
        }
        var targetFrameContext;
        var appContexts = this.appContext.appContextManager.getAppContexts();
        appContexts.some(function (appContext) {
            var frameContextMap = appContext.frameContextManager.getFrameContextMap();
            if (frameContextMap.has(frameId) === true) {
                targetFrameContext = frameContextMap.get(frameId);
                return true;
            }
            else {
                return false;
            }
        });
        return targetFrameContext;
    };
    FrameContextManager.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    FrameContextManager.ctorParameters = function () { return [
        { type: AppContext }
    ]; };
    return FrameContextManager;
}());
export { FrameContextManager };
//# sourceMappingURL=data:application/json;base64,