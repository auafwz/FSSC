/**
 * @fileoverview added by tsickle
 * Generated from: lib/search/srp.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output, ChangeDetectorRef, Injector } from '@angular/core';
import * as _ from 'lodash-es';
import { noDataImg } from '../../assets/resource';
import { ApiService } from '../../utils/api.service';
import { CommonUtil } from '../../utils/common.tool';
import { FavoritesTool } from '../../utils/favorites.tool';
import { ChangeType } from '../../utils/index.type';
import { StateMgrTool } from '../../utils/state.mgr.tool';
var SearchComponent = /** @class */ (function () {
    function SearchComponent(apiService, favoritesTool, stateMgr, cdr, injector) {
        this.apiService = apiService;
        this.favoritesTool = favoritesTool;
        this.stateMgr = stateMgr;
        this.cdr = cdr;
        this.injector = injector;
        this.closePanelChange = new EventEmitter();
        this.allChecked = false;
        this.selections = [];
        this.cloneSelections = [];
        this.allIndexId = 'allIndexId';
        this.noDataImg = noDataImg;
        this.totalItems = [];
        this.perPageItems = [];
        this.favoritesList = [];
        this.pageIndex = 1;
        this.pageTotal = 0;
        this.itemTotalCount = 0;
    }
    Object.defineProperty(SearchComponent.prototype, "onSearch", {
        set: /**
         * @param {?} value
         * @return {?}
         */
        function (value) {
            if (!!value) {
                this.loadSearchResult();
            }
            else {
                this.itemTotalCount = 0;
                this.totalItems = [];
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    SearchComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.selectionsSub.unsubscribe();
        if (this.enableFavorites) {
            this.favoritesSub.unsubscribe();
        }
    };
    /**
     * @return {?}
     */
    SearchComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.enableFavorites) {
            this.favoritesSub = this.favoritesTool.favoritesSubject.subscribe((/**
             * @param {?} data
             * @return {?}
             */
            function (data) {
                _this.favoritesList = data;
                _this.setFavorites();
            }));
        }
        this.selectionsSub = this.stateMgr.selectionsSubject.subscribe((/**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            if (data.changeType === ChangeType.ValueChanged) {
                _this.selections = _.cloneDeep(data.value);
                _this.toggleChecked();
            }
            else if (data.changeType === ChangeType.Remove) {
                _this.unSelectLine(data.value);
            }
            else if (data.changeType === ChangeType.Append) {
                _this.selectLine(data.value);
            }
            _this.cdr.detectChanges();
        }));
    };
    /**
     * @return {?}
     */
    SearchComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @private
     * @return {?}
     */
    SearchComponent.prototype.setFavorites = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        this.perPageItems.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            if (CommonUtil.findIndex(item[_this.primaryField], _this.primaryField, _this.favoritesList) !== -1) {
                item.inFavorites = true;
            }
            else {
                item.inFavorites = false;
            }
        }));
    };
    /**
     * @param {?} dir
     * @param {?} num
     * @return {?}
     */
    SearchComponent.prototype.turnOverPage = /**
     * @param {?} dir
     * @param {?} num
     * @return {?}
     */
    function (dir, num) {
        if ((dir === 'pre' && this.pageIndex === 1) || (dir === 'next' && this.pageIndex === this.pageTotal)) {
            return;
        }
        this.pageIndex = this.pageIndex + num;
        this.switchPage({ pageIndex: this.pageIndex });
    };
    /**
     * @param {?} inputEl
     * @param {?} maxNumber
     * @return {?}
     */
    SearchComponent.prototype.beforePageIndexChange = /**
     * @param {?} inputEl
     * @param {?} maxNumber
     * @return {?}
     */
    function (inputEl, maxNumber) {
        /** @type {?} */
        var target = (/** @type {?} */ (inputEl.target));
        /** @type {?} */
        var currentPageNumber = Number(target.value);
        if (currentPageNumber > maxNumber) {
            target.value = maxNumber;
        }
        else {
            if (currentPageNumber < 1) {
                target.value = 1;
            }
        }
        this.pageIndex = Number(target.value);
    };
    /**
     * @return {?}
     */
    SearchComponent.prototype.closePanel = /**
     * @return {?}
     */
    function () {
        this.totalItems = [];
        this.perPageItems = [];
        this.itemTotalCount = 0;
        this.pageTotal = 0;
        this.closePanelChange.emit(true);
    };
    /**
     * @return {?}
     */
    SearchComponent.prototype.toggleAll = /**
     * @return {?}
     */
    function () {
        if (!this.allChecked) {
            this.checkAll();
        }
        else {
            this.unCheckAll();
        }
        this.emitSelections(this.selections, ChangeType.ValueChanged);
    };
    /**
     * @param {?} data
     * @param {?} e
     * @return {?}
     */
    SearchComponent.prototype.toggleOne = /**
     * @param {?} data
     * @param {?} e
     * @return {?}
     */
    function (data, e) {
        if (data.checked) {
            if (this.multiSelect) {
                this.emitSelections(data, ChangeType.Remove);
            }
            else {
                this.emitSelections([]);
            }
        }
        else {
            if (this.multiSelect) {
                this.emitSelections(data, ChangeType.Append);
            }
            else {
                this.emitSelections(new Array(data));
            }
        }
        e.preventDefault();
    };
    /**
     * 用于数据展示
     */
    /**
     * 用于数据展示
     * @return {?}
     */
    SearchComponent.prototype.loadSearchResult = /**
     * 用于数据展示
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var param = {
            absOrgType: this.absOrgType,
            notGetStopOrg: this.notGetStopOrg,
            getCurUser: false,
            getOrgAllPath: true,
            codeOrName: this.searchText
        };
        this.apiService.getOrganization(param).subscribe((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            if (!res || !res.data) {
                return;
            }
            _this.itemTotalCount = res.data.length;
            _this.totalItems = res.data;
            _this.pageTotal = Math.ceil(_this.itemTotalCount / _this.pageSize);
            _this.switchPage({ pageIndex: 1 });
            _this.toggleChecked();
        }));
    };
    /**
     * @param {?} pageInfo
     * @return {?}
     */
    SearchComponent.prototype.switchPage = /**
     * @param {?} pageInfo
     * @return {?}
     */
    function (pageInfo) {
        var _this = this;
        if (!pageInfo || pageInfo.pageIndex < 1) {
            return;
        }
        /** @type {?} */
        var startIndex = (pageInfo.pageIndex - 1) * this.pageSize;
        /** @type {?} */
        var endIndex = startIndex + this.pageSize;
        this.perPageItems = this.totalItems.slice(startIndex, endIndex);
        this.perPageItems.forEach((/**
         * @param {?} res
         * @return {?}
         */
        function (res) {
            /** @type {?} */
            var indexId = CommonUtil.newGuid();
            res.checked = false;
            res.inFavorites = false;
            res.indexId = indexId;
            if (CommonUtil.findIndex(res[_this.primaryField], _this.primaryField, _this.selections) !== -1) {
                res.checked = true;
            }
            if (CommonUtil.findIndex(res[_this.primaryField], _this.primaryField, _this.favoritesList) !== -1) {
                res.inFavorites = true;
            }
        }));
        this.perPageItems = this.perPageItems.slice();
    };
    /**
     * 全选后处理
     * @param dataArr 全选的值
     */
    /**
     * 全选后处理
     * @return {?}
     */
    SearchComponent.prototype.checkAll = /**
     * 全选后处理
     * @return {?}
     */
    function () {
        var _this = this;
        this.perPageItems.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            _this._insertOneIntoSelections(item);
            item.checked = true;
        }));
    };
    /**
     * 全部取消
     * @param dataArr 取消的数据
     * @returns void
     */
    /**
     * 全部取消
     * @return {?} void
     */
    SearchComponent.prototype.unCheckAll = /**
     * 全部取消
     * @return {?} void
     */
    function () {
        var _this = this;
        this.perPageItems.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            _this.selections.forEach((/**
             * @param {?} selection
             * @param {?} index
             * @return {?}
             */
            function (selection, index) {
                if (item[_this.primaryField] === selection[_this.primaryField]) {
                    _this.selections.splice(index, 1);
                }
            }));
            item.checked = false;
        }));
    };
    /**
     * 当前行选中
     * @param data 当前行的数据（）
     */
    /**
     * 当前行选中
     * @private
     * @param {?} data 当前行的数据（）
     * @return {?}
     */
    SearchComponent.prototype.selectLine = /**
     * 当前行选中
     * @private
     * @param {?} data 当前行的数据（）
     * @return {?}
     */
    function (data) {
        if (this.multiSelect) {
            this._insertOneIntoSelections(data);
        }
        else {
            this.selections = [];
            this.perPageItems.forEach((/**
             * @param {?} item
             * @return {?}
             */
            function (item) {
                if (item.checked) {
                    item.checked = false;
                }
            }));
            this._insertOneIntoSelections(data);
        }
        if (this.isAllChecked()) {
            this.allChecked = true;
        }
    };
    /**
     * 单选取消选中
     * @param data 取消选中行
     */
    /**
     * 单选取消选中
     * @private
     * @param {?} data 取消选中行
     * @return {?}
     */
    SearchComponent.prototype.unSelectLine = /**
     * 单选取消选中
     * @private
     * @param {?} data 取消选中行
     * @return {?}
     */
    function (data) {
        /** @type {?} */
        var index = CommonUtil.findIndex(data[this.primaryField], this.primaryField, this.selections);
        if (index > -1) {
            this.selections.splice(index, 1);
        }
        this.setChecked(data, false);
        if (this.allChecked) {
            this.allChecked = false;
        }
    };
    /**
     * @private
     * @param {?} data
     * @param {?} checked
     * @return {?}
     */
    SearchComponent.prototype.setChecked = /**
     * @private
     * @param {?} data
     * @param {?} checked
     * @return {?}
     */
    function (data, checked) {
        /** @type {?} */
        var itemIndex = CommonUtil.findIndex(data[this.primaryField], this.primaryField, this.perPageItems);
        if (itemIndex > -1) {
            this.perPageItems[itemIndex].checked = checked;
        }
    };
    /**
     * @private
     * @param {?} selections
     * @param {?=} changeType
     * @return {?}
     */
    SearchComponent.prototype.emitSelections = /**
     * @private
     * @param {?} selections
     * @param {?=} changeType
     * @return {?}
     */
    function (selections, changeType) {
        if (changeType === void 0) { changeType = ChangeType.ValueChanged; }
        this.stateMgr.emitSelections(selections, changeType);
    };
    /**
     * @param {?} e
     * @param {?} item
     * @return {?}
     */
    SearchComponent.prototype.toggleFavorites = /**
     * @param {?} e
     * @param {?} item
     * @return {?}
     */
    function (e, item) {
        this.favoritesTool.toggleFavorites(e, item);
    };
    /**
     * 选中并插入当前行数据到右侧
     * @param data 当前行的数据
     * @param collection 暂存当前数据的集合
     */
    /**
     * 选中并插入当前行数据到右侧
     * @param {?} data 当前行的数据
     * @return {?}
     */
    SearchComponent.prototype._insertOneIntoSelections = /**
     * 选中并插入当前行数据到右侧
     * @param {?} data 当前行的数据
     * @return {?}
     */
    function (data) {
        // 如果当前数据已经移入右侧数据，则返回。
        if (CommonUtil.findIndex(data[this.primaryField], this.primaryField, this.selections) > -1) {
            return;
        }
        this.setChecked(data, true);
        this.selections.push(data);
        this.selections = this.selections.slice();
    };
    /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     */
    /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     * @return {?}
     */
    SearchComponent.prototype.toggleChecked = /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     * @return {?}
     */
    function () {
        var _this = this;
        this.perPageItems.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            if (CommonUtil.findIndex(item[_this.primaryField], _this.primaryField, _this.selections) > -1) {
                item.checked = true;
            }
            else {
                item.checked = false;
            }
        }));
        if (this.isAllChecked()) {
            this.allChecked = true;
        }
        else {
            this.allChecked = false;
        }
    };
    /**
     * @private
     * @return {?}
     */
    SearchComponent.prototype.isAllChecked = /**
     * @private
     * @return {?}
     */
    function () {
        var _this = this;
        /** @type {?} */
        var count = 0;
        /** @type {?} */
        var allChecked = false;
        this.perPageItems.forEach((/**
         * @param {?} item
         * @return {?}
         */
        function (item) {
            _this.selections.forEach((/**
             * @param {?} selection
             * @return {?}
             */
            function (selection) {
                if (item[_this.primaryField] === selection[_this.primaryField]) {
                    count += 1;
                }
            }));
        }));
        if (this.perPageItems.length === count && count > 0) {
            allChecked = true;
        }
        return allChecked;
    };
    /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    SearchComponent.prototype.trackByFn = /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    function (index, item) {
        return index;
    };
    SearchComponent.decorators = [
        { type: Component, args: [{
                    selector: 'lib-search',
                    template: "<div class=\"os-card\">\r\n    <div class=\"os-card-title\">\r\n        <span>\u641C\u7D22\u7ED3\u679C\uFF08{{itemTotalCount}}\uFF09</span>\r\n        <span class=\"f-icon modal_close\" (click)=\"closePanel()\" title=\"\u5173\u95ED\"></span>\r\n    </div>\r\n    <perfect-scrollbar>\r\n        <div class=\"os-card-content\">\r\n            <div *ngFor=\"let data of perPageItems; let i = index;trackBy: trackByFn\" class=\"s-selectedPerson\">\r\n                <div class=\"custom-control custom-checkbox mb-2\">\r\n                    <input class=\"custom-control-input\" [id]=\"data.indexId\" type=\"checkbox\" [checked]=\"data.checked\">\r\n                    <label class=\"custom-control-label\" [for]=\"data.indexId\" (click)=\"toggleOne(data, $event)\">\r\n                        <div class=\"src-item-container\">\r\n                            <div class=\"src-item-content\">\r\n                                <p class=\"os-card-content-title\" title=\"{{data.name}}\">\r\n                                    {{data.name}}</p>\r\n                                <p class=\"os-card-content-orgpath\" title=\"{{data.orgAllPath}}\">\r\n                                    {{data.orgAllPath}}</p>\r\n                            </div>\r\n                        </div>\r\n                    </label>\r\n                </div>\r\n                <span class=\"f-icon f-icon-star\" *ngIf=\"enableFavorites\" [class.default-light-color]=\"data.inFavorites\"\r\n                    [class.default-dark-color]=\"!data.inFavorites\" (click)=\"toggleFavorites($event, data)\"></span>\r\n            </div>\r\n            <div *ngIf=\"perPageItems.length===0\" [ngStyle]=\"{'background-image': noDataImg}\" class=\"fp-os-card-nodata\">\r\n                \u6682\u65E0\u6570\u636E</div>\r\n        </div>\r\n    </perfect-scrollbar>\r\n    <div class=\"pagination-container\" *ngIf=\"perPageItems.length!==0\">\r\n        <ul class=\"ngx-pagination pagination pager-viewmode-simple\">\r\n            <li class=\"page-item d-flex flex-fill\"></li>\r\n            <li class=\"page-item\" [class.disabled]=\"pageIndex === 1\" (click)=\"turnOverPage('pre', -1)\">\r\n                <span class=\"page-link border-0\">\r\n                    <span class=\"f-icon f-page-pre\"></span>\r\n                </span>\r\n            </li>\r\n            <li class=\"page-item\">\r\n                <input id=\"farris-datagrid-gotopagenumber\" min=\"1\" type=\"number\" max=\"{{pageTotal}}\"\r\n                    [(ngModel)]=\"pageIndex\" style=\"width: 38px;\" (keyup.enter)=\"switchPage({pageIndex: pageIndex})\"\r\n                    (input)=\"beforePageIndexChange($event, pageTotal)\">\r\n            </li>\r\n            <li class=\"page-item page-separator\" style=\"margin-left: 10px\"> / </li>\r\n            <li class=\"page-item page-total\" style=\"margin-left: 5px\">\r\n                <span style=\"font-size: 16px; font-weight: 600;\"> {{pageTotal}}</span>\r\n            </li>\r\n            <li class=\"page-item\" [class.disabled]=\"pageIndex === pageTotal\" (click)=\"turnOverPage('next', 1)\">\r\n                <a class=\"page-link border-0\">\r\n                    <span class=\"f-icon f-page-next\"></span>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n</div>",
                    styles: [":host{position:absolute;z-index:100;background:#fff;top:44px;right:0;left:0;bottom:0;display:-webkit-box;display:flex}.os-card{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;-webkit-box-flex:1;flex:1;overflow:hidden}.os-card .s-selectedPerson:hover{background:#eef5ff;border-radius:5px}.os-card .os-card-content{padding-top:3px;clear:both}.os-card .os-card-content .src-item-container{display:-webkit-box;display:flex;height:32px;margin:-21px 0 0 15px}.os-card .os-card-content .src-item-content{margin-left:11px;margin-top:-2px;padding-right:10px;overflow:hidden}.os-card .s-selectedPerson{min-width:240px;float:left;width:calc(50% - 6px);position:relative;height:40px;padding:5px 12px;margin:0 3px 10px}.os-card .s-selectedPerson .f-icon-star{position:absolute;top:13px;right:15px;font-size:14px}.os-card .s-selectedPerson .default-light-color{color:#f7b500}.os-card .s-selectedPerson .default-dark-color{color:#d8dce6}.os-card .k-checkbox-label::after,.os-card .k-checkbox-label::before{top:10px;font-size:16px;width:14px;height:14px}.os-card .fp-os-card-nodata{width:100px;height:100px;text-align:center;background-repeat:no-repeat;background-size:contain;color:#b4bccc;padding-top:110px;position:absolute;left:50%;top:50%;margin:-70px 0 0 -50px}.os-card .os-card-content-title{margin:0;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;font-size:13px}.os-card .os-card-content-orgpath{margin:0;font-size:12px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;color:#c7ccd7}.os-card .os-card-title{display:-webkit-box;display:flex;-webkit-box-pack:justify;justify-content:space-between;padding:15px;font-size:14px}.os-card .os-card-title .custom-control{margin:10px 0 0 15px;line-height:35px}.os-card .os-card-title .title-clearall{margin:10px 15px 0 0;color:#2a87ff;cursor:pointer;line-height:35px}.os-card .s-selectedPerson .custom-control-label::before{top:1px}.os-card .os-card-title .f-icon{color:#878d99;cursor:pointer}"]
                }] }
    ];
    /** @nocollapse */
    SearchComponent.ctorParameters = function () { return [
        { type: ApiService },
        { type: FavoritesTool },
        { type: StateMgrTool },
        { type: ChangeDetectorRef },
        { type: Injector }
    ]; };
    SearchComponent.propDecorators = {
        primaryField: [{ type: Input }],
        multiSelect: [{ type: Input }],
        enableFavorites: [{ type: Input }],
        searchText: [{ type: Input }],
        absOrgType: [{ type: Input }],
        notGetStopOrg: [{ type: Input }],
        pageSize: [{ type: Input }],
        onSearch: [{ type: Input }],
        closePanelChange: [{ type: Output }]
    };
    return SearchComponent;
}());
export { SearchComponent };
if (false) {
    /** @type {?} */
    SearchComponent.prototype.primaryField;
    /** @type {?} */
    SearchComponent.prototype.multiSelect;
    /** @type {?} */
    SearchComponent.prototype.enableFavorites;
    /** @type {?} */
    SearchComponent.prototype.searchText;
    /** @type {?} */
    SearchComponent.prototype.absOrgType;
    /** @type {?} */
    SearchComponent.prototype.notGetStopOrg;
    /** @type {?} */
    SearchComponent.prototype.pageSize;
    /** @type {?} */
    SearchComponent.prototype.closePanelChange;
    /** @type {?} */
    SearchComponent.prototype.allChecked;
    /** @type {?} */
    SearchComponent.prototype.columns;
    /** @type {?} */
    SearchComponent.prototype.selections;
    /** @type {?} */
    SearchComponent.prototype.cloneSelections;
    /** @type {?} */
    SearchComponent.prototype.allIndexId;
    /** @type {?} */
    SearchComponent.prototype.noDataImg;
    /** @type {?} */
    SearchComponent.prototype.totalItems;
    /** @type {?} */
    SearchComponent.prototype.perPageItems;
    /** @type {?} */
    SearchComponent.prototype.favoritesList;
    /** @type {?} */
    SearchComponent.prototype.pageIndex;
    /** @type {?} */
    SearchComponent.prototype.pageTotal;
    /** @type {?} */
    SearchComponent.prototype.itemTotalCount;
    /**
     * @type {?}
     * @private
     */
    SearchComponent.prototype.selectionsSub;
    /**
     * @type {?}
     * @private
     */
    SearchComponent.prototype.favoritesSub;
    /**
     * @type {?}
     * @private
     */
    SearchComponent.prototype.apiService;
    /**
     * @type {?}
     * @private
     */
    SearchComponent.prototype.favoritesTool;
    /**
     * @type {?}
     * @private
     */
    SearchComponent.prototype.stateMgr;
    /**
     * @type {?}
     * @private
     */
    SearchComponent.prototype.cdr;
    /**
     * @type {?}
     * @private
     */
    SearchComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,