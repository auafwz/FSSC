{"version":3,"sources":["node_modules/tslib/tslib.es6.js","ng://@farris/ui-multi-select/lib/multi-select.component.ts","ng://@farris/ui-multi-select/lib/multi-select.module.ts"],"names":["__read","o","n","m","Symbol","iterator","r","e","i","call","ar","next","done","push","value","error","__spread","arguments","length","concat","Object","defineProperty","MultiSelectComponent","prototype","this","_ds","val","searchValue","toJSON","copyDataSource","map","cloneDeep","initRightData","selectedId","_rightData","cd","detectChanges","_searchValue","undefined","displayType","newDataSource","getTreeDataBySearch","allTreeNodes","tt","loadData","dataSource","getListDataBySearch","ngOnInit","emptyData","localeService","getValue","moveItem","ngAfterViewInit","elt","el","nativeElement","render","addClass","fit","height","setStyle","noDataMoveMessage","checkedNodes","ngAfterContentInit","_this_1","templates","forEach","item","getType","displayTemplate","template","ngOnChanges","changes","isFirstChange","_leftCheckeds","currentValue","getCanCheckLength","total","isTree","serializedValue","rn","node","selectable","canChecked","d","leftCount","data","result","Array","txt","textField","getText","valueField","indexOf","getTreeDataByRecursive","newData","children","getTreeRootNode","rootData","parent","rootNodes","nodes","finalRes","uniqueId","some","id","ids","convertTreeDataToPlainData","getTreeSelectionsById","getListSelectionsById","reduce","find","idField","setTimeout","canCheckLength","state","rowNodes","_this","reusltObj","isArray","filter","isChecked","direction","keyVal","_rightCheckeds","selections","findIndex","c","leftDataChecked","hasCheckeds","dir","checkeds","keys","rightDataChecked","col","isCheck","showCheckbox","selected","emit","clearSelections","beforeMove","subscribe","obj","items","target","toString","clearAll","v","findRowNodes","unCheckedNodes","selectionsChange","changeSelectIds","afterMove","values","moveToRight","moveData","_a","mesagerSer","warning","moveAllToRight","_dataSource","moveToLeft","moveAllToLeft","_getSelectInfo","key_1","index","key","moveTop","unshift","splice","moveUp","tempArr","apply","moveDown","len","moveBottom","number","join","selectedIdChange","dataChange","commonUtils","Component","args","selector","MessagerService","Injector","ChangeDetectorRef","Input","Output","ContentChildren","FarrisTemplateDirective","ViewChild","injector","enableTargetSort","leftTitle","rightTitle","enableSearch","EventEmitter","sortMove","trackByItems","get","ElementRef","Renderer2","LocaleService","CommonUtils","DisplayTextComponent","_getText","ms","side","MultiSelectModule","NgModule","imports","CommonModule","PerfectScrollbarModule","FarrisCommonModule","TreeTableModule","LocaleModule","FormsModule","MessagerModule","forRoot","declarations","exports","providers"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { cloneDeep } from 'lodash-es';\r\n/*\r\n* @Author: ç¯çç§æ(lucas huang)\r\n* @Date: 2018-10-27 10:55:02\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-16 14:14:14\r\n* @Company: Inspur\r\n* @Version: v0.0.1\r\n*/\r\n\r\nimport {\r\n    Component, OnInit, Input, ViewChild, Output, EventEmitter,\r\n    TemplateRef, ContentChildren, QueryList, AfterContentInit, AfterViewInit,\r\n    OnChanges, SimpleChanges, Injector, ChangeDetectorRef, ElementRef, Renderer2\r\n} from '@angular/core';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { TreeTableComponent, TreeNode } from '@farris/ui-treetable';\r\nimport { CommonUtils, FarrisTemplateDirective } from '@farris/ui-common';\r\nimport { LocaleService } from '@farris/ui-locale';\r\n\r\n\r\n@Component({\r\n    selector: 'multi-select',\r\n    templateUrl: './multi-select.component.html',\r\n    styleUrls: [\r\n        './multi-select.css'\r\n    ]\r\n})\r\n\r\nexport class MultiSelectComponent implements OnInit, OnChanges, AfterViewInit, AfterContentInit {\r\n\r\n    private allTreeNodes = [];\r\n    private _ds: any = [];\r\n    get dataSource() {\r\n        return this._ds;\r\n    }\r\n    @Input() set dataSource(val: any) {\r\n        val = val  || [];\r\n        this._ds = val;\r\n        if (!this.searchValue) {\r\n            if (val.length) {\r\n                if (val[0].toJSON) {\r\n                    this.copyDataSource = val.map(n => n.toJSON());\r\n                } else {\r\n                    this.copyDataSource = cloneDeep(val);\r\n                }\r\n            }\r\n            this.initRightData(this.selectedId);\r\n        }\r\n    }\r\n\r\n    @Input() displayType: 'List' | 'Tree' = 'List';\r\n    /** æ¾ç¤ºå³ä¾§ä¸ç§»ä¸ç§»æé® */\r\n    @Input() enableTargetSort = true;\r\n\r\n    @Input() idField: string;\r\n\r\n    @Input() textField: string;\r\n    @Input() valueField: string;\r\n\r\n    @Input() height = 445;\r\n    @Input() fit = true;\r\n    @Input() noDataMoveMessage = 'è¯·éæ©è¦ç§»å¨çæ°æ®ã';\r\n\r\n    @Input() leftTitle = 'æªéæ©';\r\n    @Input() rightTitle = 'å·²éæ©';\r\n    @Input() selectedId: any;\r\n    @Input() enableSearch = true;\r\n    /** ç®æ æ°æ®æºæ¾ç¤ºcheckbox åè®¸å¤é */\r\n    @Input() showCheckbox = false;\r\n\r\n    @Output() dataChange = new EventEmitter();\r\n    @Output() selected = new EventEmitter();\r\n    @Output() selectedIdChange = new EventEmitter();\r\n\r\n    @Output() beforeMove = new EventEmitter();\r\n    @Output() afterMove = new EventEmitter();\r\n\r\n    @Output() sortMove = new EventEmitter();\r\n\r\n    @ContentChildren(FarrisTemplateDirective) templates: QueryList<FarrisTemplateDirective>;\r\n    @ViewChild('tt') tt: TreeTableComponent;\r\n\r\n\r\n    // å³ä¾§éä¸­çæ°æ® { [keyVal]: obj, [keyVal]: obj ... }\r\n    _rightCheckeds: any;\r\n    // å·¦ä¾§éä¸­çæ°æ® { [keyVal]: obj, [keyVal]: obj ... }\r\n    _leftCheckeds: any = {};\r\n\r\n    // å³ä¾§æ°æ®\r\n    _rightData = [];\r\n    get selections() {\r\n        return this._rightData;\r\n    }\r\n    set selections(val: any) {\r\n        this._rightData = val;\r\n        this.cd.detectChanges();\r\n    }\r\n    get searchValue() {\r\n        return this._searchValue;\r\n    }\r\n    set searchValue(value: string) {\r\n        this._searchValue = value;\r\n\r\n        // this.copyDataSource = [...this.dataSource];\r\n\r\n        if (value === undefined || value === null || value === '') {\r\n            this.dataSource = this.copyDataSource;\r\n            return;\r\n        }\r\n        if (this.displayType === 'Tree') {\r\n            const newDataSource = this.getTreeDataBySearch(this._searchValue, this.allTreeNodes);\r\n            this.tt.loadData(newDataSource);\r\n        } else {\r\n            this.dataSource = this.getListDataBySearch(this._searchValue, this.copyDataSource);\r\n        }\r\n    }\r\n\r\n    canCheckLength = 0;\r\n    leftCount = 0;\r\n    _searchValue = '';\r\n    // å¤å¶ä¸ä»½æ°æ®æº\r\n    private copyDataSource: any;\r\n    // æ å½¢ç»æçæ°æ®length\r\n    treeDataLength: number;\r\n    displayTemplate: TemplateRef<any>;\r\n\r\n\r\n    emptyData;\r\n    el: ElementRef;\r\n    render: Renderer2;\r\n    localeService: LocaleService;\r\n    commonUtils: CommonUtils;\r\n\r\n    constructor(private mesagerSer: MessagerService, private injector: Injector, private cd: ChangeDetectorRef) {\r\n        if (!Object.values) {\r\n            Object.values = function (obj) {\r\n                return Object.keys(obj).map(function (e) {\r\n                    return obj[e];\r\n                });\r\n            };\r\n        }\r\n        this.el = this.injector.get<ElementRef>(ElementRef);\r\n        this.render = this.injector.get(Renderer2);\r\n        this.localeService = this.injector.get(LocaleService);\r\n\r\n        this.commonUtils = this.injector.get(CommonUtils, null);\r\n    }\r\n\r\n    ngOnInit() {\r\n        // this.copyDataSource = this.dataSource ? [...this.dataSource] : [];\r\n        this.emptyData = this.localeService.getValue('multiSelect.emptyData') || 'ææ æ°æ®';\r\n        this.initRightData(this.selectedId);\r\n        this.moveItem();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        const elt = this.el.nativeElement;\r\n        this.render.addClass(elt, 'row');\r\n        this.render.addClass(elt, 'f-multi-select');\r\n        if (this.fit === true) {\r\n            this.render.addClass(elt, 'f-utils-fill');\r\n        }\r\n        if (!!this.height) {\r\n            this.render.setStyle(elt, 'height', this.height + 'px');\r\n        }\r\n\r\n        this.noDataMoveMessage =\r\n            this.noDataMoveMessage === 'è¯·éæ©è¦ç§»å¨çæ°æ®ã' ? this.localeService.getValue('multiSelect.noDataMoveMessage') : this.noDataMoveMessage;\r\n\r\n        if (this.tt && this.selectedId) {\r\n            this.tt.checkedNodes(this.selectedId);\r\n        }\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        this.templates.forEach((item) => {\r\n            switch (item.getType()) {\r\n                case 'text':\r\n                    this.displayTemplate = item.template;\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.dataSource && !changes.dataSource.isFirstChange()) {\r\n            // this.copyDataSource = [...(this.dataSource || [])];\r\n            this._leftCheckeds = {};\r\n            this._rightData = [];\r\n        }\r\n\r\n        if (changes.selectedId && !changes.selectedId.isFirstChange()) {\r\n            this.initRightData(changes.selectedId.currentValue);\r\n        }\r\n    }\r\n\r\n    getCanCheckLength() {\r\n        let n = 0;\r\n        let total = 0;\r\n        if (this.isTree()) {\r\n            this.tt.serializedValue.forEach(rn => {\r\n                if (rn.node.selectable) {\r\n                    if (this.canChecked(rn.node)) {\r\n                        n++;\r\n                    }\r\n                }\r\n            });\r\n            total = this.tt.serializedValue.length;\r\n        } else {\r\n            this.dataSource.forEach(d => {\r\n                if (this.canChecked(d)) {\r\n                    n++;\r\n                }\r\n            });\r\n            total = this.dataSource.length;\r\n        }\r\n        this.leftCount = total;\r\n        return n;\r\n    }\r\n\r\n    /**\r\n     * è·åæç´¢çæ°æ®ï¼Listç»æ\r\n     * @param value æç´¢çå­ç¬¦\r\n     * @param data æ°æ®\r\n     */\r\n    private getListDataBySearch(value: string, data: any[]): any[] {\r\n        const result = [];\r\n        value = '' + value;\r\n        if (data instanceof Array) {\r\n            data.forEach(item => {\r\n\r\n                let txt = '';\r\n                let val = '';\r\n\r\n                if (this.textField) {\r\n                    txt = '' + this.getText(item);\r\n                }\r\n\r\n                if (this.valueField) {\r\n                    val = '' + this.getValue(item);\r\n                }\r\n\r\n                if (this.textField && this.valueField) {\r\n                    if (txt.indexOf(value) !== -1 || val.indexOf(value) !== -1) {\r\n                        result.push(item);\r\n                    }\r\n                } else if (this.textField && !this.valueField) {\r\n                    if (txt.indexOf(value) !== -1) {\r\n                        result.push(item);\r\n                    }\r\n                } else if (!this.textField && this.valueField) {\r\n                    if (val.indexOf(value) !== -1) {\r\n                        result.push(item);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     * è·ååå«valueå¼å¾èç¹\r\n     */\r\n    private getTreeDataByRecursive(value: string, data: any[], newData: any[]) {\r\n        value = '' + value;\r\n        data.forEach(item => {\r\n\r\n            let txt = '';\r\n            let val = '';\r\n\r\n            if (this.textField) {\r\n                txt = '' + this.getText(item.data);\r\n            }\r\n\r\n            if (this.valueField) {\r\n                val = '' + this.getValue(item.data);\r\n            }\r\n\r\n            if (this.textField && this.valueField) {\r\n                if (txt.indexOf(value) !== -1 || val.indexOf(value) !== -1) {\r\n                    newData.push(item);\r\n                }\r\n            } else if (this.textField && !this.valueField) {\r\n                if (txt.indexOf(value) !== -1) {\r\n                    newData.push(item);\r\n                }\r\n            } else if (!this.textField && this.valueField) {\r\n                if (val.indexOf(value) !== -1) {\r\n                    newData.push(item);\r\n                }\r\n            }\r\n            if (item.children && item.children.length) {\r\n                this.getTreeDataByRecursive(value, item.children, newData);\r\n            }\r\n        });\r\n    }\r\n    /**\r\n     * è·åæ ¹èç¹\r\n     */\r\n    private getTreeRootNode(data: any[], rootData: any[]) {\r\n        data.forEach(item => {\r\n            if (item.parent === null) {\r\n                rootData.push(item);\r\n            } else {\r\n                this.getTreeRootNode(new Array(item.parent), rootData);\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * è·åæç´¢çæ°æ®ï¼Treeç»æ\r\n     * @param value æç´¢çå­ç¬¦\r\n     * @param data æ°æ®\r\n     */\r\n    private getTreeDataBySearch(value: string, data: any[]): any[] {\r\n        const rootNodes = [];\r\n        const nodes = [];\r\n        const finalRes = [];\r\n        const uniqueId = [];\r\n        // è·ååå«valueå¼å¾èç¹\r\n        this.getTreeDataByRecursive(value, data, nodes);\r\n        // è·åæ ¹èç¹\r\n        this.getTreeRootNode(nodes, rootNodes);\r\n        // å»é\r\n        rootNodes.forEach(node => {\r\n            if (!uniqueId.some(item => item == node.id)) {\r\n                finalRes.push(node);\r\n                uniqueId.push(node.id);\r\n            }\r\n        });\r\n        return finalRes;\r\n    }\r\n\r\n    private initRightData(ids) {\r\n        let dataSource: any = [];\r\n\r\n        if (ids) {\r\n            if (this.isTree()) {\r\n                this.convertTreeDataToPlainData(this.copyDataSource, dataSource);\r\n                this._rightData = this.getTreeSelectionsById(ids, dataSource);\r\n            } else {\r\n                this._rightData = this.getListSelectionsById(ids, this.copyDataSource);\r\n            }\r\n\r\n            this._leftCheckeds = ids.reduce((r, id) => {\r\n                r[id] = this._rightData.find(n => n[this.idField] == id);\r\n                return r;\r\n            }, {});\r\n\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this.canCheckLength = this.getCanCheckLength();\r\n            if (this.tt) {\r\n                this.tt.checkedNodes(ids, true, false, true);\r\n\r\n                this.allTreeNodes = cloneDeep(this.tt.state.rowNodes.map(n => n.node));\r\n            }\r\n        });\r\n    }\r\n\r\n    /**\r\n     * @param ids éä¸­æ°æ®çid\r\n     * @param dataSource åå§æ°æ®\r\n     */\r\n    private getListSelectionsById(ids: any, dataSource: any) {\r\n        let result = [];\r\n        const _this = this;\r\n        if ((typeof ids === 'string' && !!ids) || typeof ids === 'number') {\r\n            const reusltObj = dataSource.find(item => {\r\n                return item[_this.idField] === ids;\r\n            });\r\n            if (reusltObj) {\r\n                result.push(reusltObj);\r\n            }\r\n        } else if (Array.isArray(ids)) {\r\n            if (Array.isArray(dataSource)) {\r\n                result = ids.map(id => dataSource.find(item => item[this.idField] === id)).filter(n => n);\r\n            } else {\r\n                result = [];\r\n            }\r\n        } else {\r\n            result = [];\r\n        }\r\n        return result;\r\n    }\r\n\r\n    /**\r\n     *\r\n     * @param ids éä¸­æ°æ®çid\r\n     * @param dataSource åå§æ°æ®\r\n     */\r\n    private getTreeSelectionsById(ids: any, dataSource: any) {\r\n        let result = [];\r\n        const _this = this;\r\n        if ((typeof ids === 'string' && !!ids) || typeof ids === 'number') {\r\n            const reusltObj = dataSource.find(item => {\r\n                return item.data[_this.idField] === ids;\r\n            });\r\n            if (reusltObj && reusltObj.data) {\r\n                result.push(reusltObj.data);\r\n            }\r\n        } else if (Array.isArray(ids)) {\r\n            if (Array.isArray(dataSource)) {\r\n                result = ids.map(id => {\r\n                    return dataSource.find(item => item.data[this.idField] === id);\r\n                }).filter(n => n).map(n => n.data);\r\n            } else {\r\n                result = [];\r\n            }\r\n        } else {\r\n            result = [];\r\n        }\r\n        return result;\r\n    }\r\n    /**\r\n     * å¤æ­æ¯å¦éä¸­\r\n     * @param data è¦éªè¯çæ°æ®\r\n     * @param direction éªè¯çæ°æ®æå¨çä½ç½® L: å·¦ä¾§ï¼R: å³ä¾§\r\n     */\r\n    isChecked(data: any, direction: 'L' | 'R'): boolean {\r\n        const keyVal = data[this.idField];\r\n        if (direction === 'L') {\r\n            return (this._leftCheckeds && this._leftCheckeds[keyVal] !== undefined) || !this.canChecked(data);\r\n        } else {\r\n            if (this._rightCheckeds) {\r\n                return this._rightCheckeds[keyVal] !== undefined;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    canChecked(item: any) {\r\n        let data = item;\r\n\r\n        if (this.isTree()) {\r\n            data = item.data;\r\n\r\n            if (item.selectable !== undefined && !item.selectable) {\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (!this.selections || this.selections.length === 0) {\r\n            return true;\r\n        }\r\n        return this.selections.findIndex(c => c[this.idField] === data[this.idField]) === -1;\r\n    }\r\n\r\n    isTree(): any {\r\n        return this.displayType === 'Tree';\r\n    }\r\n\r\n    leftDataChecked(data: any[]) {\r\n        if (data && data.length) {\r\n            data.forEach(node => {\r\n                let d = node;\r\n                if (this.isTree()) {\r\n                    d = node.data;\r\n                }\r\n                if (this.canChecked(node)) {\r\n                    if (this.isChecked(d, 'L')) {\r\n                        delete this._leftCheckeds[d[this.idField]];\r\n                    } else {\r\n                        if (!this._leftCheckeds) {\r\n                            this._leftCheckeds = {};\r\n                        }\r\n                        this._leftCheckeds[d[this.idField]] = d;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    hasCheckeds(dir: 'L' | 'R') {\r\n        if (dir === 'L') {\r\n            if (this.isTree()) {\r\n                return this.tt.checkeds && this.tt.checkeds.length;\r\n            }\r\n\r\n            if (this._leftCheckeds) {\r\n                return Object.keys(this._leftCheckeds).length > 0;\r\n            } else {\r\n                return false;\r\n            }\r\n        } else {\r\n            if (this._rightCheckeds) {\r\n                return Object.keys(this._rightCheckeds).length > 0;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    rightDataChecked(col) {\r\n        const isCheck = this.isChecked(col, 'R');\r\n        if (isCheck) {\r\n            if (this.showCheckbox) {\r\n                delete this._rightCheckeds[col[this.idField]];\r\n            } else {\r\n                this._rightCheckeds = {};\r\n            }\r\n            return;\r\n        } else {\r\n            if (this.showCheckbox) {\r\n                this._rightCheckeds = this._rightCheckeds || {};\r\n            } else {\r\n                this._rightCheckeds = {};\r\n            }\r\n            this._rightCheckeds[col[this.idField]] = col;\r\n        }\r\n        this.cd.detectChanges();\r\n        this.selected.emit({ selected: !isCheck, data: col });\r\n    }\r\n\r\n    private clearSelections() {\r\n\r\n    }\r\n\r\n    /**\r\n     * å°æ ç»ææ°æ®è½¬æ¢ä¸ºæå¹³æ°ç»\r\n     * @param nodes æ èç¹æ°ç»\r\n     * @param r æ°çç©ºæ°ç»\r\n     */\r\n    private convertTreeDataToPlainData(nodes: TreeNode[], r: any[] = []) {\r\n        if (nodes) {\r\n            nodes.forEach(n => {\r\n                r.push(n);\r\n                if (n.children) {\r\n                    this.convertTreeDataToPlainData(n.children, r);\r\n                }\r\n            });\r\n        }\r\n\r\n        return r;\r\n    }\r\n\r\n    //#region å·¦å³ç§»å¨\r\n\r\n    private moveItem() {\r\n        this.beforeMove.subscribe((obj: any) => {\r\n            const items = obj.items;\r\n            const ids = Object.keys(items);\r\n            let direction = 1;\r\n            switch (obj.target) {\r\n                case 'right':\r\n                    Object.keys(items).forEach(id => {\r\n                        if (!this._rightData.find(n => n[this.idField].toString() === id)) {\r\n                            this._rightData.push(items[id]);\r\n                        }\r\n                    });\r\n                    this._rightData = [...this._rightData];\r\n                    if (this.isTree()) {\r\n                        this.tt.clearAll();\r\n                    }\r\n                    direction = 1;\r\n                    break;\r\n                case 'rightAll':\r\n                    items.forEach(data => {\r\n                        if (this._rightData.findIndex(n => n[this.idField] === data[this.idField]) === -1) {\r\n                            this._rightData.push(data);\r\n                        }\r\n                    });\r\n                    if (this.isTree()) {\r\n                        this.tt.clearAll();\r\n                    }\r\n\r\n                    direction = 1;\r\n                    break;\r\n                case 'left':\r\n                    this._rightData = this._rightData.filter(v => {\r\n                        return ids.indexOf('' + v[this.idField]) === -1;\r\n                    });\r\n                    this._rightCheckeds = {};\r\n                    ids.forEach(id => {\r\n                        delete this._leftCheckeds[id];\r\n                    });\r\n                    direction = -1;\r\n\r\n                    if (this.isTree()) {\r\n                        this.tt.findRowNodes(ids).forEach(n => {\r\n                            n.node.selectable = true;\r\n                        });\r\n                        this.tt.unCheckedNodes(ids, true);\r\n                    }\r\n\r\n                    break;\r\n                case 'leftAll':\r\n                    this._rightCheckeds = {};\r\n                    this._rightData = [];\r\n                    direction = -1;\r\n                    this._leftCheckeds = {};\r\n                    if (this.isTree()) {\r\n                        this.tt.clearAll();\r\n                        this.tt.findRowNodes(ids).forEach(n => {\r\n                            n.node.selectable = true;\r\n                        });\r\n                    }\r\n                    break;\r\n            }\r\n\r\n            this.selectionsChange();\r\n            this.changeSelectIds(direction);\r\n\r\n            this.afterMove.emit(Object.values(items));\r\n        });\r\n    }\r\n\r\n\r\n    /** å³ç§» */\r\n    moveToRight(moveData?: any) {\r\n\r\n        if (moveData) {\r\n            this.beforeMove.emit({ items: { [moveData[this.idField]]: moveData }, target: 'right' });\r\n        } else {\r\n            if (this.hasCheckeds('L')) {\r\n\r\n                if (this.isTree()) {\r\n                    this._leftCheckeds = {};\r\n                    this.tt.checkeds.forEach(n => {\r\n                        this._leftCheckeds[n.data[this.idField]] = n.data;\r\n                    });\r\n                }\r\n\r\n                this.beforeMove.emit({ items: this._leftCheckeds, target: 'right' });\r\n            } else {\r\n                this.mesagerSer.warning(this.noDataMoveMessage);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** å¨é¨å³ç§» */\r\n    moveAllToRight() {\r\n        if (this.searchValue === '') {\r\n            this._rightData = [];\r\n        }\r\n        if (this.displayType === 'List') {\r\n            this.beforeMove.emit({ items: this.dataSource, target: 'rightAll' });\r\n        } else {\r\n            let _dataSource = [];\r\n            this.convertTreeDataToPlainData(this.dataSource, _dataSource);\r\n            _dataSource = _dataSource.filter(n => n.selectable).map(n => n.data);\r\n\r\n            this.beforeMove.emit({ items: _dataSource, target: 'rightAll' });\r\n        }\r\n\r\n    }\r\n\r\n    /** å·¦ç§» */\r\n    moveToLeft(moveData?: any) {\r\n\r\n        if (moveData) {\r\n            this.beforeMove.emit({ items: { [moveData[this.idField]]: moveData }, target: 'left' });\r\n        } else {\r\n            if (this.hasCheckeds('R')) {\r\n                this.beforeMove.emit({ items: this._rightCheckeds, target: 'left' });\r\n            } else {\r\n                this.mesagerSer.warning(this.noDataMoveMessage);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** å¨é¨å·¦ç§» */\r\n    moveAllToLeft() {\r\n        this.beforeMove.emit({ items: this._rightData, target: 'leftAll' });\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region ä¸ä¸ç§»å¨æ¾ç¤ºåé¡ºåº\r\n\r\n    _getSelectInfo() {\r\n        if (this.hasCheckeds('R')) {\r\n            const key = Object.keys(this._rightCheckeds)[0];\r\n            const index = this._rightData.findIndex(c => '' + c[this.idField] === key);\r\n            return {\r\n                key, index\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n    /** ç½®é¡¶ */\r\n    moveTop() {\r\n        const obj = this._getSelectInfo();\r\n        if (obj) {\r\n            this._rightData.unshift(this._rightData[obj.index]);\r\n            this._rightData.splice(obj.index + 1, 1);\r\n            this.selectionsChange();\r\n            this.changeSelectIds(0);\r\n        } else {\r\n            this.mesagerSer.warning(this.noDataMoveMessage);\r\n        }\r\n    }\r\n\r\n    /** ä¸ç§» */\r\n    moveUp() {\r\n        if (this.hasCheckeds('R')) {\r\n            const obj = this._getSelectInfo();\r\n            if (obj) {\r\n                // const len = obj.cols.length;\r\n                const index = obj.index;\r\n                if (index !== 0) {\r\n                    const tempArr = this._rightData.splice(index, 1);\r\n                    this._rightData.splice(index - 1, 0, ...tempArr);\r\n                }\r\n                this.selectionsChange();\r\n                this.changeSelectIds(0);\r\n            }\r\n        } else {\r\n            this.mesagerSer.warning(this.noDataMoveMessage);\r\n        }\r\n    }\r\n\r\n    /** ä¸ç§» */\r\n    moveDown() {\r\n        if (this.hasCheckeds('R')) {\r\n            const obj = this._getSelectInfo();\r\n            if (obj) {\r\n                const len = this._rightData.length;\r\n                const index = obj.index;\r\n                if (index === 0 || index !== len - 1) {\r\n                    const tempArr = this._rightData.splice(index, 1);\r\n                    this._rightData.splice(index + 1, 0, ...tempArr);\r\n                }\r\n                this.changeSelectIds(0);\r\n                this.selectionsChange();\r\n            }\r\n        } else {\r\n            this.mesagerSer.warning(this.noDataMoveMessage);\r\n        }\r\n    }\r\n\r\n    /** ç½®åº */\r\n    moveBottom() {\r\n        const obj = this._getSelectInfo();\r\n        if (obj) {\r\n            this._rightData.push(this._rightCheckeds[obj.key]);\r\n            this._rightData.splice(obj.index, 1);\r\n            this.changeSelectIds(0);\r\n            this.selectionsChange();\r\n        } else {\r\n            this.mesagerSer.warning(this.noDataMoveMessage);\r\n        }\r\n    }\r\n    /**\r\n     * è§¦åéæ©ä¸­id\r\n     * @param number 1ä»£è¡¨å·¦ä¾§æ°æ®å³ç§»ï¼-1,ä»£è¡¨æ°æ®å·¦ç§»ï¼0ä»£è¡¨ä¸ç§»ä¸ç§»\r\n     */\r\n    private changeSelectIds(number: number) {\r\n        const ids = this._rightData.map(item => {\r\n            return item[this.idField];\r\n        });\r\n\r\n        if (number === 0) {\r\n            if (typeof this.selectedId === 'string') {\r\n                this.selectedId = ids.join(',');\r\n            } else if (Array.isArray(this.selectedId)) {\r\n                this.selectedId = ids;\r\n            }\r\n            this.selectedIdChange.emit(this.selectedId);\r\n            return;\r\n        }\r\n\r\n        if (!this.selectedId) {\r\n            this.selectedId = [];\r\n        }\r\n\r\n        if (number === 1 || number === -1) {\r\n            if (!ids.length) {\r\n                this.selectedId = [];\r\n            } else {\r\n                this.selectedId = ids;\r\n            }\r\n\r\n            if (this.isTree()) {\r\n                if (ids && ids.length) {\r\n                    this.tt.checkedNodes(ids, true, false, true);\r\n                }\r\n            }\r\n        }\r\n        this.canCheckLength = this.getCanCheckLength();\r\n        this.selectedIdChange.emit(this.selectedId);\r\n    }\r\n\r\n    //#endregion\r\n\r\n    private selectionsChange() {\r\n        this.dataChange.emit(this._rightData);\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    getText(item, textField = this.textField) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue && textField) {\r\n                return this.commonUtils.getValue(textField, item);\r\n            } else {\r\n                return item[textField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    getValue(item, valueField = this.valueField) {\r\n        if (item) {\r\n            if (this.commonUtils && this.commonUtils.getValue && valueField) {\r\n                return this.commonUtils.getValue(valueField, item);\r\n            } else {\r\n                return item[valueField];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    trackByItems = (index, item) => {\r\n        return index;\r\n    }\r\n\r\n}\r\n\r\n\r\n@Component({\r\n    selector: 'display-text',\r\n    template: `\r\n        <ng-container *ngIf=\"template\" >\r\n            <ng-container\r\n                *ngTemplateOutlet=\"template; context: {$implicit: data,instance: ms, side: side, selected: ms.isChecked(data, 'R') }\">\r\n            </ng-container>\r\n        </ng-container>\r\n        <ng-container *ngIf=\"!template\">\r\n            {{ _getText(data) }}\r\n        </ng-container>\r\n    `\r\n})\r\nexport class DisplayTextComponent implements OnInit {\r\n    @Input() template: TemplateRef<any>;\r\n    @Input() data: any;\r\n    @Input() side = 'L';\r\n\r\n    constructor(public ms: MultiSelectComponent) { }\r\n\r\n    ngOnInit() {\r\n        // console.log(this.data);\r\n    }\r\n\r\n    _getText(item) {\r\n        return this.ms.getText(item);\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';\r\nimport { TreeTableModule } from '@farris/ui-treetable';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MultiSelectComponent, DisplayTextComponent } from './multi-select.component';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        PerfectScrollbarModule,\r\n        FarrisCommonModule,\r\n        TreeTableModule,\r\n        LocaleModule,\r\n        FormsModule,\r\n        MessagerModule.forRoot()\r\n    ],\r\n    declarations: [MultiSelectComponent, DisplayTextComponent],\r\n    exports: [\r\n        MultiSelectComponent,\r\n        DisplayTextComponent,\r\n        FarrisCommonModule\r\n    ],\r\n    providers: [],\r\n})\r\nexport class MultiSelectModule { }\r\n"]}