import { LocaleService } from '@farris/ui-locale';
import { Injector, EventEmitter } from '@angular/core';
import { EntityFilter } from '@farris/ui-common/types';
import { DatagridFacadeService } from './datagrid-facade.service';
import { DataColumn, ColumnFilter, FilterCondition } from '../types/data-column';
export declare class DatagridFilterService {
    private dfs;
    private localeSer;
    private inject;
    removeField: EventEmitter<string>;
    constructor(dfs: DatagridFacadeService, localeSer: LocaleService, inject: Injector);
    validateRowData(rowData: any, conditions: {
        [field: string]: FilterCondition;
    }): boolean;
    executeFilter(data: [], conditions: any): any[];
    private getCompareResult;
    private getRelationResult;
    private checkAllFieldResult;
    private checkAllFieldInRowData;
    removeFilterField(field: any): void;
    convertFilterCondition2String(conditions: any): string;
    private getCompareString;
    convert2FilterArray(condition: {
        [field: string]: any;
    }): EntityFilter[];
    createColumnFilterOptions(col: DataColumn): ColumnFilter;
    convertSmartFilter2EntityFilter(conditions: any[]): any[];
    private validateRowData2;
    private checkRowDataWithCondition;
    executeSmartFilter(data: [], conditions: any[]): never[];
}
