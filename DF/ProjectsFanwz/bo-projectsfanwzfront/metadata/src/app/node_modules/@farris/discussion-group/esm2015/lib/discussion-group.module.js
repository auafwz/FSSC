/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { CommonModule, registerLocaleData } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { SafeHtmlPipe } from './pipe/safe-html.pipe';
import { DiscussionListComponent } from './discussion-list/discussion-list.component';
import { DiscussionEditorComponent } from './discussion-editor/discussion-editor.component';
import { FarrisDialogModule } from '@farris/ui-dialog';
import { FarrisCommonModule } from '@farris/ui-common';
import { TreeModule } from '@farris/ui-tree';
import { ModalModule, BsModalService } from '@farris/ui-modal';
import { LoadingModule } from '@farris/ui-loading';
import { LocaleModule } from '@farris/ui-locale';
import { ComponentLoaderFactory } from '@farris/ui-modal/component-loader';
import { PositioningService } from '@farris/ui-modal/positioning';
import { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';
import { DiscussionPersonnelComponent } from './discussion-personnel/discussion-personnel.component';
import { PaginationModule } from '@farris/ui-pagination';
import { DiscussionListService } from './discussion-list/discussion-list.service';
import { DiscussionListDirective } from './discussion-list/discussionList.directive';
import { FFileUploadModule } from '@farris/extend-file-upload';
import { NotifyModule } from '@farris/ui-notify';
import { InputGroupModule } from '@farris/ui-input-group';
import zh from '@angular/common/locales/zh';
import { HttpClientModule } from '@angular/common/http';
import { AvatarHtmlPipe, GetOrgTextPipe } from './pipe/controlType.pipe';
registerLocaleData(zh);
export class DiscussionGroupModule {
}
DiscussionGroupModule.decorators = [
    { type: NgModule, args: [{
                declarations: [DiscussionEditorComponent, DiscussionListComponent, DiscussionPersonnelComponent, SafeHtmlPipe, AvatarHtmlPipe, GetOrgTextPipe, DiscussionListDirective],
                imports: [
                    CommonModule,
                    FormsModule,
                    ModalModule,
                    FarrisDialogModule,
                    FarrisCommonModule,
                    LoadingModule,
                    PerfectScrollbarModule,
                    TreeModule,
                    PaginationModule,
                    FFileUploadModule,
                    NotifyModule,
                    HttpClientModule,
                    LocaleModule.forRoot(),
                    InputGroupModule
                ],
                providers: [
                    BsModalService,
                    ComponentLoaderFactory,
                    PositioningService,
                    DiscussionListService
                ],
                exports: [DiscussionEditorComponent, DiscussionListComponent, DiscussionPersonnelComponent, SafeHtmlPipe, AvatarHtmlPipe, GetOrgTextPipe, DiscussionListDirective],
                entryComponents: [DiscussionPersonnelComponent]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGlzY3Vzc2lvbi1ncm91cC5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2Rpc2N1c3Npb24tZ3JvdXAvIiwic291cmNlcyI6WyJsaWIvZGlzY3Vzc2lvbi1ncm91cC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLFlBQVksRUFBQyxrQkFBa0IsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQ2xFLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDckQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0sNkNBQTZDLENBQUM7QUFDdEYsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0saURBQWlELENBQUM7QUFDNUYsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDdkQsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxXQUFXLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDL0QsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ25ELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSxtQ0FBbUMsQ0FBQztBQUMzRSxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUNsRSxPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUN0RSxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSx1REFBdUQsQ0FBQztBQUNyRyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN6RCxPQUFPLEVBQUUscUJBQXFCLEVBQUUsTUFBTSwyQ0FBMkMsQ0FBQztBQUNsRixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSw0Q0FBNEMsQ0FBQztBQUNyRixPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSw0QkFBNEIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFDakQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFFMUQsT0FBTyxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDNUMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFDeEQsT0FBTyxFQUFFLGNBQWMsRUFBRSxjQUFjLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQztBQUN6RSxrQkFBa0IsQ0FBQyxFQUFFLENBQUMsQ0FBQztBQTZCdkIsTUFBTSxPQUFPLHFCQUFxQjs7O1lBM0JqQyxRQUFRLFNBQUM7Z0JBQ1IsWUFBWSxFQUFFLENBQUMseUJBQXlCLEVBQUUsdUJBQXVCLEVBQUUsNEJBQTRCLEVBQUUsWUFBWSxFQUFFLGNBQWMsRUFBQyxjQUFjLEVBQUMsdUJBQXVCLENBQUM7Z0JBQ3JLLE9BQU8sRUFBRTtvQkFDUCxZQUFZO29CQUNaLFdBQVc7b0JBQ1gsV0FBVztvQkFDWCxrQkFBa0I7b0JBQ2xCLGtCQUFrQjtvQkFDbEIsYUFBYTtvQkFDYixzQkFBc0I7b0JBQ3RCLFVBQVU7b0JBQ1YsZ0JBQWdCO29CQUNoQixpQkFBaUI7b0JBQ2pCLFlBQVk7b0JBQ1osZ0JBQWdCO29CQUNoQixZQUFZLENBQUMsT0FBTyxFQUFFO29CQUN0QixnQkFBZ0I7aUJBQ2pCO2dCQUNELFNBQVMsRUFBRTtvQkFDUCxjQUFjO29CQUNkLHNCQUFzQjtvQkFDdEIsa0JBQWtCO29CQUNsQixxQkFBcUI7aUJBQ3hCO2dCQUNELE9BQU8sRUFBRSxDQUFDLHlCQUF5QixFQUFFLHVCQUF1QixFQUFFLDRCQUE0QixFQUFFLFlBQVksRUFBRSxjQUFjLEVBQUMsY0FBYyxFQUFDLHVCQUF1QixDQUFDO2dCQUNoSyxlQUFlLEVBQUUsQ0FBRSw0QkFBNEIsQ0FBQzthQUNqRCIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IENvbW1vbk1vZHVsZSxyZWdpc3RlckxvY2FsZURhdGEgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgU2FmZUh0bWxQaXBlIH0gZnJvbSAnLi9waXBlL3NhZmUtaHRtbC5waXBlJztcclxuaW1wb3J0IHsgRGlzY3Vzc2lvbkxpc3RDb21wb25lbnQgfSBmcm9tICcuL2Rpc2N1c3Npb24tbGlzdC9kaXNjdXNzaW9uLWxpc3QuY29tcG9uZW50JztcclxuaW1wb3J0IHsgRGlzY3Vzc2lvbkVkaXRvckNvbXBvbmVudCB9IGZyb20gJy4vZGlzY3Vzc2lvbi1lZGl0b3IvZGlzY3Vzc2lvbi1lZGl0b3IuY29tcG9uZW50JztcclxuaW1wb3J0IHsgRmFycmlzRGlhbG9nTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1kaWFsb2cnO1xyXG5pbXBvcnQgeyBGYXJyaXNDb21tb25Nb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWNvbW1vbic7XHJcbmltcG9ydCB7IFRyZWVNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLXRyZWUnO1xyXG5pbXBvcnQgeyBNb2RhbE1vZHVsZSwgQnNNb2RhbFNlcnZpY2UgfSBmcm9tICdAZmFycmlzL3VpLW1vZGFsJztcclxuaW1wb3J0IHsgTG9hZGluZ01vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbG9hZGluZyc7XHJcbmltcG9ydCB7IExvY2FsZU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbG9jYWxlJztcclxuaW1wb3J0IHsgQ29tcG9uZW50TG9hZGVyRmFjdG9yeSB9IGZyb20gJ0BmYXJyaXMvdWktbW9kYWwvY29tcG9uZW50LWxvYWRlcic7XHJcbmltcG9ydCB7IFBvc2l0aW9uaW5nU2VydmljZSB9IGZyb20gJ0BmYXJyaXMvdWktbW9kYWwvcG9zaXRpb25pbmcnO1xyXG5pbXBvcnQgeyBQZXJmZWN0U2Nyb2xsYmFyTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1wZXJmZWN0LXNjcm9sbGJhcic7XHJcbmltcG9ydCB7IERpc2N1c3Npb25QZXJzb25uZWxDb21wb25lbnQgfSBmcm9tICcuL2Rpc2N1c3Npb24tcGVyc29ubmVsL2Rpc2N1c3Npb24tcGVyc29ubmVsLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFBhZ2luYXRpb25Nb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLXBhZ2luYXRpb24nO1xyXG5pbXBvcnQgeyBEaXNjdXNzaW9uTGlzdFNlcnZpY2UgfSBmcm9tICcuL2Rpc2N1c3Npb24tbGlzdC9kaXNjdXNzaW9uLWxpc3Quc2VydmljZSc7XHJcbmltcG9ydCB7IERpc2N1c3Npb25MaXN0RGlyZWN0aXZlIH0gZnJvbSAnLi9kaXNjdXNzaW9uLWxpc3QvZGlzY3Vzc2lvbkxpc3QuZGlyZWN0aXZlJztcclxuaW1wb3J0IHsgRkZpbGVVcGxvYWRNb2R1bGUgfSBmcm9tICdAZmFycmlzL2V4dGVuZC1maWxlLXVwbG9hZCc7XHJcbmltcG9ydCB7IE5vdGlmeU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbm90aWZ5JztcclxuaW1wb3J0IHsgSW5wdXRHcm91cE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktaW5wdXQtZ3JvdXAnO1xyXG5cclxuaW1wb3J0IHpoIGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9sb2NhbGVzL3poJztcclxuaW1wb3J0IHsgSHR0cENsaWVudE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuaW1wb3J0IHsgQXZhdGFySHRtbFBpcGUsIEdldE9yZ1RleHRQaXBlIH0gZnJvbSAnLi9waXBlL2NvbnRyb2xUeXBlLnBpcGUnO1xyXG5yZWdpc3RlckxvY2FsZURhdGEoemgpO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtEaXNjdXNzaW9uRWRpdG9yQ29tcG9uZW50LCBEaXNjdXNzaW9uTGlzdENvbXBvbmVudCwgRGlzY3Vzc2lvblBlcnNvbm5lbENvbXBvbmVudCwgU2FmZUh0bWxQaXBlLCBBdmF0YXJIdG1sUGlwZSxHZXRPcmdUZXh0UGlwZSxEaXNjdXNzaW9uTGlzdERpcmVjdGl2ZV0sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBNb2RhbE1vZHVsZSxcclxuICAgIEZhcnJpc0RpYWxvZ01vZHVsZSxcclxuICAgIEZhcnJpc0NvbW1vbk1vZHVsZSxcclxuICAgIExvYWRpbmdNb2R1bGUsXHJcbiAgICBQZXJmZWN0U2Nyb2xsYmFyTW9kdWxlLFxyXG4gICAgVHJlZU1vZHVsZSxcclxuICAgIFBhZ2luYXRpb25Nb2R1bGUsXHJcbiAgICBGRmlsZVVwbG9hZE1vZHVsZSxcclxuICAgIE5vdGlmeU1vZHVsZSxcclxuICAgIEh0dHBDbGllbnRNb2R1bGUsXHJcbiAgICBMb2NhbGVNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgSW5wdXRHcm91cE1vZHVsZVxyXG4gIF0sXHJcbiAgcHJvdmlkZXJzOiBbXHJcbiAgICAgIEJzTW9kYWxTZXJ2aWNlLFxyXG4gICAgICBDb21wb25lbnRMb2FkZXJGYWN0b3J5LFxyXG4gICAgICBQb3NpdGlvbmluZ1NlcnZpY2UsXHJcbiAgICAgIERpc2N1c3Npb25MaXN0U2VydmljZVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW0Rpc2N1c3Npb25FZGl0b3JDb21wb25lbnQsIERpc2N1c3Npb25MaXN0Q29tcG9uZW50LCBEaXNjdXNzaW9uUGVyc29ubmVsQ29tcG9uZW50LCBTYWZlSHRtbFBpcGUsIEF2YXRhckh0bWxQaXBlLEdldE9yZ1RleHRQaXBlLERpc2N1c3Npb25MaXN0RGlyZWN0aXZlXSxcclxuICBlbnRyeUNvbXBvbmVudHM6IFsgRGlzY3Vzc2lvblBlcnNvbm5lbENvbXBvbmVudF1cclxufSlcclxuZXhwb3J0IGNsYXNzIERpc2N1c3Npb25Hcm91cE1vZHVsZSB7IH1cclxuIl19