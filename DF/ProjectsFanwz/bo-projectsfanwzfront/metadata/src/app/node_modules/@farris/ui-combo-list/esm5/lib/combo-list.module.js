/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NotifyModule } from '@farris/ui-notify';
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { HttpClientModule } from '@angular/common/http';
import { FormsModule } from '@angular/forms';
import { ComboListComponent } from './combo-list.component';
import { InputGroupModule } from '@farris/ui-input-group';
import { DatalistModule } from '@farris/ui-datalist';
import { LoadingModule } from '@farris/ui-loading';
import { ComboLocaleService } from './services/combo.locale.service';
var ComboListModule = /** @class */ (function () {
    function ComboListModule() {
    }
    ComboListModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [ComboListComponent],
                    imports: [
                        CommonModule, FormsModule,
                        HttpClientModule, InputGroupModule,
                        LoadingModule.forRoot(),
                        DatalistModule,
                        NotifyModule.forRoot()
                    ],
                    exports: [ComboListComponent],
                    providers: [ComboLocaleService]
                },] }
    ];
    return ComboListModule;
}());
export { ComboListModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tYm8tbGlzdC5tb2R1bGUuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLWNvbWJvLWxpc3QvIiwic291cmNlcyI6WyJsaWIvY29tYm8tbGlzdC5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pDLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxzQkFBc0IsQ0FBQztBQUN4RCxPQUFPLEVBQUUsV0FBVyxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDN0MsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDMUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxvQkFBb0IsQ0FBQztBQUNuRCxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSxpQ0FBaUMsQ0FBQztBQUNyRTtJQUFBO0lBWThCLENBQUM7O2dCQVo5QixRQUFRLFNBQUM7b0JBQ04sWUFBWSxFQUFFLENBQUMsa0JBQWtCLENBQUM7b0JBQ2xDLE9BQU8sRUFBRTt3QkFDTCxZQUFZLEVBQUUsV0FBVzt3QkFDekIsZ0JBQWdCLEVBQUUsZ0JBQWdCO3dCQUNsQyxhQUFhLENBQUMsT0FBTyxFQUFFO3dCQUN2QixjQUFjO3dCQUNkLFlBQVksQ0FBQyxPQUFPLEVBQUU7cUJBQ3pCO29CQUNELE9BQU8sRUFBRSxDQUFDLGtCQUFrQixDQUFDO29CQUM3QixTQUFTLEVBQUUsQ0FBQyxrQkFBa0IsQ0FBQztpQkFDbEM7O0lBQzZCLHNCQUFDO0NBQUEsQUFaL0IsSUFZK0I7U0FBbEIsZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5vdGlmeU1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbm90aWZ5JztcclxuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgSHR0cENsaWVudE1vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2NvbW1vbi9odHRwJztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IENvbWJvTGlzdENvbXBvbmVudCB9IGZyb20gJy4vY29tYm8tbGlzdC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBJbnB1dEdyb3VwTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1pbnB1dC1ncm91cCc7XHJcbmltcG9ydCB7IERhdGFsaXN0TW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1kYXRhbGlzdCc7XHJcbmltcG9ydCB7IExvYWRpbmdNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWxvYWRpbmcnO1xyXG5pbXBvcnQgeyBDb21ib0xvY2FsZVNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2VzL2NvbWJvLmxvY2FsZS5zZXJ2aWNlJztcclxuQE5nTW9kdWxlKHtcclxuICAgIGRlY2xhcmF0aW9uczogW0NvbWJvTGlzdENvbXBvbmVudF0sXHJcbiAgICBpbXBvcnRzOiBbXHJcbiAgICAgICAgQ29tbW9uTW9kdWxlLCBGb3Jtc01vZHVsZSxcclxuICAgICAgICBIdHRwQ2xpZW50TW9kdWxlLCBJbnB1dEdyb3VwTW9kdWxlLFxyXG4gICAgICAgIExvYWRpbmdNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgICAgIERhdGFsaXN0TW9kdWxlLFxyXG4gICAgICAgIE5vdGlmeU1vZHVsZS5mb3JSb290KClcclxuICAgIF0sXHJcbiAgICBleHBvcnRzOiBbQ29tYm9MaXN0Q29tcG9uZW50XSxcclxuICAgIHByb3ZpZGVyczogW0NvbWJvTG9jYWxlU2VydmljZV1cclxufSlcclxuZXhwb3J0IGNsYXNzIENvbWJvTGlzdE1vZHVsZSB7fVxyXG4iXX0=