/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output, HostBinding } from '@angular/core';
import { SolutionService } from '../../service/solution.service';
var SimpleInputGroupComponent = /** @class */ (function () {
    function SimpleInputGroupComponent(solutionService) {
        this.solutionService = solutionService;
        /**
         * 判断是否是在扩展区域展示
         */
        this.extend = false;
        /**
         * 判断是否显示label
         */
        this.showlabel = true;
        this.searchHandle = new EventEmitter();
        this.isTextFromDialog = false;
    }
    Object.defineProperty(SimpleInputGroupComponent.prototype, "item", {
        get: /**
         * @return {?}
         */
        function () {
            return this.constructTextItem(this._item);
        },
        set: /**
         * @param {?} textItem
         * @return {?}
         */
        function (textItem) {
            this._item = textItem;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SimpleInputGroupComponent.prototype, "isExtend", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.extend && this.autoLabel;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(SimpleInputGroupComponent.prototype, "hidenLabel", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.showlabel;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @param {?} textItem
     * @return {?}
     */
    SimpleInputGroupComponent.prototype.constructTextItem = /**
     * @param {?} textItem
     * @return {?}
     */
    function (textItem) {
        /** @type {?} */
        var textValueObj = (/** @type {?} */ (textItem.value));
        textValueObj.textValue = textValueObj.textValue && textValueObj.textValue.trim();
        textItem.value = textValueObj;
        return textItem;
    };
    /**
     * @return {?}
     */
    SimpleInputGroupComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        this.testId = this.solutionService.getGuid();
        this.getInputGroupBindingInfo();
        if (this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')) {
            this.extend = this.item.control.isExtend;
            if (!this.extend) {
                this.showlabel = this.item.control.showLabel;
            }
        }
    };
    /**
     * @return {?}
     */
    SimpleInputGroupComponent.prototype.getInputGroupBindingInfo = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var inputGroupControl = ((/** @type {?} */ (this.item.control)));
        this.usageMode = inputGroupControl.usageMode;
        if (this.usageMode == 'open-modal' || this.usageMode == 'open-remote-modal') {
            this.dialogOptions = inputGroupControl.dialogOptions;
            /*
                example of dialogOptions = {
                   modalId: "1e011720-eb0f-4c9c-82b6-6844c89b2303"
                   mapFields: {hDepartment: "Name"}
                   title: "测试标题栏"
                   width: 800
                   height: 600
                }
             */
            if (this.dialogOptions.mapFields) {
                this.textField = JSON.stringify(this.dialogOptions.mapFields).split('"')[1];
            }
        }
    };
    /**
     * @param {?} field
     * @return {?}
     */
    SimpleInputGroupComponent.prototype.getConditionItemTitle = /**
     * @param {?} field
     * @return {?}
     */
    function (field) {
        return this.solutionService.getConditionItemTitle(field);
    };
    /*
        dialogOptions = {
            modalId: "ae011720-eb0f-4c9c-82b6-6844c89b2303"
            mapFields: {hDepartment: "Name"}
            title: "测试标题栏"
            width: 800
            height: 600
            showButtons: true
            buttons: [
                { text: "确定", cls: "btn-primary", handle: _this.viewModel.rootviewmodelconfirm1 },
                { text: "取消", cls: "btn-secondary", handle: _this.viewModel.rootviewmodelcancel1}
            ]
        }
    */
    /*
            dialogOptions = {
                modalId: "ae011720-eb0f-4c9c-82b6-6844c89b2303"
                mapFields: {hDepartment: "Name"}
                title: "测试标题栏"
                width: 800
                height: 600
                showButtons: true
                buttons: [
                    { text: "确定", cls: "btn-primary", handle: _this.viewModel.rootviewmodelconfirm1 },
                    { text: "取消", cls: "btn-secondary", handle: _this.viewModel.rootviewmodelcancel1}
                ]
            }
        */
    /**
     * @param {?} event
     * @return {?}
     */
    SimpleInputGroupComponent.prototype.onClick = /*
            dialogOptions = {
                modalId: "ae011720-eb0f-4c9c-82b6-6844c89b2303"
                mapFields: {hDepartment: "Name"}
                title: "测试标题栏"
                width: 800
                height: 600
                showButtons: true
                buttons: [
                    { text: "确定", cls: "btn-primary", handle: _this.viewModel.rootviewmodelconfirm1 },
                    { text: "取消", cls: "btn-secondary", handle: _this.viewModel.rootviewmodelcancel1}
                ]
            }
        */
    /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        var _this = this;
        if (this.usageMode == 'text') {
            this.item.control.click();
        }
        else {
            /** @type {?} */
            var options = this.dialogOptions;
            options.handle = (/**
             * @param {?} selectedItem
             * @return {?}
             */
            function (selectedItem) {
                // let modalData = item[0];
                // this.item.value.value = modalData[this.targetField];
                /** @type {?} */
                var selectedItems = selectedItem.filter((/**
                 * @param {?} n
                 * @return {?}
                 */
                function (n) { return n; }));
                if (selectedItems && _this.textField) {
                    _this.item.value.value = selectedItems;
                    _this.item.value.textValue = _this.item.value.getTextValue(_this.textField);
                    _this.item.value.textField = _this.textField;
                    _this.item.value.isInputText = false;
                    _this.isTextFromDialog = true;
                    _this.textFormDialog = _this.item.value.textValue;
                }
            });
            this.item.control.click({ event: event, options: options });
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    SimpleInputGroupComponent.prototype.onBlur = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (this.disabled) {
            return;
        }
        if (this.usageMode == 'text') {
            this.item.value.isInputText = true;
        }
        if (this.usageMode == 'open-modal' || this.usageMode == 'open-remote-modal') {
            if (!this.isTextFromDialog) {
                this.item.value.isInputText = true;
            }
            if (this.item.value.textValue != this.textFormDialog) {
                this.isTextFromDialog = false;
                this.item.value.value = [];
                this.item.value.textField = undefined;
                this.item.value.isInputText = true;
            }
        }
        this.searchHandle.emit(event);
    };
    SimpleInputGroupComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-filter-inputgroup',
                    template: "<label class=\"col-form-label\" *ngIf=\"item && showlabel\" title=\"{{getConditionItemTitle(item)}}\">\r\n    <span class=\"farris-label-info text-danger\" *ngIf=\"item.control.required\">*</span>\r\n    <span class=\"farris-label-text\">{{item.fieldName}}</span>\r\n</label>\r\n<div class=\"farris-input-wrap\" *ngIf=\"item\">\r\n    <input-group \r\n        [(ngModel)]=\"item.value.textValue\" \r\n        name=\"{{item.fieldName}}\" \r\n        id=\"{{testId}}\"\r\n        [readonly]=\"disabled\"\r\n        [groupText]=\"item.control.groupText\"\r\n        [editable]=\"item.control.editable\"\r\n        [placeholder]=\"item.placeHolder\"\r\n        (clickHandle)=\"onClick($event)\"\r\n        (blurHandle)=\"onBlur($event)\"\r\n        (enterHandle)=\"onBlur($event)\"\r\n        >\r\n    </input-group>\r\n</div>\r\n"
                }] }
    ];
    /** @nocollapse */
    SimpleInputGroupComponent.ctorParameters = function () { return [
        { type: SolutionService }
    ]; };
    SimpleInputGroupComponent.propDecorators = {
        item: [{ type: Input }],
        autoLabel: [{ type: Input }],
        disabled: [{ type: Input }],
        isExtend: [{ type: HostBinding, args: ['class.filter-item-wrap',] }],
        hidenLabel: [{ type: HostBinding, args: ['class.filter-item-hiddenlabel',] }],
        searchHandle: [{ type: Output, args: ['searchHandle',] }]
    };
    return SimpleInputGroupComponent;
}());
export { SimpleInputGroupComponent };
if (false) {
    /**
     * QueryCondition类型
     * @type {?}
     */
    SimpleInputGroupComponent.prototype._item;
    /** @type {?} */
    SimpleInputGroupComponent.prototype.testId;
    /** @type {?} */
    SimpleInputGroupComponent.prototype.usageMode;
    /** @type {?} */
    SimpleInputGroupComponent.prototype.dialogOptions;
    /** @type {?} */
    SimpleInputGroupComponent.prototype.autoLabel;
    /** @type {?} */
    SimpleInputGroupComponent.prototype.disabled;
    /**
     * 判断是否是在扩展区域展示
     * @type {?}
     */
    SimpleInputGroupComponent.prototype.extend;
    /**
     * 判断是否显示label
     * @type {?}
     */
    SimpleInputGroupComponent.prototype.showlabel;
    /** @type {?} */
    SimpleInputGroupComponent.prototype.searchHandle;
    /** @type {?} */
    SimpleInputGroupComponent.prototype.textField;
    /** @type {?} */
    SimpleInputGroupComponent.prototype.isTextFromDialog;
    /** @type {?} */
    SimpleInputGroupComponent.prototype.textFormDialog;
    /**
     * @type {?}
     * @private
     */
    SimpleInputGroupComponent.prototype.solutionService;
}
//# sourceMappingURL=data:application/json;base64,