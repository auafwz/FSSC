{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@farris/extend-fileupload-adapt-unifile/lib/ffileupload-adapt-unifile.config.ts","ng://@farris/extend-fileupload-adapt-unifile/lib/ffilepreview-adapt-unifile.service.ts","ng://@farris/extend-fileupload-adapt-unifile/lib/ffilepreview-adapt-unifile-simple.directive.ts","ng://@farris/extend-fileupload-adapt-unifile/lib/ffilepreview-adapt-seeimg/ffilepreview-adapt-seeimg.component.ts","ng://@farris/extend-fileupload-adapt-unifile/lib/ffileupload-adapt-unifile.service.ts","ng://@farris/extend-fileupload-adapt-unifile/lib/ffilepreview-adapt-unifile.directive.ts","ng://@farris/extend-fileupload-adapt-unifile/lib/ffileupload-adapt-unifile.module.ts"],"names":["extendStatics","d","b","Object","setPrototypeOf","__proto__","Array","p","hasOwnProperty","FFileUploadAdaptUnifileConfigToken","InjectionToken","FFileUploadAdaptUnifileConfigService","exConfig","this","config","rootId","formId","mode","assign","prototype","getConfig","setConfig","key","value","Injectable","args","providedIn","Optional","type","Inject","FfilepreviewAdaptUnifileService","fileviewSer","configSer","downloadSer","previewExtendServerConfig","extendData","getFinallyConfig","extendValue","previewFile","info","extendService","previewFileList","infos","metadataIdList","forEach","item","push","extend","options","viewerFileList","downloadFile","id","Error","window","open","getImgSrc","multiDownloadFiles","length","metadataIdList_1","url","getMultipleDownloadUrl","JSON","stringify","multiDownloadFilesWidthName","name","metadataIdList_2","getMultipleDownloadUrlWithName","attachId","getDownloadUrl","console","warn","setPreviwExtendServerConfig","getPreviewExtendServerConfig","FileViewerService","DownloadService","decorators","FFileAdaptPreviewFileDirective","previewSer","viewDisabled","extendServerConfig","filePreviewEventHandler","fileInfo","Directive","selector","Input","HostListener","FFileAdaptDownloadFileDirective","zipName","downloadDisabled","enableMulti","FfilepreviewAdaptSeeimgComponent","adpSer","elementRef","cls","enableThumbnail","clsPrefix","supportImgSuffix","iconWidth","maxThumbnailWidth","maxThumbnailHeight","ngOnInit","imgSrc","isImage","fileName","lastDotIndex","lastIndexOf","fileSuffix","substring","toLocaleLowerCase","split","findIndex","getFileTypeClassName","clsName","Component","template","ElementRef","HostBinding","FfileuploadAdaptUnifileService","uploadSer","_this","_super","call","bufferSize","uploadedChunk","fileTotalChunk","__","constructor","create","tslib_1.__extends","uuid","S4","Math","random","toString","remove","files","event","innerRemoveList","Observable","observer","removeFileInfo","GspFormRemoveListEntity","fileItem","concat","removeList","subscribe","result","next","error","complete","upload","innerUploadList","uploadInfo","GspFormUploadListEntity","docInfoList","readerObserable","sub","obser","reader","FileReader","readAsBinaryString","nativeFile","onload","e","fileContent","btoa","forkJoin","datas","uploadList","errorInfoFormat","findFileIndexByFileName","UploadStatus","Done","multipartUpload","file","chunkTotal","ceil","size","chunkIndex","GspFormUploadEntity","OperatingModes","Temp","docInfo","GspFormDocInfo","metadataId","total","nextSize","min","fileData","slice","innerIndex","index","uploadFile","progress","status","data","percentage","response","Number","parseInt","toFixed","Uploading","formatFileSize","getMultipartDisplayName","errorFiles","map","message","previous","UploadService","UploadServerService","FFilePreviewAdaptUnifileDirective","_extendServeConfig","fileDownloadEventHandler","downloadEv","defineProperty","providers","FfileuploadAdaptUnifileModule","forRoot","ngModule","provide","useValue","NgModule","declarations","imports","CommonModule","UploadDialogMoudle","FileListModule","FFileUploadModule","exports"],"mappings":"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","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Injectable, Optional, InjectionToken, Inject, } from '@angular/core';\r\n\r\nexport interface FFileUploadAdaptUnifileConfig {\r\n    rootId?: string;\r\n    formId?: string;\r\n    mode?: number;//0 代表正式，1代表临时\r\n    options?:any;\r\n}\r\nexport const FFileUploadAdaptUnifileConfigToken = new InjectionToken<FFileUploadAdaptUnifileConfig>('MFFileUploadAdaptUnifileConfig');\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FFileUploadAdaptUnifileConfigService {\r\n    private config = {\r\n        rootId: '',\r\n        formId: '',\r\n        mode: 0\r\n    } as FFileUploadAdaptUnifileConfig;\r\n    \r\n    constructor(@Optional() @Inject(FFileUploadAdaptUnifileConfigToken) exConfig: FFileUploadAdaptUnifileConfig) {\r\n        if (exConfig) {\r\n            Object.assign(this.config, exConfig);\r\n        }\r\n    }\r\n    /**\r\n     * 获取config属性的值\r\n     */\r\n    getConfig() {\r\n        return this.config;\r\n    }\r\n    /**\r\n     * 设置config的属性值\r\n     * @param key \r\n     * @param value \r\n     */\r\n    setConfig(key, value) {\r\n        this.config[key] = value;\r\n    }\r\n};","import { Injectable, Optional } from '@angular/core';\r\nimport { FUploadFileExtend } from '@farris/extend-file-upload';\r\nimport { FileViewerService } from '@gsp-svc/file-viewer';\r\nimport { DownloadService } from '@gsp-svc/formdoc-upload';\r\nimport { FFileUploadAdaptUnifileConfigService, FFileUploadAdaptUnifileConfig } from './ffileupload-adapt-unifile.config';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class FfilepreviewAdaptUnifileService {\r\n    extendData;// 暂时用于简单合并\r\n    private previewExtendServerConfig: FFileUploadAdaptUnifileConfig = null;\r\n    constructor(private fileviewSer: FileViewerService, private configSer: FFileUploadAdaptUnifileConfigService, @Optional() private downloadSer: DownloadService) {\r\n        this.extendData = this.configSer.getConfig();\r\n    }\r\n    /**\r\n     * 返回最终属性值\r\n     * @param key \r\n     * @param configValue \r\n     * @param extendValue \r\n     */\r\n    private getFinallyConfig(key, extendValue) {\r\n        if (extendValue && extendValue.hasOwnProperty(key)) {\r\n            return extendValue[key];\r\n        }\r\n        // 避免下载等其他指令再传入扩展配置\r\n        if (this.previewExtendServerConfig && this.previewExtendServerConfig.hasOwnProperty(key)) {\r\n            return this.previewExtendServerConfig[key];\r\n        }\r\n        // 来自module中forRoot的配置\r\n        if (this.extendData.hasOwnProperty(key)) {\r\n            return this.extendData[key];\r\n        }\r\n           return null;\r\n        \r\n    }\r\n    /**\r\n     * 预览单个文件\r\n     * @param info \r\n     */\r\n    previewFile(info: FUploadFileExtend, extendService: FFileUploadAdaptUnifileConfig) {\r\n        return this.previewFileList([info], extendService);\r\n    }\r\n    /**\r\n     * 预览整个列表\r\n     * @param infos \r\n     */\r\n    previewFileList(infos: FUploadFileExtend[], extendService: FFileUploadAdaptUnifileConfig) {\r\n        //metadataIdList: string[]\r\n        let rootId = this.getFinallyConfig('rootId', extendService);\r\n        let metadataIdList = [];\r\n        infos.forEach(item => {\r\n            metadataIdList.push(item.extend['metadataId']);\r\n        });\r\n        let options = this.getFinallyConfig('options', extendService);\r\n        if(options){\r\n            return this.fileviewSer.viewerFileList(metadataIdList, rootId, options);\r\n        }else{\r\n            return this.fileviewSer.viewerFileList(metadataIdList, rootId);\r\n        }\r\n    }\r\n    /**\r\n     * 下载附件\r\n     * @param info \r\n     */\r\n    downloadFile(info: FUploadFileExtend, extendService: FFileUploadAdaptUnifileConfig) {\r\n        if (!info.id) {\r\n            throw new Error('请设置要下载的附件');\r\n        }\r\n        window.open(this.getImgSrc(info, extendService));\r\n    }\r\n    /**\r\n   * 下载附件\r\n   * @param info \r\n   */\r\n    multiDownloadFiles(infos: FUploadFileExtend[], extendService: FFileUploadAdaptUnifileConfig) {\r\n        //metadataIdList: string[]\r\n        if (infos.length == 1) {\r\n            this.downloadFile(infos[0], extendService);\r\n        } else {\r\n            let rootId = this.getFinallyConfig('rootId', extendService);\r\n            let metadataIdList = [];\r\n            infos.forEach(item => {\r\n                metadataIdList.push(item.extend['metadataId']);\r\n            });\r\n            let url = this.downloadSer.getMultipleDownloadUrl(JSON.stringify(metadataIdList), rootId);\r\n            window.open(url);\r\n        }\r\n    }\r\n    multiDownloadFilesWidthName(infos: FUploadFileExtend[], name = \"\", extendService: FFileUploadAdaptUnifileConfig) {\r\n        //metadataIdList: string[]\r\n        if (infos.length == 1) {\r\n            this.downloadFile(infos[0], extendService);\r\n        } else {\r\n            let rootId = this.getFinallyConfig('rootId', extendService);\r\n            let metadataIdList = [];\r\n            infos.forEach(item => {\r\n                metadataIdList.push(item.extend['metadataId']);\r\n            });\r\n            let url = this.downloadSer.getMultipleDownloadUrlWithName(JSON.stringify(metadataIdList), rootId, name);\r\n            window.open(url);\r\n        }\r\n    }\r\n    /**\r\n     * 获取下载链接\r\n    */\r\n    getImgSrc(info: FUploadFileExtend, extendService: FFileUploadAdaptUnifileConfig) {\r\n        if (!info.id) {\r\n            throw new Error('请设置要下载的附件');\r\n        }\r\n        let url = '';\r\n        let attachId = info.extend['metadataId'];\r\n        let rootId = this.getFinallyConfig('rootId', extendService);\r\n        // 文档服务服务单元名进行规范性调整，由document修改为dfs\r\n        if (this.downloadSer) {\r\n            if (rootId) {\r\n                url = this.downloadSer.getDownloadUrl(attachId, rootId);\r\n            }\r\n        } else if (rootId) {\r\n            console.warn('因为安全问题，附件下载提供安全校验机制，附件下载功能需要重新编译')\r\n            url = `/api/runtime/dfs/v1.0/formdoc/filecontent?metadataid=${attachId}&rootid=${rootId}`;\r\n        }\r\n        return url;\r\n    }\r\n    /**\r\n     * 根据预览指令的扩展配置获取\r\n     * @param value \r\n     */\r\n    setPreviwExtendServerConfig(value) {\r\n        this.previewExtendServerConfig = value;\r\n    }\r\n    getPreviewExtendServerConfig() {\r\n        return this.previewExtendServerConfig;\r\n    }\r\n\r\n}","import { Directive, HostListener, Input } from '@angular/core';\r\nimport { FfilepreviewAdaptUnifileService } from './ffilepreview-adapt-unifile.service';\r\n\r\n@Directive({\r\n    selector: '[fFileAdaptPreviewFile]'\r\n})\r\nexport class FFileAdaptPreviewFileDirective {\r\n    // 附件信息\r\n    @Input('fFileAdaptPreviewFile') fileInfo;\r\n    /**\r\n     * 捕获预览事件\r\n     * @param fileInfo \r\n     */\r\n    @HostListener('click', ['$event'])\r\n    filePreviewEventHandler() {\r\n        if (!this.fileInfo || this.viewDisabled) {\r\n            return;\r\n        }\r\n        this.previewSer.previewFile(this.fileInfo, this.extendServerConfig);\r\n    }\r\n    // 是否禁用预览\r\n    @Input() viewDisabled = false;\r\n    // 处理扩展的服务器端配置\r\n    @Input() extendServerConfig = null;\r\n    constructor(private previewSer: FfilepreviewAdaptUnifileService) {\r\n\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[fFileAdaptDownloadFile]'\r\n})\r\nexport class FFileAdaptDownloadFileDirective {\r\n    //  附件信息\r\n    @Input('fFileAdaptDownloadFile') fileInfo;\r\n    /**\r\n     * 捕获预览事件\r\n     * @param fileInfo \r\n     */\r\n    @HostListener('click', ['$event'])\r\n    filePreviewEventHandler() {\r\n        if (!this.fileInfo || this.downloadDisabled) {\r\n            return;\r\n        }\r\n        if (this.enableMulti && this.fileInfo instanceof Array) {\r\n            this.previewSer.multiDownloadFilesWidthName(this.fileInfo,this.zipName,this.extendServerConfig);\r\n        } else {\r\n            this.previewSer.downloadFile(this.fileInfo, this.extendServerConfig);\r\n        }\r\n    }\r\n    //重命名\r\n    @Input() zipName='';\r\n    // 是否禁用下载\r\n    @Input() downloadDisabled = false;\r\n    // 处理扩展的服务器端配置\r\n    @Input() extendServerConfig = null;\r\n    // 是否启用批量下载\r\n    @Input() enableMulti = false;\r\n    constructor(private previewSer: FfilepreviewAdaptUnifileService) {\r\n\r\n    }\r\n}\r\n\r\n","import { Component, OnInit, ElementRef, Input, HostBinding } from '@angular/core';\r\nimport { FUploadFileExtend } from '@farris/extend-file-upload';\r\nimport { FfilepreviewAdaptUnifileService } from './../ffilepreview-adapt-unifile.service';\r\n\r\n@Component({\r\n  selector: 'ffilepreview-adapt-seeimg',\r\n  templateUrl: './ffilepreview-adapt-seeimg.component.html',\r\n  styleUrls: ['./ffilepreview-adapt-seeimg.component.css']\r\n})\r\nexport class FfilepreviewAdaptSeeimgComponent implements OnInit {\r\n  @HostBinding('class.ffilepreview-adapt-seeimg') cls = true;\r\n  // 是否启用图片的缩略图，默认为false；如果启用，图片类型会出现缩略图；不启用，根据类型显示图标\r\n  @Input() enableThumbnail = false;\r\n  // 图标的样式前缀\r\n  @Input() clsPrefix = 'ffilepreview--filetype';\r\n  // 显示缩略图中时，定义哪些后缀属于图片;\r\n  @Input() supportImgSuffix = 'jpeg,jpg,gif,png,bmp';\r\n  // 附件信息\r\n  @Input() fileInfo: FUploadFileExtend;\r\n  @Input() iconWidth=38;\r\n  // 缩略图的最大宽度\r\n  @Input() maxThumbnailWidth = '100%';\r\n  // 缩略图的最小宽度\r\n  @Input() maxThumbnailHeight = '100%';\r\n  // 处理扩展的服务器端配置，这样可以支持每个指令预览不同的目录，比如{'rootId':'default-root','formId':'formId'}\r\n  @Input() extendServerConfig =null;\r\n  constructor(private adpSer: FfilepreviewAdaptUnifileService, private elementRef: ElementRef) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n  /**\r\n   * 获取图片的链接\r\n   */\r\n  imgSrc() {\r\n    return this.adpSer.getImgSrc(this.fileInfo, this.extendServerConfig);\r\n  }\r\n  /**\r\n   * 判断是否是图片\r\n   */\r\n  isImage() {\r\n    // 没有数据\r\n    if (!this.fileInfo) {\r\n      return false;\r\n    }\r\n    // 没有名称\r\n    let fileName = this.fileInfo.name;\r\n    if (!fileName) {\r\n      return false;\r\n    }\r\n    let lastDotIndex = fileName.lastIndexOf(\".\");\r\n    let fileSuffix = '';\r\n    if (lastDotIndex > -1) {\r\n      fileSuffix = fileName.substring(lastDotIndex + 1).toLocaleLowerCase();\r\n    }\r\n    if (!fileSuffix) {\r\n      return false;\r\n    }\r\n    let tImgSuffixArray = this.supportImgSuffix.split(',');\r\n    let tIndex = tImgSuffixArray.findIndex(item => {\r\n      return item == fileSuffix;\r\n    });\r\n    if (tIndex > -1) {\r\n      return true;\r\n    }\r\n    return false;\r\n  }\r\n  /**\r\n   * 获取文件类型样式\r\n   */\r\n  getFileTypeClassName() {\r\n\r\n    let clsName = this.clsPrefix;\r\n    // 如果名称为空\r\n    if (!this.fileInfo || !this.fileInfo['name']) {\r\n      return clsName + '-any';\r\n    }\r\n    let fileName = this.fileInfo['name'];\r\n    let lastDotIndex = fileName.lastIndexOf(\".\");\r\n    let fileSuffix = '';\r\n    if (lastDotIndex > -1) {\r\n      fileSuffix = fileName.substring(lastDotIndex + 1).toLocaleLowerCase();\r\n    }\r\n    switch (fileSuffix) {\r\n      case 'pdf':\r\n        clsName += '-pdf';\r\n        break;\r\n      case 'jpeg':\r\n      case 'jpg':\r\n      case 'gif':\r\n      case 'png':\r\n      case 'bmp':\r\n        clsName += '-img';\r\n        break;\r\n      case 'ppt':\r\n        clsName += '-ppt';\r\n        break;\r\n      case 'doc':\r\n      case 'docx':\r\n        clsName += '-doc';\r\n        break;\r\n      case 'xls':\r\n      case 'xlsx':\r\n        clsName += '-xls';\r\n        break;\r\n      case 'txt':\r\n        clsName += '-txt';\r\n        break;\r\n      case 'zip':\r\n        clsName += '-zip';\r\n        break;\r\n      default:\r\n        clsName += '-any';\r\n    }\r\n    return clsName;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { UploadServerService, UploadFile, UploadInput, UploadStatus } from '@farris/extend-file-upload';\r\nimport { Observable, forkJoin } from 'rxjs';\r\nimport { UploadService, GspFormUploadListEntity, GspFormRemoveListEntity, GspFormDocInfo, GspFormUploadEntity, FileInfo, OperatingModes, GspDocMetaProperty } from '@gsp-svc/formdoc-upload';\r\nimport { FFileUploadAdaptUnifileConfigService, FFileUploadAdaptUnifileConfig } from './ffileupload-adapt-unifile.config';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FfileuploadAdaptUnifileService extends UploadServerService {\r\n  extendData;// 暂时用于简单合并\r\n  bufferSize = 1024*1024;// 1024 * 1024\r\n  private static previous = 0;\r\n  private uploadedChunk = {};\r\n  private fileTotalChunk = {};\r\n\r\n  constructor(private uploadSer: UploadService, private configSer: FFileUploadAdaptUnifileConfigService) {\r\n    super();\r\n    this.extendData = this.configSer.getConfig();\r\n  }\r\n\r\n  private uuid() {\r\n    let  S4 = function () {\r\n      return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n    };\r\n    let nGuid = S4() + S4() +  S4() +  S4() +  S4() +  S4() + S4() + S4();\r\n    return nGuid;\r\n  }\r\n  /**\r\n   * 删除文件\r\n   * @param file \r\n   * @param event \r\n   */\r\n  remove(files: UploadFile[], event: UploadInput, extendService: FFileUploadAdaptUnifileConfig): Observable<any> {\r\n    return this.innerRemoveList(files, event, extendService);\r\n  }\r\n\r\n  private innerRemoveList(files: UploadFile[], event: UploadInput, extendService = null): Observable<any> {\r\n    return new Observable(observer => {\r\n      let removeFileInfo = new GspFormRemoveListEntity;\r\n      let metadataIdList = [];\r\n      files.forEach(fileItem => {\r\n        if (fileItem['response']) {\r\n          metadataIdList.push(fileItem['response']['metadataId']);\r\n        }\r\n      });\r\n\r\n      removeFileInfo.mode = this.getFinallyConfig('mode', extendService);\r\n      let rootId = this.getFinallyConfig('rootId', extendService);\r\n      removeFileInfo.metadataIdList = [].concat(metadataIdList);\r\n\r\n      this.uploadSer.removeList(metadataIdList, rootId).subscribe(result => {\r\n        // 没有需要整合的服务器端返回数据\r\n        observer.next({ type: 'removed', files: files });\r\n      }, error => {\r\n        observer.error(error);\r\n        observer.complete();\r\n      }, () => {\r\n        observer.complete();\r\n      });\r\n    });\r\n  }\r\n  /**\r\n   * 上传文件\r\n   * @param file \r\n   * @param event \r\n   */\r\n  upload(files: UploadFile[], event: UploadInput, extendService: FFileUploadAdaptUnifileConfig): Observable<any> {\r\n    return this.innerUploadList(files, event, extendService);\r\n  }\r\n  /**\r\n   * 内部上传方式\r\n   * @param files \r\n   * @param event \r\n   * @param extendService \r\n   */\r\n  private innerUploadList(files: UploadFile[], event: UploadInput, extendService: FFileUploadAdaptUnifileConfig): Observable<any> {\r\n    return new Observable(observer => {\r\n\r\n      let uploadInfo = new GspFormUploadListEntity;\r\n      uploadInfo.formId = this.getFinallyConfig('formId', extendService);\r\n      uploadInfo.mode = this.getFinallyConfig('mode', extendService);\r\n\r\n      let rootId = this.getFinallyConfig('rootId', extendService);\r\n      uploadInfo.docInfoList = [];\r\n      let readerObserable: Observable<any>[] = [];\r\n      files.forEach((fileItem: UploadFile) => {\r\n        let sub = new Observable(obser => {\r\n          let reader = new FileReader();\r\n          // 暂不处理异常\r\n          reader.readAsBinaryString(fileItem.nativeFile);\r\n          reader.onload = (e) => {\r\n            let info = { 'fileName': '', 'fileContent': '' } as any;\r\n            info['fileName'] = fileItem.name;\r\n            info['fileContent'] = btoa(reader.result.toString());\r\n            // 如果data里有数据，并且属性是配置的扩展属性\r\n            if (event.hasOwnProperty('data') && event['data'] && event['data'].hasOwnProperty('extProperty')) {\r\n              // \r\n              info['extProperty'] = event['data']['extProperty'];\r\n            }\r\n            uploadInfo.docInfoList.push(info);\r\n            obser.next();\r\n            obser.complete();\r\n          }\r\n        });\r\n        readerObserable.push(sub);\r\n      });\r\n\r\n      forkJoin(readerObserable).subscribe(datas => {\r\n        //     metadataId: string;\r\n        //  fileName: string;\r\n        this.uploadSer.uploadList(uploadInfo, rootId).subscribe(result => {\r\n          if (result.error) {\r\n            // 此接口一旦出现问题，所有附件都上传不通过\r\n            observer.error(this.errorInfoFormat(result.error, files));\r\n            observer.complete();\r\n            return;\r\n          }\r\n          // 合并返回结果到此处\r\n          result.forEach(item => {\r\n            var findIndex = this.findFileIndexByFileName(files, item.fileName);\r\n            if (findIndex > -1) {\r\n              files[findIndex]['response'] = item;\r\n              files[findIndex]['progress']['status'] = UploadStatus.Done;\r\n            }\r\n          });\r\n\r\n          observer.next({ type: 'done', files: files });\r\n\r\n        }, error => {\r\n          observer.error(this.errorInfoFormat(error, files));\r\n          observer.complete();\r\n        }, () => {\r\n          observer.complete();\r\n        });\r\n      });\r\n    });\r\n  };\r\n  /**\r\n   * 分片加载\r\n   * @param file \r\n   * @param event \r\n   * @param extendService \r\n   */\r\n  multipartUpload(file: UploadFile, event: UploadInput, extendService: FFileUploadAdaptUnifileConfig): Observable<any> {\r\n\r\n    return new Observable(observer => {\r\n\r\n     // let fileInfo: FileInfo;\r\n      let uuid = this.uuid();\r\n      // let uuid = UUID.UUID();\r\n      //reader.readAsBinaryString(selectedFile);\r\n      //reader.onload = (e) => {\r\n      let fileName = file.name;\r\n      // fileInfo = {\r\n      //   id: uuid,\r\n      //   name: fileName,\r\n      //   type: file.type,\r\n      //   source: \"\",\r\n      //   size: this.formatFileSize(file.size),\r\n      //   fileSize: file.size,\r\n      //   picListDisplayName: this.getMultipartDisplayName(fileName),\r\n      //   queueListDisplayName: fileName,\r\n      //   //content: reader.result.toString(),\r\n      //   hasUploaded: false,\r\n      //   mouseOn: false,\r\n      //   selectd: false,\r\n      //   isUploading: true,\r\n      //   uploadResult: false,\r\n      //   uploadProcess: 0,\r\n      //   errorMessage: \"\",\r\n      //   extensionDropListId: 0,\r\n      //   extensionName: \"\"\r\n      // }\r\n\r\n      let chunkTotal: number = Math.ceil(file.size / this.bufferSize);\r\n      // 标记当前附件总的分片数\r\n      this.fileTotalChunk[uuid] = chunkTotal;\r\n      let chunkIndex: number = 0;\r\n      // 标记当前附件成功的分片数\r\n      this.uploadedChunk[uuid] = 0;\r\n      while (chunkIndex < chunkTotal) {\r\n        let uploadInfo = new GspFormUploadEntity;\r\n        uploadInfo.mode = OperatingModes.Temp;\r\n        uploadInfo.formId = this.getFinallyConfig('formId', extendService);\r\n        uploadInfo.rootId = this.getFinallyConfig('rootId', extendService);\r\n\r\n        let docInfo: GspFormDocInfo = new GspFormDocInfo;\r\n        docInfo.fileName = fileName;\r\n        docInfo.metadataId = uuid;\r\n        docInfo.total = chunkTotal;\r\n        // 如果data里有数据，并且属性是配置的扩展属性\r\n        if (event.hasOwnProperty('data') && event['data'] && event['data'].hasOwnProperty('extProperty')) {\r\n          docInfo['extProperty'] = event['data']['extProperty'] as GspDocMetaProperty;\r\n        }\r\n        // 下一个文件大小\r\n        let nextSize = Math.min((chunkIndex + 1) * this.bufferSize, file.size);\r\n        // File类型\r\n        let fileData = file['nativeFile'].slice(chunkIndex * this.bufferSize, nextSize);\r\n        // 读取文件\r\n        let reader = new FileReader();\r\n        reader.readAsBinaryString(fileData);\r\n        let innerIndex = chunkIndex;\r\n        reader.onload = () => {\r\n          // 附件上传\r\n          docInfo.fileContent = btoa(reader.result.toString());\r\n          docInfo.index = innerIndex;\r\n\r\n          uploadInfo.docInfo = docInfo;\r\n          let info = uploadInfo;\r\n\r\n          this.uploadSer.uploadFile(info).subscribe(result => {\r\n            if (result && result.error) {\r\n              // 分片上传有返回结果就是报错了\r\n              observer.error(this.errorInfoFormat(result.error, [file]));\r\n              observer.complete();\r\n              return;\r\n            } else {\r\n              this.uploadedChunk[uuid]++;\r\n              if (this.uploadedChunk[docInfo.metadataId] == this.fileTotalChunk[docInfo.metadataId]) {\r\n                // 判断是所有分片都上传完成\r\n                file.progress = {\r\n                  status: UploadStatus.Done,\r\n                  data: {\r\n                    percentage: 100\r\n                  }\r\n                };\r\n                file.response=docInfo;\r\n                delete this.uploadedChunk[uuid];\r\n                delete this.fileTotalChunk[uuid];\r\n                observer.next({ type: 'done', files: [file] });\r\n                observer.complete();\r\n\r\n              } else {                \r\n              // 分片上传正常\r\n                const percentage = Number.parseInt((this.uploadedChunk[uuid] / this.fileTotalChunk[uuid] * 100).toFixed(0));\r\n                // 判断未上传完成\r\n                file.progress = {\r\n                  status: UploadStatus.Uploading,\r\n                  data: {\r\n                    percentage: percentage\r\n                  }\r\n                };\r\n                observer.next({ type: 'uploading', files: [file] });\r\n              }\r\n            }\r\n          }, error => {\r\n            delete this.uploadedChunk[uuid];\r\n            delete this.fileTotalChunk[uuid];\r\n            observer.error(this.errorInfoFormat(error, [file]));\r\n            observer.complete();\r\n          });\r\n        }\r\n        chunkIndex = chunkIndex + 1;\r\n      }\r\n    });\r\n  }\r\n  /**\r\n   * 获取分片的附件大小\r\n   * @param size \r\n   */\r\n  private formatFileSize(size: number) {\r\n    if (size < 102400)\r\n      return (size / 1024).toFixed(1) + \"K\";\r\n    else if (size < 1024 * 1024)\r\n      return (size / 1024).toFixed(0) + \"K\";\r\n    else if (size < 100 * 1024 * 1024)\r\n      return (size / 1024 / 1024).toFixed(1) + \"M\";\r\n    else if (size < 1024 * 1024 * 1024)\r\n      return (size / 1024 / 1024).toFixed(0) + \"M\";\r\n    else\r\n      return (size / 1024 / 1024 / 1024).toFixed(1) + \"G\";\r\n  }\r\n  /**\r\n   * 获取分片的 附件名称\r\n   * @param fileName \r\n   */\r\n  private getMultipartDisplayName(fileName: string) {\r\n    if (fileName.length <= 10)\r\n      return fileName;\r\n    else {\r\n      let headContent = fileName.substring(0, 2);\r\n      let tailContent = fileName.substring(fileName.lastIndexOf('.') - 2);\r\n      return headContent + \"…\" + tailContent;\r\n    }\r\n  }\r\n  private errorInfoFormat(error, files) {\r\n    // \r\n    let errorFiles = files.map(item => {\r\n      return { id: item.id, name: item.name };\r\n    });\r\n    if (error) {\r\n      return Object.assign(error, { files: errorFiles }, { message: error['Message'] || error['extensionMessage'] || '上传失败', type: 'error' });\r\n    } else {\r\n      return Object.assign({ files: errorFiles }, { message: '上传失败', type: 'error' });\r\n    }\r\n  }\r\n  /**\r\n   * 返回最终属性值\r\n   * @param key \r\n   * @param configValue \r\n   * @param extendValue \r\n   */\r\n  private getFinallyConfig(key, extendValue) {\r\n    if (extendValue && extendValue.hasOwnProperty(key)) {\r\n      return extendValue[key];\r\n    }\r\n    return this.extendData[key];\r\n  }\r\n\r\n  private findFileIndexByFileName(files: UploadFile[], fileName) {\r\n    // 按照肯定能找到文件来处理\r\n    let findIndex = files.findIndex(file => file.name == fileName);\r\n    return findIndex;\r\n  }\r\n\r\n}\r\n\r\n","import { Directive, HostListener, Input } from '@angular/core';\r\nimport { FfilepreviewAdaptUnifileService } from './ffilepreview-adapt-unifile.service';\r\n\r\n@Directive({\r\n    selector: '[fFilePreviewAdaptUnifile]',\r\n    providers:[FfilepreviewAdaptUnifileService]\r\n})\r\nexport class FFilePreviewAdaptUnifileDirective {\r\n    /**\r\n     * 捕获预览事件\r\n     * @param fileInfo \r\n     */\r\n    @HostListener('filePreviewEvent', ['$event'])\r\n    filePreviewEventHandler(fileInfo) {\r\n        this.previewSer.previewFile(fileInfo, this.extendServerConfig);\r\n    }\r\n    /**\r\n     * 捕获下载事件\r\n     * @param fileInfo \r\n     */\r\n    @HostListener('fileDownloadEvent', ['$event'])\r\n    fileDownloadEventHandler(downloadEv) {\r\n        // 如果是批量下载, downloadEv={fileInfos:[],name:}\r\n        if (downloadEv&&downloadEv['fileInfos'].length>0) {\r\n            if (downloadEv['fileInfos'].length>1) {\r\n                this.previewSer.multiDownloadFilesWidthName(downloadEv['fileInfos'],downloadEv['name'], this.extendServerConfig);\r\n            }else{\r\n                this.previewSer.downloadFile(downloadEv['fileInfos'][0], this.extendServerConfig);\r\n            }\r\n        }        \r\n    }\r\n\r\n    /**\r\n     * 处理扩展的服务器端配置\r\n     */\r\n    private _extendServeConfig=null;\r\n    @Input() \r\n    set extendServerConfig(value){\r\n        this._extendServeConfig=value;\r\n        this.previewSer.setPreviwExtendServerConfig(value);\r\n    } \r\n    get extendServerConfig(){\r\n        return this._extendServeConfig;\r\n    }\r\n    constructor(private previewSer: FfilepreviewAdaptUnifileService) {\r\n\r\n    }\r\n\r\n}\r\n","import { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { FFileUploadModule } from '@farris/extend-file-upload';\r\nimport { UploadDialogMoudle } from '@gsp-svc/formdoc-upload';\r\nimport { FfileuploadAdaptUnifileService } from './ffileupload-adapt-unifile.service';\r\nimport { FfilepreviewAdaptUnifileService } from './ffilepreview-adapt-unifile.service';\r\nimport { FFilePreviewAdaptUnifileDirective } from './ffilepreview-adapt-unifile.directive';\r\nimport { FileListModule, FileViewerService } from '@gsp-svc/file-viewer';\r\nimport { FFileUploadAdaptUnifileConfig, FFileUploadAdaptUnifileConfigToken, FFileUploadAdaptUnifileConfigService } from './ffileupload-adapt-unifile.config';\r\nimport { FfilepreviewAdaptSeeimgComponent } from './ffilepreview-adapt-seeimg/ffilepreview-adapt-seeimg.component';\r\nimport { FFileAdaptDownloadFileDirective, FFileAdaptPreviewFileDirective } from './ffilepreview-adapt-unifile-simple.directive';\r\n\r\n\r\n@NgModule({\r\n  declarations: [FFilePreviewAdaptUnifileDirective, FfilepreviewAdaptSeeimgComponent,FFileAdaptDownloadFileDirective,FFileAdaptPreviewFileDirective],\r\n  imports: [\r\n    CommonModule,\r\n    UploadDialogMoudle,\r\n    FileListModule,\r\n    FFileUploadModule.forRoot(null, FfileuploadAdaptUnifileService)\r\n  ],\r\n  exports: [FFileUploadModule, FFilePreviewAdaptUnifileDirective, FfilepreviewAdaptSeeimgComponent,FFileAdaptDownloadFileDirective,FFileAdaptPreviewFileDirective],\r\n  providers: [\r\n    FFileUploadAdaptUnifileConfigService,\r\n    FfilepreviewAdaptUnifileService,\r\n    FileViewerService\r\n  ]\r\n})\r\nexport class FfileuploadAdaptUnifileModule {\r\n\r\n  static forRoot(config?: FFileUploadAdaptUnifileConfig): ModuleWithProviders {\r\n    return {\r\n      ngModule: FfileuploadAdaptUnifileModule,\r\n      providers: [\r\n        { provide: FFileUploadAdaptUnifileConfigToken, useValue: config },\r\n        FFileUploadAdaptUnifileConfigService,\r\n        FfilepreviewAdaptUnifileService,\r\n        FileViewerService\r\n      ]\r\n    };\r\n  }\r\n}\r\n"]}