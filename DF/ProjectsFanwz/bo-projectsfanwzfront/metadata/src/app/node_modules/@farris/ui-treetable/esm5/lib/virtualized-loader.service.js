/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var VirtualizedLoaderService = /** @class */ (function () {
    function VirtualizedLoaderService(tt) {
        this.tt = tt;
    }
    /**
     * @return {?}
     */
    VirtualizedLoaderService.prototype.getTableHeight = /**
     * @return {?}
     */
    function () {
        return this.tt.height;
    };
    /**
     * @return {?}
     */
    VirtualizedLoaderService.prototype.getTableHeaderHeight = /**
     * @return {?}
     */
    function () {
        return this.tt.headerBox.nativeElement.getBoundingClientRect().height;
    };
    /**
     * @return {?}
     */
    VirtualizedLoaderService.prototype.getTableBodyHeight = /**
     * @return {?}
     */
    function () {
        return this.tt.height - this.getTableHeaderHeight();
    };
    /**
     * @return {?}
     */
    VirtualizedLoaderService.prototype.getTableWidth = /**
     * @return {?}
     */
    function () {
        return this.tt.width;
    };
    /**
     * @return {?}
     */
    VirtualizedLoaderService.prototype.getRowHeight = /**
     * @return {?}
     */
    function () {
        return this.tt.rowHeight;
    };
    /**
     * @param {?} scrollTop
     * @return {?}
     */
    VirtualizedLoaderService.prototype.getRowNodes = /**
     * @param {?} scrollTop
     * @return {?}
     */
    function (scrollTop) {
        /** @type {?} */
        var minTop = scrollTop;
        /** @type {?} */
        var maxTop = minTop + this.getTableHeight();
        /** @type {?} */
        var top = 0;
        /** @type {?} */
        var rows = [];
        /** @type {?} */
        var topHideHeight = 0;
        /** @type {?} */
        var bottomHideHeight = 0;
        var rowNodes = this.tt.state.rowNodes;
        /** @type {?} */
        var rowHeight = this.getRowHeight();
        // console.time('循环所有节点');
        for (var i = 0; i < rowNodes.length; i++) {
            /** @type {?} */
            var n = rowNodes[i];
            if (!n.visible) {
                continue;
            }
            top += rowHeight;
            if (top + rowHeight < minTop) {
                topHideHeight += rowHeight;
                continue;
            }
            else {
                if (top > maxTop) {
                    bottomHideHeight += rowHeight;
                    continue;
                }
            }
            rows.push(n);
        }
        // console.timeEnd('循环所有节点');
        return {
            data: rows,
            topHideHeight: topHideHeight,
            bottomHideHeight: bottomHideHeight
        };
    };
    return VirtualizedLoaderService;
}());
export { VirtualizedLoaderService };
if (false) {
    /**
     * @type {?}
     * @private
     */
    VirtualizedLoaderService.prototype.tt;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmlydHVhbGl6ZWQtbG9hZGVyLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL3VpLXRyZWV0YWJsZS8iLCJzb3VyY2VzIjpbImxpYi92aXJ0dWFsaXplZC1sb2FkZXIuc2VydmljZS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBV0E7SUFDSSxrQ0FBb0IsRUFBc0I7UUFBdEIsT0FBRSxHQUFGLEVBQUUsQ0FBb0I7SUFBRyxDQUFDOzs7O0lBRTlDLGlEQUFjOzs7SUFBZDtRQUNJLE9BQU8sSUFBSSxDQUFDLEVBQUUsQ0FBQyxNQUFNLENBQUM7SUFDMUIsQ0FBQzs7OztJQUNELHVEQUFvQjs7O0lBQXBCO1FBQ0ksT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQyxhQUFhLENBQUMscUJBQXFCLEVBQUUsQ0FBQyxNQUFNLENBQUM7SUFDMUUsQ0FBQzs7OztJQUNELHFEQUFrQjs7O0lBQWxCO1FBQ0ksT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLE1BQU0sR0FBRyxJQUFJLENBQUMsb0JBQW9CLEVBQUUsQ0FBQztJQUN4RCxDQUFDOzs7O0lBQ0QsZ0RBQWE7OztJQUFiO1FBQ0ksT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLEtBQUssQ0FBQztJQUN6QixDQUFDOzs7O0lBRUQsK0NBQVk7OztJQUFaO1FBQ0ksT0FBTyxJQUFJLENBQUMsRUFBRSxDQUFDLFNBQVMsQ0FBQztJQUM3QixDQUFDOzs7OztJQUVELDhDQUFXOzs7O0lBQVgsVUFBWSxTQUFpQjs7WUFDbkIsTUFBTSxHQUFHLFNBQVM7O1lBQ2xCLE1BQU0sR0FBRyxNQUFNLEdBQUcsSUFBSSxDQUFDLGNBQWMsRUFBRTs7WUFFekMsR0FBRyxHQUFHLENBQUM7O1lBQ0wsSUFBSSxHQUFHLEVBQUU7O1lBQ1gsYUFBYSxHQUFHLENBQUM7O1lBQ2pCLGdCQUFnQixHQUFHLENBQUM7UUFFakIsSUFBQSxpQ0FBUTs7WUFDVCxTQUFTLEdBQUcsSUFBSSxDQUFDLFlBQVksRUFBRTtRQUVyQywwQkFBMEI7UUFDMUIsS0FBSyxJQUFJLENBQUMsR0FBRyxDQUFDLEVBQUUsQ0FBQyxHQUFHLFFBQVEsQ0FBQyxNQUFNLEVBQUUsQ0FBQyxFQUFFLEVBQUU7O2dCQUNoQyxDQUFDLEdBQVksUUFBUSxDQUFDLENBQUMsQ0FBQztZQUM5QixJQUFLLENBQUMsQ0FBQyxDQUFDLE9BQU8sRUFBRTtnQkFDYixTQUFTO2FBQ1o7WUFDRCxHQUFHLElBQUksU0FBUyxDQUFDO1lBQ2pCLElBQUksR0FBRyxHQUFHLFNBQVMsR0FBRyxNQUFNLEVBQUU7Z0JBQzFCLGFBQWEsSUFBSSxTQUFTLENBQUM7Z0JBQzNCLFNBQVM7YUFDWjtpQkFBTTtnQkFDSCxJQUFJLEdBQUcsR0FBRyxNQUFNLEVBQUU7b0JBQ2QsZ0JBQWdCLElBQUksU0FBUyxDQUFDO29CQUM5QixTQUFTO2lCQUNaO2FBQ0o7WUFFRCxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1NBQ2hCO1FBQ0QsNkJBQTZCO1FBRTdCLE9BQU87WUFDSCxJQUFJLEVBQUUsSUFBSTtZQUNWLGFBQWEsZUFBQTtZQUNiLGdCQUFnQixrQkFBQTtTQUNuQixDQUFDO0lBQ04sQ0FBQztJQUNMLCtCQUFDO0FBQUQsQ0FBQyxBQTNERCxJQTJEQzs7Ozs7OztJQTFEZSxzQ0FBOEIiLCJzb3VyY2VzQ29udGVudCI6WyIvKlxyXG4gKiBAQXV0aG9yOiDnlq/ni4Lnp4DmiY0oTHVjYXMgSHVhbmcpXHJcbiAqIEBEYXRlOiAyMDE5LTA1LTIzIDEwOjI3OjA5XHJcbiAqIEBMYXN0RWRpdG9yczog55av54uC56eA5omNKEx1Y2FzIEh1YW5nKVxyXG4gKiBATGFzdEVkaXRUaW1lOiAyMDE5LTA5LTAyIDA5OjA4OjI1XHJcbiAqIEBRUTogMTA1NTgxODIzOVxyXG4gKiBAVmVyc2lvbjogdjAuMC4xXHJcbiAqL1xyXG5pbXBvcnQgeyBUcmVlVGFibGVDb21wb25lbnQgfSBmcm9tICcuL3RyZWV0YWJsZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBSb3dOb2RlIH0gZnJvbSAnLi90eXBlcy90cmVlbm9kZSc7XHJcblxyXG5leHBvcnQgY2xhc3MgVmlydHVhbGl6ZWRMb2FkZXJTZXJ2aWNlIHtcclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgdHQ6IFRyZWVUYWJsZUNvbXBvbmVudCkge31cclxuXHJcbiAgICBnZXRUYWJsZUhlaWdodCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy50dC5oZWlnaHQ7XHJcbiAgICB9XHJcbiAgICBnZXRUYWJsZUhlYWRlckhlaWdodCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy50dC5oZWFkZXJCb3gubmF0aXZlRWxlbWVudC5nZXRCb3VuZGluZ0NsaWVudFJlY3QoKS5oZWlnaHQ7XHJcbiAgICB9XHJcbiAgICBnZXRUYWJsZUJvZHlIZWlnaHQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudHQuaGVpZ2h0IC0gdGhpcy5nZXRUYWJsZUhlYWRlckhlaWdodCgpO1xyXG4gICAgfVxyXG4gICAgZ2V0VGFibGVXaWR0aCgpIHtcclxuICAgICAgICByZXR1cm4gdGhpcy50dC53aWR0aDtcclxuICAgIH1cclxuXHJcbiAgICBnZXRSb3dIZWlnaHQoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMudHQucm93SGVpZ2h0O1xyXG4gICAgfVxyXG5cclxuICAgIGdldFJvd05vZGVzKHNjcm9sbFRvcDogbnVtYmVyKSB7XHJcbiAgICAgICAgY29uc3QgbWluVG9wID0gc2Nyb2xsVG9wO1xyXG4gICAgICAgIGNvbnN0IG1heFRvcCA9IG1pblRvcCArIHRoaXMuZ2V0VGFibGVIZWlnaHQoKTtcclxuXHJcbiAgICAgICAgbGV0IHRvcCA9IDA7XHJcbiAgICAgICAgY29uc3Qgcm93cyA9IFtdO1xyXG4gICAgICAgIGxldCB0b3BIaWRlSGVpZ2h0ID0gMDtcclxuICAgICAgICBsZXQgYm90dG9tSGlkZUhlaWdodCA9IDA7XHJcblxyXG4gICAgICAgIGNvbnN0IHtyb3dOb2RlcyB9ID0gdGhpcy50dC5zdGF0ZTtcclxuICAgICAgICBjb25zdCByb3dIZWlnaHQgPSB0aGlzLmdldFJvd0hlaWdodCgpO1xyXG5cclxuICAgICAgICAvLyBjb25zb2xlLnRpbWUoJ+W+queOr+aJgOacieiKgueCuScpO1xyXG4gICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcm93Tm9kZXMubGVuZ3RoOyBpKyspIHtcclxuICAgICAgICAgICAgY29uc3QgbjogUm93Tm9kZSA9IHJvd05vZGVzW2ldO1xyXG4gICAgICAgICAgICBpZiAoICFuLnZpc2libGUpIHtcclxuICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIHRvcCArPSByb3dIZWlnaHQ7XHJcbiAgICAgICAgICAgIGlmICh0b3AgKyByb3dIZWlnaHQgPCBtaW5Ub3ApIHtcclxuICAgICAgICAgICAgICAgIHRvcEhpZGVIZWlnaHQgKz0gcm93SGVpZ2h0O1xyXG4gICAgICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodG9wID4gbWF4VG9wKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgYm90dG9tSGlkZUhlaWdodCArPSByb3dIZWlnaHQ7XHJcbiAgICAgICAgICAgICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHJvd3MucHVzaChuKTtcclxuICAgICAgICB9XHJcbiAgICAgICAgLy8gY29uc29sZS50aW1lRW5kKCflvqrnjq/miYDmnInoioLngrknKTtcclxuXHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgZGF0YTogcm93cyxcclxuICAgICAgICAgICAgdG9wSGlkZUhlaWdodCxcclxuICAgICAgICAgICAgYm90dG9tSGlkZUhlaWdodFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbn1cclxuIl19