/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Directive, Input, ContentChild } from '@angular/core';
import { DatagridCellEditorDirective } from './column-cell-edit.directive';
export class DatagridColumnDirective {
    constructor() {
        this.halign = 'left';
        this.align = 'left';
        this.readonly = true;
        this.editable = false;
    }
    /**
     * @return {?}
     */
    ngOnInit() { }
    /**
     * @return {?}
     */
    ngAfterContentInit() {
        console.log(this.editor);
    }
}
DatagridColumnDirective.decorators = [
    { type: Directive, args: [{
                selector: 'farris-grid-column',
            },] }
];
/** @nocollapse */
DatagridColumnDirective.ctorParameters = () => [];
DatagridColumnDirective.propDecorators = {
    field: [{ type: Input }],
    title: [{ type: Input }],
    width: [{ type: Input }],
    halign: [{ type: Input }],
    align: [{ type: Input }],
    formatter: [{ type: Input }],
    readonly: [{ type: Input }],
    editable: [{ type: Input }],
    editor: [{ type: ContentChild, args: [DatagridCellEditorDirective,] }]
};
if (false) {
    /** @type {?} */
    DatagridColumnDirective.prototype.field;
    /** @type {?} */
    DatagridColumnDirective.prototype.title;
    /** @type {?} */
    DatagridColumnDirective.prototype.width;
    /** @type {?} */
    DatagridColumnDirective.prototype.halign;
    /** @type {?} */
    DatagridColumnDirective.prototype.align;
    /** @type {?} */
    DatagridColumnDirective.prototype.formatter;
    /** @type {?} */
    DatagridColumnDirective.prototype.readonly;
    /** @type {?} */
    DatagridColumnDirective.prototype.editable;
    /** @type {?} */
    DatagridColumnDirective.prototype.editor;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YWdyaWQtY29sdW1uLmRpcmVjdGl2ZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktZGF0YWdyaWQvIiwic291cmNlcyI6WyJsaWIvY29tcG9uZW50cy9jb2x1bW5zL2RhdGFncmlkLWNvbHVtbi5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBVSxTQUFTLEVBQUUsS0FBSyxFQUFFLFlBQVksRUFBb0IsTUFBTSxlQUFlLENBQUM7QUFDekYsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sOEJBQThCLENBQUM7QUFLM0UsTUFBTSxPQUFPLHVCQUF1QjtJQWFoQztRQVJTLFdBQU0sR0FBK0IsTUFBTSxDQUFDO1FBQzVDLFVBQUssR0FBK0IsTUFBTSxDQUFDO1FBRTNDLGFBQVEsR0FBRyxJQUFJLENBQUM7UUFDaEIsYUFBUSxHQUFHLEtBQUssQ0FBQztJQUlWLENBQUM7Ozs7SUFFakIsUUFBUSxLQUFXLENBQUM7Ozs7SUFFcEIsa0JBQWtCO1FBQ2QsT0FBTyxDQUFDLEdBQUcsQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUM7SUFDN0IsQ0FBQzs7O1lBdEJKLFNBQVMsU0FBQztnQkFDUCxRQUFRLEVBQUUsb0JBQW9CO2FBQ2pDOzs7OztvQkFHSSxLQUFLO29CQUNMLEtBQUs7b0JBQ0wsS0FBSztxQkFDTCxLQUFLO29CQUNMLEtBQUs7d0JBQ0wsS0FBSzt1QkFDTCxLQUFLO3VCQUNMLEtBQUs7cUJBRUwsWUFBWSxTQUFDLDJCQUEyQjs7OztJQVR6Qyx3Q0FBdUI7O0lBQ3ZCLHdDQUF1Qjs7SUFDdkIsd0NBQXVCOztJQUN2Qix5Q0FBcUQ7O0lBQ3JELHdDQUFvRDs7SUFDcEQsNENBQXNEOztJQUN0RCwyQ0FBeUI7O0lBQ3pCLDJDQUEwQjs7SUFFMUIseUNBQXVEIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgT25Jbml0LCBEaXJlY3RpdmUsIElucHV0LCBDb250ZW50Q2hpbGQsIEFmdGVyQ29udGVudEluaXQgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgRGF0YWdyaWRDZWxsRWRpdG9yRGlyZWN0aXZlIH0gZnJvbSAnLi9jb2x1bW4tY2VsbC1lZGl0LmRpcmVjdGl2ZSc7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICAgIHNlbGVjdG9yOiAnZmFycmlzLWdyaWQtY29sdW1uJyxcclxufSlcclxuZXhwb3J0IGNsYXNzIERhdGFncmlkQ29sdW1uRGlyZWN0aXZlIGltcGxlbWVudHMgT25Jbml0LCBBZnRlckNvbnRlbnRJbml0IHtcclxuXHJcbiAgICBASW5wdXQoKSBmaWVsZDogc3RyaW5nO1xyXG4gICAgQElucHV0KCkgdGl0bGU6IHN0cmluZztcclxuICAgIEBJbnB1dCgpIHdpZHRoOiBudW1iZXI7XHJcbiAgICBASW5wdXQoKSBoYWxpZ246ICdsZWZ0JyB8ICdjZW50ZXInIHwncmlnaHQnID0gJ2xlZnQnO1xyXG4gICAgQElucHV0KCkgYWxpZ246ICdsZWZ0JyB8ICdjZW50ZXInIHwncmlnaHQnID0gJ2xlZnQnO1xyXG4gICAgQElucHV0KCkgZm9ybWF0dGVyOiAodmFsdWUsIHJvd0RhdGEsIHJvd0luZGV4KSA9PiBhbnk7XHJcbiAgICBASW5wdXQoKSByZWFkb25seSA9IHRydWU7XHJcbiAgICBASW5wdXQoKSBlZGl0YWJsZSA9IGZhbHNlO1xyXG5cclxuICAgIEBDb250ZW50Q2hpbGQoRGF0YWdyaWRDZWxsRWRpdG9yRGlyZWN0aXZlKSBlZGl0b3I6IGFueTtcclxuXHJcbiAgICBjb25zdHJ1Y3RvcigpIHsgfVxyXG5cclxuICAgIG5nT25Jbml0KCk6IHZvaWQgeyB9XHJcblxyXG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xyXG4gICAgICAgIGNvbnNvbGUubG9nKHRoaXMuZWRpdG9yKTtcclxuICAgIH1cclxufVxyXG4iXX0=