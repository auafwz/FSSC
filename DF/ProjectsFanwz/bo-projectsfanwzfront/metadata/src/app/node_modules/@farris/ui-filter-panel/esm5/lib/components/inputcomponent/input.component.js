/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output, Renderer2, Injector, ViewChild, ElementRef } from '@angular/core';
import { LocaleService } from '@farris/ui-locale';
var PanelInputComponent = /** @class */ (function () {
    function PanelInputComponent(renderer, injector) {
        this.renderer = renderer;
        this.injector = injector;
        this.localStorageKey = 'farrisSearchRecord';
        this.searchHandle = new EventEmitter();
        this.submitChange = new EventEmitter();
        this.placeholder = '';
        this.searchTags = [];
        this.searchItems = [];
        this.searchFocus = false;
        this.historyText = '历史搜索';
        this.resultText = '查询结果';
        this.resultTitle = '历史搜索';
        this.localeService = this.injector.get(LocaleService);
    }
    Object.defineProperty(PanelInputComponent.prototype, "item", {
        get: /**
         * @return {?}
         */
        function () {
            return this._item;
        },
        set: /**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            var _this = this;
            this._item = data;
            if (this._item) {
                if (!this._item.hasOwnProperty('value')) {
                    //this._item.value.value = undefined;
                    this._item.value = { value: '' };
                }
                if (this._item.placeHolder) {
                    this.placeholder = this._item.placeHolder || '';
                }
                this.inputValue = this._item.value.value;
                setTimeout((/**
                 * @return {?}
                 */
                function () {
                    /** @type {?} */
                    var filterPanelArray = JSON.parse(localStorage.getItem(_this.localStorageKey));
                    if (Array.isArray(filterPanelArray)) {
                        filterPanelArray = null;
                    }
                    if (filterPanelArray && filterPanelArray[_this._item.labelCode]) {
                        _this.searchTags = filterPanelArray[_this._item.labelCode];
                        _this.searchItems = filterPanelArray[_this._item.labelCode];
                    }
                }), 0);
            }
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    PanelInputComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var self = this;
        this.renderer.listen(document, 'click', (/**
         * @param {?} event
         * @return {?}
         */
        function (event) {
            if (!event.target.closest('.f-filter-search-result-panel') && !event.target.closest('.filter-type-input .form-control')) {
                self.searchFocus = false;
            }
        }));
        this.historyText = this.localeService.getValue('filterPanel.searchHistory');
        this.resultText = this.localeService.getValue('filterPanel.searchResult');
        this.resultTitle = this.historyText;
        this.setSubmitChange();
        this.inputText.nativeElement.focus();
    };
    /**
     * 绑定点击回车触发查询
     * @param e
     */
    /**
     * 绑定点击回车触发查询
     * @param {?} e
     * @return {?}
     */
    PanelInputComponent.prototype.inputKeyEnter = /**
     * 绑定点击回车触发查询
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this._item.value.value = this.inputValue;
        this._item.valueText = this._item.value.value;
        this.setSubmitChange();
        this.searchHandle.emit({ value: this._item.value.value, type: 'enter' });
    };
    /**
     * @param {?} e
     * @return {?}
     */
    PanelInputComponent.prototype.inputChanged = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this._item.value.value = this.inputValue;
        this._item.valueText = this._item.value.value;
        this.setSubmitChange();
        this.searchHandle.emit(this._item.value.value);
    };
    /**
     * @param {?} e
     * @return {?}
     */
    PanelInputComponent.prototype.inputValueChange = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this.searchItems = this.searchTags;
        this.resultTitle = this.historyText;
        this._item.value.value = this.inputValue;
        this._item.valueText = this._item.value.value;
        this.setSubmitChange();
        if (this.inputValue && this.searchItems.length) {
            /** @type {?} */
            var arr = this.fuzzyQuery(this.searchItems, this.inputValue);
            if (arr.length) {
                this.searchItems = arr;
                this.resultTitle = this.resultText;
            }
            else {
                this.searchItems = this.searchTags;
                this.resultTitle = this.historyText;
            }
        }
    };
    /**
     * @private
     * @param {?} list
     * @param {?} keyWord
     * @return {?}
     */
    PanelInputComponent.prototype.fuzzyQuery = /**
     * @private
     * @param {?} list
     * @param {?} keyWord
     * @return {?}
     */
    function (list, keyWord) {
        /** @type {?} */
        var reg = new RegExp(keyWord);
        /** @type {?} */
        var arr = [];
        for (var i = 0; i < list.length; i++) {
            if (reg.test(list[i])) {
                arr.push(list[i]);
            }
        }
        return arr;
    };
    /**
     * @param {?} e
     * @return {?}
     */
    PanelInputComponent.prototype.inputFocus = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this.searchFocus = true;
        this.inputValueChange(e);
    };
    /**
     * @param {?} tag
     * @param {?} event
     * @return {?}
     */
    PanelInputComponent.prototype.clickTag = /**
     * @param {?} tag
     * @param {?} event
     * @return {?}
     */
    function (tag, event) {
        event.stopPropagation();
        if (this.inputValue !== tag) {
            this.inputValue = tag;
            this._item.value.value = this.inputValue;
            this._item.valueText = this._item.value.value;
            this.setSubmitChange();
            this.searchHandle.emit({ value: this._item.value.value, type: 'enter' });
        }
    };
    /**
     * @param {?} tag
     * @param {?} index
     * @param {?} event
     * @return {?}
     */
    PanelInputComponent.prototype.removeTag = /**
     * @param {?} tag
     * @param {?} index
     * @param {?} event
     * @return {?}
     */
    function (tag, index, event) {
        event.stopPropagation();
        if (this.searchTags && this.searchTags.length) {
            this.searchTags.splice(index, 1);
        }
        this.searchItems = this.searchTags;
        /** @type {?} */
        var filterPanelArray = JSON.parse(localStorage.getItem(this.localStorageKey));
        if (Array.isArray(filterPanelArray)) {
            filterPanelArray = null;
        }
        if (filterPanelArray && filterPanelArray[this._item.labelCode]) {
            if (this.searchTags.length) {
                filterPanelArray[this._item.labelCode] = this.searchTags;
            }
            else {
                delete filterPanelArray[this._item.labelCode];
            }
        }
        localStorage.setItem(this.localStorageKey, JSON.stringify(filterPanelArray));
    };
    /**
     * @param {?} item
     * @param {?} event
     * @return {?}
     */
    PanelInputComponent.prototype.clickSearchItem = /**
     * @param {?} item
     * @param {?} event
     * @return {?}
     */
    function (item, event) {
        this.clickTag(item, event);
        this.searchFocus = false;
    };
    /**
     * @return {?}
     */
    PanelInputComponent.prototype.setSubmitChange = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var val = this._item.value;
        if (Object.keys(val).length < 0 || !val.value) {
            this.submitChange.emit(false);
        }
        else {
            this.submitChange.emit(true);
        }
    };
    /**
     * @return {?}
     */
    PanelInputComponent.prototype.showSearchTags = /**
     * @return {?}
     */
    function () {
        if (this.searchTags && this.searchTags.length > 0) {
            if (this.searchTags.length == 1 && this.searchTags[0].length == 0) {
                return false;
            }
            return true;
        }
        return false;
    };
    PanelInputComponent.decorators = [
        { type: Component, args: [{
                    selector: 'panel-filter-input',
                    template: "<input class=\"form-control\" type=\"text\" [(ngModel)]=\"inputValue\" [placeholder]=\"placeholder\"\r\n    (keyup.enter)=\"inputKeyEnter($event)\" (keyup)=\"inputValueChange($event)\" (blur)=\"inputChanged($event)\"\r\n    (focus)=\"inputFocus($event)\" #inputText>\r\n\r\n<!-- <div class=\"f-filter-search-result-panel\" [hidden]=\"!(searchItems && searchItems.length && searchFocus)\">\r\n    <div class=\"search-result-title\">{{ resultTitle }}</div>\r\n    <div class=\"search-result-list\">\r\n        <div class=\"search-result-item\" \r\n        *ngFor=\"let item of searchItems;\" \r\n        (click)=\"clickSearchItem(item,$event)\"\r\n        [innerHTML]=\"item | filterHighlightSearchResult:inputValue | filterSafe: 'html'\"\r\n        [title]=\"item\"\r\n        ></div>\r\n    </div>\r\n</div> -->\r\n\r\n<div class=\"f-filter-panel-search-tags\" *ngIf=\"showSearchTags()\">\r\n    <ng-container *ngFor=\"let tag of searchTags;let i = index;\">\r\n        <div class=\"panel-search-tag\" *ngIf=\"tag.length>0\">\r\n            <span class=\"panel-search-tag-text\" (click)=\"clickTag(tag,$event)\" [title]=\"tag\">{{tag}}</span>\r\n            <span class=\"panel-search-tag-remove f-icon modal_close\" (click)=\"removeTag(tag,i,$event)\"></span>\r\n        </div>\r\n    </ng-container>\r\n</div>"
                }] }
    ];
    /** @nocollapse */
    PanelInputComponent.ctorParameters = function () { return [
        { type: Renderer2 },
        { type: Injector }
    ]; };
    PanelInputComponent.propDecorators = {
        item: [{ type: Input }],
        localStorageKey: [{ type: Input }],
        searchHandle: [{ type: Output }],
        submitChange: [{ type: Output }],
        inputText: [{ type: ViewChild, args: ['inputText',] }]
    };
    return PanelInputComponent;
}());
export { PanelInputComponent };
if (false) {
    /** @type {?} */
    PanelInputComponent.prototype._item;
    /** @type {?} */
    PanelInputComponent.prototype.localStorageKey;
    /** @type {?} */
    PanelInputComponent.prototype.searchHandle;
    /** @type {?} */
    PanelInputComponent.prototype.submitChange;
    /** @type {?} */
    PanelInputComponent.prototype.inputText;
    /** @type {?} */
    PanelInputComponent.prototype.placeholder;
    /** @type {?} */
    PanelInputComponent.prototype.inputValue;
    /** @type {?} */
    PanelInputComponent.prototype.searchTags;
    /** @type {?} */
    PanelInputComponent.prototype.searchItems;
    /** @type {?} */
    PanelInputComponent.prototype.searchFocus;
    /** @type {?} */
    PanelInputComponent.prototype.localeService;
    /** @type {?} */
    PanelInputComponent.prototype.historyText;
    /** @type {?} */
    PanelInputComponent.prototype.resultText;
    /** @type {?} */
    PanelInputComponent.prototype.resultTitle;
    /**
     * @type {?}
     * @private
     */
    PanelInputComponent.prototype.renderer;
    /**
     * @type {?}
     * @private
     */
    PanelInputComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,