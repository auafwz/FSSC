!function(t,e){"object"==typeof exports&&"undefined"!=typeof module?e(exports,require("rxjs/operators"),require("rxjs"),require("@angular/core"),require("@farris/ui-modal"),require("@farris/ui-messager"),require("@farris/ui-locale"),require("lodash-es"),require("@farris/ui-common"),require("@farris/ui-multi-select"),require("@angular/forms"),require("@angular/common"),require("@farris/ui-datagrid"),require("@farris/smooth-dnd"),require("@farris/ui-combo-list")):"function"==typeof define&&define.amd?define("@farris/ui-datagrid-settings",["exports","rxjs/operators","rxjs","@angular/core","@farris/ui-modal","@farris/ui-messager","@farris/ui-locale","lodash-es","@farris/ui-common","@farris/ui-multi-select","@angular/forms","@angular/common","@farris/ui-datagrid","@farris/smooth-dnd","@farris/ui-combo-list"],e):e(((t=t||self).farris=t.farris||{},t.farris["ui-datagrid-settings"]={}),t.rxjs.operators,t.rxjs,t.ng.core,t.uiModal,t.uiMessager,t.uiLocale,t.lodashEs,t.uiCommon,t.uiMultiSelect,t.ng.forms,t.ng.common,t.uiDatagrid,t.smoothDnd,t.uiComboList)}(this,function(t,e,n,i,o,r,s,l,a,c,d,u,p,g,f){"use strict";var h=function(){return(h=Object.assign||function(t){for(var e,n=1,i=arguments.length;n<i;n++)for(var o in e=arguments[n])Object.prototype.hasOwnProperty.call(e,o)&&(t[o]=e[o]);return t}).apply(this,arguments)};function m(t,e){var n="function"==typeof Symbol&&t[Symbol.iterator];if(!n)return t;var i,o,r=n.call(t),s=[];try{for(;(void 0===e||e-- >0)&&!(i=r.next()).done;)s.push(i.value)}catch(l){o={error:l}}finally{try{i&&!i.done&&(n=r["return"])&&n.call(r)}finally{if(o)throw o.error}}return s}function v(){for(var t=[],e=0;e<arguments.length;e++)t=t.concat(m(arguments[e]));return t}var b=function(){function t(t,e){this.cd=t,this.inject=e,this.activeTabIndex=1,this.sortTreeData=[],this.sortNames=[],this.sortInfo={},this.viewTreeData=[],this.viewColumns=[],this.columnFormat=[],this.groupFields=[],this.canSetColumnSort=!0,this.canSetColumnVisible=!0,this.enableReset=!1,this.cancelHandle=new i.EventEmitter,this.submitHandle=new i.EventEmitter,this.reset=new i.EventEmitter,this.concise=new i.EventEmitter,this.searchItems=[],this.alignItems=[],this.summaryItems=[],this.summaryItems2=[],this.messager=this.inject.get(r.MessagerService,null),this.localeSer=this.inject.get(s.LocaleService),this.searchItems=[{value:"all",title:this.localeSer.getValue("datagrid.settings.allColumns")},{value:"visible",title:this.localeSer.getValue("datagrid.settings.visibleColumns")},{value:"hidden",title:this.localeSer.getValue("datagrid.settings.hiddenColumns")}],this.alignItems=[{value:"left",title:this.localeSer.getValue("datagrid.settings.alignLeft")},{value:"center",title:this.localeSer.getValue("datagrid.settings.alignCenter")},{value:"right",title:this.localeSer.getValue("datagrid.settings.alignRight")}],this.summaryItems=[{value:-1,title:this.localeSer.getValue("datagrid.settings.summaryNone")},{value:2,title:this.localeSer.getValue("datagrid.settings.summarySum")},{value:0,title:this.localeSer.getValue("datagrid.settings.summaryMax")},{value:1,title:this.localeSer.getValue("datagrid.settings.summaryMin")},{value:3,title:this.localeSer.getValue("datagrid.settings.summaryAverage")},{value:4,title:this.localeSer.getValue("datagrid.settings.summarCount")}],this.summaryItems2=[{value:-1,title:this.localeSer.getValue("datagrid.settings.summaryNone")},{value:4,title:this.localeSer.getValue("datagrid.settings.summarCount")}]}return t.prototype.ngOnInit=function(){this.sortNames=this.gridInstance.sortName?this.gridInstance.sortName.split(","):[],this.viewColumns=this.getViewColumns(),this.sortInfo=this.gridInstance.__sortInfo||{},this.columnFormat=v(this.columns[0]),this.groupFields=this.gridInstance.groupField?this.gridInstance.groupField.split(","):[]},t.prototype.ngOnChanges=function(t){t.columns&&t.columns.isFirstChange()},t.prototype.close=function(t){t.stopPropagation(),this.modalRef&&this.modalRef.close()},t.prototype.changeTabs=function(t){this.activeTabIndex=t},t.prototype.onSortInfoChange=function(t){this.sortInfo=t},t.prototype.getViewColumns=function(){var t=this,e=[];return this.columns.length>1?this.columns.forEach(function(n){e=e.concat(t._getViewColumns(n))}):e=this.columns[0].filter(function(t){return t.visible||t.visible===undefined}),e.map(function(t){return t.field})},t.prototype._getViewColumns=function(t){return t.filter(function(t){return!t.colspan&&(t.visible||t.visible===undefined)})},t.prototype.onColumnFormatChange=function(t){this.columnFormat=t},t.prototype.onSubmitClick=function(t){this.submitHandle.emit(t)},t.prototype.onCancelClick=function(t){this.cancelHandle.emit(t)},t.prototype.onSettingReset=function(t){var e=this,n=this.localeSer.getValue("datagrid.settings.restoreDefaultSettingsText")||"确认要恢复默认设置吗？";this.messager.confirm(n).subscribe(function(t){t&&e.reset2Default()})},t.prototype.reset2Default=function(){var t=this,e=this.gridInstance.dfs._state.initialOptions;if(e.columnFields&&e.columnFields.length){var n=[];e.columnFields.forEach(function(e){if("_datagrid-setting-control_"!==e.field){var i=t.gridInstance.columns[0].find(function(t){return t.field===e.field});i&&(i.visible=e.visible,i.halign=e.halign,i.align=e.align,i.width=e.width,i.footer=h({},e.footer||{}),i.groupFooter=h({},e.groupFooter||{}),n.push(i))}}),this.columns=[n]}if(this.viewColumns=this.getViewColumns(),e.sort){var i=e.sort.sortOrder?e.sort.sortOrder.split(","):[];this.sortNames=e.sort.sortName?e.sort.sortName.split(","):[],this.sortInfo={sortName:this.sortNames,sortOrder:i}}else this.sortNames=[],this.sortInfo={};this.columnFormat=v(this.columns[0]),this.groupFields=e.groupField?e.groupField.split(","):[]},t.prototype.showConcise=function(t){t&&t.stopPropagation(),this.concise.emit()},t.decorators=[{type:i.Component,args:[{selector:"datagrid-settings",template:'<div class="f-datagrid-settings d-flex flex-column" style="height: 100%;">\r\n\r\n    <div class="d-flex justify-content-between header" #header>\r\n        <div class="title">{{\'datagrid.settings.title\' | locale}}</div>\r\n\r\n        <div style="width: 100%;" class="tabs">\r\n            <div class="d-flex justify-content-center">\r\n                <div class="d-flex tabs-labels">\r\n                    <div class="navitem" [class.active]="activeTabIndex === 1" (click)="changeTabs(1)"\r\n                        style="border: 0;">\r\n                        <span style="padding: 0 14px;display: block;">\r\n                            {{\'datagrid.settings.visible\' | locale}}\r\n                        </span>\r\n                    </div>\r\n                    <div class="navitem" *ngIf="canSetColumnSort"\r\n                        [class.active]="activeTabIndex === 2 && canSetColumnSort" (click)="changeTabs(2)"\r\n                        style="border: 0;">\r\n                        <span style="padding: 0 14px;display: block;">\r\n                            {{\'datagrid.settings.sortting\' | locale}}\r\n                        </span>\r\n                    </div>\r\n                    <div class="navitem" [class.active]="activeTabIndex === 3" *ngIf="gridInstance?.groupRows"\r\n                        (click)="changeTabs(3)" style="border: 0;">\r\n                        <span style="padding: 0 14px; display: block;">\r\n                            {{\'datagrid.settings.groupping\' | locale}}\r\n                        </span>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n        <div class="close">\r\n            <span class="f-icon modal_close" (click)="close($event)"></span>\r\n        </div>\r\n    </div>\r\n\r\n    <div class="f-utils-fill tabs-container" [ngSwitch]="activeTabIndex" >\r\n        <ng-container *ngSwitchCase="1">\r\n            <column-format-setting [(fields)]="viewColumns" [columns]="columns"\r\n                (formatChange)="onColumnFormatChange($event)"></column-format-setting>\r\n        </ng-container>\r\n        <ng-container *ngSwitchCase="2">\r\n            <sort-setting [treeData]="sortTreeData" [selectedIds]="sortNames"\r\n                (sortInfoChange)="onSortInfoChange($event)"></sort-setting>\r\n        </ng-container>\r\n\r\n        <ng-container *ngSwitchCase="3">\r\n            <column-group-setting [(groupFields)]="groupFields" [fields]="viewColumns" [columns]="columns"\r\n                [(formatColumns)]="columnFormat"></column-group-setting>\r\n        </ng-container>\r\n    </div>\r\n\r\n    <div class="buttons">\r\n        <button class="btn btn-link" (click)="showConcise($event)" *ngIf="gridInstance.enableSimpleMode"\r\n            style="width: 66px;height: 32px; float: left;">{{ \'datagrid.settings.conciseMode\' | locale: \'简洁模式\' }}</button>\r\n        <button class="btn btn-link reset" (click)="onSettingReset($event)"\r\n            *ngIf="enableReset">{{ \'datagrid.settings.reset\' | locale: \'恢复默认\' }}</button>\r\n        <button class="btn btn-secondary cancel"\r\n            (click)="onCancelClick($event)">{{\'datagrid.settings.cancel\' | locale}}</button>\r\n        <button class="btn btn-primary ok"\r\n            (click)="onSubmitClick($event)">{{\'datagrid.settings.ok\' | locale}}</button>\r\n    </div>\r\n\r\n</div>',encapsulation:i.ViewEncapsulation.None,styles:["\n\n        .f-datagrid-settings .header {\n            position:relative;width:100%; height: 56px;padding: 0 24px;border:0px\n        }\n\n        .f-datagrid-settings .header .title {\n            display: block; white-space: nowrap; font-size: 17px; line-height: 56px;\n        }\n        .f-datagrid-settings .header .tabs {\n            height: 32px;\n            top: 12px; font-size: 14px;\n            position: relative;\n            line-height: 32px;\n        }\n        .f-datagrid-settings .header .tabs .tabs-labels {\n            background: #EFF5FF;border-radius: 17px;color:#6080AD\n        }\n\n        .f-datagrid-settings .header .tabs .tabs-labels .navitem.active {\n            line-height: 28px;\n            margin: 2px;\n            height: 28px;\n            background: rgb(246 250 255);\n            border-radius: 15px;\n            box-shadow: 0 4px 18px 0 rgb(2 75 193 / 20%)\n        }\n        .f-datagrid-settings .header .close {\n            line-height: 56px;padding: 0;width: 20px\n        }\n        .f-datagrid-settings .tabs-container {\n            height: 100%;overflow: hidden; position: relative; margin: 0 24px; border: 1px solid #DEE1EA; border-radius: 8px;\n        }\n        .f-datagrid-settings .buttons\n        {\n            height: 66px;text-align: right;padding: 14px 24px 20px 24px;\n        }\n\n        .f-datagrid-settings .buttons button {\n            width: 66px;height: 32px;\n        }\n        .f-datagrid-settings .buttons .cancel {\n            margin-left: 12px;margin-right: 8px;\n        }\n        .f-datagrid-settings .buttons .ok {\n            width: 100px;\n        }\n\n        .f-datagrid-settings .dg-column-format-setting>div{\n            width: 360px; min-width:260px;overflow: hidden;background:#ffffff;padding: 10px 5px 10px 8px;border-right: 1px solid #DEE1EA\n        }\n\n        .f-datagrid-settings .dg-column-format-setting .checkbox, .format-setting-column .checkbox{\n            margin-right: 5px; font-size: 14px;color: #0089FF;\n        }\n\n        .f-datagrid-settings  .column-group-setting .title{\n            height: 36px; line-height: 36px; color: #59a1ff\n        }\n\n        .f-datagrid-settings  .column-group-setting .all-fields {\n            background-color:#fff;padding-top: 0px!important;\n        }\n\n        .f-datagrid-settings  .column-group-setting .group-sum-fields {\n            height: 36px; line-height: 36px; border-top: 1px solid #e4e7ef; color: #59a1ff\n        }\n\n\n        .smooth-dnd-ghost.format-setting-column {\n            border: 1px solid #2a87ff;\n            z-index: 999999999 !important;\n            background-color: #e7f1ff;;\n            padding: 4px 8px;\n            color: rgb(0 0 0);\n        }\n\n        .smooth-dnd-ghost.format-setting-column .field-drag-handle {\n            float: right;\n        }\n\n        .dg-column-format-setting  .smooth-dnd-drop-preview-constant-class {\n            background-color: #dee1ea;\n        }\n        .dg-column-format-setting .format-setting-column {\n            background: #fafbfd;\n            padding: 4px 8px;\n            margin-bottom: 5px;\n            border: 1px solid #f2f4f8;\n            border-radius: 5px;\n        }\n        .dg-column-format-setting .format-setting-column.active {\n            color: rgb(0 0 0);\n            border: 1px solid #2a87ff;\n            background: #e7f1ff;\n            border-top: 1px solid #2a87ff!important;\n            border-bottom: 1px solid #2a87ff!important;\n        }\n\n        .dg-column-format-setting .format-setting-column .field-drag-handle{\n            float: right;\n            cursor: grab;\n        }\n\n        .dg-column-format-setting .format-setting-column .field-drag-handle:active{\n            cursor: grabbing;\n        }\n\n        "]}]}],t.ctorParameters=function(){return[{type:i.ChangeDetectorRef},{type:i.Injector}]},t.propDecorators={enableReset:[{type:i.Input}],columns:[{type:i.Input}],cancelHandle:[{type:i.Output}],submitHandle:[{type:i.Output}],reset:[{type:i.Output}],concise:[{type:i.Output}],header:[{type:i.ViewChild,args:["header"]}]},t}(),y=function(){function t(t,e){this.injector=t,this.cd=e,this.seartTypes=[],this.columns=[],this.fields=[],this.clickToHidden=!0,this.top=0,this.cls="f-datagrid-settings-simple-host",this.formatChange=new i.EventEmitter,this.fieldsChange=new i.EventEmitter,this.submit=new i.EventEmitter,this.closed=new i.EventEmitter,this.advanced=new i.EventEmitter,this.allCols=[],this.columnType="all",this.isEn=!1,this.settings={},this.localeSer=this.injector.get(s.LocaleService,null),this.messager=this.injector.get(r.MessagerService,null)}return t.prototype.onClick=function(t){t.stopPropagation(),(t.target.className||"").indexOf("f-datagrid-settings-simple-host")>-1&&this.clickToHidden&&this.close()},t.prototype.onEscKeydown=function(t){t.stopPropagation(),document.querySelector("modal-container")||this.close()},t.prototype.onEnterKeydown=function(t){t.stopPropagation(),document.querySelector("modal-container")||this.onSubmitClick()},t.prototype.onControlGKeydown=function(t){t.ctrlKey&&!document.querySelector("modal-container")&&(t.preventDefault(),t.stopPropagation(),"g"===t.key.toLowerCase()?this.showAdvanced(t):"r"===t.key.toLowerCase()?this.onSettingReset():"s"===t.key.toLowerCase()&&this.searchInput.nativeElement.focus())},t.prototype.ngOnInit=function(){this.allCols=this.columns[0],this.fields=this.getViewColumns(),this.container.nativeElement.focus()},t.prototype.getViewColumns=function(){var t=this,e=[];return this.columns.length>1?this.columns.forEach(function(n){e=e.concat(t._getViewColumns(n))}):e=this.columns[0].filter(function(t){return t.visible||t.visible===undefined}),e.map(function(t){return t.field})},t.prototype._getViewColumns=function(t){return t.filter(function(t){return!t.colspan&&(t.visible||t.visible===undefined)})},t.prototype.filterColumns=function(t,e){var n=this;void 0===e&&(e="");var i=[];switch(t){case"visible":i=this.columns[0].filter(function(t){return n.fields.indexOf(t.field)>-1});break;case"hidden":i=this.columns[0].filter(function(t){return-1===n.fields.indexOf(t.field)});break;case"all":default:i=this.columns[0]}e&&(i=i.filter(function(t){return t.title.toLowerCase().indexOf(e)>-1})),this.allCols=i},t.prototype.onFieldsChanged=function(){this.fieldsChange.emit(this.fields)},t.prototype.onDblClick=function(t,e){this.onCheckboxClick(t,e)},t.prototype.onCheckboxClick=function(t,e){var n=this;t.stopPropagation();var i=this.fields.indexOf(e.field);-1===i?this.fields.push(e.field):this.fields.splice(i,1),this.columns[0].forEach(function(t){t.visible=n.fields.indexOf(t.field)>-1}),this.fields=this.columns[0].filter(function(t){return t.visible}).map(function(t){return t.field}),this.onFieldsChanged()},t.prototype.searchColumn=function(t,e){var n=t.target.value;this.filterColumns(e,n)},t.prototype.onFieldDrop=function(t,e,n,i){var o,r=t.removedIndex,s=t.addedIndex,l=this.allCols[r],a=this.allCols[s],c=this.columns[0].findIndex(function(t){return t.field===l.field}),d=this.columns[0].findIndex(function(t){return t.field===a.field}),u=this.columns[0].splice(c,1);(o=this.columns[0]).splice.apply(o,v([d,0],u)),this.fields=this.columns[0].filter(function(t){return t.visible}).map(function(t){return t.field}),this.onFieldsChanged(),this.filterColumns(e,n)},t.prototype.getCheckAllState=function(){return 0===this.fields.length?0:this.fields.length===this.columns[0].length?1:2},t.prototype.onCheckAllClick=function(t,e,n){var i=this.getCheckAllState();0===i||2===i?(this.columns[0].forEach(function(t){return t.visible=!0}),this.fields=this.columns[0].map(function(t){return t.field})):(this.columns[0].forEach(function(t){return t.visible=!1}),this.fields=[]),this.onFieldsChanged(),this.filterColumns(e,n)},t.prototype.close=function(t){t&&t.stopPropagation(),this.closed.emit()},t.prototype.showAdvanced=function(t){this.close(t),this.advanced.emit()},t.prototype.onSettingReset=function(t){var e=this;t&&t.stopPropagation();var n=this.localeSer.getValue("datagrid.settings.restoreDefaultSettingsText")||"确认要恢复默认设置吗？";this.messager.confirm(n).subscribe(function(t){t&&e.reset2Default()})},t.prototype.reset2Default=function(){var t=this,e=this.gridInstance.dfs._state.initialOptions;if(e.columnFields&&e.columnFields.length){var n=[];e.columnFields.forEach(function(e){if("_datagrid-setting-control_"!==e.field){var i=t.gridInstance.columns[0].find(function(t){return t.field===e.field});i&&(i.visible=e.visible,i.halign=e.halign,i.align=e.align,i.width=e.width,i.footer=h({},e.footer||{}),i.groupFooter=h({},e.groupFooter||{}),n.push(i))}}),this.columns=[n]}if(this.allCols=this.columns[0],this.fields=this.getViewColumns(),this.settings.viewColumns=this.fields,this.settings.columnFormat=v(this.columns[0]),e.sort){var i=e.sort.sortOrder?e.sort.sortOrder.split(","):[],o=e.sort.sortName?e.sort.sortName.split(","):[];this.settings.sortInfo={sortName:o,sortOrder:i}}else this.settings.sortInfo={};this.settings.groupFields=e.groupField?e.groupField.split(","):[]},t.prototype.onSubmitClick=function(t){t&&t.stopPropagation(),this.settings.viewColumns=this.fields,this.settings.columnFormat=v(this.columns[0]),this.settings.sortInfo||(this.settings.sortInfo={sortName:this.gridInstance.sortName?this.gridInstance.sortName.split(","):[],sortOrder:this.gridInstance.sortOrder?this.gridInstance.sortOrder.split(","):[]}),this.settings.groupFields===undefined&&(this.settings.groupFields=this.gridInstance.groupField?this.gridInstance.groupField.split(","):[]),this.submit.emit({content:this.settings,close:this.close.bind(this),target:this.btnOk.nativeElement})},t.decorators=[{type:i.Component,args:[{selector:"datagrid-settings-simple",template:'<div class="d-flex flex-column f-datagrid-settings-simple" tabindex="0" #colcontainer\r\n    [style.top.px]="top" [style.height]="\'calc(100vh - \' +  top + \'px)\'">\r\n\r\n    <div class="header d-flex">\r\n        <div class="f-utils-fill title"> {{ \'datagrid.settings.simple.title\' | locale }} </div>\r\n        <div class="closed" (click)="close($event)">\r\n            <span class="f-icon f-icon-close" style="font-size: 20px;"></span>\r\n        </div>\r\n    </div>\r\n    <div class="f-utils-fill content d-flex flex-column">\r\n        <div>\r\n            <h5 class="count" [innerHTML]="\'datagrid.settings.simple.count\' | locale | replaceX: fields.length">\r\n            </h5>\r\n\r\n            <div class="tip">\r\n                {{ \'datagrid.settings.simple.tip\' | locale }}\r\n            </div>\r\n\r\n            <input #inputWord type="text" class="form-control" placeholder="{{\'datagrid.settings.searchPlaceholder\' | locale}}"\r\n                (input)="searchColumn($event, ct.selectedValues)" style="height: 30px;margin-bottom: 16px;">\r\n            <div style="padding: 5px 0px;background-color: #fff;">\r\n                <button class="btn btn-link " \r\n                    style="height: 32px;padding-left: 4px;" (click)="onCheckAllClick($event, ct.selectedValues, inputWord.value)">\r\n                    <span class="f-icon f-icon-minus-outline checkall" [class.f-icon-checkbox]="!fields.length"\r\n                        [class.f-icon-checkbox-checked]="fields.length === columns[0].length"></span>\r\n                    {{ \'datagrid.settings.checkall\' | locale }}\r\n                </button>\r\n\r\n                <farris-combo-list #ct \r\n                [data]="seartTypes" \r\n                [editable]="false"\r\n                [ngModel]="\'all\'" [idField]="\'value\'"\r\n                [textField]="\'title\'"\r\n                [enableClear]="false"\r\n                (valueChange)="filterColumns(ct.selectedValues, inputWord.value)"\r\n                style="float: right;" [style.width.px]="isEn ? 120: 80"\r\n                class="format-setting-searchitem"></farris-combo-list>\r\n            </div>\r\n        </div>\r\n        <div style="overflow: auto;padding-right:3px" class="f-utils-fill">\r\n            <ul class="list-group list-group-flush" #ul column-visible-drag (drop)="onFieldDrop($event, ct.selectedValues, inputWord.value, ul)">\r\n                <li class="list-group-item list-group-item-action smooth-dnd-draggable-wrapper format-setting-column" *ngFor="let col of allCols" \r\n                    (click)="onDblClick($event, col)">\r\n                    <span class="f-icon checkbox"\r\n                        [class.f-icon-checkbox-checked]="fields.indexOf(col.field) > -1"\r\n                        [class.f-icon-checkbox]="fields.indexOf(col.field) == -1"\r\n                        (click)="onCheckboxClick($event, col)"></span>\r\n                    {{ col.title}} \r\n\r\n                    <span class="f-icon f-icon-drag-vertical field-drag-handle"></span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n\r\n    </div>\r\n    <div class="footer">\r\n\r\n        <div class="buttons">\r\n            <button class="btn btn-link advanced" (click)="showAdvanced($event)">{{ \'datagrid.settings.advancedMode\' | locale: \'高级模式\' }}</button>\r\n            <button class="btn btn-link reset" (click)="onSettingReset($event)">{{ \'datagrid.settings.reset\' | locale: \'恢复默认\' }}</button>\r\n            <button class="btn btn-secondary cancel"\r\n                (click)="close($event)">{{\'datagrid.settings.cancel\' | locale}}</button>\r\n            <button class="btn btn-primary ok" #okbtn\r\n                (click)="onSubmitClick($event)">{{\'datagrid.settings.ok\' | locale}}</button>\r\n        </div>\r\n\r\n    </div>\r\n\r\n</div>',encapsulation:i.ViewEncapsulation.None,styles:["\n        .f-datagrid-settings-simple {\n            position: absolute;\n            top: 100px;\n            right: 0px;\n            z-index: 10000;\n            height: calc(100vh - 100px);\n            width: 468px;\n            background: #FFFFFF;\n            border: 1px solid #E6E9F0;\n            border-radius: 10px 0 0 10px;\n        }\n\n        .f-datagrid-settings-simple:focus {\n            outline: none;\n        }\n\n        .f-datagrid-settings-simple .header {\n            height: 50px;\n            line-height: 50px;\n            border-bottom: 1px solid #EAEDF3;\n            font-size: 18px;\n            color: #2D2F33;\n        }\n        .f-datagrid-settings-simple .header .title {\n            padding-left: 21px;\n            font-weight:bold;\n        }\n        .f-datagrid-settings-simple .header .closed\n        {\n            width: 50px;\n            text-align: center;\n            cursor: pointer;\n        }\n\n        .f-datagrid-settings-simple .content .count{font-size: 14px; color: #2D2F33;}\n        .f-datagrid-settings-simple .content .tip {\n            background: #F7FAFF; border-radius: 6px;line-height: 42px; padding-left: 10px; margin-bottom: 10px;\n        }\n\n        .f-datagrid-settings-simple .content .checkall{\n            margin-left: 5px;\n            font-size: 14px;\n            color: #0089FF;\n            margin-right: 5px;\n        }\n\n        .f-datagrid-settings-simple .content {\n            margin: 20px 24px;\n        }\n\n        .f-datagrid-settings-simple .footer {\n            height: 32px;\n            margin: 20px;\n        }\n\n\n        .smooth-dnd-ghost.format-setting-column {\n            z-index: 999999999 !important;\n            padding: 4px 8px;\n            background-color: #e7f1ff;\n            border: 1px solid #2a87ff;\n        }\n        .smooth-dnd-ghost.format-setting-column .field-drag-handle {\n            float: right;\n        }\n        .f-datagrid-settings-simple  .smooth-dnd-drop-preview-constant-class {\n            background-color: #dee1ea;\n        }\n        .f-datagrid-settings-simple .format-setting-column {\n            background: #fafbfd;\n            padding: 4px 8px;\n            margin-bottom: 5px;\n            border: 1px solid #f2f4f8;\n            border-radius: 5px;\n            color: #000;\n        }\n        .f-datagrid-settings-simple .format-setting-column.active {\n            border: 1px solid #2a87ff;\n            background: #e7f1ff;\n            border-top: 1px solid #2a87ff!important;\n            border-bottom: 1px solid #2a87ff!important;\n        }\n\n        .format-setting-column .checkbox{\n            font-size: 14px;\n            color: #0089FF;\n            margin-right: 5px;\n            cursor:pointer;\n        }\n\n        .f-datagrid-settings-simple .format-setting-column .field-drag-handle{\n            float: right;\n            cursor: grab;\n        }\n\n        .f-datagrid-settings-simple .format-setting-column .field-drag-handle:active{\n            cursor: grabbing;\n        }\n\n        .f-datagrid-settings-simple .list-group-flush:last-child .list-group-item:last-child {\n            border-bottom: 1px solid #f2f4f8;\n        }\n\n        .f-datagrid-settings-simple .list-group-flush:first-child .list-group-item:first-child {\n            border-top: 1px solid #f2f4f8;\n        }\n\n        .f-datagrid-settings-simple .buttons\n        {\n            text-align: right;\n        }\n\n        .f-datagrid-settings-simple .buttons button {\n            width: 66px;height: 32px;\n        }\n        .f-datagrid-settings-simple .buttons .cancel {\n            margin-left: 12px;margin-right: 8px;\n        }\n        .f-datagrid-settings-simple .buttons .ok {\n            width: 100px;\n        }\n\n        .f-datagrid-settings-simple .buttons .advanced{ width: 66px;height: 32px; float: left; }\n\n        .f-datagrid-settings-simple-host {\n            width: 100%;\n            height: 100%;\n            position: absolute;\n            top: 0;\n            left: 0;\n            z-index: 1000;\n        }\n\n        .f-datagrid-settings-simple .visible-cols-count {\n            font-size: 18px;\n            font-weight: 500;\n        }\n        "]}]}],t.ctorParameters=function(){return[{type:i.Injector},{type:i.ChangeDetectorRef}]},t.propDecorators={seartTypes:[{type:i.Input}],columns:[{type:i.Input}],fields:[{type:i.Input}],clickToHidden:[{type:i.Input}],top:[{type:i.Input}],cls:[{type:i.HostBinding,args:["class"]}],container:[{type:i.ViewChild,args:["colcontainer"]}],btnOk:[{type:i.ViewChild,args:["okbtn"]}],searchInput:[{type:i.ViewChild,args:["inputWord"]}],formatChange:[{type:i.Output}],fieldsChange:[{type:i.Output}],submit:[{type:i.Output}],closed:[{type:i.Output}],advanced:[{type:i.Output}],onClick:[{type:i.HostListener,args:["click",["$event"]]}],onEscKeydown:[{type:i.HostListener,args:["window:keydown.esc",["$event"]]}],onEnterKeydown:[{type:i.HostListener,args:["window:keydown.enter",["$event"]]}],onControlGKeydown:[{type:i.HostListener,args:["keydown",["$event"]]}]},t}(),C=new i.InjectionToken(" Farris DataGrid User Setting WebApi URI."),x=function(){function t(t,e,n,o,r){this.injector=t,this.modalSer=e,this.messager=n,this.idService=o,this.localeSer=r,this.multiSortMsg="列表中未开启多列排序的功能。 请检查！",this.columnsSortableMsg="未开启列的排序功能。请检查！",this.notSupportHeaderGroupMsg="暂不支持多表头设置",this.notShowDialog="多表头暂不支持列显示设置；同时未启用列排序功能。",this.gridInstance=null,this.gridRefs=null,this.saving=!1,this.cfr=null,this.app=null,this.cfr=this.injector.get(i.ComponentFactoryResolver),this.app=this.injector.get(i.ApplicationRef)}return t.prototype.destroy=function(t){t&&this.gridRefs&&this.gridRefs[t]?delete this.gridRefs[t]:this.gridRefs=null},t.prototype.registerGridInstance=function(t){if(t){var e=t.id;this.gridRefs=this.gridRefs||{},this.gridRefs[e]||(this.gridRefs[e]=t)}else console.log("DatagridSettingService: grid instance is null.")},t.prototype.getGridInstance=function(t){return this.gridRefs?this.gridRefs[t]:null},t.prototype.getSearchTypes=function(){return[{value:"all",title:this.localeSer.getValue("datagrid.settings.allColumns")},{value:"visible",title:this.localeSer.getValue("datagrid.settings.visibleColumns")},{value:"hidden",title:this.localeSer.getValue("datagrid.settings.hiddenColumns")}]},t.prototype.showSimple=function(t){var e=this,n=this.convertColumnsToSimple(t.columns);n[0]=n[0].filter(function(e){return e.field&&e.field!==t.ControlPanelFeild});var i=this.getSearchTypes();if(this.cfr){var o=this.cfr.resolveComponentFactory(y).create(this.injector);return this.app.attachView(o.hostView),o.instance.columns=n,o.instance.seartTypes=i,o.instance.gridInstance=t,document.querySelector("#page-wrapper")&&(o.instance.top=76),document.body.appendChild(o.location.nativeElement),o.instance.closed.subscribe(function(){o.location.nativeElement.remove(),o.destroy(),o=null}),o.instance.advanced.subscribe(function(){e.showAdvanced(t)}),o.instance.submit.subscribe(function(n){n.target.disabled=!0,e.saving||e.saving||e.updateGridView(n,t,n.target)}),o.hostView.detectChanges(),o}},t.prototype.show=function(t,e){return this.registerGridInstance(t),t.enableSimpleMode?this.showSimple(t):this.showAdvanced(t,e)},t.prototype.showAdvanced=function(t,e){var n=this,i=!0;!0!==this.canSetColumnSort(t)&&(i=!1);var o=!this.isHeaderGroup(t),r=o?1:i?2:-1;if(-1!==r){var s=this.convertColumnsToSimple(t.columns);s[0]=s[0].filter(function(e){return e.field&&e.field!==t.ControlPanelFeild});var a=this.convertColumns2TreeData(l.cloneDeep(s),!0),c=this.convertColumns2TreeData(l.cloneDeep(s),!1);this.checkViewTreeNodes(c);var d=null,u=(this.localeSer.getValue("datagrid.settings.ok"),this.localeSer.getValue("datagrid.settings.cancel"),this.localeSer.getValue("datagrid.settings.reset"),{width:760,height:560,showHeader:!1,title:"控制面板",initialState:{columns:s,sortTreeData:a,viewTreeData:c,gridInstance:t,canSetColumnSort:i,canSetColumnVisible:o,activeTabIndex:r},showButtons:!1}),p=Object.assign(u,e||{}),g=(d=this.modalSer.show(b,p)).content;return g.enableReset=!0,g.modalRef=d,g.canSetColumnSort=i,g.canSetColumnVisible=!this.isHeaderGroup(t),g.submitHandle.subscribe(function(e){e.target.disabled=!0,n.saving||n.saving||n.updateGridView(d,t,e.target)}),g.cancelHandle.subscribe(function(t){d.close()}),g.concise.subscribe(function(e){d.close(),n.showSimple(t)}),d.dialog.instance.draggbar.handle=g.header.nativeElement,d}this.messager.warning(this.notShowDialog)},t.prototype.canSetColumnSort=function(t){return!(!t.multiSort||!this.hasEnableSortColumns(t))||(this.hasEnableSortColumns(t)?t.multiSort?void 0:this.multiSortMsg:this.columnsSortableMsg)},t.prototype.hasEnableSortColumns=function(t){return t.flatColumns.reduce(function(t,e){return e.sortable?t+1:t},0)>0},t.prototype.isHeaderGroup=function(t){var e=t.columns.length>1;return e?this.notSupportHeaderGroupMsg:e},t.prototype.getChilds=function(t,e,n,i,o){var r=this;void 0===o&&(o=!1);var s=[],l=n;return t[e]?(t[e].slice().forEach(function(t){(l+=t.colspan)<=i&&s.push(t)}),t[e].splice(0,s.length),s.map(function(n,i){var s={data:n,selectable:!o||!!n.sortable};return n.colspan&&n.colspan>1&&(s={data:n,selectable:!1,expanded:!0,children:r.getChilds(t,e+1,0,n.colspan)}),s})):[]},t.prototype.convertColumns2TreeData=function(t,e){var n=this;void 0===e&&(e=!1);var i=t.map(function(t){return t.map(function(t){return t.colspan=t.colspan||1,t}),t});return 1===i.length?i[0].map(function(t){return{data:t,selectable:!e||!!t.sortable}}):i[0].map(function(t,o){return t.colspan&&t.colspan>1?{data:t,selectable:!1,expanded:!0,children:n.getChilds(i,1,0,t.colspan,e)}:{data:t,selectable:!e||!!t.sortable}})},t.prototype.checkViewTreeNodes=function(t){var e=this;t.forEach(function(t){t.children&&t.children.length?(t.selectable=!1,e.checkViewTreeNodes(t.children)):t.selectable=!0})},t.prototype.convertColumnsToSimple=function(t){return t.map(function(t){return t.map(function(t){if("_datagrid-setting-control_"!==t.field)return{field:t.field,title:t.title,colspan:t.colspan,rowspan:t.rowspan,sortable:t.sortable,order:t.order,halign:t.halign||"left",align:t.align||"left",visible:t.visible,allowGrouping:t.allowGrouping,groupFooter:t.groupFooter,footer:t.footer,width:t.width||100,dataType:t.dataType||"string"}}).filter(function(t){return t})})},t.prototype.resetGridView=function(t){if(t){var e=t.dfs;if(e){var n=e._state.initialOptions;if(n.sort&&(n.sort.sortName&&(t.sortName=n.sort.sortName),n.sort.sortOrder&&(t.sortOrder=n.sort.sortOrder)),t.groupField=n.groupField||"",n.columnFields&&n.columnFields.length){var i=[];n.columnFields.forEach(function(e){var n=t.columns[0].find(function(t){return t.field===e.field});n&&(n.visible=e.visible,n.halign=e.halign,n.align=e.align,n.width=e.width,n.footer=e.footer,n.groupFooter=e.groupFooter,i.push(n))}),t.columns[0]=i}t.columnsChanged()}}},t.prototype.updateGridView=function(t,e,n){var i=this;void 0===n&&(n=null);var o=t.content;if(o){var r=this.createConfigKey(e.id),s=o.sortInfo,l=o.viewColumns,a=o.columnFormat,c=o.groupFields;this.saving=!0;var d="";e.groupRows&&c&&c.length&&(d=c.join(",")),e.groupField=d,this.setUserConfig(r,{sortInfo:s,viewColumns:l,groupField:d,columnFormat:a}).subscribe(function(){if(n&&(n.disabled=!1),i.saving=!1,t.close(),s&&Object.keys(s).length){var o=s.sortName,r=s.sortOrder;o&&o.length?e.sort(o.join(","),r.join(",")):e.clearSort()}else e.clearSort();l&&l.length&&(e.columns=e.columns.map(function(t){return i.updateColumnFormat(t,a,e),i.newVisibleOrderColumns(t,l,a)})),e.columnsChanged(!0)})}else t.close()},t.prototype.newVisibleOrderColumns=function(t,e,n){var i=this,o=[];t.forEach(function(t,r){i.isNewAddColumn(t.field,n)&&"_datagrid-setting-control_"!==t.field?e.push(t.field):(t.visible=e.includes(t.field),t.visible||o.push(t))});var r=e.map(function(e){return t.find(function(t){return t.field===e})}).filter(function(t){return t});return o.length&&(r=r.concat(o)),r.filter(function(t){return t&&t.field&&"_datagrid-setting-control_"!==t.field})},t.prototype.isNewAddColumn=function(t,e){return!e.find(function(e){return e.field===t})},t.prototype.updateColumnFormat=function(t,e,n){e&&e.length&&t.forEach(function(t){var i=e.find(function(e){return e.field===t.field});i&&(t.width=i.width,t.halign=i.halign||"left",t.align=i.align||"left",n.groupRows&&(t.allowGrouping||t.allowGrouping===undefined)&&(t.groupFooter||(t.groupFooter=i.groupFooter),t.groupFooter&&t.groupFooter.options&&(t.groupFooter.options.text=i.groupFooter.options.text||"",t.groupFooter.options.calculationType=i.groupFooter.options.calculationType!==undefined&&null!==i.groupFooter.options.calculationType?parseInt(i.groupFooter.options.calculationType,10):-1)),n.showFooter&&!n.footerTemplate&&(t.footer||(t.footer=i.footer),t.footer&&t.footer.options&&(t.footer.options.text=i.footer.options.text||"",t.footer.options.calculationType=i.footer.options.calculationType!==undefined&&null!==i.footer.options.calculationType?parseInt(i.footer.options.calculationType,10):-1)))})},t.prototype.createConfigKey=function(t){var e=this.getGridInstance(t);if(e)return e.dgs.createConfigKey(t);console.log("DatagridSettingService: Can not find the grid instance.")},t.prototype.saveUserConfig=function(t){var e=this.getGridInstance(t),n=this.createConfigKey(t),i={sortInfo:{},viewColumns:[],groupField:"",columnFormat:[]};if(e){var o=e.sortName,r=e.sortOrder,s=e.columns;if(o){var l={sortName:o.split(","),sortOrder:r.split(",")};i.sortInfo=l}var a=s[0].filter(function(t){return t.visible||t.visible===undefined}).map(function(t){return t.field});i.viewColumns=a,i.columnFormat=this.convertColumnsToSimple(s)[0],e.groupRows&&(i.groupField=e.groupField)}return this.setUserConfig(n,i)},t.prototype.setUserConfig=function(t,e){var i=this.localeSer.localeId,o=localStorage.getItem(t),r=(o?JSON.parse(o):{})||{};return e?(r&&(r[i]=e),localStorage.setItem(t,JSON.stringify(r))):localStorage.removeItem(t),this.httpRestService?this._saveUserConfig(t,e?r:""):n.of(!0)},t.prototype.getUserConfig=function(t){if(this.httpRestService)return this._getUserConfig(t);var e=localStorage.getItem(t);if(e){var i=JSON.parse(e);return i[this.localeSer.localeId]?n.of(i[this.localeSer.localeId]):Object.keys(i).indexOf("viewColumns")>-1?n.of(i):null}return n.of(null)},t.prototype.getSettings=function(t){var e=this.createConfigKey(t);return this.getUserConfig(e)},t.prototype._saveUserConfig=function(t,e){try{var n={configkey1:t,configkey2:"",configkey3:"",textvalue:e?JSON.stringify(e):""};return this.httpRestService.saveUserSettings(n)}catch(i){console.error(i)}},t.prototype.resetUserConfig=function(t,i){var o=this,r=this.localeSer.getValue("datagrid.settings.restoreDefaultSettingsText")||"确认要恢复默认设置吗？";this.messager.confirm(r).pipe(e.switchMap(function(e){if(e){var i=o.createConfigKey(t.id);return o.setUserConfig(i,"")}return n.of(e)})).subscribe(function(e){e&&(o.resetGridView(t),i.close())})},t.prototype._getUserConfig=function(t){var n=this;try{return this.httpRestService.getUserSettings(t).pipe(e.map(function(e){var i;if(e&&e.textValue){var o=JSON.parse(e.textValue);return o?o[n.localeSer.localeId]?(localStorage.setItem(t,e.textValue),o[n.localeSer.localeId]):(localStorage.setItem(t,JSON.stringify(((i={})[n.localeSer.localeId]=o,i))),Object.keys(o).indexOf("viewColumns")>-1?o:null):null}return null}))}catch(i){console.error(i)}},t.decorators=[{type:i.Injectable}],t.ctorParameters=function(){return[{type:i.Injector},{type:o.BsModalService},{type:r.MessagerService},{type:a.IdService},{type:s.LocaleService}]},t}(),F=function(){function t(t,e){this.injector=t,this.cd=e,this.idField="field",this.valueField="field",this.textField="title",this.selectedIds=[],this.treeData=[],this.sortInfoChange=new i.EventEmitter}return t.prototype.ngOnInit=function(){},t.prototype.setFieldSortOrder=function(t,e,n){return t.stopPropagation(),e.sortable=!0,e.order=n,n||this.ms.moveToLeft(e),this.cd.detectChanges(),this.onSelectionsChange(null),!1},t.prototype.getSortInfo=function(){if(this.ms.selections){var t=[],e=[];return this.ms.selections.forEach(function(n){n.order=n.order||"asc",t.push(n.field),e.push(n.order)}),{sortName:t,sortOrder:e}}return""},t.prototype.onSelectionsChange=function(t){var e=this.getSortInfo();this.sortInfoChange.emit(e)},t.prototype.onBeforeMove=function(t){var e=t.items;if(t.target.indexOf("rightAll")>-1)for(var n in e)t.items[n]&&(t.items[n].order="asc");else if("right"===t.target)for(var n in e)t.items[n]&&(t.items[n].order="asc")},t.decorators=[{type:i.Component,args:[{selector:"sort-setting",template:'<div style="padding: 10px;height: 100%;">\r\n<multi-select [dataSource]="treeData" [idField]="idField" [valueField]="valueField"\r\n[textField]="textField" [displayType]="\'Tree\'" style="height: 100%" [height]="0" [showCheckbox]="false"\r\n[(selectedId)]="selectedIds" [leftTitle]="\'datagrid.settings.canchoose\'|locale" [rightTitle]="\'datagrid.settings.choosed\'|locale" #ms (dataChange)="onSelectionsChange($event)" (beforeMove)="onBeforeMove($event)">\r\n    <ng-template farrisTemplate="text" let-data let-side="side" let-selected="selected" >\r\n        <ng-container *ngIf="side === \'L\'">\r\n            {{ data[textField] }}\r\n        </ng-container>\r\n        <ng-container *ngIf="side === \'R\' ">\r\n            \x3c!-- <span class="f-icon f-icon-sort-asc-sm sort-label" title="升序" *ngIf="data.sortable && data.order === \'asc\'"></span>\r\n            <span class="f-icon f-icon-sort-desc-sm  sort-label" title="降序" *ngIf="data.sortable && data.order === \'desc\'"></span> --\x3e\r\n            <div class="d-flex">\r\n                <div style="width: 120px;white-space: nowrap;min-width: 60px">\r\n                    {{ data[textField] }} \r\n                </div>\r\n                <div class="farris-input-wrap  farris-checkradio-hor flex-fill" style="justify-content: right;flex-wrap:nowrap">\r\n                    <button type="button" class="btn btn-link btn-icontext mr-2" (click)="setFieldSortOrder($event, data, \'asc\')">\r\n                        <span class="f-icon" [class.f-icon-radiobutton]=" data.order && data.order !== \'asc\'" [class.f-icon-check-circle]="!data.order || data.order === \'asc\'"></span>\r\n                        {{\'datagrid.settings.asc\'|locale}}\r\n                    </button>\r\n                    \r\n                    <button type="button" class="btn btn-link btn-icontext mr-2" (click)="setFieldSortOrder($event, data, \'desc\')">\r\n                        <span class="f-icon" [class.f-icon-radiobutton]="data.order !== \'desc\'" [class.f-icon-check-circle]="data.order === \'desc\'"></span>\r\n                        {{\'datagrid.settings.desc\'|locale}}\r\n                    </button>\r\n\r\n                    <button type="button" class="btn btn-link btn-icontext sort-btns" style="margin-right: 0;" (click)="setFieldSortOrder($event, data, \'\')" title="{{\'datagrid.settings.cancelSort\'|locale}}">\r\n                        <span class="f-icon  f-icon-unsort"></span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n\r\n        </ng-container>\r\n    </ng-template>\r\n</multi-select>\r\n</div>'}]}],t.ctorParameters=function(){return[{type:i.Injector},{type:i.ChangeDetectorRef}]},t.propDecorators={idField:[{type:i.Input}],valueField:[{type:i.Input}],textField:[{type:i.Input}],selectedIds:[{type:i.Input}],treeData:[{type:i.Input}],ms:[{type:i.ViewChild,args:["ms"]}],sortInfoChange:[{type:i.Output}]},t}(),w=function(){function t(t,e){this.injector=t,this.cd=e,this.idField="field",this.valueField="field",this.textField="title",this._selectedIds=[],this.treeData=[],this.selectedIdsChange=new i.EventEmitter}return Object.defineProperty(t.prototype,"selectedIds",{get:function(){return this._selectedIds},set:function(t){this._selectedIds=t,this.selectedIdsChange.emit(t)},enumerable:!0,configurable:!0}),t.prototype.ngOnInit=function(){},t.prototype.ngOnChanges=function(t){},t.prototype.onBeforeMove=function(t){},t.prototype.hiddenColumn=function(t,e){t.stopPropagation(),this.ms.moveToLeft(e)},t.decorators=[{type:i.Component,args:[{selector:"view-columns",template:'<multi-select [dataSource]="treeData" [idField]="idField" [valueField]="valueField"\r\n[textField]="textField" [displayType]="\'Tree\'" style="height: 100%" [height]="0" [showCheckbox]="false"\r\n[(selectedId)]="selectedIds" [leftTitle]="\'datagrid.settings.canchoose\'|locale" \r\n[rightTitle]="\'datagrid.settings.choosed\'|locale" #ms (beforeMove)="onBeforeMove($event)">\r\n    <ng-template farrisTemplate="text" let-data let-side="side" let-selected="selected">\r\n        <ng-container *ngIf="side === \'L\'">\r\n            {{ data[textField] }}\r\n        </ng-container>\r\n        <ng-container *ngIf="side === \'R\' ">\r\n\r\n            {{ data[textField] }} \r\n\r\n\r\n            <span class="sort-btns" >\r\n                <a href="javascript: void(0)" class=" p-1" (click)="hiddenColumn($event, data)">\r\n                    <span class="f-icon f-icon-close"></span>\r\n                </a>\r\n            </span>\r\n\r\n        </ng-container>\r\n    </ng-template>\r\n</multi-select>'}]}],t.ctorParameters=function(){return[{type:i.Injector},{type:i.ChangeDetectorRef}]},t.propDecorators={idField:[{type:i.Input}],valueField:[{type:i.Input}],textField:[{type:i.Input}],selectedIds:[{type:i.Input}],treeData:[{type:i.Input}],ms:[{type:i.ViewChild,args:["ms"]}],selectedIdsChange:[{type:i.Output}]},t}(),S=function(){function t(t,e,n){this.injector=t,this.gridSettingComponentRef=e,this.cd=n,this.columns=[],this.fields=[],this.formatChange=new i.EventEmitter,this.fieldsChange=new i.EventEmitter,this.allCols=[],this.formatData=[],this.columnType="all",this.activeField=null,this.showGridFooter=!1,this.searchItems=[],this.alignItems=[],this.summaryItems=[],this.summaryItems2=[],this.isEn=!1,this.showGridFooter=this.gridSettingComponentRef.gridInstance.showFooter&&!this.gridSettingComponentRef.gridInstance.footerTemplate,this.localeSer=this.injector.get(s.LocaleService,null)}return t.prototype.ngOnChanges=function(t){t.columns&&!t.columns.isFirstChange()&&(this.setFormatData(),this.allCols=this.columns[0],this.activeField=this.columns[0][0],this.checkColumnOptions())},t.prototype.ngOnInit=function(){var t=this;this.isEn="en"===this.localeSer.localeId,this.initData(),this.colForm&&this.colForm.valueChanges.subscribe(function(e){t.colForm.pristine||t.formatChange.emit(t.formatData)})},t.prototype.setFormatData=function(){var t=this;this.formatData=this.fields.map(function(e){return t.columns[0].find(function(t){return t.field===e})})},t.prototype.initData=function(){this.alignItems=this.gridSettingComponentRef.alignItems,this.searchItems=this.gridSettingComponentRef.searchItems,this.summaryItems=this.gridSettingComponentRef.summaryItems,this.summaryItems2=this.gridSettingComponentRef.summaryItems2,this.setFormatData(),this.allCols=this.columns[0],this.activeField=this.columns[0][0],this.checkColumnOptions()},t.prototype.checkColumnOptions=function(){this.activeField&&(this.activeField.allowGrouping===undefined&&(this.activeField.allowGrouping=!0),this.activeField.groupFooter===undefined?this.activeField.groupFooter={options:{calculationType:-1}}:(this.activeField.groupFooter.options=this.activeField.groupFooter.options||{calculationType:-1},this.activeField.groupFooter.options.calculationType===undefined&&(this.activeField.groupFooter.options.calculationType=-1)),this.activeField.footer===undefined?this.activeField.footer={options:{calculationType:-1}}:(this.activeField.footer.options=this.activeField.footer.options||{calculationType:-1},this.activeField.footer.options.calculationType===undefined&&(this.activeField.footer.options.calculationType=-1)))},t.prototype.filterColumns=function(t,e){var n=this;void 0===e&&(e="");var i=[];switch(t){case"visible":i=this.formatData;break;case"hidden":i=this.columns[0].filter(function(t){return-1===n.fields.indexOf(t.field)});break;case"all":default:i=this.columns[0]}e&&(i=i.filter(function(t){return t.title.toLowerCase().indexOf(e)>-1})),this.allCols=i},t.prototype.onFieldClick=function(t,e){this.activeField=t,this.checkColumnOptions()},t.prototype.onFieldsChanged=function(){this.setFormatData(),this.fieldsChange.emit(this.fields)},t.prototype.onDblClick=function(t,e){this.onCheckboxClick(t,e)},t.prototype.onCheckboxClick=function(t,e){var n=this;t.stopPropagation();var i=this.fields.indexOf(e.field);-1===i?this.fields.push(e.field):this.fields.splice(i,1),this.columns[0].forEach(function(t){t.visible=n.fields.indexOf(t.field)>-1}),this.fields=this.columns[0].filter(function(t){return t.visible}).map(function(t){return t.field}),this.onFieldsChanged()},t.prototype.searchColumn=function(t,e){var n=t.target.value;this.filterColumns(e,n)},t.prototype.onFieldDrop=function(t,e,n,i){var o,r=t.removedIndex,s=t.addedIndex,l=this.allCols[r],a=this.allCols[s],c=this.columns[0].findIndex(function(t){return t.field===l.field}),d=this.columns[0].findIndex(function(t){return t.field===a.field}),u=this.columns[0].splice(c,1);(o=this.columns[0]).splice.apply(o,v([d,0],u)),this.fields=this.columns[0].filter(function(t){return t.visible}).map(function(t){return t.field}),this.onFieldsChanged(),this.filterColumns(e,n)},t.prototype.getCheckAllState=function(){return 0===this.fields.length?0:this.fields.length===this.columns[0].length?1:2},t.prototype.onCheckAllClick=function(t,e,n){var i=this.getCheckAllState();0===i||2===i?(this.columns[0].forEach(function(t){return t.visible=!0}),this.fields=this.columns[0].map(function(t){return t.field})):(this.columns[0].forEach(function(t){return t.visible=!1}),this.fields=[]),this.onFieldsChanged(),this.filterColumns(e,n)},t.decorators=[{type:i.Component,args:[{selector:"column-format-setting",template:'<div class="d-flex flex-row flex-fill dg-column-format-setting" style="height: 100%">\r\n    <div region="west" class="west d-flex flex-column ">\r\n        <div style="margin: 0 6px;">\r\n            <input #inputWord type="text" class="form-control" placeholder="{{\'datagrid.settings.searchPlaceholder\' | locale}}" (input)="searchColumn($event, ct.selectedValues)" style="height: 30px;">\r\n            <div style="padding: 5px 0px;background-color: #fff;">\r\n                <button class="btn btn-link" \r\n                    style="height: 32px;padding-left: 4px;" (click)="onCheckAllClick($event, ct.selectedValues, inputWord.value)">\r\n                    <span class="f-icon f-icon-minus-outline checkbox" [class.f-icon-checkbox]="!fields.length"\r\n                        [class.f-icon-checkbox-checked]="fields.length === columns[0].length"></span>\r\n                    {{ \'datagrid.settings.checkall\' | locale }}\r\n                </button>\r\n\r\n                <farris-combo-list #ct \r\n                [data]="searchItems" \r\n                [editable]="false"\r\n                [ngModel]="\'all\'" [idField]="\'value\'"\r\n                [textField]="\'title\'"\r\n                [enableClear]="false"\r\n                (valueChange)="filterColumns(ct.selectedValues, inputWord.value)"\r\n                style="float: right;" [style.width.px]="isEn ? 120: 80"\r\n                class="format-setting-searchitem"></farris-combo-list>\r\n            </div>\r\n        </div>\r\n        <div style="overflow: auto;padding-right:3px" class="flex-fill">\r\n            <ul class="list-group  list-group-flush" #ul column-visible-drag (drop)="onFieldDrop($event, ct.selectedValues, inputWord.value, ul)">\r\n                <li class="list-group-item list-group-item-action smooth-dnd-draggable-wrapper format-setting-column" *ngFor="let col of allCols" \r\n                    (click)="onFieldClick(col, $event)" [class.active]="activeField && activeField.field === col.field"\r\n                    (dblclick)="onDblClick($event, col)">\r\n                    <span class="f-icon checkbox"\r\n                        [class.f-icon-checkbox-checked]="fields.indexOf(col.field) > -1"\r\n                        [class.f-icon-checkbox]="fields.indexOf(col.field) == -1"\r\n                        (click)="onCheckboxClick($event, col)"></span>\r\n                    {{ col.title}} \r\n\r\n                    <span class="f-icon f-icon-drag-vertical field-drag-handle"></span>\r\n                </li>\r\n            </ul>\r\n        </div>\r\n      \r\n    </div>\r\n    <div region="center" class="center flex-fill" style="overflow:auto;padding: 0 10px; padding-left: 20px;border-right: 0;">\r\n\r\n        <h6 style="margin: 15px 0px;font-weight: bold;">{{ \'datagrid.settings.properties\' | locale }}</h6>\r\n\r\n        <form #colformatform="ngForm" style="margin-top: 5px;">\r\n            <div class="farris-group-wrap mb-3">\r\n                <div class="form-group farris-form-group">\r\n                    <label for="hpinput01" class="col-form-label">\r\n                        <span class="farris-label-text" >{{ \'datagrid.settings.headeralign\' | locale }}</span>\r\n                    </label>\r\n                    <div class="farris-input-wrap">\r\n\r\n                        <farris-combo-list name="halign" \r\n                        [data]="alignItems" \r\n                        [editable]="false"\r\n                        [(ngModel)]="activeField!.halign"\r\n                        [idField]="\'value\'"\r\n                        [textField]="\'title\'"\r\n                        [enableClear]="false"></farris-combo-list>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="farris-group-wrap  mb-3">\r\n                <div class="form-group farris-form-group">\r\n                    <label for="hpinput01" class="col-form-label">\r\n                        <span class="farris-label-text">{{ \'datagrid.settings.dataalign\' | locale }}</span>\r\n                    </label>\r\n                    <div class="farris-input-wrap">\r\n\r\n                        <farris-combo-list name="align" \r\n                        [data]="alignItems" \r\n                        [editable]="false"\r\n                        [(ngModel)]="activeField!.align"\r\n                        [idField]="\'value\'"\r\n                        [textField]="\'title\'"\r\n                        [enableClear]="false"></farris-combo-list>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div class="farris-group-wrap  mb-3" *ngIf="showGridFooter">\r\n                <div class="form-group farris-form-group">\r\n                    <label for="hpinput01" class="col-form-label">\r\n                        <span class="farris-label-text">{{ \'datagrid.settings.summarytype\' | locale }}</span>\r\n                    </label>\r\n                    <div class="farris-input-wrap ">\r\n                       \r\n                        <farris-combo-list name="footer.options.calculationType" \r\n                        [data]=" activeField.dataType === \'number\'?  summaryItems : summaryItems2 " \r\n                        [editable]="false"\r\n                        [(ngModel)]="activeField.footer.options.calculationType"\r\n                        [idField]="\'value\'"\r\n                        [textField]="\'title\'"\r\n                        [enableClear]="false"></farris-combo-list>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <div class="farris-group-wrap  mb-3" *ngIf="showGridFooter && (!activeField.footer.options.calculationType || activeField.footer.options.calculationType == -1)">\r\n                <div class="form-group farris-form-group">\r\n                    <label for="hpinput01" class="col-form-label">\r\n                        <span class="farris-label-text">{{ \'datagrid.settings.summarytext\' | locale }}</span>\r\n                    </label>\r\n                    <div class="farris-input-wrap">\r\n                        <input type="input" name="footer.options.text" class="form-control" [(ngModel)]="activeField.footer.options.text">\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n        </form>\r\n    </div>\r\n   \r\n</div>',encapsulation:i.ViewEncapsulation.None}]}],t.ctorParameters=function(){return[{type:i.Injector},{type:b},{type:i.ChangeDetectorRef}]},t.propDecorators={columns:[{type:i.Input}],fields:[{type:i.Input}],colForm:[{type:i.ViewChild,args:["colformatform"]}],formatChange:[{type:i.Output}],fieldsChange:[{type:i.Output}]},t}(),I=function(){function t(t,e,n){this.injector=t,this.gridSettingComponentRef=e,this.cd=n,this.fields=[],this.formatColumns=[],this.groupFields=[],this.groupFieldsChange=new i.EventEmitter,this.formatColumnsChange=new i.EventEmitter,this.groupColumns=[],this.allowGroupColumns=[],this.activeCalculationCol=null,this.showSelectColumnsPanel=!1,this.summaryItems=[],this.summaryItems2=[]}return t.prototype.ngOnInit=function(){var t=this;this.summaryItems=this.gridSettingComponentRef.summaryItems,this.summaryItems2=this.gridSettingComponentRef.summaryItems2,this.setGroupColumns(),this.registerEventHandle(),this.initCalculationColumns(),this.colForm&&this.colForm.valueChanges.subscribe(function(e){t.colForm.pristine||t.formatColumnsChange.emit(t.formatColumns)}),this.formatColumns.forEach(function(e){t.checkColumnOptions(e)})},t.prototype.ngOnChanges=function(t){var e=this;t.formatColumns&&!t.formatColumns.isFirstChange()&&(this.formatColumns.forEach(function(t){e.checkColumnOptions(t)}),this.setGroupColumns(),this.initCalculationColumns())},t.prototype.initCalculationColumns=function(){this.activeCalculationCol=this.formatColumns[0]},t.prototype.registerEventHandle=function(){var t=this;this.groupingSettingEl.nativeElement.addEventListener("click",function(e){e.target!==t.selectcolumnspanel.nativeElement&&(t.showSelectColumnsPanel=!1)},!1)},t.prototype.setGroupColumns=function(){var t=this;this.groupFields&&this.groupFields.length?this.groupColumns=this.groupFields.map(function(e){return t.columns[0].find(function(t){return t.field===e})}).filter(function(t){return t}):this.groupColumns=[],this.onGroupFieldsChange()},t.prototype.getAllowGroupingColumns=function(){return this.columns[0].filter(function(t){return t.allowGrouping||t.allowGrouping===undefined})},t.prototype.onGroupFieldsChange=function(){this.groupFieldsChange.emit(this.groupFields)},t.prototype.checkColumnOptions=function(t){t&&(t.groupFooter===undefined?t.groupFooter={options:{calculationType:-1}}:(t.groupFooter.options=t.groupFooter.options||{calculationType:-1},t.groupFooter.options.calculationType===undefined&&(t.groupFooter.options.calculationType=-1)))},t.prototype.toggleGroupingColumnPanel=function(t){t.stopPropagation(),this.showSelectColumnsPanel=!this.showSelectColumnsPanel,this.allowGroupColumns=this.getAllowGroupingColumns()},t.prototype.addGroupColumn=function(t,e){t.stopPropagation(),-1===this.groupFields.indexOf(e.field)&&(this.groupColumns=v(this.groupColumns,[e]),this.groupFields=this.groupColumns.map(function(t){return t.field}),this.onGroupFieldsChange(),this.showSelectColumnsPanel=!1)},t.prototype.onRemoveGroupingField=function(t,e){t.stopPropagation(),this.groupFields=this.groupFields.filter(function(t){return t!==e.field}),this.setGroupColumns()},t.prototype.onGroupingFieldDropped=function(t){var e;console.log("grouping field droped.",t);var n=t.removedIndex,i=t.addedIndex,o=this.groupFields.splice(n,1);(e=this.groupFields).splice.apply(e,v([i,0],o)),this.setGroupColumns()},t.prototype.onFieldClick=function(t,e){this.activeCalculationCol=e},t.decorators=[{type:i.Component,args:[{selector:"column-group-setting",template:'<div #groupingSetting class="d-flex flex-column flex-fill column-group-setting">\r\n\r\n    <div region="north" class="north d-flex flex-column group-fields" style="height: 78px; ">\r\n        <div class="title">\r\n            {{\'datagrid.settings.grouppingField\' | locale }}\r\n            <span class="text-warning"> ({{\'datagrid.settings.moreGrouppingFieldWarningMessage\' | locale }})</span>\r\n        </div>\r\n        <div #groupfieldcontainer class="flex-fill p-2 all-fields">\r\n            <ul class="list-group" style="display: inline-block;"  column-group-drag (drop)="onGroupingFieldDropped($event)">\r\n                <li class="list-group-item list-group-item-action btn btn-light smooth-dnd-draggable-wrapper group-field"\r\n                *ngFor="let item of groupColumns">\r\n                    {{ item.title }}\r\n                    <span class="f-icon f-icon-close" style="cursor: pointer;" title="{{\'datagrid.settings.removeGrouppingFieldTip\' | locale }}" (click)="onRemoveGroupingField($event, item)"></span>\r\n                </li>\r\n\r\n                <li class="list-group-item list-group-item-action btn btn-light btn-add-groupfield" title="{{\'datagrid.settings.addGrouppingFieldTip\' | locale }}"\r\n                    *ngIf="!groupFields || groupFields.length < 3" (click)="toggleGroupingColumnPanel($event)">\r\n                   <span class="f-icon f-icon-add" style="font-size: 24px;"></span>\r\n                </li>\r\n            </ul>\r\n            <div #selectcolumnspanel class="group-field-panel" [style.display]="showSelectColumnsPanel? \'\': \'none\'"\r\n            [style.width.px]="groupfieldcontainer.offsetWidth - 16">\r\n                <ul class="list-group">\r\n                    <li class="list-group-item list-group-item-action btn btn-light" *ngFor="let item of allowGroupColumns"\r\n                    (click)="addGroupColumn($event, item)" [style.display]="groupFields.indexOf(item.field) > -1 ? \'none\': \'\'">\r\n                        {{ item.title }}\r\n                    </li>\r\n                </ul>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    </div>\r\n    <div region="center" class="center  d-flex flex-column flex-fill" style="overflow:hidden;">\r\n        <div class="group-sum-fields">\r\n            {{\'datagrid.settings.grouppingSummary\' | locale}}\r\n        </div>\r\n        <div class="flex-fill p-2" style=" background-color: #fff; overflow: auto;">\r\n            <div class="d-flex flex-row flex-fill dg-column-format-setting" style="height: 100%">\r\n                <div region="west" class="west d-flex flex-column" style="width: 360px; min-width:260px;overflow: hidden;">\r\n                    <div style="overflow: auto;padding-right: 5px;" class="flex-fill">\r\n                        <ul class="list-group  list-group-flush">\r\n                            <li class="list-group-item list-group-item-action format-setting-column"\r\n                            *ngFor="let item of formatColumns"\r\n                            [class.active]="activeCalculationCol && activeCalculationCol.field === item.field"\r\n                            (click)="onFieldClick($event, item)"\r\n                             >\r\n                                {{ item.title }}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                 \r\n                </div>\r\n                <div region="center" class="center flex-fill" style="overflow:auto;padding: 0 10px; padding-left: 20px">\r\n                    <form #groupSumform="ngForm">\r\n                        <div class="farris-group-wrap">\r\n                            <div class="form-group farris-form-group">\r\n                                <label for="hpinput01" class="col-form-label">\r\n                                    <span class="farris-label-text">{{\'datagrid.settings.grouppingSummaryType\' | locale}}</span>\r\n                                </label>\r\n                                <div class="farris-input-wrap">\r\n                                   \r\n                                    <farris-combo-list name="groupFooter.options.calculationType" \r\n                                    [data]=" activeCalculationCol.dataType === \'number\'?  summaryItems : summaryItems2 " \r\n                                    [editable]="false"\r\n                                    [(ngModel)]="activeCalculationCol.groupFooter.options.calculationType"\r\n                                    [idField]="\'value\'"\r\n                                    [textField]="\'title\'"\r\n                                    [enableClear]="false"></farris-combo-list>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div class="farris-group-wrap" *ngIf="activeCalculationCol.groupFooter.options.calculationType == -1">\r\n                            <div class="form-group farris-form-group">\r\n                                <label for="hpinput01" class="col-form-label">\r\n                                    <span class="farris-label-text">{{\'datagrid.settings.grouppingSummaryText\' | locale}}</span>\r\n                                </label>\r\n                                <div class="farris-input-wrap">\r\n                                    <input type="input" name="groupFooter.options.text" class="form-control" [(ngModel)]="activeCalculationCol.groupFooter.options.text">\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                </div>\r\n               \r\n            </div>\r\n\r\n\r\n\r\n        </div>\r\n    </div>\r\n\r\n</div>',styles:["\n        .column-group-setting{ height: 100%; background-color: #ffffff; padding: 0 10px 10px 10px}\n        .smooth-dnd-ghost.group-field {\n            z-index: 999999999 !important;\n        }\n        .active {\n            background-color: rgb(231 241 255);\n            color: rgb(0 0 0);\n        }\n        .column-group-setting .group-field {\n            float: left;max-width: 200px;margin-right: 10px;\n            width: auto; padding: 5px;padding-right: 30px;\n            border-radius: 20px;padding-left: 10px; cursor:move\n        }\n        .group-field .f-icon { position: absolute;right: 2px;top: 7px; }\n        .btn-add-groupfield{float: left;width: 32px;padding: 0px;padding-top: 3px; border-radius: 20px;}\n        .group-field-panel{\n            height: 260px; border-radius: 5px; z-index: 3;position: absolute;\n            background: rgb(255 255 255); box-shadow: 1px 1px 4px rgb(156 155 155 / 75%);\n            overflow: hidden;\n            overflow-y: auto;\n        }\n        .group-field-panel ul {\n            display: inline-block;margin: 20px;margin-top: 5px;\n        }\n        .group-field-panel li {\n            float: left; cursor: pointer;max-width: 200px;margin-right: 10px;width: auto;\n            padding: 10px; min-width: 80px; margin-top: 15px; text-align: center;\n        }\n        .format-setting-column {\n            background: rgba(247,248,251,0.6);\n            padding: 7px 10px;\n            margin-bottom: 5px;\n            border: 1px solid rgba(233,236,243,0.45);\n            border-radius: 5px;\n        }\n        .format-setting-column.active {\n            border: 1px solid rgb(42 135 255);\n            background: rgb(239 247 255);\n            border-top: 1px solid rgb(42 135 255)!important;\n            border-bottom: 1px solid rgb(42 135 255)!important;\n        }\n\n        "]}]}],t.ctorParameters=function(){return[{type:i.Injector},{type:b},{type:i.ChangeDetectorRef}]},t.propDecorators={columns:[{type:i.Input}],fields:[{type:i.Input}],formatColumns:[{type:i.Input}],groupFields:[{type:i.Input}],groupFieldsChange:[{type:i.Output}],formatColumnsChange:[{type:i.Output}],groupingSettingEl:[{type:i.ViewChild,args:["groupingSetting"]}],selectcolumnspanel:[{type:i.ViewChild,args:["selectcolumnspanel"]}],colForm:[{type:i.ViewChild,args:["groupSumform"]}]},t}();g.constants.wrapperClass,g.constants.animationClass;g.smoothDnD.dropHandler=g.dropHandlers.reactDropHandler().handler,g.smoothDnD.wrapChild=!1;var k=function(){function t(t,e,n,o){var r=this;this.ngzone=t,this.injector=e,this.render=n,this.el=o,this.drop=new i.EventEmitter,this.options={behaviour:"move",dragHandleSelector:".field-drag-handle",dropPlaceholder:{className:"drop-group-field"},getGhostParent:function(){return document.body},getChildPayload:this.getChildPayload.bind(this),shouldAcceptDrop:function(t,e){return!0},onDropReady:function(t){r.ngzone.run(function(){r.onDropReady(t)})},onDrop:function(t){r.ngzone.run(function(){r.drop.emit(t)})},onDragEnter:function(){r.ngzone.run(function(){r.onDragEnter()})},onDragStart:function(t){r.ngzone.run(function(){r.onDragStart(t)})},onDragEnd:function(t){r.ngzone.run(function(){r.onDragEnd(t)})}}}return t.prototype.ngAfterViewInit=function(){this.initDnD()},t.prototype.ngOnDestroy=function(){this.disposeDnd()},t.prototype.disposeDnd=function(){this.container&&(this.container.dispose(),this.container=null)},t.prototype.initDnD=function(){this.disposeDnd(),this.container=g.smoothDnD(this.el.nativeElement,this.options)},t.prototype.getChildPayload=function(t){return t},t.prototype.onDropReady=function(t){},t.prototype.onDragStart=function(t){console.log("DRAG START",t)},t.prototype.onDragEnd=function(t){},t.prototype.onDragEnter=function(){},t.decorators=[{type:i.Directive,args:[{selector:"[column-visible-drag]"}]}],t.ctorParameters=function(){return[{type:i.NgZone},{type:i.Injector},{type:i.Renderer2},{type:i.ElementRef}]},t.propDecorators={drop:[{type:i.Output}],options:[{type:i.Input}]},t}();g.smoothDnD.dropHandler=g.dropHandlers.reactDropHandler().handler,g.smoothDnD.wrapChild=!1;var D=function(){function t(t,e,n,o){var r=this;this.ngzone=t,this.injector=e,this.render=n,this.el=o,this.drop=new i.EventEmitter,this.options={orientation:"horizontal",behaviour:"move",dropPlaceholder:{className:"drop-group-field"},getGhostParent:function(){return document.body},getChildPayload:this.getChildPayload.bind(this),shouldAcceptDrop:function(t,e){return!0},onDropReady:function(t){r.ngzone.run(function(){r.onDropReady(t)})},onDrop:function(t){r.ngzone.run(function(){r.drop.emit(t)})},onDragEnter:function(){r.ngzone.run(function(){r.onDragEnter()})},onDragStart:function(t){r.ngzone.run(function(){r.onDragStart(t)})},onDragEnd:function(t){r.ngzone.run(function(){r.onDragEnd(t)})}}}return t.prototype.ngAfterViewInit=function(){this.initDnD()},t.prototype.ngOnDestroy=function(){this.disposeDnd()},t.prototype.disposeDnd=function(){this.container&&(this.container.dispose(),this.container=null)},t.prototype.initDnD=function(){this.disposeDnd(),this.container=g.smoothDnD(this.el.nativeElement,this.options)},t.prototype.getChildPayload=function(t){return t},t.prototype.onDropReady=function(t){},t.prototype.onDragStart=function(t){},t.prototype.onDragEnd=function(t){},t.prototype.onDragEnter=function(){},t.decorators=[{type:i.Directive,args:[{selector:"[column-group-drag]"}]}],t.ctorParameters=function(){return[{type:i.NgZone},{type:i.Injector},{type:i.Renderer2},{type:i.ElementRef}]},t.propDecorators={drop:[{type:i.Output}],options:[{type:i.Input}]},t}(),E=function(){function t(){}return t.forRoot=function(e){return{ngModule:t,providers:[{provide:p.GRID_SETTINGS_SERVICE,useClass:x}]}},t.decorators=[{type:i.NgModule,args:[{declarations:[b,F,w,S,I,k,D,y],imports:[u.CommonModule,d.FormsModule,c.MultiSelectModule,f.ComboListModule,a.FarrisCommonModule.forRoot(),r.MessagerModule.forRoot(),s.LocaleModule.forRoot(),o.ModalModule.forRoot()],entryComponents:[b,y],exports:[b,y]}]}],t}();t.ColumnFormatSettingComponent=S,t.ColumnGroupDragDirective=D,t.ColumnGroupSettingComponent=I,t.ColumnVisibleDragDirective=k,t.DatagridSettingsComponent=b,t.DatagridSettingsModule=E,t.DatagridSettingsService=x,t.DatagridSortSettingComponent=F,t.DatagridViewColumnsComponent=w,t.GRID_SETTINGS_WEBAPI=C,t.SimpleColumnsComponent=y,Object.defineProperty(t,"__esModule",{value:!0})});
//# sourceMappingURL=farris-ui-datagrid-settings.umd.min.js.map