/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { TTHotkeys } from './hotkeys';
import { InputGroupModule } from '@farris/ui-input-group';
import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { TreetableService } from './treetable.service';
import { TreeTableComponent, TTBodyComponent, TreeTableTogglerComponent, TreeTableSelectRowDirective, TreeTableCheckboxComponent, TreeTableHeaderCheckboxComponent, DblClickRowDirective, TTResizableColumnDirective, TreeTableColumnDirective, TTCustomCellStyleDirective, CustomRowStyleDirective } from './treetable.component';
import { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';
import { FarrisCommonModule } from '@farris/ui-common';
import { FormsModule } from '@angular/forms';
import { DataColumnModule } from '@farris/ui-common/column';
import { ResizeService } from '@farris/ui-common/events';
import { FindInputComponent } from './find-input.component';
import { HighlightPipe } from './high-light.pipe';
import { LocaleModule } from '@farris/ui-locale';
import { PaginationModule } from '@farris/ui-pagination';
import { TreetableNodesPagerComponent } from './nodes_pager/nodes-pager.component';
import { ChildsLoadingComponent } from './nodes_pager/childs-loading.component';
import { CellTipsPipe } from './cell-tips.pipe';
import { FarrisContextMenuModule } from '@farris/ui-context-menu';
var TreeTableModule = /** @class */ (function () {
    function TreeTableModule() {
    }
    TreeTableModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule,
                        FormsModule,
                        FarrisCommonModule.forRoot(),
                        PerfectScrollbarModule,
                        InputGroupModule,
                        LocaleModule.forRoot(),
                        DataColumnModule.forRoot(),
                        PaginationModule,
                        FarrisContextMenuModule
                    ],
                    declarations: [
                        TreeTableComponent,
                        TTBodyComponent,
                        TreeTableTogglerComponent,
                        TreeTableSelectRowDirective,
                        TreeTableCheckboxComponent,
                        TreeTableHeaderCheckboxComponent,
                        DblClickRowDirective,
                        TTResizableColumnDirective,
                        TreeTableColumnDirective,
                        TTCustomCellStyleDirective,
                        FindInputComponent,
                        HighlightPipe,
                        CustomRowStyleDirective,
                        TreetableNodesPagerComponent,
                        ChildsLoadingComponent,
                        CellTipsPipe,
                    ],
                    exports: [
                        TreeTableComponent,
                        TTBodyComponent,
                        TreeTableTogglerComponent,
                        TreeTableSelectRowDirective,
                        TreeTableCheckboxComponent,
                        TreeTableHeaderCheckboxComponent,
                        DblClickRowDirective,
                        TTResizableColumnDirective,
                        FarrisCommonModule,
                        TTCustomCellStyleDirective,
                        TreeTableColumnDirective,
                        HighlightPipe,
                        CustomRowStyleDirective,
                        TreetableNodesPagerComponent,
                        ChildsLoadingComponent,
                        CellTipsPipe,
                    ],
                    providers: [
                        TreetableService,
                        ResizeService,
                        TTHotkeys
                    ]
                },] }
    ];
    return TreeTableModule;
}());
export { TreeTableModule };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHJlZXRhYmxlLm1vZHVsZS5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktdHJlZXRhYmxlLyIsInNvdXJjZXMiOlsibGliL3RyZWV0YWJsZS5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUNBLE9BQU8sRUFBRSxTQUFTLEVBQUUsTUFBTSxXQUFXLENBQUM7QUFDdEMsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDMUQsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUN6QyxPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdkQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLGVBQWUsRUFDeEMseUJBQXlCLEVBQ3pCLDJCQUEyQixFQUMzQiwwQkFBMEIsRUFDMUIsZ0NBQWdDLEVBQ2hDLG9CQUFvQixFQUNwQiwwQkFBMEIsRUFDMUIsd0JBQXdCLEVBQ3hCLDBCQUEwQixFQUMxQix1QkFBdUIsRUFBQyxNQUFNLHVCQUF1QixDQUFDO0FBQzFELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3RFLE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ3ZELE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSxnQkFBZ0IsQ0FBQztBQUM3QyxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUM1RCxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sMEJBQTBCLENBQUM7QUFDekQsT0FBTyxFQUFFLGtCQUFrQixFQUFFLE1BQU0sd0JBQXdCLENBQUM7QUFDNUQsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2xELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN6RCxPQUFPLEVBQUUsNEJBQTRCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUNuRixPQUFPLEVBQUUsc0JBQXNCLEVBQUUsTUFBTSx3Q0FBd0MsQ0FBQztBQUNoRixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0sa0JBQWtCLENBQUM7QUFDaEQsT0FBTyxFQUFFLHVCQUF1QixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFDbEU7SUFBQTtJQXdEQSxDQUFDOztnQkF4REEsUUFBUSxTQUFDO29CQUNOLE9BQU8sRUFBRTt3QkFDTCxZQUFZO3dCQUNaLFdBQVc7d0JBQ1gsa0JBQWtCLENBQUMsT0FBTyxFQUFFO3dCQUM1QixzQkFBc0I7d0JBQ3RCLGdCQUFnQjt3QkFDaEIsWUFBWSxDQUFDLE9BQU8sRUFBRTt3QkFDdEIsZ0JBQWdCLENBQUMsT0FBTyxFQUFFO3dCQUMxQixnQkFBZ0I7d0JBQ2hCLHVCQUF1QjtxQkFDMUI7b0JBQ0QsWUFBWSxFQUFFO3dCQUNWLGtCQUFrQjt3QkFDbEIsZUFBZTt3QkFDZix5QkFBeUI7d0JBQ3pCLDJCQUEyQjt3QkFDM0IsMEJBQTBCO3dCQUMxQixnQ0FBZ0M7d0JBQ2hDLG9CQUFvQjt3QkFDcEIsMEJBQTBCO3dCQUMxQix3QkFBd0I7d0JBQ3hCLDBCQUEwQjt3QkFDMUIsa0JBQWtCO3dCQUNsQixhQUFhO3dCQUNiLHVCQUF1Qjt3QkFDdkIsNEJBQTRCO3dCQUM1QixzQkFBc0I7d0JBQ3RCLFlBQVk7cUJBQ2Y7b0JBQ0QsT0FBTyxFQUFFO3dCQUNMLGtCQUFrQjt3QkFDbEIsZUFBZTt3QkFDZix5QkFBeUI7d0JBQ3pCLDJCQUEyQjt3QkFDM0IsMEJBQTBCO3dCQUMxQixnQ0FBZ0M7d0JBQ2hDLG9CQUFvQjt3QkFDcEIsMEJBQTBCO3dCQUMxQixrQkFBa0I7d0JBQ2xCLDBCQUEwQjt3QkFDMUIsd0JBQXdCO3dCQUN4QixhQUFhO3dCQUNiLHVCQUF1Qjt3QkFDdkIsNEJBQTRCO3dCQUM1QixzQkFBc0I7d0JBQ3RCLFlBQVk7cUJBQ2Y7b0JBQ0QsU0FBUyxFQUFFO3dCQUNQLGdCQUFnQjt3QkFDaEIsYUFBYTt3QkFDYixTQUFTO3FCQUNaO2lCQUNKOztJQUdELHNCQUFDO0NBQUEsQUF4REQsSUF3REM7U0FGWSxlQUFlIiwic291cmNlc0NvbnRlbnQiOlsiXHJcbmltcG9ydCB7IFRUSG90a2V5cyB9IGZyb20gJy4vaG90a2V5cyc7XHJcbmltcG9ydCB7IElucHV0R3JvdXBNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWlucHV0LWdyb3VwJztcclxuaW1wb3J0IHsgTmdNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgVHJlZXRhYmxlU2VydmljZSB9IGZyb20gJy4vdHJlZXRhYmxlLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBUcmVlVGFibGVDb21wb25lbnQsIFRUQm9keUNvbXBvbmVudCxcclxuICAgIFRyZWVUYWJsZVRvZ2dsZXJDb21wb25lbnQsXHJcbiAgICBUcmVlVGFibGVTZWxlY3RSb3dEaXJlY3RpdmUsXHJcbiAgICBUcmVlVGFibGVDaGVja2JveENvbXBvbmVudCxcclxuICAgIFRyZWVUYWJsZUhlYWRlckNoZWNrYm94Q29tcG9uZW50LFxyXG4gICAgRGJsQ2xpY2tSb3dEaXJlY3RpdmUsXHJcbiAgICBUVFJlc2l6YWJsZUNvbHVtbkRpcmVjdGl2ZSxcclxuICAgIFRyZWVUYWJsZUNvbHVtbkRpcmVjdGl2ZSxcclxuICAgIFRUQ3VzdG9tQ2VsbFN0eWxlRGlyZWN0aXZlLFxyXG4gICAgQ3VzdG9tUm93U3R5bGVEaXJlY3RpdmV9IGZyb20gJy4vdHJlZXRhYmxlLmNvbXBvbmVudCc7XHJcbmltcG9ydCB7IFBlcmZlY3RTY3JvbGxiYXJNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLXBlcmZlY3Qtc2Nyb2xsYmFyJztcclxuaW1wb3J0IHsgRmFycmlzQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1jb21tb24nO1xyXG5pbXBvcnQgeyBGb3Jtc01vZHVsZSB9IGZyb20gJ0Bhbmd1bGFyL2Zvcm1zJztcclxuaW1wb3J0IHsgRGF0YUNvbHVtbk1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktY29tbW9uL2NvbHVtbic7XHJcbmltcG9ydCB7IFJlc2l6ZVNlcnZpY2UgfSBmcm9tICdAZmFycmlzL3VpLWNvbW1vbi9ldmVudHMnO1xyXG5pbXBvcnQgeyBGaW5kSW5wdXRDb21wb25lbnQgfSBmcm9tICcuL2ZpbmQtaW5wdXQuY29tcG9uZW50JztcclxuaW1wb3J0IHsgSGlnaGxpZ2h0UGlwZSB9IGZyb20gJy4vaGlnaC1saWdodC5waXBlJztcclxuaW1wb3J0IHsgTG9jYWxlTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1sb2NhbGUnO1xyXG5pbXBvcnQgeyBQYWdpbmF0aW9uTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1wYWdpbmF0aW9uJztcclxuaW1wb3J0IHsgVHJlZXRhYmxlTm9kZXNQYWdlckNvbXBvbmVudCB9IGZyb20gJy4vbm9kZXNfcGFnZXIvbm9kZXMtcGFnZXIuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQ2hpbGRzTG9hZGluZ0NvbXBvbmVudCB9IGZyb20gJy4vbm9kZXNfcGFnZXIvY2hpbGRzLWxvYWRpbmcuY29tcG9uZW50JztcclxuaW1wb3J0IHsgQ2VsbFRpcHNQaXBlIH0gZnJvbSAnLi9jZWxsLXRpcHMucGlwZSc7XHJcbmltcG9ydCB7IEZhcnJpc0NvbnRleHRNZW51TW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1jb250ZXh0LW1lbnUnO1xyXG5ATmdNb2R1bGUoe1xyXG4gICAgaW1wb3J0czogW1xyXG4gICAgICAgIENvbW1vbk1vZHVsZSxcclxuICAgICAgICBGb3Jtc01vZHVsZSxcclxuICAgICAgICBGYXJyaXNDb21tb25Nb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgICAgIFBlcmZlY3RTY3JvbGxiYXJNb2R1bGUsXHJcbiAgICAgICAgSW5wdXRHcm91cE1vZHVsZSxcclxuICAgICAgICBMb2NhbGVNb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgICAgIERhdGFDb2x1bW5Nb2R1bGUuZm9yUm9vdCgpLFxyXG4gICAgICAgIFBhZ2luYXRpb25Nb2R1bGUsXHJcbiAgICAgICAgRmFycmlzQ29udGV4dE1lbnVNb2R1bGVcclxuICAgIF0sXHJcbiAgICBkZWNsYXJhdGlvbnM6IFtcclxuICAgICAgICBUcmVlVGFibGVDb21wb25lbnQsXHJcbiAgICAgICAgVFRCb2R5Q29tcG9uZW50LFxyXG4gICAgICAgIFRyZWVUYWJsZVRvZ2dsZXJDb21wb25lbnQsXHJcbiAgICAgICAgVHJlZVRhYmxlU2VsZWN0Um93RGlyZWN0aXZlLFxyXG4gICAgICAgIFRyZWVUYWJsZUNoZWNrYm94Q29tcG9uZW50LFxyXG4gICAgICAgIFRyZWVUYWJsZUhlYWRlckNoZWNrYm94Q29tcG9uZW50LFxyXG4gICAgICAgIERibENsaWNrUm93RGlyZWN0aXZlLFxyXG4gICAgICAgIFRUUmVzaXphYmxlQ29sdW1uRGlyZWN0aXZlLFxyXG4gICAgICAgIFRyZWVUYWJsZUNvbHVtbkRpcmVjdGl2ZSxcclxuICAgICAgICBUVEN1c3RvbUNlbGxTdHlsZURpcmVjdGl2ZSxcclxuICAgICAgICBGaW5kSW5wdXRDb21wb25lbnQsXHJcbiAgICAgICAgSGlnaGxpZ2h0UGlwZSxcclxuICAgICAgICBDdXN0b21Sb3dTdHlsZURpcmVjdGl2ZSxcclxuICAgICAgICBUcmVldGFibGVOb2Rlc1BhZ2VyQ29tcG9uZW50LFxyXG4gICAgICAgIENoaWxkc0xvYWRpbmdDb21wb25lbnQsXHJcbiAgICAgICAgQ2VsbFRpcHNQaXBlLFxyXG4gICAgXSxcclxuICAgIGV4cG9ydHM6IFtcclxuICAgICAgICBUcmVlVGFibGVDb21wb25lbnQsXHJcbiAgICAgICAgVFRCb2R5Q29tcG9uZW50LFxyXG4gICAgICAgIFRyZWVUYWJsZVRvZ2dsZXJDb21wb25lbnQsXHJcbiAgICAgICAgVHJlZVRhYmxlU2VsZWN0Um93RGlyZWN0aXZlLFxyXG4gICAgICAgIFRyZWVUYWJsZUNoZWNrYm94Q29tcG9uZW50LFxyXG4gICAgICAgIFRyZWVUYWJsZUhlYWRlckNoZWNrYm94Q29tcG9uZW50LFxyXG4gICAgICAgIERibENsaWNrUm93RGlyZWN0aXZlLFxyXG4gICAgICAgIFRUUmVzaXphYmxlQ29sdW1uRGlyZWN0aXZlLFxyXG4gICAgICAgIEZhcnJpc0NvbW1vbk1vZHVsZSxcclxuICAgICAgICBUVEN1c3RvbUNlbGxTdHlsZURpcmVjdGl2ZSxcclxuICAgICAgICBUcmVlVGFibGVDb2x1bW5EaXJlY3RpdmUsXHJcbiAgICAgICAgSGlnaGxpZ2h0UGlwZSxcclxuICAgICAgICBDdXN0b21Sb3dTdHlsZURpcmVjdGl2ZSxcclxuICAgICAgICBUcmVldGFibGVOb2Rlc1BhZ2VyQ29tcG9uZW50LFxyXG4gICAgICAgIENoaWxkc0xvYWRpbmdDb21wb25lbnQsXHJcbiAgICAgICAgQ2VsbFRpcHNQaXBlLFxyXG4gICAgXSxcclxuICAgIHByb3ZpZGVyczogW1xyXG4gICAgICAgIFRyZWV0YWJsZVNlcnZpY2UsXHJcbiAgICAgICAgUmVzaXplU2VydmljZSxcclxuICAgICAgICBUVEhvdGtleXNcclxuICAgIF1cclxufSlcclxuZXhwb3J0IGNsYXNzIFRyZWVUYWJsZU1vZHVsZSB7XHJcblxyXG59XHJcbiJdfQ==