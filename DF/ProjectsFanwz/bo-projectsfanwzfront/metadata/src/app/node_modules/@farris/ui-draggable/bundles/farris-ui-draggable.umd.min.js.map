{"version":3,"sources":["ng://@farris/ui-draggable/lib/models/position.ts","ng://@farris/ui-draggable/lib/widgets/helper-block.ts","ng://@farris/ui-draggable/lib/angular-draggable.directive.ts","node_modules/tslib/tslib.es6.js","ng://@farris/ui-draggable/lib/widgets/resize-handle.ts","ng://@farris/ui-draggable/lib/models/size.ts","ng://@farris/ui-draggable/lib/angular-resizeable.directive.ts","ng://@farris/ui-draggable/lib/draggable.module.ts"],"names":["Position","fromEvent","e","el","this","isMouseEvent","clientX","clientY","changedTouches","length","i","target","Object","prototype","toString","apply","indexOf","isIPosition","obj","getCurrent","pos","window","computed","getComputedStyle","x","parseInt","getPropertyValue","y","isNaN","console","error","copy","p","set","defineProperty","add","subtract","multiply","n","divide","reset","HelperBlock","parent","_added","appendChild","_helper","remove","removeChild","dispose","renderer","helper","createElement","setStyle","AngularDraggableDirective","setting","nativeElement","_zIndex","undefined","allowDrag","element","getDragEl","addClass","putBack","removeClass","ngOnInit","resetPosition","ngOnDestroy","bounds","handle","orignal","oldTrans","tempTrans","currTrans","_helperBlock","draggingSub","unsubscribe","ngOnChanges","changes","isFirstChange","currentValue","moving","needTransform","transform","ngAfterViewInit","inBounds","boundsCheck","position","moveTo","scale","edge","emit","movingOffset","value","translateX","translateY","lockAxis","gridSize","Math","round","pickUp","oldZIndex","style","zIndex","zIndexMoving","started","subscribeEvents","_this","document","passive","subscribe","event","onMouseMove","test","navigator","userAgent","unsubscribeEvents","boundary","getBoundingClientRect","elem","result","top","outOfBounds","right","bottom","left","getCurrentOffset","removeProperty","stopped","endOffset","trackPosition","checkHandleTarget","tagName","parentElement","classList","contains","child","children","hasOwnProperty","onMouseDown","MouseEvent","button","srcElement","preventDefaultEvent","stopPropagation","preventDefault","Directive","args","selector","exportAs","ElementRef","Renderer2","Output","Input","HostListener","type","EventEmitter","__assign","assign","t","s","arguments","call","__values","o","m","Symbol","iterator","next","done","ResizeHandle","_handle","removeEventListener","_onResize","css","addEventListener","Size","size","width","height","AngularResizableDirective","v","_resizable","updateResizable","updateAspectRatio","updateContainment","removeHandles","_containment","elm","_initSize","_initPos","_currSize","_currPos","resetSize","doResize","getStatus","createHandles","rzAspectRatio","_aspectRatio","r","Number","rzContainment","querySelector","tmpHandleTypes","rzHandles","replace","toLowerCase","split","tmpHandleTypes_1","tslib_1.__values","tmpHandleTypes_1_1","createHandleByType","_handleType","push","_handles","keys","tmpHandleTypes_2","tmpHandleTypes_2_1","_el","match","bind","_b","_c","_handleResizing","_origMousePos","startResize","onMouseLeave","stopResize","_origPos","_origSize","resizeTo","onResizing","getBounding","getGridSize","updateDirection","rzStart","getResizingEvent","rzStop","_direction","resetBounding","rzResizing","host","direction","_directionChanged","w","tmpX","_gridSize","tmpY","checkBounds","checkSize","adjustByRatio","container","_adjusted","newHeight","floor","newWidth","maxWidth","_bounding","pr","deltaL","maxHeight","pb","deltaT","minHeight","rzMinHeight","minWidth","rzMinWidth","rzMaxHeight","rzMaxWidth","transforms","clientWidth","clientHeight","offsetLeft","offsetTop","rzGrid","Array","isArray","AngularDraggableModule","NgModule","imports","declarations","exports"],"mappings":"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","sourcesContent":["export interface IPosition {\r\n    x: number;\r\n    y: number;\r\n  }\r\n  \r\n  export class Position implements IPosition {\r\n    constructor(public x: number, public y: number) { }\r\n  \r\n    static fromEvent(e: MouseEvent | TouchEvent, el: any = null) {\r\n      /**\r\n       * Fix issue: Resize doesn't work on Windows10 IE11 (and on some windows 7 IE11)\r\n       * https://github.com/xieziyu/angular2-draggable/issues/164\r\n       * e instanceof MouseEvent check returns false on IE11\r\n       */\r\n      if (this.isMouseEvent(e)) {\r\n        return new Position(e.clientX, e.clientY);\r\n      } else {\r\n        if (el === null || e.changedTouches.length === 1) {\r\n          return new Position(e.changedTouches[0].clientX, e.changedTouches[0].clientY);\r\n        }\r\n  \r\n        /**\r\n         * Fix issue: Multiple phone draggables at the same time\r\n         * https://github.com/xieziyu/angular2-draggable/issues/128\r\n         */\r\n        for (let i = 0; i < e.changedTouches.length; i++) {\r\n          if (e.changedTouches[i].target === el) {\r\n            return new Position(e.changedTouches[i].clientX, e.changedTouches[i].clientY);\r\n          }\r\n        }\r\n      }\r\n    }\r\n  \r\n    static isMouseEvent(e: MouseEvent | TouchEvent): e is MouseEvent {\r\n      return Object.prototype.toString.apply(e).indexOf('MouseEvent') === 8;\r\n    }\r\n  \r\n    static isIPosition(obj): obj is IPosition {\r\n      return !!obj && ('x' in obj) && ('y' in obj);\r\n    }\r\n  \r\n    static getCurrent(el: Element) {\r\n      let pos = new Position(0, 0);\r\n  \r\n      if (window) {\r\n        const computed = window.getComputedStyle(el);\r\n        if (computed) {\r\n          let x = parseInt(computed.getPropertyValue('left'), 10);\r\n          let y = parseInt(computed.getPropertyValue('top'), 10);\r\n          pos.x = isNaN(x) ? 0 : x;\r\n          pos.y = isNaN(y) ? 0 : y;\r\n        }\r\n        return pos;\r\n      } else {\r\n        console.error('Not Supported!');\r\n        return null;\r\n      }\r\n    }\r\n  \r\n    static copy(p: IPosition) {\r\n      return new Position(0, 0).set(p);\r\n    }\r\n  \r\n    get value(): IPosition {\r\n      return { x: this.x, y: this.y };\r\n    }\r\n  \r\n    add(p: IPosition) {\r\n      this.x += p.x;\r\n      this.y += p.y;\r\n      return this;\r\n    }\r\n  \r\n    subtract(p: IPosition) {\r\n      this.x -= p.x;\r\n      this.y -= p.y;\r\n      return this;\r\n    }\r\n  \r\n    multiply(n: number) {\r\n      this.x *= n;\r\n      this.y *= n;\r\n    }\r\n  \r\n    divide(n: number) {\r\n      this.x /= n;\r\n      this.y /= n;\r\n    }\r\n  \r\n    reset() {\r\n      this.x = 0;\r\n      this.y = 0;\r\n      return this;\r\n    }\r\n  \r\n    set(p: IPosition) {\r\n      this.x = p.x;\r\n      this.y = p.y;\r\n      return this;\r\n    }\r\n  }\r\n  ","import { Renderer2 } from '@angular/core';\r\n\r\nexport class HelperBlock {\r\n    protected _helper: Element;\r\n    private _added = false;\r\n\r\n    constructor(\r\n        protected parent: Element,\r\n        protected renderer: Renderer2\r\n    ) {\r\n        // generate helper div\r\n        let helper = renderer.createElement('div');\r\n        renderer.setStyle(helper, 'position', 'absolute');\r\n        renderer.setStyle(helper, 'width', '100%');\r\n        renderer.setStyle(helper, 'height', '100%');\r\n        renderer.setStyle(helper, 'background-color', 'transparent');\r\n        renderer.setStyle(helper, 'top', '0');\r\n        renderer.setStyle(helper, 'left', '0');\r\n\r\n        // done\r\n        this._helper = helper;\r\n    }\r\n\r\n    add() {\r\n        // append div to parent\r\n        if (this.parent && !this._added) {\r\n            this.parent.appendChild(this._helper);\r\n            this._added = true;\r\n        }\r\n    }\r\n\r\n    remove() {\r\n        if (this.parent && this._added) {\r\n            this.parent.removeChild(this._helper);\r\n            this._added = false;\r\n        }\r\n    }\r\n\r\n    dispose() {\r\n        this._helper = null;\r\n        this._added = false;\r\n    }\r\n\r\n    get el() {\r\n        return this._helper;\r\n    }\r\n}\r\n","import {\r\n    Directive, ElementRef, Renderer2,\r\n    Input, Output, OnInit, HostListener,\r\n    EventEmitter, OnChanges, SimpleChanges, OnDestroy, AfterViewInit\r\n} from '@angular/core';\r\n\r\nimport { Subscription, fromEvent } from 'rxjs';\r\nimport { IPosition, Position } from './models/position';\r\nimport { HelperBlock } from './widgets/helper-block';\r\n\r\n@Directive({\r\n    selector: '[ngDraggable]',\r\n    exportAs: 'ngDraggable'\r\n})\r\nexport class AngularDraggableDirective implements OnInit, OnDestroy, OnChanges, AfterViewInit {\r\n    private allowDrag = true;\r\n    private moving = false;\r\n    private orignal: Position = null;\r\n    private oldTrans = new Position(0, 0);\r\n    private tempTrans = new Position(0, 0);\r\n    private currTrans = new Position(0, 0);\r\n    private oldZIndex = '';\r\n    private _zIndex = '';\r\n    private needTransform = false;\r\n\r\n    private draggingSub: Subscription = null;\r\n\r\n    /**\r\n     * Bugfix: iFrames, and context unrelated elements block all events, and are unusable\r\n     * https://github.com/xieziyu/angular2-draggable/issues/84\r\n     */\r\n    private _helperBlock: HelperBlock = null;\r\n\r\n    @Output() started = new EventEmitter<any>();\r\n    @Output() stopped = new EventEmitter<any>();\r\n    @Output() edge = new EventEmitter<any>();\r\n\r\n    /** Make the handle HTMLElement draggable */\r\n    @Input() handle: HTMLElement;\r\n\r\n    /** Set the bounds HTMLElement */\r\n    @Input() bounds: HTMLElement;\r\n\r\n    /** List of allowed out of bounds edges **/\r\n    @Input() outOfBounds = {\r\n        top: false,\r\n        right: false,\r\n        bottom: false,\r\n        left: false\r\n    };\r\n\r\n    /** Round the position to nearest grid */\r\n    @Input() gridSize = 1;\r\n\r\n    /** Set z-index when dragging */\r\n    @Input() zIndexMoving: string;\r\n\r\n    /** Set z-index when not dragging */\r\n    @Input() set zIndex(setting: string) {\r\n        this.renderer.setStyle(this.el.nativeElement, 'z-index', setting);\r\n        this._zIndex = setting;\r\n    }\r\n    /** Whether to limit the element stay in the bounds */\r\n    @Input() inBounds = false;\r\n\r\n    /** Whether the element should use it's previous drag position on a new drag event. */\r\n    @Input() trackPosition = true;\r\n\r\n    /** Input css scale transform of element so translations are correct */\r\n    @Input() scale = 1;\r\n\r\n    /** Whether to prevent default event */\r\n    @Input() preventDefaultEvent = false;\r\n\r\n    /** Set initial position by offsets */\r\n    @Input() position: IPosition = { x: 0, y: 0 };\r\n\r\n    /** Lock axis: 'x' or 'y' */\r\n    @Input() lockAxis: string = null;\r\n\r\n    /** Emit position offsets when moving */\r\n    @Output() movingOffset = new EventEmitter<IPosition>();\r\n\r\n    /** Emit position offsets when put back */\r\n    @Output() endOffset = new EventEmitter<IPosition>();\r\n\r\n    @Input()\r\n    set ngDraggable(setting: any) {\r\n        if (setting !== undefined && setting !== null && setting !== '') {\r\n            this.allowDrag = !!setting;\r\n\r\n            let element = this.getDragEl();\r\n\r\n            if (this.allowDrag) {\r\n                this.renderer.addClass(element, 'ng-draggable');\r\n            } else {\r\n                this.putBack();\r\n                this.renderer.removeClass(element, 'ng-draggable');\r\n            }\r\n        }\r\n    }\r\n\r\n    constructor(private el: ElementRef, private renderer: Renderer2) {\r\n        this._helperBlock = new HelperBlock(el.nativeElement, renderer);\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.allowDrag) {\r\n            let element = this.getDragEl();\r\n            this.renderer.addClass(element, 'ng-draggable');\r\n        }\r\n        this.resetPosition();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.bounds = null;\r\n        this.handle = null;\r\n        this.orignal = null;\r\n        this.oldTrans = null;\r\n        this.tempTrans = null;\r\n        this.currTrans = null;\r\n        this._helperBlock.dispose();\r\n        this._helperBlock = null;\r\n\r\n        if (this.draggingSub) {\r\n            this.draggingSub.unsubscribe();\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['position'] && !changes['position'].isFirstChange()) {\r\n            let p = changes['position'].currentValue;\r\n\r\n            if (!this.moving) {\r\n                if (Position.isIPosition(p)) {\r\n                    this.oldTrans.set(p);\r\n                } else {\r\n                    this.oldTrans.reset();\r\n                }\r\n\r\n                this.transform();\r\n            } else {\r\n                this.needTransform = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.inBounds) {\r\n            this.boundsCheck();\r\n            this.oldTrans.add(this.tempTrans);\r\n            this.tempTrans.reset();\r\n        }\r\n    }\r\n\r\n    private getDragEl() {\r\n        return this.handle ? this.handle : this.el.nativeElement;\r\n    }\r\n\r\n    resetPosition() {\r\n        if (Position.isIPosition(this.position)) {\r\n            this.oldTrans.set(this.position);\r\n        } else {\r\n            this.oldTrans.reset();\r\n        }\r\n        this.tempTrans.reset();\r\n        this.transform();\r\n    }\r\n\r\n    private moveTo(p: Position) {\r\n        if (this.orignal) {\r\n            p.subtract(this.orignal);\r\n            this.tempTrans.set(p);\r\n            this.tempTrans.divide(this.scale);\r\n            this.transform();\r\n\r\n            if (this.bounds) {\r\n                this.edge.emit(this.boundsCheck());\r\n            }\r\n\r\n            this.movingOffset.emit(this.currTrans.value);\r\n        }\r\n    }\r\n\r\n    private transform() {\r\n        let translateX = this.tempTrans.x + this.oldTrans.x;\r\n        let translateY = this.tempTrans.y + this.oldTrans.y;\r\n\r\n        if (this.lockAxis === 'x') {\r\n            translateX = this.oldTrans.x;\r\n            this.tempTrans.x = 0;\r\n        } else if (this.lockAxis === 'y') {\r\n            translateY = this.oldTrans.y;\r\n            this.tempTrans.y = 0;\r\n        }\r\n\r\n        // Snap to grid: by grid size\r\n        if (this.gridSize > 1) {\r\n            translateX = Math.round(translateX / this.gridSize) * this.gridSize;\r\n            translateY = Math.round(translateY / this.gridSize) * this.gridSize;\r\n        }\r\n\r\n        let value = `translate3d(${Math.round(translateX)}px, ${Math.round(translateY)}px, 0px)`;\r\n\r\n        this.renderer.setStyle(this.el.nativeElement, 'transform', value);\r\n        this.renderer.setStyle(this.el.nativeElement, '-webkit-transform', value);\r\n        this.renderer.setStyle(this.el.nativeElement, '-ms-transform', value);\r\n        this.renderer.setStyle(this.el.nativeElement, '-moz-transform', value);\r\n        this.renderer.setStyle(this.el.nativeElement, '-o-transform', value);\r\n\r\n        // save current position\r\n        this.currTrans.x = translateX;\r\n        this.currTrans.y = translateY;\r\n    }\r\n\r\n    private pickUp() {\r\n        // get old z-index:\r\n        this.oldZIndex = this.el.nativeElement.style.zIndex ? this.el.nativeElement.style.zIndex : '';\r\n\r\n        if (window) {\r\n            this.oldZIndex = window.getComputedStyle(this.el.nativeElement, null).getPropertyValue('z-index');\r\n        }\r\n\r\n        if (this.zIndexMoving) {\r\n            this.renderer.setStyle(this.el.nativeElement, 'z-index', this.zIndexMoving);\r\n        }\r\n\r\n        if (!this.moving) {\r\n            this.started.emit(this.el.nativeElement);\r\n            this.moving = true;\r\n\r\n            const element = this.getDragEl();\r\n            this.renderer.addClass(element, 'ng-dragging');\r\n\r\n            /**\r\n             * Fix performance issue:\r\n             * https://github.com/xieziyu/angular2-draggable/issues/112\r\n             */\r\n            this.subscribeEvents();\r\n        }\r\n    }\r\n\r\n    private subscribeEvents() {\r\n        this.draggingSub = fromEvent(document, 'mousemove', { passive: false }).subscribe(event => this.onMouseMove(event as MouseEvent));\r\n        this.draggingSub.add(fromEvent(document, 'touchmove', { passive: false }).subscribe(event => this.onMouseMove(event as TouchEvent)));\r\n        this.draggingSub.add(fromEvent(document, 'mouseup', { passive: false }).subscribe(() => this.putBack()));\r\n        // checking if browser is IE or Edge - https://github.com/xieziyu/angular2-draggable/issues/153\r\n        let isIEOrEdge = /msie\\s|trident\\//i.test(window.navigator.userAgent);\r\n        if (!isIEOrEdge) {\r\n            this.draggingSub.add(fromEvent(document, 'mouseleave', { passive: false }).subscribe(() => this.putBack()));\r\n        }\r\n        this.draggingSub.add(fromEvent(document, 'touchend', { passive: false }).subscribe(() => this.putBack()));\r\n        this.draggingSub.add(fromEvent(document, 'touchcancel', { passive: false }).subscribe(() => this.putBack()));\r\n    }\r\n\r\n    private unsubscribeEvents() {\r\n        this.draggingSub.unsubscribe();\r\n        this.draggingSub = null;\r\n    }\r\n\r\n    boundsCheck() {\r\n        if (this.bounds) {\r\n            let boundary = this.bounds.getBoundingClientRect();\r\n            let elem = this.el.nativeElement.getBoundingClientRect();\r\n            let result = {\r\n                'top': this.outOfBounds.top ? true : boundary.top < elem.top,\r\n                'right': this.outOfBounds.right ? true : boundary.right > elem.right,\r\n                'bottom': this.outOfBounds.bottom ? true : boundary.bottom > elem.bottom,\r\n                'left': this.outOfBounds.left ? true : boundary.left < elem.left\r\n            };\r\n\r\n            if (this.inBounds) {\r\n                if (!result.top) {\r\n                    this.tempTrans.y -= (elem.top - boundary.top) / this.scale;\r\n                }\r\n\r\n                if (!result.bottom) {\r\n                    this.tempTrans.y -= (elem.bottom - boundary.bottom) / this.scale;\r\n                }\r\n\r\n                if (!result.right) {\r\n                    this.tempTrans.x -= (elem.right - boundary.right) / this.scale;\r\n                }\r\n\r\n                if (!result.left) {\r\n                    this.tempTrans.x -= (elem.left - boundary.left) / this.scale;\r\n                }\r\n\r\n                this.transform();\r\n            }\r\n\r\n            return result;\r\n        }\r\n    }\r\n\r\n    /** Get current offset */\r\n    getCurrentOffset() {\r\n        return this.currTrans.value;\r\n    }\r\n\r\n    private putBack() {\r\n        if (this._zIndex) {\r\n            this.renderer.setStyle(this.el.nativeElement, 'z-index', this._zIndex);\r\n        } else if (this.zIndexMoving) {\r\n            if (this.oldZIndex) {\r\n                this.renderer.setStyle(this.el.nativeElement, 'z-index', this.oldZIndex);\r\n            } else {\r\n                this.el.nativeElement.style.removeProperty('z-index');\r\n            }\r\n        }\r\n\r\n        if (this.moving) {\r\n            this.stopped.emit(this.el.nativeElement);\r\n\r\n            // Remove the helper div:\r\n            this._helperBlock.remove();\r\n\r\n            if (this.needTransform) {\r\n                if (Position.isIPosition(this.position)) {\r\n                    this.oldTrans.set(this.position);\r\n                } else {\r\n                    this.oldTrans.reset();\r\n                }\r\n\r\n                this.transform();\r\n                this.needTransform = false;\r\n            }\r\n\r\n            if (this.bounds) {\r\n                this.edge.emit(this.boundsCheck());\r\n            }\r\n\r\n            this.moving = false;\r\n            this.endOffset.emit(this.currTrans.value);\r\n\r\n            if (this.trackPosition) {\r\n                this.oldTrans.add(this.tempTrans);\r\n            }\r\n\r\n            this.tempTrans.reset();\r\n\r\n            if (!this.trackPosition) {\r\n                this.transform();\r\n            }\r\n\r\n            const element = this.getDragEl();\r\n            this.renderer.removeClass(element, 'ng-dragging');\r\n\r\n            /**\r\n             * Fix performance issue:\r\n             * https://github.com/xieziyu/angular2-draggable/issues/112\r\n             */\r\n            this.unsubscribeEvents();\r\n        }\r\n    }\r\n\r\n    checkHandleTarget(target: EventTarget, element: Element) {\r\n        // Checks if the target is the element clicked, then checks each child element of element as well\r\n        // Ignores button clicks\r\n\r\n        // Ignore elements of type button\r\n        if (element.tagName === 'BUTTON') {\r\n            return false;\r\n        }\r\n\r\n        if (element.tagName === 'SPAN' && element.parentElement.classList.contains('f-btn-icon')) {\r\n            return false;\r\n        }\r\n\r\n        // If the target was found, return true (handle was found)\r\n        if (element === target) {\r\n            return true;\r\n        }\r\n\r\n        // Recursively iterate this elements children\r\n        for (let child in element.children) {\r\n            if (element.children.hasOwnProperty(child)) {\r\n                if (this.checkHandleTarget(target, element.children[child])) {\r\n                    return true;\r\n                }\r\n            }\r\n        }\r\n\r\n        // Handle was not found in this lineage\r\n        // Note: return false is ignore unless it is the parent element\r\n        return false;\r\n    }\r\n\r\n    @HostListener('mousedown', ['$event'])\r\n    @HostListener('touchstart', ['$event'])\r\n    onMouseDown(event: MouseEvent | TouchEvent) {\r\n        // 1. skip right click;\r\n        if (event instanceof MouseEvent && event.button === 2) {\r\n            return;\r\n        }\r\n        // 2. if handle is set, the element can only be moved by handle\r\n        let target = event.target || event.srcElement;\r\n        if (this.handle !== undefined && !this.checkHandleTarget(target, this.handle)) {\r\n            return;\r\n        }\r\n\r\n        // 3. if allow drag is set to false, ignore the mousedown\r\n        if (this.allowDrag === false) {\r\n            return;\r\n        }\r\n\r\n        if (this.preventDefaultEvent) {\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n\r\n        this.orignal = Position.fromEvent(event, this.getDragEl());\r\n        this.pickUp();\r\n    }\r\n\r\n    onMouseMove(event: MouseEvent | TouchEvent) {\r\n        if (this.moving && this.allowDrag) {\r\n            if (this.preventDefaultEvent) {\r\n                event.stopPropagation();\r\n                event.preventDefault();\r\n            }\r\n\r\n            // Add a transparent helper div:\r\n            this._helperBlock.add();\r\n            this.moveTo(Position.fromEvent(event, this.getDragEl()));\r\n        }\r\n    }\r\n}\r\n","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { Renderer2 } from '@angular/core';\r\n\r\nexport class ResizeHandle {\r\n    protected _handle: Element;\r\n    private _onResize;\r\n\r\n    constructor(\r\n        protected parent: Element,\r\n        protected renderer: Renderer2,\r\n        public type: string,\r\n        public css: string,\r\n        private onMouseDown: any\r\n    ) {\r\n        // generate handle div\r\n        let handle = renderer.createElement('div');\r\n        renderer.addClass(handle, 'ng-resizable-handle');\r\n        renderer.addClass(handle, css);\r\n\r\n        // add default diagonal for se handle\r\n        if (type === 'se') {\r\n            renderer.addClass(handle, 'ng-resizable-diagonal');\r\n        }\r\n\r\n        // append div to parent\r\n        if (this.parent) {\r\n            parent.appendChild(handle);\r\n        }\r\n\r\n        // create and register event listener\r\n        this._onResize = (event) => { onMouseDown(event, this); };\r\n        handle.addEventListener('mousedown', this._onResize, { passive: false });\r\n        handle.addEventListener('touchstart', this._onResize, { passive: false });\r\n\r\n        // done\r\n        this._handle = handle;\r\n    }\r\n\r\n    dispose() {\r\n        this._handle.removeEventListener('mousedown', this._onResize);\r\n        this._handle.removeEventListener('touchstart', this._onResize);\r\n\r\n        if (this.parent) {\r\n            this.parent.removeChild(this._handle);\r\n        }\r\n        this._handle = null;\r\n        this._onResize = null;\r\n    }\r\n\r\n    get el() {\r\n        return this._handle;\r\n    }\r\n}\r\n","export interface ISize {\r\n    width: number;\r\n    height: number;\r\n}\r\n\r\nexport class Size implements ISize {\r\n    constructor(public width: number, public height: number) { }\r\n\r\n    static getCurrent(el: Element) {\r\n        let size = new Size(0, 0);\r\n\r\n        if (window) {\r\n            const computed = window.getComputedStyle(el);\r\n            if (computed) {\r\n                size.width = parseInt(computed.getPropertyValue('width'), 10);\r\n                size.height = parseInt(computed.getPropertyValue('height'), 10);\r\n            }\r\n            return size;\r\n        } else {\r\n            console.error('Not Supported!');\r\n            return null;\r\n        }\r\n    }\r\n\r\n    static copy(s: Size) {\r\n        return new Size(0, 0).set(s);\r\n    }\r\n\r\n    set(s: ISize) {\r\n        this.width = s.width;\r\n        this.height = s.height;\r\n        return this;\r\n    }\r\n}\r\n","import {\r\n    Directive, ElementRef, Renderer2,\r\n    Input, Output, OnInit, EventEmitter, OnChanges, SimpleChanges,\r\n    OnDestroy, AfterViewInit\r\n} from '@angular/core';\r\n\r\nimport { Subscription, fromEvent } from 'rxjs';\r\nimport { HelperBlock } from './widgets/helper-block';\r\nimport { ResizeHandle } from './widgets/resize-handle';\r\nimport { ResizeHandleType } from './models/resize-handle-type';\r\nimport { Position, IPosition } from './models/position';\r\nimport { Size } from './models/size';\r\nimport { IResizeEvent } from './models/resize-event';\r\n\r\n@Directive({\r\n    selector: '[ngResizable]',\r\n    exportAs: 'ngResizable'\r\n})\r\nexport class AngularResizableDirective implements OnInit, OnChanges, OnDestroy, AfterViewInit {\r\n    private _resizable = true;\r\n    private _handles: { [key: string]: ResizeHandle } = {};\r\n    private _handleType: string[] = [];\r\n    private _handleResizing: ResizeHandle = null;\r\n    private _direction: { 'n': boolean, 's': boolean, 'w': boolean, 'e': boolean } = null;\r\n    private _directionChanged: { 'n': boolean, 's': boolean, 'w': boolean, 'e': boolean } = null;\r\n    private _aspectRatio = 0;\r\n    private _containment: HTMLElement = null;\r\n    private _origMousePos: Position = null;\r\n\r\n    /** Original Size and Position */\r\n    private _origSize: Size = null;\r\n    private _origPos: Position = null;\r\n\r\n    /** Current Size and Position */\r\n    private _currSize: Size = null;\r\n    private _currPos: Position = null;\r\n\r\n    /** Initial Size and Position */\r\n    private _initSize: Size = null;\r\n    private _initPos: Position = null;\r\n\r\n    /** Snap to gird */\r\n    private _gridSize: IPosition = null;\r\n\r\n    private _bounding: any = null;\r\n\r\n    /**\r\n     * Bugfix: iFrames, and context unrelated elements block all events, and are unusable\r\n     * https://github.com/xieziyu/angular2-draggable/issues/84\r\n     */\r\n    private _helperBlock: HelperBlock = null;\r\n\r\n    private draggingSub: Subscription = null;\r\n    private _adjusted = false;\r\n\r\n    /** Disables the resizable if set to false. */\r\n    @Input() set ngResizable(v: any) {\r\n        if (v !== undefined && v !== null && v !== '') {\r\n            this._resizable = !!v;\r\n            this.updateResizable();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Which handles can be used for resizing.\r\n     * @example\r\n     * [rzHandles] = \"'n,e,s,w,se,ne,sw,nw'\"\r\n     * equals to: [rzHandles] = \"'all'\"\r\n     *\r\n     * */\r\n    @Input() rzHandles: ResizeHandleType = 'e,s,se';\r\n\r\n    /**\r\n     * Whether the element should be constrained to a specific aspect ratio.\r\n     *  Multiple types supported:\r\n     *  boolean: When set to true, the element will maintain its original aspect ratio.\r\n     *  number: Force the element to maintain a specific aspect ratio during resizing.\r\n     */\r\n    @Input() rzAspectRatio: boolean | number = false;\r\n\r\n    /**\r\n     * Constrains resizing to within the bounds of the specified element or region.\r\n     *  Multiple types supported:\r\n     *  Selector: The resizable element will be contained to the bounding box of the first element found by the selector.\r\n     *            If no element is found, no containment will be set.\r\n     *  Element: The resizable element will be contained to the bounding box of this element.\r\n     *  String: Possible values: \"parent\".\r\n     */\r\n    @Input() rzContainment: string | HTMLElement = null;\r\n\r\n    /**\r\n     * Snaps the resizing element to a grid, every x and y pixels.\r\n     * A number for both width and height or an array values like [ x, y ]\r\n     */\r\n    @Input() rzGrid: number | number[] = null;\r\n\r\n    /** The minimum width the resizable should be allowed to resize to. */\r\n    @Input() rzMinWidth: number = null;\r\n\r\n    /** The minimum height the resizable should be allowed to resize to. */\r\n    @Input() rzMinHeight: number = null;\r\n\r\n    /** The maximum width the resizable should be allowed to resize to. */\r\n    @Input() rzMaxWidth: number = null;\r\n\r\n    /** The maximum height the resizable should be allowed to resize to. */\r\n    @Input() rzMaxHeight: number = null;\r\n\r\n    /** Whether to prevent default event */\r\n    @Input() preventDefaultEvent = true;\r\n\r\n    /** emitted when start resizing */\r\n    @Output() rzStart = new EventEmitter<IResizeEvent>();\r\n\r\n    /** emitted when start resizing */\r\n    @Output() rzResizing = new EventEmitter<IResizeEvent>();\r\n\r\n    /** emitted when stop resizing */\r\n    @Output() rzStop = new EventEmitter<IResizeEvent>();\r\n\r\n    constructor(private el: ElementRef<HTMLElement>, private renderer: Renderer2) {\r\n        this._helperBlock = new HelperBlock(el.nativeElement, renderer);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes['rzHandles'] && !changes['rzHandles'].isFirstChange()) {\r\n            this.updateResizable();\r\n        }\r\n\r\n        if (changes['rzAspectRatio'] && !changes['rzAspectRatio'].isFirstChange()) {\r\n            this.updateAspectRatio();\r\n        }\r\n\r\n        if (changes['rzContainment'] && !changes['rzContainment'].isFirstChange()) {\r\n            this.updateContainment();\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.updateResizable();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.removeHandles();\r\n        this._containment = null;\r\n        this._helperBlock.dispose();\r\n        this._helperBlock = null;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        const elm = this.el.nativeElement;\r\n        this._initSize = Size.getCurrent(elm);\r\n        this._initPos = Position.getCurrent(elm);\r\n        this._currSize = Size.copy(this._initSize);\r\n        this._currPos = Position.copy(this._initPos);\r\n        this.updateAspectRatio();\r\n        this.updateContainment();\r\n    }\r\n\r\n    /** A method to reset size */\r\n    public resetSize() {\r\n        this._currSize = Size.copy(this._initSize);\r\n        this._currPos = Position.copy(this._initPos);\r\n        this.doResize();\r\n    }\r\n\r\n    /** A method to get current status */\r\n    public getStatus() {\r\n        if (!this._currPos || !this._currSize) {\r\n            return null;\r\n        }\r\n\r\n        return {\r\n            size: {\r\n                width: this._currSize.width,\r\n                height: this._currSize.height\r\n            },\r\n            position: {\r\n                top: this._currPos.y,\r\n                left: this._currPos.x\r\n            }\r\n        };\r\n    }\r\n\r\n    private updateResizable() {\r\n        const element = this.el.nativeElement;\r\n\r\n        // clear handles:\r\n        this.renderer.removeClass(element, 'ng-resizable');\r\n        this.removeHandles();\r\n\r\n        // create new ones:\r\n        if (this._resizable) {\r\n            this.renderer.addClass(element, 'ng-resizable');\r\n            this.createHandles();\r\n        }\r\n    }\r\n\r\n    /** Use it to update aspect */\r\n    private updateAspectRatio() {\r\n        if (typeof this.rzAspectRatio === 'boolean') {\r\n            if (this.rzAspectRatio && this._currSize.height) {\r\n                this._aspectRatio = (this._currSize.width / this._currSize.height);\r\n            } else {\r\n                this._aspectRatio = 0;\r\n            }\r\n        } else {\r\n            let r = Number(this.rzAspectRatio);\r\n            this._aspectRatio = isNaN(r) ? 0 : r;\r\n        }\r\n    }\r\n\r\n    /** Use it to update containment */\r\n    private updateContainment() {\r\n        if (!this.rzContainment) {\r\n            this._containment = null;\r\n            return;\r\n        }\r\n\r\n        if (typeof this.rzContainment === 'string') {\r\n            if (this.rzContainment === 'parent') {\r\n                this._containment = this.el.nativeElement.parentElement;\r\n            } else {\r\n                this._containment = document.querySelector<HTMLElement>(this.rzContainment);\r\n            }\r\n        } else {\r\n            this._containment = this.rzContainment;\r\n        }\r\n    }\r\n\r\n    /** Use it to create handle divs */\r\n    private createHandles() {\r\n        if (!this.rzHandles) {\r\n            return;\r\n        }\r\n\r\n        let tmpHandleTypes: string[];\r\n        if (typeof this.rzHandles === 'string') {\r\n            if (this.rzHandles === 'all') {\r\n                tmpHandleTypes = ['n', 'e', 's', 'w', 'ne', 'se', 'nw', 'sw'];\r\n            } else {\r\n                tmpHandleTypes = this.rzHandles.replace(/ /g, '').toLowerCase().split(',');\r\n            }\r\n\r\n            for (let type of tmpHandleTypes) {\r\n                // default handle theme: ng-resizable-$type.\r\n                let handle = this.createHandleByType(type, `ng-resizable-${type}`);\r\n                if (handle) {\r\n                    this._handleType.push(type);\r\n                    this._handles[type] = handle;\r\n                }\r\n            }\r\n        } else {\r\n            tmpHandleTypes = Object.keys(this.rzHandles);\r\n            for (let type of tmpHandleTypes) {\r\n                // custom handle theme.\r\n                let handle = this.createHandleByType(type, this.rzHandles[type]);\r\n                if (handle) {\r\n                    this._handleType.push(type);\r\n                    this._handles[type] = handle;\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    /** Use it to create a handle */\r\n    private createHandleByType(type: string, css: string): ResizeHandle {\r\n        const _el = this.el.nativeElement;\r\n\r\n        if (!type.match(/^(se|sw|ne|nw|n|e|s|w)$/)) {\r\n            console.error('Invalid handle type:', type);\r\n            return null;\r\n        }\r\n\r\n        return new ResizeHandle(_el, this.renderer, type, css, this.onMouseDown.bind(this));\r\n    }\r\n\r\n    private removeHandles() {\r\n        for (let type of this._handleType) {\r\n            this._handles[type].dispose();\r\n        }\r\n\r\n        this._handleType = [];\r\n        this._handles = {};\r\n    }\r\n\r\n    onMouseDown(event: MouseEvent | TouchEvent, handle: ResizeHandle) {\r\n        // skip right click;\r\n        if (event instanceof MouseEvent && event.button === 2) {\r\n            return;\r\n        }\r\n\r\n        if (this.preventDefaultEvent) {\r\n            // prevent default events\r\n            event.stopPropagation();\r\n            event.preventDefault();\r\n        }\r\n\r\n        if (!this._handleResizing) {\r\n            this._origMousePos = Position.fromEvent(event);\r\n            this.startResize(handle);\r\n\r\n            this.subscribeEvents();\r\n        }\r\n    }\r\n\r\n    private subscribeEvents() {\r\n        this.draggingSub = fromEvent(document, 'mousemove', { passive: false }).subscribe(event => this.onMouseMove(event as MouseEvent));\r\n        this.draggingSub.add(fromEvent(document, 'touchmove', { passive: false }).subscribe(event => this.onMouseMove(event as TouchEvent)));\r\n        this.draggingSub.add(fromEvent(document, 'mouseup', { passive: false }).subscribe(() => this.onMouseLeave()));\r\n        // fix for issue #164\r\n        let isIEOrEdge = /msie\\s|trident\\//i.test(window.navigator.userAgent);\r\n        if (!isIEOrEdge) {\r\n            this.draggingSub.add(fromEvent(document, 'mouseleave', { passive: false }).subscribe(() => this.onMouseLeave()));\r\n        }\r\n        this.draggingSub.add(fromEvent(document, 'touchend', { passive: false }).subscribe(() => this.onMouseLeave()));\r\n        this.draggingSub.add(fromEvent(document, 'touchcancel', { passive: false }).subscribe(() => this.onMouseLeave()));\r\n    }\r\n\r\n    private unsubscribeEvents() {\r\n        this.draggingSub.unsubscribe();\r\n        this.draggingSub = null;\r\n    }\r\n\r\n    onMouseLeave() {\r\n        if (this._handleResizing) {\r\n            this.stopResize();\r\n            this._origMousePos = null;\r\n            this.unsubscribeEvents();\r\n        }\r\n    }\r\n\r\n    onMouseMove(event: MouseEvent | TouchEvent) {\r\n        if (this._handleResizing && this._resizable && this._origMousePos && this._origPos && this._origSize) {\r\n            this.resizeTo(Position.fromEvent(event));\r\n            this.onResizing();\r\n        }\r\n    }\r\n\r\n    private startResize(handle: ResizeHandle) {\r\n        const elm = this.el.nativeElement;\r\n        this._origSize = Size.getCurrent(elm);\r\n        this._origPos = Position.getCurrent(elm); // x: left, y: top\r\n        this._currSize = Size.copy(this._origSize);\r\n        this._currPos = Position.copy(this._origPos);\r\n        if (this._containment) {\r\n            this.getBounding();\r\n        }\r\n        this.getGridSize();\r\n\r\n        // Add a transparent helper div:\r\n        this._helperBlock.add();\r\n        this._handleResizing = handle;\r\n        this.updateDirection();\r\n        this.rzStart.emit(this.getResizingEvent());\r\n    }\r\n\r\n    private stopResize() {\r\n        // Remove the helper div:\r\n        this._helperBlock.remove();\r\n        this.rzStop.emit(this.getResizingEvent());\r\n        this._handleResizing = null;\r\n        this._direction = null;\r\n        this._origSize = null;\r\n        this._origPos = null;\r\n        if (this._containment) {\r\n            this.resetBounding();\r\n        }\r\n    }\r\n\r\n    private onResizing() {\r\n        this.rzResizing.emit(this.getResizingEvent());\r\n    }\r\n\r\n    private getResizingEvent(): IResizeEvent {\r\n        return {\r\n            host: this.el.nativeElement,\r\n            handle: this._handleResizing ? this._handleResizing.el : null,\r\n            size: {\r\n                width: this._currSize.width,\r\n                height: this._currSize.height\r\n            },\r\n            position: {\r\n                top: this._currPos.y,\r\n                left: this._currPos.x\r\n            },\r\n            direction: { ...this._directionChanged },\r\n        };\r\n    }\r\n\r\n    private updateDirection() {\r\n        this._direction = {\r\n            n: !!this._handleResizing.type.match(/n/),\r\n            s: !!this._handleResizing.type.match(/s/),\r\n            w: !!this._handleResizing.type.match(/w/),\r\n            e: !!this._handleResizing.type.match(/e/)\r\n        };\r\n\r\n        this._directionChanged = { ...this._direction };\r\n\r\n        // if aspect ration should be preserved:\r\n        if (this.rzAspectRatio) {\r\n\r\n            // if north then west (unless ne)\r\n            if (this._directionChanged.n && !this._directionChanged.e) {\r\n                this._directionChanged.w = true;\r\n            }\r\n\r\n            // if south then east (unless sw)\r\n            if (this._directionChanged.s && !this._directionChanged.w) {\r\n                this._directionChanged.e = true;\r\n            }\r\n\r\n            // if east then south (unless ne)\r\n            if (this._directionChanged.e && !this._directionChanged.n) {\r\n                this._directionChanged.s = true;\r\n            }\r\n\r\n            // if west then south (unless nw)\r\n            if (this._directionChanged.w && !this._directionChanged.n) {\r\n                this._directionChanged.s = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    private resizeTo(p: Position) {\r\n        p.subtract(this._origMousePos);\r\n\r\n        const tmpX = Math.round(p.x / this._gridSize.x) * this._gridSize.x;\r\n        const tmpY = Math.round(p.y / this._gridSize.y) * this._gridSize.y;\r\n\r\n        if (this._direction.n) {\r\n            // n, ne, nw\r\n            this._currPos.y = this._origPos.y + tmpY;\r\n            this._currSize.height = this._origSize.height - tmpY;\r\n        } else if (this._direction.s) {\r\n            // s, se, sw\r\n            this._currSize.height = this._origSize.height + tmpY;\r\n        }\r\n\r\n        if (this._direction.e) {\r\n            // e, ne, se\r\n            this._currSize.width = this._origSize.width + tmpX;\r\n        } else if (this._direction.w) {\r\n            // w, nw, sw\r\n            this._currSize.width = this._origSize.width - tmpX;\r\n            this._currPos.x = this._origPos.x + tmpX;\r\n        }\r\n\r\n        this.checkBounds();\r\n        this.checkSize();\r\n        this.adjustByRatio();\r\n        this.doResize();\r\n    }\r\n\r\n    private doResize() {\r\n        const container = this.el.nativeElement;\r\n        if (!this._direction || this._direction.n || this._direction.s || this._aspectRatio) {\r\n            this.renderer.setStyle(container, 'height', this._currSize.height + 'px');\r\n        }\r\n        if (!this._direction || this._direction.w || this._direction.e || this._aspectRatio) {\r\n            this.renderer.setStyle(container, 'width', this._currSize.width + 'px');\r\n        }\r\n        this.renderer.setStyle(container, 'left', this._currPos.x + 'px');\r\n        this.renderer.setStyle(container, 'top', this._currPos.y + 'px');\r\n    }\r\n\r\n    private adjustByRatio() {\r\n        if (this._aspectRatio && !this._adjusted) {\r\n            if (this._direction.e || this._direction.w) {\r\n                const newHeight = Math.floor(this._currSize.width / this._aspectRatio);\r\n\r\n                if (this._direction.n) {\r\n                    this._currPos.y += this._currSize.height - newHeight;\r\n                }\r\n\r\n                this._currSize.height = newHeight;\r\n            } else {\r\n                const newWidth = Math.floor(this._aspectRatio * this._currSize.height);\r\n\r\n                if (this._direction.n) {\r\n                    this._currPos.x += this._currSize.width - newWidth;\r\n                }\r\n\r\n                this._currSize.width = newWidth;\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkBounds() {\r\n        if (this._containment) {\r\n            const maxWidth = this._bounding.width - this._bounding.pr - this._bounding.deltaL - this._bounding.translateX - this._currPos.x;\r\n            const maxHeight = this._bounding.height - this._bounding.pb - this._bounding.deltaT - this._bounding.translateY - this._currPos.y;\r\n\r\n            if (this._direction.n && (this._currPos.y + this._bounding.translateY < 0)) {\r\n                this._currPos.y = -this._bounding.translateY;\r\n                this._currSize.height = this._origSize.height + this._origPos.y + this._bounding.translateY;\r\n            }\r\n\r\n            if (this._direction.w && (this._currPos.x + this._bounding.translateX) < 0) {\r\n                this._currPos.x = -this._bounding.translateX;\r\n                this._currSize.width = this._origSize.width + this._origPos.x + this._bounding.translateX;\r\n            }\r\n\r\n            if (this._currSize.width > maxWidth) {\r\n                this._currSize.width = maxWidth;\r\n            }\r\n\r\n            if (this._currSize.height > maxHeight) {\r\n                this._currSize.height = maxHeight;\r\n            }\r\n\r\n            /**\r\n             * Fix Issue: Additional check for aspect ratio\r\n             * https://github.com/xieziyu/angular2-draggable/issues/132\r\n             */\r\n            if (this._aspectRatio) {\r\n                this._adjusted = false;\r\n\r\n                if ((this._direction.w || this._direction.e) &&\r\n                    (this._currSize.width / this._aspectRatio) >= maxHeight) {\r\n                    const newWidth = Math.floor(maxHeight * this._aspectRatio);\r\n\r\n                    if (this._direction.w) {\r\n                        this._currPos.x += this._currSize.width - newWidth;\r\n                    }\r\n\r\n                    this._currSize.width = newWidth;\r\n                    this._currSize.height = maxHeight;\r\n                    this._adjusted = true;\r\n                }\r\n\r\n                if ((this._direction.n || this._direction.s) &&\r\n                    (this._currSize.height * this._aspectRatio) >= maxWidth) {\r\n                    const newHeight = Math.floor(maxWidth / this._aspectRatio);\r\n\r\n                    if (this._direction.n) {\r\n                        this._currPos.y += this._currSize.height - newHeight;\r\n                    }\r\n\r\n                    this._currSize.width = maxWidth;\r\n                    this._currSize.height = newHeight;\r\n                    this._adjusted = true;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkSize() {\r\n        const minHeight = !this.rzMinHeight ? 1 : this.rzMinHeight;\r\n        const minWidth = !this.rzMinWidth ? 1 : this.rzMinWidth;\r\n\r\n        if (this._currSize.height < minHeight) {\r\n            this._currSize.height = minHeight;\r\n\r\n            if (this._direction.n) {\r\n                this._currPos.y = this._origPos.y + (this._origSize.height - minHeight);\r\n            }\r\n        }\r\n\r\n        if (this._currSize.width < minWidth) {\r\n            this._currSize.width = minWidth;\r\n\r\n            if (this._direction.w) {\r\n                this._currPos.x = this._origPos.x + (this._origSize.width - minWidth);\r\n            }\r\n        }\r\n\r\n        if (this.rzMaxHeight && this._currSize.height > this.rzMaxHeight) {\r\n            this._currSize.height = this.rzMaxHeight;\r\n\r\n            if (this._direction.n) {\r\n                this._currPos.y = this._origPos.y + (this._origSize.height - this.rzMaxHeight);\r\n            }\r\n        }\r\n\r\n        if (this.rzMaxWidth && this._currSize.width > this.rzMaxWidth) {\r\n            this._currSize.width = this.rzMaxWidth;\r\n\r\n            if (this._direction.w) {\r\n                this._currPos.x = this._origPos.x + (this._origSize.width - this.rzMaxWidth);\r\n            }\r\n        }\r\n    }\r\n\r\n    private getBounding() {\r\n        const el = this._containment;\r\n        const computed = window.getComputedStyle(el);\r\n        if (computed) {\r\n            let p = computed.getPropertyValue('position');\r\n\r\n            const nativeEl = window.getComputedStyle(this.el.nativeElement);\r\n            let transforms = nativeEl.getPropertyValue('transform').replace(/[^-\\d,]/g, '').split(',');\r\n\r\n            this._bounding = {};\r\n            this._bounding.width = el.clientWidth;\r\n            this._bounding.height = el.clientHeight;\r\n            this._bounding.pr = parseInt(computed.getPropertyValue('padding-right'), 10);\r\n            this._bounding.pb = parseInt(computed.getPropertyValue('padding-bottom'), 10);\r\n            this._bounding.deltaL = this.el.nativeElement.offsetLeft - this._currPos.x;\r\n            this._bounding.deltaT = this.el.nativeElement.offsetTop - this._currPos.y;\r\n\r\n            if (transforms.length >= 6) {\r\n                this._bounding.translateX = parseInt(transforms[4], 10);\r\n                this._bounding.translateY = parseInt(transforms[5], 10);\r\n            } else {\r\n                this._bounding.translateX = 0;\r\n                this._bounding.translateY = 0;\r\n            }\r\n\r\n            this._bounding.position = computed.getPropertyValue('position');\r\n\r\n            if (p === 'static') {\r\n                this.renderer.setStyle(el, 'position', 'relative');\r\n            }\r\n        }\r\n    }\r\n\r\n    private resetBounding() {\r\n        if (this._bounding && this._bounding.position === 'static') {\r\n            this.renderer.setStyle(this._containment, 'position', 'relative');\r\n        }\r\n        this._bounding = null;\r\n    }\r\n\r\n    private getGridSize() {\r\n        // set default value:\r\n        this._gridSize = { x: 1, y: 1 };\r\n\r\n        if (this.rzGrid) {\r\n            if (typeof this.rzGrid === 'number') {\r\n                this._gridSize = { x: this.rzGrid, y: this.rzGrid };\r\n            } else if (Array.isArray(this.rzGrid)) {\r\n                this._gridSize = { x: this.rzGrid[0], y: this.rzGrid[1] };\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\nimport { AngularDraggableDirective } from './angular-draggable.directive';\nimport { AngularResizableDirective } from './angular-resizeable.directive';\n\n@NgModule({\n  imports: [\n  ],\n  declarations: [\n    AngularDraggableDirective,\n    AngularResizableDirective\n  ],\n  exports: [\n    AngularDraggableDirective,\n    AngularResizableDirective\n  ]\n})\nexport class AngularDraggableModule { }\n"]}