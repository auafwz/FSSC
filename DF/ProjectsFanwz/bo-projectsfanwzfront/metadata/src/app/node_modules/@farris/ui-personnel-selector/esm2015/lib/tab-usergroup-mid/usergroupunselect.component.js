/**
 * @fileoverview added by tsickle
 * Generated from: lib/tab-usergroup-mid/usergroupunselect.component.ts
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, EventEmitter, Output, ViewChild, TemplateRef, Optional } from '@angular/core';
import { ApiLocalService } from '../../utils/api-service';
import { DatagridComponent } from '@farris/ui-datagrid';
import * as _ from 'lodash-es';
import { FavoritesTool } from '../../utils/favorites.tool';
import { noDataImg } from '../../assets/resource';
import { DataLoadingService } from '../../utils/loading-service';
import { FilterOrg } from '../../utils/user.type';
import { switchMap, tap } from 'rxjs/operators';
import { FilterOrgTool } from '../../utils/filterorg.tool';
export class UserGroupUnSelectComponent {
    /**
     * @param {?} apiService
     * @param {?} favoritesTool
     */
    constructor(apiService, favoritesTool) {
        this.apiService = apiService;
        this.favoritesTool = favoritesTool;
        this.idField = 'userId';
        this.items = [];
        this.orgId = '';
        this.userIds = '';
        this.unSelectedUserIds = '';
        this.enablePagination = true;
        this.userGroupId = '';
        this.selectionsChange = new EventEmitter();
        this.searchResultChange = new EventEmitter();
        this.selections = [];
        this.cloneUserIds = '';
        this.cloneSelections = [];
        this.pEnableChildHierarchy = true;
        this.pIncludeCurrentUser = true;
        this.favoritesList = [];
        this.noDataImg = noDataImg;
        this.allChecked = false;
        this.itemsBackup = [];
        this.allIndexId = 'allIndexId';
        // 是否显示用户编号
        this.showUserCode = true;
        this.showPagesPanel = false;
        this.pageList = [10, 20, 50, 100, 200, 500, 1000, 2000, 5000];
        this.filterPersonWithOrgUrl = '/api/runtime/sys/v1.0/absUserOrg/org/System_organization/getOrgByUserFiler';
        this.filterOrgArr = [];
        this.filterOrgId = null;
        this.isEmptyFilterOrg = false;
        this.presetFilterInfo = '筛选组织：无';
        this.currentFilerInfo = null;
        this.allIndexId = Math.random().toString(16).substring(3, 10);
        this.filterOrgTool = new FilterOrgTool();
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set enableChildHierarchy(value) {
        this.pEnableChildHierarchy = value;
    }
    /**
     * @param {?} value
     * @return {?}
     */
    set includeCurrentUser(value) {
        this.pIncludeCurrentUser = value;
    }
    /**
     * @return {?}
     */
    ngOnInit() {
        /** @type {?} */
        let title = '';
        if (this.multiSelect) {
            title = '全选';
        }
        this.columns = [
            {
                field: 'name', template: this.opCell, title, width: '150'
            }
        ];
        if (this.filterOrgTool) {
            this.filterOrgSub = this.filterOrgTool.filterOrgSubject.subscribe((/**
             * @param {?} data
             * @return {?}
             */
            data => {
                this.currentFilerInfo = data;
            }));
        }
        if (this.favoritesTool) {
            this.favoritesTool.favoritesSubject.subscribe((/**
             * @param {?} data
             * @return {?}
             */
            data => {
                this.favoritesList = data;
                this.unSelectedListLoad();
            }));
        }
    }
    /**
     * @return {?}
     */
    ngAfterViewInit() {
        // this.pageChangeCheck();
    }
    /**
     * @param {?} changes
     * @return {?}
     */
    ngOnChanges(changes) {
        if (changes.includeCurrentUser && typeof changes.includeCurrentUser.currentValue === 'boolean'
            && !changes.includeCurrentUser.firstChange) {
            this.assembleDataByUserGroupId();
        }
        if (changes.enableChildHierarchy && typeof changes.enableChildHierarchy.currentValue === 'boolean'
            && !changes.enableChildHierarchy.firstChange) {
            this.assembleDataByUserGroupId();
        }
        // console.log(changes);
    }
    /**
     * @return {?}
     */
    ngOnDestroy() {
        this.filterOrgSub.unsubscribe();
    }
    /**
     * @private
     * @return {?}
     */
    emitSelections() {
        /** @type {?} */
        const emitObj = {
            selections: this.selections,
            token: 'unDatagrid'
        };
        this.selectionsChange.emit(emitObj);
    }
    /**
     * @return {?}
     */
    restoreSelections() {
        this.selections = _.cloneDeep(this.cloneSelections);
        // this.emitSelections();
        this.toggleChecked();
    }
    // 人员展示翻页触发查询（！）
    /**
     * @param {?} size
     * @return {?}
     */
    switchPage(size) {
        this.pageIndex = size.pageIndex;
        this.pageSize = size.pageSize;
        if (this.searchPage) {
            this.assembleDataBySearch();
        }
        else {
            this.assembleDataByUserGroupId();
        }
    }
    /**
     * @param {?} e
     * @param {?} item
     * @return {?}
     */
    toggleFavorites(e, item) {
        this.favoritesTool.toggleFavorites(e, item);
    }
    /**
     * @return {?}
     */
    assembleDataBySearch() {
        /** @type {?} */
        const requestParam = {
            pageSize: this.pageSize,
            pageIndex: this.pageIndex,
            withAllOrg: this.pEnableChildHierarchy ? 1 : 0,
            notGetStopUser: !this.includeStopUser,
            notGetCurrentUser: !this.pIncludeCurrentUser,
            orderField: this.orderField,
            userTypeMode: this.userTypeMode,
            filterId: this.filterId
        };
        // 全局搜索or局部
        if (!this.globalSearch) {
            requestParam.orgId = this.orgId;
        }
        this.apiService.getPersonnelBySearch(this.absUserOrgUrl, this.absOrgType, this.searchText, requestParam).subscribe((/**
         * @param {?} res
         * @return {?}
         */
        (res) => {
            /** @type {?} */
            const rcResData = res ? res.data : [];
            this.unSelectedList = rcResData;
            this.pageTotalAll = res.totalCount;
            this.pageTotal = Math.ceil(this.pageTotalAll / this.pageSize);
            if (this.pageTotal === 0) {
                this.pageTotal = 1;
            }
            this.unSelectedListLoad();
            this.searchResultChange.emit(true);
        }));
    }
    /**
     * @return {?}
     */
    assembleDataByUserGroupId() {
        if (this.dataLoadingService) {
            this.dataLoadingService.show(this.loadingServiceMessage);
        }
        /** @type {?} */
        const requestParam = {
            withAllGroup: this.pEnableChildHierarchy ? true : false,
            notGetStopUser: !this.includeStopUser,
            notGetCurrentUser: !this.pIncludeCurrentUser,
            orderField: this.orderField,
            userTypeMode: this.userTypeMode,
            filterId: this.filterId,
            groupId: this.userGroupId,
        };
        if (this.enablePagination) {
            requestParam.pageSize = this.pageSize;
            requestParam.pageIndex = this.pageIndex;
        }
        // 通过组织进行人员的二次过滤
        if (this.filterOrgId) {
            requestParam.orgId = this.filterOrgId;
        }
        this.apiService.getPersonnelByUserGroupId(this.absUserOrgUrl, requestParam).subscribe((/**
         * @param {?} res
         * @return {?}
         */
        (res) => {
            /** @type {?} */
            const rcResData = res ? res.data : [];
            this.unSelectedList = rcResData;
            this.pageTotalAll = res.totalCount;
            this.pageTotal = Math.ceil(this.pageTotalAll / this.pageSize);
            if (this.pageTotal === 0) {
                this.pageTotal = 1;
            }
            this.unSelectedListLoad();
            if (this.filterOrgId) {
                /** @type {?} */
                const currentFilterOrg = this.filterOrgArr.find((/**
                 * @param {?} arr
                 * @return {?}
                 */
                (arr) => { return arr.id == this.filterOrgId; }));
                if (currentFilterOrg) {
                    this.filterOrgTool.emitFilterOrg('筛选组织：' + currentFilterOrg['name']);
                }
            }
            else {
                this.filterOrgTool.emitFilterOrg(this.presetFilterInfo);
            }
            if (this.dataLoadingService) {
                this.dataLoadingService.hide();
            }
        }));
    }
    // 显示组织过滤漏斗的场景下，用户分组树内切换用户分组时首先获取人员所属的全部组织，再获取人员数据
    /**
     * @param {?} size
     * @return {?}
     */
    assembleDataByUserGroupIdAndGetFilterOrg(size) {
        if (this.dataLoadingService) {
            this.dataLoadingService.show(this.loadingServiceMessage);
        }
        this.pageIndex = size.pageIndex;
        this.pageSize = size.pageSize;
        this.filterOrgArr = [];
        this.filterOrgId = null;
        /** @type {?} */
        const filterRequestParam = {
            absOrgType: this.absOrgType,
            withAllOrg: true,
            getUserInfo: false,
            notGetStopUser: !this.includeStopUser,
            notGetCurrentUser: !this.pIncludeCurrentUser,
            orderField: this.orderField,
            userTypeMode: this.userTypeMode,
            filterId: this.filterId,
            groupId: this.userGroupId,
        };
        // 首先获取当前用户分组下所有成员所属的组织
        /** @type {?} */
        const getFilterOrg$ = this.apiService.getFilterOrganization(this.filterPersonWithOrgUrl, this.absOrgType, filterRequestParam);
        /** @type {?} */
        const requestParam = {
            withAllGroup: this.pEnableChildHierarchy ? true : false,
            notGetStopUser: !this.includeStopUser,
            notGetCurrentUser: !this.pIncludeCurrentUser,
            orderField: this.orderField,
            userTypeMode: this.userTypeMode,
            filterId: this.filterId,
            groupId: this.userGroupId,
        };
        if (this.enablePagination) {
            requestParam.pageSize = this.pageSize;
            requestParam.pageIndex = this.pageIndex;
        }
        // 然后获取当前用户分组下的所有成员
        /** @type {?} */
        const getPersonnel$ = this.apiService.getPersonnelByUserGroupId(this.absUserOrgUrl, requestParam);
        getFilterOrg$.pipe(switchMap((/**
         * @param {?} resData
         * @return {?}
         */
        (resData) => {
            if (resData && resData.data && resData.data.length > 0) {
                /** @type {?} */
                let filterOrg;
                this.filterOrgArr = resData.data.map((/**
                 * @param {?} data
                 * @return {?}
                 */
                (data) => {
                    filterOrg = new FilterOrg();
                    filterOrg.id = data['orgId'];
                    filterOrg.value = data['code'];
                    filterOrg.name = data['name'];
                    return filterOrg;
                }));
                this.filterOrgTool.emitFilterOrg(this.presetFilterInfo);
            }
            else {
                this.isEmptyFilterOrg = true;
            }
            return getPersonnel$.pipe(tap((/**
             * @param {?} res
             * @return {?}
             */
            (res) => {
                /** @type {?} */
                const rcResData = res ? res.data : [];
                this.unSelectedList = rcResData;
                this.pageTotalAll = res.totalCount;
                this.pageTotal = Math.ceil(this.pageTotalAll / this.pageSize);
                if (this.pageTotal === 0) {
                    this.pageTotal = 1;
                }
                this.unSelectedListLoad();
            })));
        })), tap((/**
         * @return {?}
         */
        () => {
            if (this.dataLoadingService) {
                this.dataLoadingService.hide();
            }
        }), (/**
         * @param {?} error
         * @return {?}
         */
        (error) => {
            if (this.dataLoadingService) {
                this.dataLoadingService.hide();
            }
            console.warn('显示组织过滤漏斗的场景下，调用后端接口出现错误！');
        }))).subscribe();
    }
    /**
     * datagrid用于数据展示
     * @param {?=} initLoad
     * @return {?}
     */
    unSelectedListLoad(initLoad = false) {
        this.items = [];
        this.unSelectedList.forEach((/**
         * @param {?} res
         * @return {?}
         */
        res => {
            // const indexId = Math.random().toString(16).substring(2);
            // const item = {
            //     abbreviation: res.abbreviation,
            //     code: res.code,
            //     defaultOrgId: res.defaultOrgId,
            //     defaultOrgPath: res.defaultOrgPath,
            //     ext1: res.ext1,
            //     ext2: res.ext2,
            //     fullPathName: res.fullPathName,
            //     name: res.name,
            //     orgTypeId: res.orgTypeId,
            //     secLevel: res.secLevel,
            //     sortOrder: res.sortOrder,
            //     state: res.state,
            //     su: res.su,
            //     userId: res.userId,
            //     orgAllPath: res.orgAllPath,
            //     inFavorites: false,
            //     type: 'people',
            //     checked: false,
            //     indexId
            // };
            /** @type {?} */
            const item = _.cloneDeep(res);
            item.checked = false;
            item.inFavorites = false;
            item.indexId = Math.random().toString(16).substring(2);
            if (this._isInArray(res[this.idField], this.idField, this.selections) !== -1) {
                item.checked = true;
            }
            if (this._isInArray(res[this.idField], this.idField, this.favoritesList) !== -1) {
                item.inFavorites = true;
            }
            item.displayName = !!this.showUserCode ? ('[' + item.code + ']' + item.name) : item.name;
            this.items.push(item);
            this.itemsBackup.push(item);
        }));
        this.toggleChecked();
        this.items = this.items.slice();
        this.cdRef ? this.cdRef.detectChanges() : null;
    }
    /**
     * @return {?}
     */
    toggleAll() {
        if (!this.allChecked) {
            this.checkAll();
        }
        else {
            this.unCheckAll();
        }
        this.emitSelections();
    }
    /**
     * @param {?} data
     * @return {?}
     */
    toggleOne(data) {
        if (data.checked) {
            this.unSelectLine(data);
        }
        else {
            this.selectLine(data);
        }
        this.emitSelections();
    }
    /**
     * 全选后处理
     * @return {?}
     */
    checkAll() {
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            this._insertOneIntoSelections(item);
            item.checked = true;
        }));
    }
    /**
     * 全部取消
     * @return {?} void
     */
    unCheckAll() {
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            this.selections.forEach((/**
             * @param {?} selection
             * @param {?} index
             * @return {?}
             */
            (selection, index) => {
                if (item[this.idField] === selection[this.idField]) {
                    this.selections.splice(index, 1);
                }
            }));
            item.checked = false;
        }));
    }
    /**
     * 当前行选中
     * @param {?} data 当前行的数据（）
     * @return {?}
     */
    selectLine(data) {
        if (this.multiSelect) {
            this._insertOneIntoSelections(data);
        }
        else {
            this.userIds = '';
            this.selections = [];
            this.items.forEach((/**
             * @param {?} item
             * @return {?}
             */
            item => {
                if (item.checked) {
                    item.checked = false;
                }
            }));
            this._insertOneIntoSelections(data);
        }
        if (this.isAllChecked()) {
            this.allChecked = true;
        }
    }
    /**
     * 单选取消选中
     * @param {?} data 取消选中行
     * @return {?}
     */
    unSelectLine(data) {
        /** @type {?} */
        const index = this._isInArray(data[this.idField], this.idField, this.selections);
        if (index > -1) {
            this.selections.splice(index, 1);
        }
        if (this.allChecked) {
            this.allChecked = false;
        }
    }
    /**
     *  取消选中
     * @param {?} $event 取消勾选的数据
     * @return {?}
     */
    cancelSelections($event) {
        if (this.items.findIndex((/**
         * @param {?} item
         * @return {?}
         */
        item => item[this.idField] === $event.id)) === -1) {
            return;
        }
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            if (item[this.idField] === $event.id) {
                item.checked = false;
            }
        }));
        this.selections.forEach((/**
         * @param {?} selection
         * @param {?} index
         * @return {?}
         */
        (selection, index) => {
            if ($event.id === selection[this.idField]) {
                this.selections.splice(index, 1);
            }
        }));
        this.allChecked = false;
    }
    /**
     * 全部取消勾选
     * @return {?}
     */
    clearCheckeds() {
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            item.checked = false;
        }));
        this.allChecked = false;
        this.selections = [];
    }
    /**
     * @return {?}
     */
    clearUserIds() {
        this.userIds = '';
    }
    /**
     * 选中并插入当前行数据到右侧
     * @param {?} data 当前行的数据
     * @return {?}
     */
    _insertOneIntoSelections(data) {
        // 如果当前数据已经移入右侧数据，则返回。
        if (this._isInArray(data[this.idField], this.idField, this.selections) > -1) {
            return;
        }
        this.selections.push(data);
        this.selections = this.selections.slice();
    }
    /**
     * 判断是否在内
     * @param {?} value value
     * @param {?} field field
     * @param {?} array array
     * @return {?} 位置索引
     */
    _isInArray(value, field, array) {
        if (!field || !value) {
            throw new Error('前2个参数必填');
        }
        return array.findIndex((/**
         * @param {?} item
         * @return {?}
         */
        item => value === item[field]));
    }
    /**
     * 翻页检查：人员展示区的勾选状态与已选人员区是否对应
     * @return {?}
     */
    toggleChecked() {
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            if (this._isInArray(item[this.idField], this.idField, this.selections) > -1) {
                item.checked = true;
            }
            else {
                item.checked = false;
            }
        }));
        if (this.isAllChecked()) {
            this.allChecked = true;
        }
        else {
            this.allChecked = false;
        }
    }
    /**
     * @private
     * @return {?}
     */
    isAllChecked() {
        /** @type {?} */
        let count = 0;
        /** @type {?} */
        let allChecked = false;
        this.items.forEach((/**
         * @param {?} item
         * @return {?}
         */
        item => {
            this.selections.forEach((/**
             * @param {?} selection
             * @return {?}
             */
            selection => {
                if (item[this.idField] === selection[this.idField]) {
                    count += 1;
                }
            }));
        }));
        if (this.items.length === count && count > 0) {
            allChecked = true;
        }
        return allChecked;
    }
    /**
     * @param {?} index
     * @param {?} item
     * @return {?}
     */
    trackByFn(index, item) {
        return item.userId;
    }
    /**
     * @param {?} dir
     * @param {?} num
     * @return {?}
     */
    turnOverPage(dir, num) {
        if ((dir === 'pre' && this.pageIndex === 1) || (dir === 'next' && this.pageIndex === this.pageTotal)) {
            return;
        }
        this.pageIndex = this.pageIndex + num;
        this.switchPage({
            pageIndex: this.pageIndex,
            pageSize: this.pageSize,
        });
    }
    /**
     * @param {?} inputEl
     * @param {?} maxNumber
     * @return {?}
     */
    beforePageIndexChange(inputEl, maxNumber) {
        /** @type {?} */
        const target = (/** @type {?} */ (inputEl.target));
        /** @type {?} */
        const currentPageNumber = Number(target.value);
        if (currentPageNumber > maxNumber) {
            target.value = maxNumber;
        }
        else {
            if (currentPageNumber < 1) {
                target.value = 1;
            }
        }
        this.pageIndex = Number(target.value);
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onMouseEnter($event) {
        this.showPagesPanel = true;
    }
    /**
     * @param {?} $event
     * @return {?}
     */
    onMouseLeave($event) {
        this.showPagesPanel = false;
    }
    /**
     * @param {?} $event
     * @param {?} num
     * @return {?}
     */
    changePageSizeHandler($event, num) {
        $event.stopPropagation();
        if (num == this.pageSize) {
            return;
        }
        this.showPagesPanel = false;
        this.pageSize = num;
        this.switchPage({
            pageIndex: 1,
            pageSize: this.pageSize,
        });
    }
}
UserGroupUnSelectComponent.decorators = [
    { type: Component, args: [{
                selector: 'lib-usergroup-unselect',
                template: "<ng-template #unSelectDatagrid [ngIf]=\"false\"></ng-template>\r\n<ng-template #opCell [ngIf]=\"false\"></ng-template>\r\n<!-- \u517C\u5BB9\u4FDD\u7559 -->\r\n\r\n<div class=\"candidate\">\r\n    <div class=\"candidate-title\">\r\n        <div class=\"custom-control custom-checkbox mb-2\" *ngIf=\"multiSelect && items.length > 0\">\r\n            <input class=\"custom-control-input\" [id]=\"allIndexId\" type=\"checkbox\" [(ngModel)]=\"allChecked\">\r\n            <label class=\"custom-control-label\" [for]=\"allIndexId\" (click)=\"toggleAll()\">\u5168\u9009</label>\r\n        </div>\r\n        <div>&nbsp;</div>\r\n    </div>\r\n    <perfect-scrollbar *ngIf=\"items.length!==0\">\r\n        <div class=\"candidate-content\">\r\n            <div *ngFor=\"let data of items; let i = index;trackBy: trackByFn\" class=\"s-selectedPerson\">\r\n                <div class=\"custom-control custom-checkbox\">\r\n                    <input class=\"custom-control-input\" [(ngModel)]=\"data.checked\" [id]=\"data.indexId\" type=\"checkbox\">\r\n                    <label class=\"custom-control-label\" [for]=\"data.indexId\" (click)=\"toggleOne(data)\">\r\n                        <div style=\"display: flex; height: 32px; margin: -21px 0 0 24px;\">\r\n                            <farris-avatar [avatarWidth]=\"32\" [avatarHeight]=\"32\" [cover]=\"data.ext1\" [readonly]=\"true\">\r\n                            </farris-avatar>\r\n                            <div style=\"margin-left: 11px; margin-top: -1px; padding-right: 10px; overflow: hidden;\">\r\n                                <p class=\"candidate-content-title\" title=\"{{data.displayName}}\">\r\n                                    {{data.displayName}}</p>\r\n                                <p class=\"candidate-content-orgpath\" title=\"{{data.orgAllPath}}\">\r\n                                    {{data.orgAllPath}}</p>\r\n                            </div>\r\n                        </div>\r\n                    </label>\r\n                </div>\r\n                <span class=\"f-icon f-icon-star\" *ngIf=\"enableFavorites\" [class.default-light-color]=\"data.inFavorites\"\r\n                    [class.default-dark-color]=\"!data.inFavorites\" (click)=\"toggleFavorites($event, data)\"></span>\r\n            </div>\r\n\r\n        </div>\r\n    </perfect-scrollbar>\r\n    <div class=\"pagination-container\" *ngIf=\"items.length!==0\">\r\n        <ul class=\"ngx-pagination pagination pager-viewmode-simple\">\r\n            <li class=\"pagination-pagelist\" style=\"padding: 0;\" *ngIf=\"showPageList\">\r\n                <div class=\"dropup dropdown-right pg-pagelist\"\r\n                    [ngClass]=\"{'show': showPagesPanel}\"\r\n                    (mouseenter)=\"onMouseEnter($event)\" (mouseleave)=\"onMouseLeave($event)\">\r\n                    <div class=\"pg-pagelist-info\">\r\n                        <span class=\"pagelist-text\">\u663E\u793A</span><b\r\n                            class=\"cur-pagesize\">{{ pageSize }}</b><span\r\n                            class=\"pagelist-text\">\u6761</span><i\r\n                            class=\"f-icon f-icon-dropdown\"></i>\r\n                    </div>\r\n                    <div class=\"dropdown-menu\" [ngClass]=\"{'show': showPagesPanel}\" style=\"margin-bottom: -1px;\">\r\n                        <li class=\"dropdown-item\" [ngClass]=\"{'active':num == pageSize}\"\r\n                            *ngFor=\"let num of pageList\" (click)=\"changePageSizeHandler($event, num)\">\r\n                            <span>{{ num }}</span>\r\n                        </li>\r\n                    </div>\r\n                </div>\r\n            </li>\r\n            <li class=\"page-item d-flex flex-fill\"></li>\r\n            <li class=\"page-item\" [class.disabled]=\"pageIndex === 1\" (click)=\"turnOverPage('pre', -1)\">\r\n                <span class=\"page-link border-0\">\r\n                    <span class=\"f-icon f-page-pre\"></span>\r\n                </span>\r\n            </li>\r\n            <li class=\"page-item\">\r\n                <input id=\"farris-datagrid-gotopagenumber\" min=\"1\" type=\"number\" max=\"{{pageTotal}}\"\r\n                    [(ngModel)]=\"pageIndex\" style=\"width: 38px;\" (keyup.enter)=\"switchPage({pageIndex: pageIndex, pageSize: pageSize})\"\r\n                    (input)=\"beforePageIndexChange($event, pageTotal)\">\r\n            </li>\r\n            <li class=\"page-item page-separator\" style=\"margin-left: 10px\"> / </li>\r\n            <li class=\"page-item page-total\" style=\"margin-left: 5px\">\r\n                <span style=\"font-size: 16px; font-weight: 600;\"> {{pageTotal}}</span>\r\n            </li>\r\n            <li class=\"page-item\" [class.disabled]=\"pageIndex === pageTotal\" (click)=\"turnOverPage('next', 1)\">\r\n                <a class=\"page-link border-0\">\r\n                    <span class=\"f-icon f-page-next\"></span>\r\n                </a>\r\n            </li>\r\n        </ul>\r\n    </div>\r\n    <div *ngIf=\"items.length===0\" [ngStyle]=\"{'background-image': noDataImg}\" class=\"fp-candidate-nodata\">\r\n        \u6682\u65E0\u6570\u636E</div>\r\n</div>",
                styles: [":host{display:-webkit-box;display:flex;height:100%;-webkit-box-flex:1;flex:1;overflow:hidden;position:static}.candidate{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;width:100%}.candidate .fp-candidate-nodata{width:100px;height:100px;text-align:center;background-repeat:no-repeat;background-size:contain;margin:110px auto 0;color:#b4bccc;padding-top:110px}.candidate .group_blank_15{width:100%;height:15px}.candidate .candidate-content{clear:both}.candidate .s-selectedPerson:first-child{margin-top:0}.candidate .s-selectedPerson{min-width:240px;float:left;width:calc(100% - 6px);position:relative;height:40px;padding:5px 12px;margin:0 3px 1px}.candidate .s-selectedPerson:hover{background:#eef5ff;border-radius:5px}.candidate .f-icon{font-size:14px}.candidate .s-selectedPerson .f-icon-star{position:absolute;top:13px;right:12px;font-size:14px}.candidate .s-selectedPerson .default-light-color{color:#f7b500}.candidate .s-selectedPerson .default-dark-color{color:#d8dce6}.candidate .candidate-content-title{margin:0;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;font-size:13px}.candidate .candidate-content-orgpath{margin:0;font-size:12px;overflow:hidden;white-space:nowrap;text-overflow:ellipsis;color:#c7ccd7}.candidate .candidate-title{-webkit-box-pack:justify;justify-content:space-between;height:35px;margin-bottom:18px}.candidate .candidate-title .custom-control{margin:10px 0 0 15px;line-height:35px}.candidate .s-selectedPerson .custom-control-label::before{top:7px}.candidate .candidate-title .title-clearall{margin:5px 15px 0 0;color:#2a87ff;cursor:pointer;line-height:35px}.candidate .candidate-title div{line-height:35px;margin:5px 10px 0 0;color:#2a87ff;cursor:pointer}.candidate .saved-group{position:absolute;width:111px;height:26px;line-height:26px;background:#eaedf2;border-radius:5px;text-align:center;font-size:13px;bottom:10px;left:13px;z-index:999;color:#909ba2;cursor:pointer}.candidate .saved-group:hover{color:#2a87ff;background:#eaf4ff}.candidate .saved-group:hover .f-icon{color:#2a87ff}.candidate .saved-group .f-icon{color:#909ba2;margin-right:5px;cursor:pointer;font-size:14px}.s-group-dialog-container{height:520px;width:600px;position:fixed;left:50%;top:50%;margin:-260px 0 0 -300px;background:#fff;padding:15px 20px;border-radius:10px;display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;z-index:9999}.s-group-dialog-container .s-personnel-group-footer{margin-top:15px}.s-help-bg{background:rgb(0 0 0 / 15%);position:fixed;left:0;top:0;right:0;bottom:0;z-index:9997}.s-group-dialog-container .s-personnel-group-title{font-size:17px;line-height:24px;color:#2d2f33;font-weight:600}.s-group-dialog-container .s-personnel-group-title .f-icon{float:right;font-size:20px;color:#878d99;margin-top:3px;cursor:pointer}.s-group-dialog-container .s-personnel-group-footer .fr{float:right;height:32px}"]
            }] }
];
/** @nocollapse */
UserGroupUnSelectComponent.ctorParameters = () => [
    { type: ApiLocalService },
    { type: FavoritesTool, decorators: [{ type: Optional }] }
];
UserGroupUnSelectComponent.propDecorators = {
    unSelectDatagrid: [{ type: ViewChild, args: ['unSelectDatagrid',] }],
    opCell: [{ type: ViewChild, args: ['opCell',] }],
    idField: [{ type: Input }],
    items: [{ type: Input }],
    absUserOrgUrl: [{ type: Input }],
    absOrgType: [{ type: Input }],
    pageIndex: [{ type: Input }],
    pageSize: [{ type: Input }],
    pageTotalAll: [{ type: Input }],
    multiSelect: [{ type: Input }],
    noSelectToRight: [{ type: Input }],
    searchText: [{ type: Input }],
    unSelectedList: [{ type: Input }],
    pageTotal: [{ type: Input }],
    enableChildHierarchy: [{ type: Input }],
    orgId: [{ type: Input }],
    userIds: [{ type: Input }],
    unSelectedUserIds: [{ type: Input }],
    includeStopUser: [{ type: Input }],
    searchPage: [{ type: Input }],
    includeCurrentUser: [{ type: Input }],
    enablePagination: [{ type: Input }],
    enableFavorites: [{ type: Input }],
    busNum: [{ type: Input }],
    orderField: [{ type: Input }],
    userTypeMode: [{ type: Input }],
    globalSearch: [{ type: Input }],
    userGroupId: [{ type: Input }],
    showPageList: [{ type: Input }],
    dataLoadingService: [{ type: Input }],
    selectionsChange: [{ type: Output }],
    searchResultChange: [{ type: Output }]
};
if (false) {
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.unSelectDatagrid;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.opCell;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.idField;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.items;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.absUserOrgUrl;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.absOrgType;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.pageIndex;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.pageSize;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.pageTotalAll;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.multiSelect;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.noSelectToRight;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.searchText;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.unSelectedList;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.pageTotal;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.orgId;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.userIds;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.unSelectedUserIds;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.includeStopUser;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.searchPage;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.enablePagination;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.enableFavorites;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.busNum;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.orderField;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.userTypeMode;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.globalSearch;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.userGroupId;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.showPageList;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.dataLoadingService;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.selectionsChange;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.searchResultChange;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.columns;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.selections;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.cloneUserIds;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.cloneSelections;
    /**
     * @type {?}
     * @private
     */
    UserGroupUnSelectComponent.prototype.pEnableChildHierarchy;
    /**
     * @type {?}
     * @private
     */
    UserGroupUnSelectComponent.prototype.pIncludeCurrentUser;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.favoritesList;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.noDataImg;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.allChecked;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.itemsBackup;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.allIndexId;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.filterId;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.showUserCode;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.cdRef;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.showPagesPanel;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.pageList;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.loadingServiceMessage;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.filterPersonWithOrgUrl;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.filterOrgArr;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.filterOrgId;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.isEmptyFilterOrg;
    /**
     * @type {?}
     * @private
     */
    UserGroupUnSelectComponent.prototype.filterOrgTool;
    /**
     * @type {?}
     * @private
     */
    UserGroupUnSelectComponent.prototype.filterOrgSub;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.presetFilterInfo;
    /** @type {?} */
    UserGroupUnSelectComponent.prototype.currentFilerInfo;
    /**
     * @type {?}
     * @private
     */
    UserGroupUnSelectComponent.prototype.apiService;
    /**
     * @type {?}
     * @private
     */
    UserGroupUnSelectComponent.prototype.favoritesTool;
}
//# sourceMappingURL=data:application/json;base64,