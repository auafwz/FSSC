/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { Component, Input, ViewChild, ChangeDetectorRef, ChangeDetectionStrategy, Output, EventEmitter, ElementRef, Renderer2, Injector, LOCALE_ID, Optional, InjectFlags } from '@angular/core';
import { ControlType } from './entity/controltype';
import { ListFilterService } from './service/list-filter.service';
import { QuerySolutionService } from './submithandlers/query-solution.service';
import { ConvertorService } from './service/convertorservice';
import { TextValue } from './entity/conditionvalue/textvalue';
import { HelpValue } from './entity/conditionvalue/helpvalue';
import { DropDownListValue } from './entity/conditionvalue/dropdownlistvalue';
import { DateRangeValue } from './entity/conditionvalue/daterangevalue';
import { NumberRangeValue } from './entity/conditionvalue/numberrangevaue';
import { SearchValue } from './entity/conditionvalue/searchvalue';
import { DateValue } from './entity/conditionvalue/datevalue';
import { CheckboxGroupValue } from './entity/conditionvalue/checkboxgroupvalue';
import { LISTFILTER_HANDLER_TOKEN } from './interface/IistFilterHandler';
import { RadioGroupValue } from './entity/conditionvalue/radiovalue';
import { MonthValue } from './entity/conditionvalue/month';
import { YearValue } from './entity/conditionvalue/yearvalue';
import { YearRangeValue } from './entity/conditionvalue/yearrange';
import { MonthRangeValue } from './entity/conditionvalue/monthrange';
import { InputGroupValue } from './entity/conditionvalue/inputgroup';
var ListFilterComponent = /** @class */ (function () {
    function ListFilterComponent(filterService, cd, handler, convertorService, render, injector) {
        this.filterService = filterService;
        this.cd = cd;
        this.handler = handler;
        this.convertorService = convertorService;
        this.render = render;
        this.injector = injector;
        //  表单左对齐
        this.alLeft = false;
        //  平分空间
        this.autoWidth = true;
        //  实时搜索
        this.liveSearch = false;
        //  label的宽度是否自适应
        this.autoLabel = false;
        //  是否禁用
        this.disabled = false;
        this.filterPaddingNone = false;
        this.query = new EventEmitter();
        this.searchChange = new EventEmitter();
        //  filterWidth:number = 1000;
        //  标记是否有滚动条
        //  hasScroll = true;
        //  需要监听收折的表单
        //  resizeGroups: listFilterGroup;
        // 筛选icon部分小红点
        this.showExpandTag = false;
        /**
         * 是否需要显示展开更多icon
         */
        this.showMoreIcon = false;
        //  moreIconWidth:number = 0;
        this.showFilter = false;
        // 是否展现出的只有一个搜索控件
        this.formExpand = false;
        // 提交表单数据
        //  queryList;
        // 隐藏提交表单数据
        //  extendqueryList;
        /**
         * 循环表单
         */
        this.listFilterConditions = new Array();
        /**
         * 用来存储setvalue前数据
         */
        this.stagListFilterConditions = new Array();
        /**
         * 记录默认收起的搜索表单列表
         */
        this.extendFilterList = [];
        /**
         * 记录显示的搜索表单列表
         */
        this.showFilterList = [];
        /**
         * 显示中表单的必填项
         */
        this.requiredListFilter = [];
        /** 隐藏中表单的必填项 */
        //  extendRequiredListFilter: Array<QueryCondition> = [];
        /**
         * 表单是否允许提交
         */
        this.canSubmit = false;
        /**
         * 扩展表单是否允许提交
         */
        //  extendCanSubmit:boolean = false;
        this.localeIds = {
            en: 'en',
            'zh-CHS': 'zh-CHS'
        };
        this.currentLocale = 'zh-CHS';
        this.isControlInline = true;
        if (this.injector) {
            this.currentLocale = this.injector.get(LOCALE_ID);
            this.listfilterHandler = this.injector.get(LISTFILTER_HANDLER_TOKEN, null, InjectFlags.Optional);
        }
    }
    Object.defineProperty(ListFilterComponent.prototype, "defaultValue", {
        get: /**
         * @return {?}
         */
        function () {
            return this._defaultValue;
        },
        set: /**
         * @param {?} configs
         * @return {?}
         */
        function (configs) {
            var _this = this;
            this._defaultValue = configs;
            setTimeout((/**
             * @return {?}
             */
            function () {
                _this.setFilterValue(_this._defaultValue);
            }));
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(ListFilterComponent.prototype, "filterList", {
        get: /**
         * @return {?}
         */
        function () {
            return this._filterList;
        },
        set: /**
         * @param {?} filterList
         * @return {?}
         */
        function (filterList) {
            this._filterList = filterList;
            this.initFilterList();
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    ListFilterComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.currentLocale === this.localeIds['en']) {
            this.isControlInline = false;
        }
        else {
            this.isControlInline = true;
        }
        this.canShowMoreIcon();
    };
    /**
     * @return {?}
     */
    ListFilterComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        if (this.autoWidth && !this.formExpand && this.filterMainBasisRef) {
            /** @type {?} */
            var basicList = this.filterMainBasisRef.nativeElement.querySelectorAll('.filter-input-list');
            /** @type {?} */
            var basicWidth = 0;
            if (basicList && basicList.length) {
                for (var k = 0; k < basicList.length; k++) {
                    /** @type {?} */
                    var offW = Math.ceil(parseFloat(basicList[k].offsetWidth || 0));
                    if (offW > 0) {
                        basicWidth += offW;
                    }
                }
            }
            if (basicWidth > 0) {
                this.render.setStyle(this.filterMainBasisRef.nativeElement, 'width', basicWidth + 'px');
            }
        }
    };
    /** 初始化处理表单数据 */
    /**
     * 初始化处理表单数据
     * @return {?}
     */
    ListFilterComponent.prototype.initFilterList = /**
     * 初始化处理表单数据
     * @return {?}
     */
    function () {
        var _this = this;
        this.listFilterConditions = new Array();
        this.extendFilterList = [];
        this.showFilterList = [];
        this.filterDatas = this.filterService.fieldSchemasConvert(this._filterList);
        if (this.filterDatas && this.filterDatas.length) {
            this.listFilterConditions = this.convertorService.getSelectedFieldConditions(this.filterDatas, this.listFilterConditions);
            this.stagListFilterConditions = this.listFilterConditions.map((/**
             * @param {?} o
             * @return {?}
             */
            function (o) { return (tslib_1.__assign({}, o)); }));
            // 存储扩展项和默认展示表单
            this.listFilterConditions.forEach((/**
             * @param {?} field
             * @return {?}
             */
            function (field) {
                if (field.control.isExtend) {
                    _this.extendFilterList.push(field);
                }
                else {
                    _this.showFilterList.push(field);
                }
            }));
            // 判断是否是左对齐 只有一个搜索
            /** @type {?} */
            var _basisFilterList = this.listFilterConditions.filter((/**
             * @param {?} field
             * @return {?}
             */
            function (field) {
                return !field.control.isExtend;
            }));
            if (_basisFilterList && _basisFilterList.length === 1 && this.getControlType(_basisFilterList[0]) === 'search') {
                this.formExpand = true;
            }
            this.searchChange.emit(this.listFilterConditions);
            this.inSetCurrentFilterConditions();
            // 存储默认展示中必填项
            this.requiredListInit();
            this.canShowMoreIcon();
            //  this.listSearch();
            this.cd.detectChanges();
        }
    };
    /**
     * @return {?}
     */
    ListFilterComponent.prototype.inSetCurrentFilterConditions = /**
     * @return {?}
     */
    function () {
        if (this.listfilterHandler) {
            this.listfilterHandler.setCurrentFilterConditions(this.listFilterConditions);
        }
    };
    /**
     * 获取控件类型
     * @param selectedFieldCondition
     */
    /**
     * 获取控件类型
     * @param {?} selectedFieldCondition
     * @return {?}
     */
    ListFilterComponent.prototype.getControlType = /**
     * 获取控件类型
     * @param {?} selectedFieldCondition
     * @return {?}
     */
    function (selectedFieldCondition) {
        if (selectedFieldCondition) {
            if (selectedFieldCondition.control.getControlType() == ControlType.Text) {
                return 'input';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.Search) {
                return 'search';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.Date) {
                return 'date';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.Month) {
                return 'month';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.Year) {
                return 'year';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.DateRange) {
                return 'daterange';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.DateRangeTime) {
                return 'daterangetime';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.MonthRange) {
                return 'monthrange';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.YearRange) {
                return 'yearrange';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.DropDown) {
                return 'dropdown';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.NumberRange) {
                return 'number';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.Help) {
                return 'help';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.CheckboxGroup) {
                return 'checkboxgroup';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.Radio) {
                return 'radio';
            }
            else if (selectedFieldCondition.control.getControlType() == ControlType.InputGroup) {
                return 'input-group';
            }
            else {
                return 'input';
            }
        }
    };
    /** 获得类名 */
    /**
     * 获得类名
     * @param {?} currentItem
     * @return {?}
     */
    ListFilterComponent.prototype.getStyle = /**
     * 获得类名
     * @param {?} currentItem
     * @return {?}
     */
    function (currentItem) {
        /** @type {?} */
        var defaultCondtionStyle = 'col-12 col-md-6 col-xl-3 col-el-2';
        return (this.filterClass && !this.autoWidth) ? this.filterClass : defaultCondtionStyle;
    };
    /** 判断是否需要显示更多按钮 */
    /**
     * 判断是否需要显示更多按钮
     * @return {?}
     */
    ListFilterComponent.prototype.canShowMoreIcon = /**
     * 判断是否需要显示更多按钮
     * @return {?}
     */
    function () {
        if (this.extendFilterList.length > 0) {
            this.showMoreIcon = true;
        }
        else {
            this.showMoreIcon = false;
        }
    };
    /** 判断是否所有必填项都填写完毕 */
    /**
     * 判断是否所有必填项都填写完毕
     * @param {?} requirelist
     * @return {?}
     */
    ListFilterComponent.prototype.canSubmitFilter = /**
     * 判断是否所有必填项都填写完毕
     * @param {?} requirelist
     * @return {?}
     */
    function (requirelist) {
        /** @type {?} */
        var formCanSubmit = false;
        if (!requirelist || !requirelist.length) {
            formCanSubmit = true;
            return formCanSubmit;
        }
        else {
            for (var i = 0; i < requirelist.length; i++) {
                /** @type {?} */
                var item = requirelist[i];
                if (item.control.getControlType() === ControlType.Text) {
                    /** @type {?} */
                    var tv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(tv).length < 0 || !tv.value) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.Help) {
                    /** @type {?} */
                    var shv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(shv).length === 0 || !shv.value || !shv.valueField) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.DropDown) {
                    /** @type {?} */
                    var ddv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(ddv).length === 0 || !ddv.value) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.DateRange) {
                    /** @type {?} */
                    var drv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(drv).length === 0 || (!drv.startTime && !drv.endTime)) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.DateRangeTime) {
                    /** @type {?} */
                    var drv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(drv).length === 0 || (!drv.startTime && !drv.endTime)) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.MonthRange) {
                    /** @type {?} */
                    var mrv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(mrv).length === 0 || (!mrv.startTime && !mrv.endTime)) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.YearRange) {
                    /** @type {?} */
                    var yrv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(yrv).length === 0 || (!yrv.startTime && !yrv.endTime)) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.NumberRange) {
                    /** @type {?} */
                    var nrv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(nrv).length === 0 || (!nrv.startValue && !nrv.endValue)) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.Search) {
                    /** @type {?} */
                    var sv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(sv).length < 0 || !sv.value) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.Date) {
                    /** @type {?} */
                    var dv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(dv).length < 0 || !dv.value) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.Month) {
                    /** @type {?} */
                    var mv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(mv).length < 0 || !mv.value) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.Year) {
                    /** @type {?} */
                    var yv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(yv).length < 0 || !yv.value) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.CheckboxGroup) {
                    /** @type {?} */
                    var cbgv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(cbgv).length === 0 || Object.keys(cbgv.value).length === 0) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.Radio) {
                    /** @type {?} */
                    var ddv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(ddv).length === 0 || !ddv.value) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
                else if (item.control.getControlType() === ControlType.InputGroup) {
                    /** @type {?} */
                    var sv = ((/** @type {?} */ (item.value)));
                    if (Object.keys(sv).length < 0 || !sv.textValue) {
                        formCanSubmit = false;
                        return false;
                    }
                    else {
                        formCanSubmit = true;
                    }
                }
            }
            return formCanSubmit;
        }
    };
    /** 搜索表单变化 */
    /**
     * 搜索表单变化
     * @param {?} $event
     * @param {?} item
     * @return {?}
     */
    ListFilterComponent.prototype.onSearch = /**
     * 搜索表单变化
     * @param {?} $event
     * @param {?} item
     * @return {?}
     */
    function ($event, item) {
        if (this.disabled) {
            return;
        }
        this.searchChange.emit({ item: item, conditions: this.listFilterConditions, instance: this });
        this.inSetCurrentFilterConditions();
        this.canSubmit = this.canSubmitFilter(this.requiredListFilter);
        if (item.control.isExtend || !this.canSubmit || !this.liveSearch) {
            return;
        }
        this.submit('showFormData', this.listFilterConditions);
    };
    /** 开始筛选 */
    /**
     * 开始筛选
     * @return {?}
     */
    ListFilterComponent.prototype.filterClick = /**
     * 开始筛选
     * @return {?}
     */
    function () {
        if (this.disabled || !this.canSubmit) {
            return;
        }
        this.submit('showFormData', this.listFilterConditions);
    };
    /** 收折部分点击确定提交 */
    /**
     * 收折部分点击确定提交
     * @return {?}
     */
    ListFilterComponent.prototype.listSearch = /**
     * 收折部分点击确定提交
     * @return {?}
     */
    function () {
        if (this.disabled || !this.canSubmit) {
            return;
        }
        this.showFilter = false;
        this.submit('extendFormData', this.listFilterConditions);
    };
    /** 取消搜索 */
    /**
     * 取消搜索
     * @return {?}
     */
    ListFilterComponent.prototype.listSearchCancel = /**
     * 取消搜索
     * @return {?}
     */
    function () {
        this.showFilter = false;
    };
    /** 提交表单 */
    /**
     * 提交表单
     * @param {?} type
     * @param {?} filterlist
     * @return {?}
     */
    ListFilterComponent.prototype.submit = /**
     * 提交表单
     * @param {?} type
     * @param {?} filterlist
     * @return {?}
     */
    function (type, filterlist) {
        /** @type {?} */
        var queryList;
        queryList = this.handler.setFilterConditions(filterlist);
        if (type == 'extendFormData') {
            if (queryList.length > 0) {
                this.showExpandTag = true;
            }
            else {
                this.showExpandTag = false;
            }
        }
        this.query.emit({ type: type, data: JSON.stringify(queryList) });
    };
    /** 对外提供获得表单搜索数据 */
    /**
     * 对外提供获得表单搜索数据
     * @return {?}
     */
    ListFilterComponent.prototype.getFilterData = /**
     * 对外提供获得表单搜索数据
     * @return {?}
     */
    function () {
        /** @type {?} */
        var queryList;
        queryList = this.handler.setFilterConditions(this.listFilterConditions);
        return JSON.stringify(queryList);
    };
    /** 获取展示在外部的表单长度 */
    /**
     * 获取展示在外部的表单长度
     * @return {?}
     */
    ListFilterComponent.prototype.getShowLength = /**
     * 获取展示在外部的表单长度
     * @return {?}
     */
    function () {
        if (this.showFilterList) {
            return this.showFilterList.length;
        }
    };
    /** 清空条件 */
    /**
     * 清空条件
     * @return {?}
     */
    ListFilterComponent.prototype.resetSearch = /**
     * 清空条件
     * @return {?}
     */
    function () {
        if (this.disabled) {
            return;
        }
        if (this.listFilterConditions && this.listFilterConditions.length) {
            this.listFilterConditions.forEach((/**
             * @param {?} listFilterCondition
             * @return {?}
             */
            function (listFilterCondition) {
                if (listFilterCondition.control.getControlType() == ControlType.Text) {
                    listFilterCondition.value = new TextValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.Search) {
                    listFilterCondition.value = new SearchValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.Date) {
                    listFilterCondition.value = new DateValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.Month) {
                    listFilterCondition.value = new MonthValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.Year) {
                    listFilterCondition.value = new YearValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.DateRange) {
                    listFilterCondition.value = new DateRangeValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.MonthRange) {
                    listFilterCondition.value = new MonthRangeValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.YearRange) {
                    listFilterCondition.value = new YearRangeValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.DropDown) {
                    listFilterCondition.value = new DropDownListValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.NumberRange) {
                    listFilterCondition.value = new NumberRangeValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.Help) {
                    listFilterCondition.value = new HelpValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.CheckboxGroup) {
                    listFilterCondition.value = new CheckboxGroupValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.Radio) {
                    listFilterCondition.value = new RadioGroupValue();
                }
                else if (listFilterCondition.control.getControlType() == ControlType.InputGroup) {
                    listFilterCondition.value = new InputGroupValue();
                }
                else {
                    listFilterCondition.value = new TextValue();
                }
            }));
            //  let listFilter = this.listFilterConditions.map(o => Object.assign({}, o));
            /** @type {?} */
            var listFilter = this.listFilterConditions.map((/**
             * @param {?} o
             * @return {?}
             */
            function (o) { return (tslib_1.__assign({}, o)); }));
            this.listFilterConditions = listFilter;
            this.requiredListInit();
            //  this.cd.markForCheck();
        }
    };
    // 设置默认值
    // 设置默认值
    /**
     * @param {?} fieldConfigs
     * @return {?}
     */
    ListFilterComponent.prototype.setFilterValue = 
    // 设置默认值
    /**
     * @param {?} fieldConfigs
     * @return {?}
     */
    function (fieldConfigs) {
        this.listFilterConditions = this.stagListFilterConditions.map((/**
         * @param {?} o
         * @return {?}
         */
        function (o) { return (tslib_1.__assign({}, o)); }));
        if (this.listFilterConditions && this.listFilterConditions.length) {
            this.setValues(this.listFilterConditions, fieldConfigs);
            /** @type {?} */
            var listFilter = this.listFilterConditions.map((/**
             * @param {?} o
             * @return {?}
             */
            function (o) { return (tslib_1.__assign({}, o)); }));
            this.listFilterConditions = listFilter;
            this.requiredListInit();
            this.searchChange.emit(this.listFilterConditions);
            this.inSetCurrentFilterConditions();
            //  this.listSearch();
            this.cd.detectChanges();
            this.cd.markForCheck();
            this.canSubmit = this.canSubmitFilter(this.requiredListFilter);
            if (!this.canSubmit) {
                return;
            }
            this.submit('showFormData', this.listFilterConditions);
        }
    };
    // 设置value
    // 设置value
    /**
     * @param {?} conditions
     * @param {?} fieldConfigs
     * @return {?}
     */
    ListFilterComponent.prototype.setValues = 
    // 设置value
    /**
     * @param {?} conditions
     * @param {?} fieldConfigs
     * @return {?}
     */
    function (conditions, fieldConfigs) {
        var _this = this;
        /** @type {?} */
        var qc;
        /** @type {?} */
        var controlType;
        if (fieldConfigs && fieldConfigs.length) {
            fieldConfigs.forEach((/**
             * @param {?} v
             * @return {?}
             */
            function (v) {
                qc = conditions.find((/**
                 * @param {?} c
                 * @return {?}
                 */
                function (c) { return c.fieldCode == v.labelCode; }));
                if (qc) {
                    controlType = _this.getControlType(qc);
                    qc.value = _this.filterService.setValues(controlType, v.value);
                }
            }));
        }
    };
    /**
     * @param {?} fieldName
     * @return {?}
     */
    ListFilterComponent.prototype.getValue = /**
     * @param {?} fieldName
     * @return {?}
     */
    function (fieldName) {
        /** @type {?} */
        var queryList = this.handler.setFilterConditions(this.listFilterConditions);
        /** @type {?} */
        var item = queryList.find((/**
         * @param {?} n
         * @return {?}
         */
        function (n) { return n['FilterField'] === fieldName; }));
        if (item) {
            return item.value;
        }
        return undefined;
    };
    // 必填项初始化
    // 必填项初始化
    /**
     * @return {?}
     */
    ListFilterComponent.prototype.requiredListInit = 
    // 必填项初始化
    /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var requiredList = this.listFilterConditions.filter((/**
         * @param {?} listitem
         * @return {?}
         */
        function (listitem) {
            return listitem.control.required;
        }));
        if (requiredList && requiredList.length) {
            this.requiredListFilter = requiredList;
            this.canSubmit = this.canSubmitFilter(this.requiredListFilter);
        }
        else {
            this.requiredListFilter = [];
            this.canSubmit = true;
        }
    };
    /**
     * @param {?} fields
     * @return {?}
     */
    ListFilterComponent.prototype.clearFilterValue = /**
     * @param {?} fields
     * @return {?}
     */
    function (fields) {
        if (fields && fields.length) {
            if (typeof fields === 'string') {
                fields = fields.split(',');
            }
            fields = fields.map((/**
             * @param {?} n
             * @return {?}
             */
            function (n) {
                return n.toLowerCase();
            }));
            this.listFilterConditions.forEach((/**
             * @param {?} n
             * @return {?}
             */
            function (n) {
                if (fields.indexOf(n.fieldCode.toLowerCase()) > -1) {
                    n.value.clearValue();
                }
            }));
        }
    };
    /**
     * @param {?} values
     * @return {?}
     */
    ListFilterComponent.prototype.updateValues = /**
     * @param {?} values
     * @return {?}
     */
    function (values) {
        var _this = this;
        if (values && Object.keys(values)) {
            /** @type {?} */
            var fields_1 = Object.keys(values);
            fields_1.forEach((/**
             * @param {?} f
             * @return {?}
             */
            function (f) {
                _this.listFilterConditions.forEach((/**
                 * @param {?} n
                 * @return {?}
                 */
                function (n) {
                    if (fields_1.indexOf(n.fieldCode.toLowerCase()) > -1) {
                        n.value['value'] = values[f];
                    }
                }));
            }));
        }
    };
    ListFilterComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-list-filter',
                    template: "<app-filter-common></app-filter-common>\r\n<div class=\"f-list-filter position-relative\"\r\n    [ngClass]=\"{'list-filter-padding': showMoreIcon,'list-filter-autoWidth': autoWidth,'list-filter-paddingnone': filterPaddingNone}\">\r\n    <ng-container *ngIf=\"filterType === 'list';else filterLayout\">\r\n        <div class=\"filter-inputs-main filter-inputs-main-list f-form-layout farris-form farris-form-controls-inline\">\r\n            <ng-container *ngFor=\"let formItem of listFilterConditions;let last = last;\">\r\n                <div class=\"col-12\"\r\n                    [ngClass]=\"{'filter-list-item': showFilterList && showFilterList.length && showFilterList[showFilterList.length-1]['id'] == formItem.id}\"\r\n                    *ngIf=\"!formItem.control.isExtend\">\r\n                    <div class=\"filter-input-list farris-group-wrap\"\r\n                        [ngClass]=\"{'filter-input-list-autolabel': autoLabel,'filter-input-list-checkbox': getControlType(formItem) === 'checkboxgroup'}\"\r\n                        [id]=\"'filter-'+formItem.id\">\r\n                        <ng-container [ngTemplateOutlet]=\"filterInputTemplate\"\r\n                            [ngTemplateOutletContext]=\"{ item: formItem }\"></ng-container>\r\n                        <div class=\"filter-search-btn\"\r\n                            *ngIf=\"!liveSearch && showFilterList && showFilterList.length && showFilterList[showFilterList.length-1]['id'] == formItem.id\">\r\n                            <button class=\"btn btn-primary\" [ngClass]=\"{'disabled': disabled || !canSubmit}\"\r\n                                (click)=\"filterClick()\">{{ 'listFilter.filter' | locale }}</button>\r\n                            <button class=\"btn btn-secondary filter-search-btn-reset\" *ngIf=\"!showMoreIcon\"\r\n                                (click)=\"resetSearch()\">\r\n                                <span class=\"f-icon f-icon-remove\"></span>\r\n                            </button>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </ng-container>\r\n        </div>\r\n    </ng-container>\r\n    <ng-template #filterLayout>\r\n        <ng-container *ngIf=\"autoWidth;else gridLayout\">\r\n            <div class=\"filter-inputs-main-basis-wrapper\" [ngClass]=\"{'list-filter-wrapper-show-btn': !liveSearch,'list-filter-wrapper-show-btn-remove': !liveSearch && !showMoreIcon}\">\r\n                <div class=\"filter-inputs-main-basis-wrapper-inner\">\r\n                    <div class=\"filter-inputs-main filter-inputs-main-basis farris-form d-flex\"\r\n                        [ngClass]=\"{'justify-content-end': !alLeft,'farris-form-controls-inline':isControlInline}\"\r\n                        #filterMainBasis>\r\n                        <ng-container *ngFor=\"let formItem of listFilterConditions\">\r\n                            <div *ngIf=\"!formItem.control.isExtend\" class=\"filter-input-list farris-group-wrap\"\r\n                                [ngClass]=\"{'filter-input-list-autolabel': autoLabel,'filter-input-list-checkbox': getControlType(formItem) === 'checkboxgroup', 'filter-input-list-expand':formExpand,'filter-input-list-left': alLeft}\"\r\n                                [id]=\"'filter-'+formItem.id\">\r\n                                <ng-container [ngTemplateOutlet]=\"filterInputTemplate\"\r\n                                    [ngTemplateOutletContext]=\"{ item: formItem }\"></ng-container>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n                <div class=\"filter-search-btn\" [ngClass]=\"{'filter-search-btn-remove': !showMoreIcon}\"\r\n                    *ngIf=\"!liveSearch\">\r\n                    <button class=\"btn btn-primary\" [ngClass]=\"{'disabled': disabled || !canSubmit}\"\r\n                        (click)=\"filterClick()\">{{ 'listFilter.filter' | locale }}</button>\r\n                    <button class=\"btn btn-secondary filter-search-btn-reset\" *ngIf=\"!showMoreIcon\"\r\n                        (click)=\"resetSearch()\">\r\n                        <span class=\"f-icon f-icon-remove\"></span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </ng-container>\r\n        <ng-template #gridLayout>\r\n            <div class=\"filter-inputs-main f-form-layout farris-form\" [ngClass]=\"\r\n                {'list-filter-type-1': getShowLength() === 1,\r\n                'list-filter-type-2': getShowLength() === 2,\r\n                'list-filter-type-3': getShowLength() === 3,\r\n                'list-filter-type-4': getShowLength() === 4,\r\n                'list-filter-type-5': getShowLength() === 5,\r\n                'list-filter-type-6': getShowLength() >= 6,\r\n                'list-filter-custom-type': this.filterClass,\r\n                'list-filter-show-reset': !showMoreIcon,\r\n                'list-filter-padding-none': liveSearch,\r\n                'farris-form-controls-inline':isControlInline}\">\r\n                <ng-container *ngFor=\"let formItem of listFilterConditions\">\r\n                    <div [ngClass]=\"getStyle(formItem)\" *ngIf=\"!formItem.control.isExtend\">\r\n                        <div class=\"filter-input-list farris-group-wrap\"\r\n                            [ngClass]=\"{'filter-input-list-autolabel': autoLabel,'filter-input-list-checkbox': getControlType(formItem) === 'checkboxgroup'}\"\r\n                            [id]=\"'filter-'+formItem.id\">\r\n                            <ng-container [ngTemplateOutlet]=\"filterInputTemplate\"\r\n                                [ngTemplateOutletContext]=\"{ item: formItem }\"></ng-container>\r\n                        </div>\r\n                    </div>\r\n                </ng-container>\r\n                <div class=\"filter-search-btn\" [ngClass]=\"{\r\n                    'filter-search-btn-type-1': getShowLength() === 1,\r\n                    'filter-search-btn-type-2': getShowLength() === 2,\r\n                    'filter-search-btn-type-3': getShowLength() === 3,\r\n                    'filter-search-btn-type-4': getShowLength() === 4,\r\n                    'filter-search-btn-type-5': getShowLength() === 5,\r\n                    'filter-search-custom-type': this.filterClass,\r\n                    'filter-search-btn-type-6': getShowLength() >= 6}\" *ngIf=\"!liveSearch\">\r\n                    <button class=\"btn btn-primary\" [ngClass]=\"{'disabled': disabled || !canSubmit}\"\r\n                        (click)=\"filterClick()\">{{ 'listFilter.filter' | locale }}</button>\r\n                    <button class=\"btn btn-secondary filter-search-btn-reset\" *ngIf=\"!showMoreIcon\"\r\n                        (click)=\"resetSearch()\">\r\n                        <span class=\"f-icon f-icon-remove\"></span>\r\n                    </button>\r\n                </div>\r\n            </div>\r\n        </ng-template>\r\n    </ng-template>\r\n    <div class=\"filter-expand position-absolute\" [class.active]=\"showFilter\" (click)=\"showFilter = !showFilter\"\r\n        *ngIf=\"showMoreIcon\">\r\n        <span class=\"f-icon f-icon-filtrate\"></span>\r\n        <span class=\"filter-expand-tag\" *ngIf=\"showExpandTag\"></span>\r\n    </div>\r\n    <div class=\"filter-inputs-extend position-absolute\" [hidden]=\"!showFilter\" *ngIf=\"showMoreIcon\">\r\n        <div class=\"filter-typelist-arrow\"></div>\r\n        <div class=\"farris-form farris-form-auto\" [ngClass]=\"{'farris-form-controls-inline':isControlInline}\">\r\n            <fieldset class=\"f-section-formgroup\">\r\n                <div class=\"f-section-formgroup-inputs\">\r\n                    <div class=\"col-12\">\r\n                        <ng-container *ngFor=\"let formItem of listFilterConditions\">\r\n                            <div class=\"filter-input-list farris-group-wrap\" *ngIf=\"formItem.control.isExtend\">\r\n                                <ng-container [ngTemplateOutlet]=\"filterInputTemplate\"\r\n                                    [ngTemplateOutletContext]=\"{ item: formItem }\"></ng-container>\r\n                            </div>\r\n                        </ng-container>\r\n                    </div>\r\n                </div>\r\n            </fieldset>\r\n            <div class=\"filter-form-btns text-right\">\r\n                <button class=\"btn btn-link filter-form-btn-reset\" (click)=\"resetSearch()\">{{ 'listFilter.reset' | locale }}</button>\r\n                <button class=\"btn btn-primary\" [ngClass]=\"{'disabled': disabled || !canSubmit}\" (click)=\"listSearch()\">{{ 'listFilter.confirm' | locale }}</button>\r\n                <button class=\"btn btn-secondary\" (click)=\"listSearchCancel()\">{{ 'listFilter.cancel' | locale }}</button>\r\n            </div>\r\n        </div>\r\n    </div>\r\n</div>\r\n\r\n<ng-template #filterInputTemplate let-item=\"item\">\r\n    <ng-container [ngSwitch]=\"item | controlType\">\r\n        <div class=\"filter-input-item filter-type-input\" *ngSwitchCase=\"'input'\">\r\n            <app-filter-input [item]=\"item\" [autoLabel]=\"autoLabel\" [disabled]=\"disabled\"\r\n                (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\"></app-filter-input>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-search\" *ngSwitchCase=\"'search'\">\r\n            <app-filter-search [item]=\"item\" [autoLabel]=\"autoLabel\" [disabled]=\"disabled\"\r\n                (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\"></app-filter-search>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-date\" *ngSwitchCase=\"'date'\">\r\n            <app-filter-date [item]=\"item\" [autoLabel]=\"autoLabel\" [disabled]=\"disabled\"\r\n                (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\"></app-filter-date>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-year\" *ngSwitchCase=\"'year'\">\r\n            <app-filter-date [item]=\"item\" [autoLabel]=\"autoLabel\" [disabled]=\"disabled\" [showType]=\"'3'\"\r\n                (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\"></app-filter-date>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-month\" *ngSwitchCase=\"'month'\">\r\n            <app-filter-date [item]=\"item\" [autoLabel]=\"autoLabel\" [disabled]=\"disabled\" [showType]=\"'2'\"\r\n                (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\"></app-filter-date>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-date\" *ngSwitchCase=\"'daterange'\">\r\n            <app-filter-daterange [item]=\"item\" [autoLabel]=\"autoLabel\" [disabled]=\"disabled\"\r\n                (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\"></app-filter-daterange>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-date\" *ngSwitchCase=\"'daterangetime'\">\r\n            <app-filter-daterange [item]=\"item\" [autoLabel]=\"autoLabel\" [disabled]=\"disabled\" [showTime]=\"true\"\r\n                (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\"></app-filter-daterange>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-monthrange\" *ngSwitchCase=\"'monthrange'\">\r\n            <app-filter-daterange [item]=\"item\" [autoLabel]=\"autoLabel\" [disabled]=\"disabled\" [showType]=\"'2'\"\r\n                (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\"></app-filter-daterange>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-yearrange\" *ngSwitchCase=\"'yearrange'\">\r\n            <app-filter-daterange [item]=\"item\" [autoLabel]=\"autoLabel\" [disabled]=\"disabled\" [showType]=\"'3'\"\r\n                (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\"></app-filter-daterange>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-dropdown\" *ngSwitchCase=\"'dropdown'\">\r\n            <app-filter-dropdown [item]=\"item\" [autoLabel]=\"autoLabel\" [disabled]=\"disabled\"\r\n                (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\"></app-filter-dropdown>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-number\" *ngSwitchCase=\"'number'\">\r\n            <app-filter-number [item]=\"item\" [autoLabel]=\"autoLabel\" [disabled]=\"disabled\"\r\n                (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\"></app-filter-number>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-help\" *ngSwitchCase=\"'help'\">\r\n            <app-filter-help [item]=\"item\" [autoLabel]=\"autoLabel\" [disabled]=\"disabled\" [hostRef]=\"this\"\r\n                (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\"></app-filter-help>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-checkboxgroup\" *ngSwitchCase=\"'checkboxgroup'\">\r\n            <app-filter-checkbox [item]=\"item\" [autoLabel]=\"autoLabel\" [disabled]=\"disabled\"\r\n                (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\"\r\n                style=\"white-space: nowrap;\"></app-filter-checkbox>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-radio\" *ngSwitchCase=\"'radio'\">\r\n            <app-filter-radio [item]=\"item\" [autoLabel]=\"autoLabel\" [disabled]=\"disabled\"\r\n                (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\"\r\n                style=\"white-space: nowrap;\"></app-filter-radio>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-input-group\" *ngSwitchCase=\"'input-group'\">\r\n            <app-filter-inputgroup [item]=\"item\" [autoLabel]=\"autoLabel\" [disabled]=\"disabled\"\r\n                (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\"></app-filter-inputgroup>\r\n        </div>\r\n        <div class=\"filter-input-item filter-type-default\" *ngSwitchDefault>\r\n            <app-filter-input [item]=\"item\" [autoLabel]=\"autoLabel\" [disabled]=\"disabled\"\r\n                (searchHandle)=\"onSearch($event,item)\" class=\"form-group farris-form-group\"></app-filter-input>\r\n        </div>\r\n    </ng-container>\r\n</ng-template>",
                    changeDetection: ChangeDetectionStrategy.OnPush,
                    styles: ["::-webkit-scrollbar{width:6px;height:6px;background-color:#eee}::-webkit-scrollbar-track{border-radius:0}::-webkit-scrollbar-thumb{background-color:rgba(0,0,0,.15);-webkit-transition:.2s;transition:.2s;border-radius:6px}::-webkit-scrollbar-thumb:hover{background-color:rgba(0,0,0,.45)}.filter-search-btn-col{flex-basis:0;-webkit-box-flex:1;flex-grow:1;max-width:100%}.filter-search-btn-absoulte{position:absolute;right:0;top:0}.f-list-filter .filter-inputs-main-basis-wrapper{width:100%;overflow:hidden}.f-list-filter .filter-inputs-main-basis-wrapper.list-filter-wrapper-show-btn{position:relative;padding-right:84px}.f-list-filter .filter-inputs-main-basis-wrapper.list-filter-wrapper-show-btn.list-filter-wrapper-show-btn-remove{padding-right:124px}.f-list-filter .filter-inputs-main-basis-wrapper.list-filter-wrapper-show-btn .filter-search-btn{position:absolute;right:0;top:0}.f-list-filter .filter-inputs-main-basis-wrapper.list-filter-wrapper-show-btn .filter-search-btn .btn{margin-left:6px}.f-list-filter .filter-inputs-main-basis-wrapper.list-filter-wrapper-show-btn .filter-search-btn .btn:first-child{margin-left:0}.f-list-filter .filter-inputs-main-basis-wrapper .filter-inputs-main-basis-wrapper-inner{width:100%;overflow:auto}.f-list-filter .filter-inputs-main-basis-wrapper .filter-inputs-main-basis-wrapper-inner .filter-inputs-main-basis.justify-content-end{margin-left:auto}.f-list-filter.list-filter-padding{padding-right:45px}.f-list-filter.list-filter-autoWidth{padding-bottom:8px}.f-list-filter.list-filter-autoWidth.list-filter-paddingnone{padding-bottom:0}@media (min-width:768px){.f-list-filter .list-filter-type-1{position:static;padding-right:0}.f-list-filter .list-filter-type-2,.f-list-filter .list-filter-type-3{position:relative;padding-right:70px}}@media (max-width:767px){.f-list-filter .list-filter-type-1{position:relative;padding-right:70px}.f-list-filter .list-filter-type-1.list-filter-show-reset{padding-right:110px}.f-list-filter .list-filter-type-2,.f-list-filter .list-filter-type-3{position:relative;padding-right:70px}.f-list-filter .list-filter-type-2.list-filter-show-reset,.f-list-filter .list-filter-type-3.list-filter-show-reset{position:relative;padding-right:110px}}@media (min-width:1200px){.f-list-filter .list-filter-type-2,.f-list-filter .list-filter-type-3{position:static;padding-right:0}.f-list-filter .list-filter-type-4,.f-list-filter .list-filter-type-5{position:relative;padding-right:70px}}@media (max-width:767px){.f-list-filter .list-filter-type-4,.f-list-filter .list-filter-type-5{position:relative;padding-right:70px}.f-list-filter .list-filter-type-4.list-filter-show-reset,.f-list-filter .list-filter-type-5.list-filter-show-reset{position:relative;padding-right:110px}}@media (min-width:768px){.f-list-filter .list-filter-type-2.list-filter-show-reset,.f-list-filter .list-filter-type-3.list-filter-show-reset{position:relative;padding-right:110px}.f-list-filter .list-filter-type-4,.f-list-filter .list-filter-type-5{position:relative;padding-right:70px}.f-list-filter .list-filter-type-4.list-filter-show-reset,.f-list-filter .list-filter-type-5.list-filter-show-reset{position:relative;padding-right:110px}}@media (min-width:1690px){.f-list-filter .list-filter-type-4,.f-list-filter .list-filter-type-5{position:static;padding-right:0}}@media (min-width:1200px){.f-list-filter .list-filter-type-4.list-filter-show-reset,.f-list-filter .list-filter-type-5.list-filter-show-reset{position:relative;padding-right:110px}}.f-list-filter .list-filter-custom-type,.f-list-filter .list-filter-type-6{position:relative;padding-right:70px}.f-list-filter .list-filter-custom-type.list-filter-show-reset,.f-list-filter .list-filter-type-6.list-filter-show-reset{padding-right:110px}.f-list-filter .list-filter-padding-none{padding-right:0}.f-list-filter .filter-inputs-main{width:100%;overflow:hidden}.f-list-filter .filter-inputs-main .col-12{padding-left:0}.f-list-filter .filter-inputs-main.filter-inputs-main-padding{padding-right:70px;position:relative}.f-list-filter .filter-inputs-main .filter-input-list.filter-input-list-autolabel{padding-right:14px}.f-list-filter .filter-inputs-main .filter-input-list.filter-input-list-autolabel:last-child{padding-right:0}.f-list-filter .filter-inputs-main .filter-input-list.filter-input-list-checkbox{max-width:none;-webkit-box-flex:inherit;flex:inherit}@media (max-width:767px){.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-1{position:absolute;right:0;top:0}}@media (min-width:768px){.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-1{flex-basis:0;-webkit-box-flex:1;flex-grow:1;max-width:100%;position:static}.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-2,.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-3{position:absolute;right:0;top:0}}@media (max-width:767px){.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-2,.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-3{position:absolute;right:0;top:0}}@media (min-width:1200px){.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-2,.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-3{flex-basis:0;-webkit-box-flex:1;flex-grow:1;max-width:100%;position:static}.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-4,.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-5{position:absolute;right:0;top:0}}@media (max-width:767px){.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-4,.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-5{position:absolute;right:0;top:0}}@media (min-width:768px){.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-4,.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-5{position:absolute;right:0;top:0}}@media (min-width:1690px){.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-4,.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-5{flex-basis:0;-webkit-box-flex:1;flex-grow:1;max-width:100%;position:static}}.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-btn-type-6,.f-list-filter .filter-inputs-main .filter-search-btn.filter-search-custom-type{position:absolute;right:0;top:0}.f-list-filter .filter-inputs-main .filter-search-btn .btn{margin-left:6px}.f-list-filter .filter-inputs-main .filter-search-btn .btn:first-child{margin-left:0}.f-list-filter .filter-inputs-main.filter-inputs-main-basis .filter-input-list{min-width:200px}.f-list-filter .filter-inputs-main.filter-inputs-main-basis .filter-input-list .filter-input-item .form-group{margin-bottom:0}.f-list-filter .filter-inputs-main.filter-inputs-main-basis .filter-input-list.filter-input-list-left{-webkit-box-flex:1;flex:1 1 auto}.f-list-filter .filter-inputs-main.filter-inputs-main-basis .filter-input-list.filter-input-list-expand{max-width:none}.f-list-filter .filter-inputs-main.filter-inputs-main-basis.justify-content-end .filter-input-list:not(.filter-input-list-checkbox){-webkit-box-flex:1;flex:auto}.f-list-filter .filter-expand{right:0;top:0;width:24px;margin-left:21px;height:24px;line-height:24px;cursor:pointer}.f-list-filter .filter-expand.active{border-radius:2px}.f-list-filter .filter-expand .f-icon{display:block;line-height:24px;margin:0 auto;font-size:18px}.f-list-filter .filter-expand .filter-expand-tag{position:absolute;right:0;top:0;display:block;width:6px;height:6px;border-radius:50%}.f-list-filter .filter-inputs-extend{width:429px;right:0;top:34px;background-color:#fff;box-shadow:0 2px 3px 0 rgba(0,0,0,.15);z-index:900;padding:20px 0}.f-list-filter .filter-inputs-extend .filter-typelist-arrow{display:block;position:absolute;right:7px;top:-4px;width:8.48528137px;height:8.48528137px;background:0 0;border-style:solid;border-width:4.24264069px;box-shadow:-2px -2px 5px rgba(0,0,0,.08);-webkit-transform:translateX(-50%) rotate(45deg);transform:translateX(-50%) rotate(45deg);border-color:#fff transparent transparent #fff}.f-list-filter .filter-inputs-extend .filter-form-btns{margin-top:6px;padding:0 14px}.f-list-filter .filter-inputs-extend .filter-form-btns .btn{margin-left:6px}.f-list-filter .filter-inputs-extend .filter-form-btns .filter-form-btn-reset{position:relative;padding-right:10px;margin-right:4px}.f-list-filter .filter-inputs-extend .filter-form-btns .filter-form-btn-reset::after{content:'';position:absolute;right:0;top:50%;width:1px;height:16px;margin-top:-8px;background:#d9d9d9}.f-list-filter .filter-search-btn-reset{padding-left:4px;padding-right:4px;color:rgba(0,0,0,.65)}.f-list-filter .filter-input-list .form-group{display:block}.f-list-filter .farris-form-controls-inline .filter-input-list .form-group{display:-webkit-box;display:flex}.f-list-filter .filter-inputs-main-list .filter-input-item .farris-form-group{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;-webkit-box-orient:horizontal;-webkit-box-direction:normal;flex-direction:row}.f-list-filter .filter-inputs-main-list .filter-list-item{padding-right:100px}.f-list-filter .filter-inputs-main-list .filter-list-item .filter-input-list{position:relative}.f-list-filter .filter-inputs-main-list .filter-list-item .filter-search-btn{display:-webkit-box;display:flex;-webkit-box-align:center;align-items:center;position:absolute;top:50%;left:calc(100% + 20px);-webkit-transform:translateY(-50%);transform:translateY(-50%)}.filter-expand-simulate{opacity:0;display:inline-block;width:24px;height:24px;padding-left:21px}.filter-expand-simulate .f-icon{font-size:24px}"]
                }] }
    ];
    /** @nocollapse */
    ListFilterComponent.ctorParameters = function () { return [
        { type: ListFilterService },
        { type: ChangeDetectorRef },
        { type: QuerySolutionService },
        { type: ConvertorService },
        { type: Renderer2 },
        { type: Injector, decorators: [{ type: Optional }] }
    ]; };
    ListFilterComponent.propDecorators = {
        filterMainBasisRef: [{ type: ViewChild, args: ['filterMainBasis',] }],
        alLeft: [{ type: Input }],
        autoWidth: [{ type: Input }],
        liveSearch: [{ type: Input }],
        autoLabel: [{ type: Input }],
        disabled: [{ type: Input }],
        filterClass: [{ type: Input }],
        filterPaddingNone: [{ type: Input }],
        filterType: [{ type: Input }],
        defaultValue: [{ type: Input }],
        query: [{ type: Output }],
        searchChange: [{ type: Output }],
        filterList: [{ type: Input }]
    };
    return ListFilterComponent;
}());
export { ListFilterComponent };
if (false) {
    /** @type {?} */
    ListFilterComponent.prototype.filterMainBasisRef;
    /** @type {?} */
    ListFilterComponent.prototype.alLeft;
    /** @type {?} */
    ListFilterComponent.prototype.autoWidth;
    /** @type {?} */
    ListFilterComponent.prototype.liveSearch;
    /** @type {?} */
    ListFilterComponent.prototype.autoLabel;
    /** @type {?} */
    ListFilterComponent.prototype.disabled;
    /** @type {?} */
    ListFilterComponent.prototype.filterClass;
    /** @type {?} */
    ListFilterComponent.prototype.filterPaddingNone;
    /** @type {?} */
    ListFilterComponent.prototype.filterType;
    /** @type {?} */
    ListFilterComponent.prototype._defaultValue;
    /** @type {?} */
    ListFilterComponent.prototype.query;
    /** @type {?} */
    ListFilterComponent.prototype.searchChange;
    /** @type {?} */
    ListFilterComponent.prototype.filterDatas;
    /** @type {?} */
    ListFilterComponent.prototype.showExpandTag;
    /**
     * 搜索表单列表
     * @type {?}
     */
    ListFilterComponent.prototype._filterList;
    /**
     * 是否需要显示展开更多icon
     * @type {?}
     */
    ListFilterComponent.prototype.showMoreIcon;
    /** @type {?} */
    ListFilterComponent.prototype.showFilter;
    /** @type {?} */
    ListFilterComponent.prototype.formExpand;
    /**
     * 循环表单
     * @type {?}
     */
    ListFilterComponent.prototype.listFilterConditions;
    /**
     * 用来存储setvalue前数据
     * @type {?}
     */
    ListFilterComponent.prototype.stagListFilterConditions;
    /**
     * 记录默认收起的搜索表单列表
     * @type {?}
     */
    ListFilterComponent.prototype.extendFilterList;
    /**
     * 记录显示的搜索表单列表
     * @type {?}
     */
    ListFilterComponent.prototype.showFilterList;
    /**
     * 显示中表单的必填项
     * @type {?}
     */
    ListFilterComponent.prototype.requiredListFilter;
    /**
     * 表单是否允许提交
     * @type {?}
     */
    ListFilterComponent.prototype.canSubmit;
    /**
     * 扩展表单是否允许提交
     * @type {?}
     */
    ListFilterComponent.prototype.localeIds;
    /** @type {?} */
    ListFilterComponent.prototype.currentLocale;
    /** @type {?} */
    ListFilterComponent.prototype.isControlInline;
    /**
     * 组件服务接口
     * @type {?}
     */
    ListFilterComponent.prototype.listfilterHandler;
    /**
     * @type {?}
     * @private
     */
    ListFilterComponent.prototype.filterService;
    /**
     * @type {?}
     * @private
     */
    ListFilterComponent.prototype.cd;
    /**
     * @type {?}
     * @private
     */
    ListFilterComponent.prototype.handler;
    /**
     * @type {?}
     * @private
     */
    ListFilterComponent.prototype.convertorService;
    /**
     * @type {?}
     * @private
     */
    ListFilterComponent.prototype.render;
    /**
     * @type {?}
     * @private
     */
    ListFilterComponent.prototype.injector;
}
//# sourceMappingURL=data:application/json;base64,