/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { cloneDeep } from 'lodash-es';
import { FavoriteAction, LookupGridDisplayType } from '../lookup-displaytype';
import { of } from 'rxjs';
import { map, switchMap, tap } from 'rxjs/operators';
// 帮助默认个性化数据
/** @type {?} */
const DefaultUserConfig = {
    tabIndex: 'datalist',
    favorite: null,
    size: null
};
export class LookupHttpManager {
    /**
     * @param {?} ins
     */
    constructor(ins) {
        this.ins = ins;
        // 每次帮助打开后，更新此值，做为个性化数据的初始值；
        // 关闭窗口时，与此进行对比。如果一样，则不保存；
        this._originalPersonalConfig = DefaultUserConfig;
    }
    /**
     * @private
     * @return {?}
     */
    disablePagination() {
        return {
            pageIndex: 1,
            pageSize: 500
        };
    }
    /**
     * 构造查询参数
     * @param {?=} event
     * @param {?=} type
     * @return {?}
     */
    buildQueryParams(event, type = 'all') {
        /** @type {?} */
        const params = {};
        if (this.ins.condition) {
            params.condition = cloneDeep(this.ins.condition);
        }
        /** @type {?} */
        const searchParam = { category: type };
        if (this.ins.isDoublleList() && this.ins.navigationFilter && type !== 'all') {
            if (this.ins.navigationFilter.idValue && type !== 'textchange') {
                params.relationFilter = [...this.ins.navigationFilter.idValue];
            }
        }
        if (event) {
            if (type === 'fav' || type === 'selected') {
                event.pageInfo = this.disablePagination();
            }
            if (event.pageInfo) {
                params.pageIndex = event.pageInfo.pageIndex;
                params.pageSize = event.pageInfo.pageSize;
            }
            if (event.search) {
                /** @type {?} */
                let sfield = event.search.field;
                if (sfield && sfield === '*') {
                    sfield = '*';
                }
                searchParam.searchField = sfield;
                searchParam.searchValue = event.search.value;
            }
            if (event.sortName) {
                searchParam.sortName = event.sortName;
            }
            if (event.sortOrder) {
                searchParam.sortOrder = event.sortOrder;
            }
        }
        if (type === 'fav' && event.favoriteIds) {
            searchParam.favoriteIds = event.favoriteIds;
        }
        if (this.ins.isTree() || this.ins.displayType === LookupGridDisplayType.NavTreeList) {
            params.enableFullTree = this.ins.enableFullTree;
        }
        // 查询时不构造完整树
        if (type === 'textchange') {
            params.enableFullTree = false;
        }
        if (type === 'selected') {
            searchParam.category = 'fav';
            params.enableFullTree = false;
            searchParam.favoriteIds = event.favoriteIds;
        }
        params.searchValue = JSON.stringify(searchParam);
        params.loadTreeDataType = this.ins.loadTreeDataType;
        params.customData = this.ins.customData;
        if (this.ins.helpId) {
            params.helpId = this.ins.helpId;
        }
        if (event.selectedInfo) {
            params.selectedInfo = event.selectedInfo;
        }
        return params;
    }
    /**
     * @param {?=} event
     * @param {?=} type
     * @return {?}
     */
    getData(event, type = 'all') {
        /** @type {?} */
        const uri = this.ins.gridOptions.uri;
        /** @type {?} */
        const params = this.buildQueryParams(event, type);
        if (uri || this.ins.beUri) {
            if (this.ins.beUri && this.ins.columns && this.ins.columns.length) {
                /** @type {?} */
                const allSearchFields = this.ins.columns.map((/**
                 * @param {?} col
                 * @return {?}
                 */
                col => col.searchField)).filter((/**
                 * @param {?} f
                 * @return {?}
                 */
                f => f));
                if (!params.condition) {
                    params.condition = {};
                }
                if (!this.ins.isTree() && this.ins.pagination) {
                    const { pageSize = this.ins.pageSize || 20, pageIndex } = Object.assign({}, params);
                    params.condition.pagination = { pageSize, pageIndex };
                }
                else {
                    params.condition.pagination = { isUsePagination: false };
                }
                /** @type {?} */
                const searchParam = JSON.parse(params.searchValue);
                if (searchParam.searchValue) {
                    params.condition = this.ins.lookupUtils.mergeCondition(params.condition, allSearchFields, {
                        field: searchParam.searchField,
                        value: searchParam.searchValue
                    });
                }
            }
            /** @type {?} */
            const _uri = this.ins.beUri || uri;
            if (this.ins.http) {
                this.ins.http.context = this.ins.context;
            }
            if (this.ins._searchResult) {
                return of(this.ins._searchResult);
            }
            if (type !== 'allChildren') {
                return this.ins.http.getData(_uri, params);
            }
            else {
                /** @type {?} */
                const params1 = {
                    searchValue: JSON.stringify({ category: type }),
                    parentsIds: event.parentsIds,
                    customData: params.customData,
                    helpId: params.helpId
                };
                return this.ins.http.getData(_uri, params1);
            }
        }
        else {
            return of(false);
        }
    }
    // getFavoriteData(params) {
    //     return this.getData(params, 'fav');
    // }
    /**
     * @param {?} selIds
     * @return {?}
     */
    getSelecedItems(selIds) {
        return this.getData({ favoriteIds: selIds }, 'selected');
    }
    /**
     * @return {?}
     */
    getPersonalConfig() {
        /** @type {?} */
        const defaultConf = cloneDeep(DefaultUserConfig);
        /** @type {?} */
        const key = this.ins.personalConfigService._newKey;
        /** @type {?} */
        let _conf = this.ins.personalConfigService.getPersonalData(key);
        if (!_conf || !Object.keys(_conf).length) {
            _conf = defaultConf;
        }
        /** @type {?} */
        const req = of(_conf);
        if (this.ins.favoriteDataFrom === 'locale' || this.ins.isTabChanged) {
            return req;
        }
        if (this.ins.http && this.ins.http['getUserSettings']) {
            return this.ins.http['getUserSettings'](key).pipe(map((/**
             * @param {?} ucs
             * @return {?}
             */
            (ucs) => {
                if (ucs) {
                    return ucs.textValue ? JSON.parse(ucs.textValue) : defaultConf;
                }
                return defaultConf;
            })));
        }
        else {
            return req;
        }
    }
    /**
     * @param {?=} event
     * @param {?=} type
     * @return {?}
     */
    lookupRequest(event, type = 'all') {
        if (!this.ins.usePersionalConf) {
            return this.getData(event, type);
        }
        /** @type {?} */
        const req = this.getPersonalConfig();
        return req.pipe(tap((/**
         * @param {?} c
         * @return {?}
         */
        (c) => {
            this.ins.personalConf = c;
            this.ins.personalConfigService.savePersonalConfig(c);
            if (!this.ins.isTabChanged) {
                this._originalPersonalConfig = cloneDeep(c);
            }
        })), switchMap((/**
         * @param {?} c
         * @return {?}
         */
        (c) => {
            const { tabIndex, favorite, size } = c;
            if (!this.ins.isTabChanged) {
                this.ins.activeTab = tabIndex || 'datalist';
            }
            if (size) {
                this.ins.dialogWidth = size.width;
                this.ins.dialogHeight = size.height;
                this.ins.dialog.reSize({ width: size.width, height: size.height });
            }
            if (this.ins.activeTab === 'datalist') {
                return this.getData(event, type);
            }
            else if (this.ins.activeTab === 'favorite') {
                /** @type {?} */
                const favIds = favorite ? favorite[this.ins.localService.localeId] : [];
                if (!favIds || !favIds.length) {
                    return this.getData(event, type).pipe(map((/**
                     * @param {?} r
                     * @return {?}
                     */
                    r => {
                        if (r) {
                            r.items = [];
                        }
                        return r;
                    })));
                }
                /** @type {?} */
                const _fids = favIds.filter((/**
                 * @param {?} n
                 * @return {?}
                 */
                n => n));
                event.favoriteIds = favIds;
                return this.getData(event, 'fav');
            }
            else if (this.ins.activeTab === 'selected') {
                /** @type {?} */
                const selIds = this.ins.displayValue ? this.ins.displayValue.split(',') : [];
                /** @type {?} */
                const _sids = selIds.filter((/**
                 * @param {?} n
                 * @return {?}
                 */
                n => n));
                return this.getSelecedItems(_sids);
            }
        })));
    }
    // 保存个性化数据
    /**
     * @param {?} action
     * @return {?}
     */
    submitFavoriteData(action) {
        // 如果数据与默认的数据一至则不保存。
        if (JSON.stringify(this.ins.personalConf) === JSON.stringify(this._originalPersonalConfig)) {
            return;
        }
        /** @type {?} */
        let msg = '';
        if (action === FavoriteAction.add) {
            msg = this.ins.addFavoriteSuccess;
        }
        else if (action === FavoriteAction.delete) {
            msg = this.ins.delFavoriteSuccess;
        }
        this.ins.personalConfigService.savePersonalConfig(this.ins.personalConf || {});
        if (this.ins.favoriteDataFrom !== 'locale') {
            this._originalPersonalConfig = cloneDeep(this.ins.personalConf);
            /** @type {?} */
            const configData = {
                configkey1: this.ins.personalConfigService.personalConfigKey,
                configkey2: '',
                configkey3: '',
                textvalue: JSON.stringify(this.ins.personalConf)
            };
            if (this.ins.http && this.ins.http['saveUserSettings']) {
                this.ins.savingFaoriteData = true;
                this.ins.showLoading();
                return this.ins.http['saveUserSettings'](configData).subscribe((/**
                 * @param {?} r
                 * @return {?}
                 */
                (r) => {
                    this.ins.savingFaoriteData = false;
                    this.ins.closeLoading();
                    if (msg) {
                        this.ins.notifyService.success(msg);
                    }
                }));
            }
        }
        else {
            if (msg) {
                this.ins.notifyService.success(msg);
            }
        }
    }
}
if (false) {
    /**
     * @type {?}
     * @private
     */
    LookupHttpManager.prototype._originalPersonalConfig;
    /**
     * @type {?}
     * @private
     */
    LookupHttpManager.prototype.ins;
}
//# sourceMappingURL=data:application/json;base64,