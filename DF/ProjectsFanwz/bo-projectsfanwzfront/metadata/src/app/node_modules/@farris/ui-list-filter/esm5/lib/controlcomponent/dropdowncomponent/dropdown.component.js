/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { Component, Input, HostBinding, EventEmitter, Output } from '@angular/core';
import { ControlType } from '../../entity/controltype';
import { EnumType } from '../../entity/controltype/dropdownlist/enumtype';
import { EnumIntegerValue } from '../../entity/controltype/dropdownlist/integerenumvalue';
import { EnumStringValue } from '../../entity/controltype/dropdownlist/stringenumvalue';
import { EnumBoolValue } from '../../entity/controltype/dropdownlist/boolenumvalue';
import { SolutionService } from '../../service/solution.service';
var DropDownComponent = /** @class */ (function () {
    function DropDownComponent(solutionService) {
        this.solutionService = solutionService;
        this.searchHandle = new EventEmitter();
        this.dropDownListDataSource = new Array();
        /**
         * 判断是否是在扩展区域展示
         */
        this.extend = false;
        /**
         * 判断是否显示label
         */
        this.showlabel = true;
    }
    Object.defineProperty(DropDownComponent.prototype, "isExtend", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.extend && this.autoLabel;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DropDownComponent.prototype, "hidenLabel", {
        get: /**
         * @return {?}
         */
        function () {
            return !this.showlabel;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    DropDownComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        // this.getDataSource();
        // const initialValue = this.item.value as DropDownListValue;
        // initialValue.value && (this.selectedItemId = initialValue.value.getEnumValue());
        if (this.item) {
            /** @type {?} */
            var type = Object.prototype.toString.call(this.item.placeHolder);
            if (type == '[object Undefined]') {
                if (this.item.control && this.item.control.hasOwnProperty('placeholder')) {
                    this.placeholder = this.item.control.placeholder;
                }
            }
            else {
                this.placeholder = this.item.placeHolder;
            }
        }
        this.getDataSource();
        /** @type {?} */
        var initialValue = (/** @type {?} */ (this.item.value));
        initialValue.value && (this.selectedItemId = initialValue.value);
        if (this.item && this.item.control && this.item.control.hasOwnProperty('isExtend')) {
            this.extend = this.item.control.isExtend;
            if (!this.extend) {
                this.showlabel = this.item.control.showLabel;
            }
        }
        this.solutionService.addFilterEditorInstance(this.item.fieldCode, this);
        ((/** @type {?} */ (this.item.value))).clear$.subscribe((/**
         * @return {?}
         */
        function () {
            _this.selectedItemId = '';
        }));
        // this.testId = this.solutionService.getGuid();
    };
    /**
     * @return {?}
     */
    DropDownComponent.prototype.ngOnChanges = /**
     * @return {?}
     */
    function () {
        this.getDataSource();
        //console.log(this.dropDownListDataSource);
    };
    /**
     * @return {?}
     */
    DropDownComponent.prototype.getDataSource = /**
     * @return {?}
     */
    function () {
        var _this = this;
        if (this.item && this.item.value
            && this.item.control && this.item.control.getControlType() == ControlType.DropDown) {
            /** @type {?} */
            var dropDownList = ((/** @type {?} */ (this.item.control)));
            if (dropDownList.valueType == EnumType.BoolType) {
                this.dropDownListDataSource = Array();
                if (dropDownList.enumValues && dropDownList.enumValues.length > 0) {
                    dropDownList.enumValues.forEach((/**
                     * @param {?} element
                     * @return {?}
                     */
                    function (element) {
                        _this.dropDownListDataSource.push(Object.assign(new EnumBoolValue(), element));
                    }));
                }
            }
            else if (dropDownList.valueType == EnumType.IntType) {
                this.dropDownListDataSource = Array();
                if (dropDownList.enumValues && dropDownList.enumValues.length > 0) {
                    dropDownList.enumValues.forEach((/**
                     * @param {?} element
                     * @return {?}
                     */
                    function (element) {
                        _this.dropDownListDataSource.push(Object.assign(new EnumIntegerValue(), element));
                    }));
                }
            }
            else if (dropDownList.valueType == EnumType.StringType) {
                this.dropDownListDataSource = Array();
                if (dropDownList.enumValues && dropDownList.enumValues.length > 0) {
                    dropDownList.enumValues.forEach((/**
                     * @param {?} element
                     * @return {?}
                     */
                    function (element) {
                        _this.dropDownListDataSource.push(Object.assign(new EnumStringValue(), element));
                    }));
                }
            }
        }
    };
    // getConditionItemStyle(field: QueryCondition, controlType: any) {
    //     return this.solutionService.getConditionItemStyle(field,controlType);
    // }
    // getConditionItemStyle(field: QueryCondition, controlType: any) {
    //     return this.solutionService.getConditionItemStyle(field,controlType);
    // }
    /**
     * @param {?} field
     * @return {?}
     */
    DropDownComponent.prototype.getConditionItemTitle = 
    // getConditionItemStyle(field: QueryCondition, controlType: any) {
    //     return this.solutionService.getConditionItemStyle(field,controlType);
    // }
    /**
     * @param {?} field
     * @return {?}
     */
    function (field) {
        return this.solutionService.getConditionItemTitle(field);
    };
    /**
     * @param {?} event
     * @return {?}
     */
    DropDownComponent.prototype.onSearch = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (event) {
            ((/** @type {?} */ (this.item.value))).value = event.data.value;
        }
        else {
            ((/** @type {?} */ (this.item.value))).value = '';
        }
        if (this.disabled) {
            return;
        }
        this.searchHandle.emit();
    };
    /**
     * @param {?} event
     * @return {?}
     */
    DropDownComponent.prototype.onClear = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        ((/** @type {?} */ (this.item.value))).value = '';
        this.searchHandle.emit();
    };
    DropDownComponent.decorators = [
        { type: Component, args: [{
                    selector: 'app-filter-dropdown',
                    template: "<label class=\"col-form-label\" *ngIf=\"item && showlabel\" title=\"{{getConditionItemTitle(item)}}\">\r\n    <span class=\"farris-label-info text-danger\" *ngIf=\"item.control.required\">*</span>\r\n    <span class=\"farris-label-text\">{{item.fieldName}}</span>\r\n</label>\r\n<div class=\"farris-input-wrap\" *ngIf=\"item\">\r\n    <farris-combo-list\r\n        [idField]=\"'value'\"\r\n        [textField]=\"'name'\"\r\n        [data]=\"dropDownListDataSource\"\r\n        [(ngModel)]=\"selectedItemId\"\r\n        [readonly]=\"disabled\"\r\n        [editable]=\"false\"\r\n        (selectChange)=\"onSearch($event)\"\r\n        (clear)=\"onClear($event)\"\r\n        [placeholder]=\"placeholder\"\r\n    ></farris-combo-list>\r\n\r\n</div>\r\n\r\n<!-- (valueChange)=\"onSearch($event)\" -->"
                }] }
    ];
    /** @nocollapse */
    DropDownComponent.ctorParameters = function () { return [
        { type: SolutionService }
    ]; };
    DropDownComponent.propDecorators = {
        item: [{ type: Input }],
        autoLabel: [{ type: Input }],
        disabled: [{ type: Input }],
        searchHandle: [{ type: Output, args: ['searchHandle',] }],
        isExtend: [{ type: HostBinding, args: ['class.filter-item-wrap',] }],
        hidenLabel: [{ type: HostBinding, args: ['class.filter-item-hiddenlabel',] }]
    };
    return DropDownComponent;
}());
export { DropDownComponent };
if (false) {
    /**
     * QueryCondition类型
     * @type {?}
     */
    DropDownComponent.prototype.item;
    /** @type {?} */
    DropDownComponent.prototype.autoLabel;
    /** @type {?} */
    DropDownComponent.prototype.disabled;
    /** @type {?} */
    DropDownComponent.prototype.searchHandle;
    /** @type {?} */
    DropDownComponent.prototype.dropDownListDataSource;
    /**
     * 判断是否是在扩展区域展示
     * @type {?}
     */
    DropDownComponent.prototype.extend;
    /**
     * 判断是否显示label
     * @type {?}
     */
    DropDownComponent.prototype.showlabel;
    /** @type {?} */
    DropDownComponent.prototype.selectedItemId;
    /** @type {?} */
    DropDownComponent.prototype.placeholder;
    /**
     * @type {?}
     * @private
     */
    DropDownComponent.prototype.solutionService;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHJvcGRvd24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1saXN0LWZpbHRlci8iLCJzb3VyY2VzIjpbImxpYi9jb250cm9sY29tcG9uZW50L2Ryb3Bkb3duY29tcG9uZW50L2Ryb3Bkb3duLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7O0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQXFCLFdBQVcsRUFBRSxZQUFZLEVBQUUsTUFBTSxFQUFDLE1BQU0sZUFBZSxDQUFDO0FBRXRHLE9BQU8sRUFBRSxXQUFXLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUV2RCxPQUFPLEVBQUUsUUFBUSxFQUFFLE1BQU0sZ0RBQWdELENBQUM7QUFDMUUsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sd0RBQXdELENBQUM7QUFDMUYsT0FBTyxFQUFFLGVBQWUsRUFBRSxNQUFNLHVEQUF1RCxDQUFDO0FBQ3hGLE9BQU8sRUFBRSxhQUFhLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUNwRixPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sZ0NBQWdDLENBQUM7QUFHakU7SUFrQ0ksMkJBQW9CLGVBQStCO1FBQS9CLG9CQUFlLEdBQWYsZUFBZSxDQUFnQjtRQXJCM0IsaUJBQVksR0FBRyxJQUFJLFlBQVksRUFBRSxDQUFDO1FBRTFELDJCQUFzQixHQUFZLElBQUksS0FBSyxFQUFPLENBQUM7Ozs7UUFFbkQsV0FBTSxHQUFXLEtBQUssQ0FBQzs7OztRQUV2QixjQUFTLEdBQVcsSUFBSSxDQUFDO0lBZTRCLENBQUM7SUFUdEQsc0JBQ0ksdUNBQVE7Ozs7UUFEWjtZQUVJLE9BQU8sQ0FBQyxJQUFJLENBQUMsTUFBTSxJQUFJLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDMUMsQ0FBQzs7O09BQUE7SUFDRCxzQkFDSSx5Q0FBVTs7OztRQURkO1lBRUksT0FBTyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUM7UUFDM0IsQ0FBQzs7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QXVDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgT25Jbml0LCBPbkNoYW5nZXMsIEhvc3RCaW5kaW5nLCBFdmVudEVtaXR0ZXIsIE91dHB1dH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFF1ZXJ5Q29uZGl0aW9uIH0gZnJvbSAnLi4vLi4vZW50aXR5L3F1ZXJ5Y29uZGl0aW9uJztcclxuaW1wb3J0IHsgQ29udHJvbFR5cGUgfSBmcm9tICcuLi8uLi9lbnRpdHkvY29udHJvbHR5cGUnO1xyXG5pbXBvcnQgeyBEcm9wRG93bkNvbnRyb2wgfSBmcm9tICcuLi8uLi9lbnRpdHkvY29udHJvbHR5cGUvZHJvcGRvd25saXN0L2Ryb3Bkb3duY29udHJvbCc7XHJcbmltcG9ydCB7IEVudW1UeXBlIH0gZnJvbSAnLi4vLi4vZW50aXR5L2NvbnRyb2x0eXBlL2Ryb3Bkb3dubGlzdC9lbnVtdHlwZSc7XHJcbmltcG9ydCB7IEVudW1JbnRlZ2VyVmFsdWUgfSBmcm9tICcuLi8uLi9lbnRpdHkvY29udHJvbHR5cGUvZHJvcGRvd25saXN0L2ludGVnZXJlbnVtdmFsdWUnO1xyXG5pbXBvcnQgeyBFbnVtU3RyaW5nVmFsdWUgfSBmcm9tICcuLi8uLi9lbnRpdHkvY29udHJvbHR5cGUvZHJvcGRvd25saXN0L3N0cmluZ2VudW12YWx1ZSc7XHJcbmltcG9ydCB7IEVudW1Cb29sVmFsdWUgfSBmcm9tICcuLi8uLi9lbnRpdHkvY29udHJvbHR5cGUvZHJvcGRvd25saXN0L2Jvb2xlbnVtdmFsdWUnO1xyXG5pbXBvcnQgeyBTb2x1dGlvblNlcnZpY2UgfSBmcm9tICcuLi8uLi9zZXJ2aWNlL3NvbHV0aW9uLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBEcm9wRG93bkxpc3RWYWx1ZSB9IGZyb20gJy4uLy4uL2VudGl0eS9jb25kaXRpb252YWx1ZS9kcm9wZG93bmxpc3R2YWx1ZSc7XHJcblxyXG5AQ29tcG9uZW50KHtcclxuICAgIHNlbGVjdG9yOiAnYXBwLWZpbHRlci1kcm9wZG93bicsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vZHJvcGRvd24uY29tcG9uZW50Lmh0bWwnXHJcbn0pXHJcblxyXG5leHBvcnQgY2xhc3MgRHJvcERvd25Db21wb25lbnQgaW1wbGVtZW50cyBPbkluaXQsT25DaGFuZ2Vze1xyXG4gICBcclxuICAgIC8qKlxyXG4gICAgICogUXVlcnlDb25kaXRpb27nsbvlnotcclxuICAgICAqL1xyXG4gICAgQElucHV0KCkgaXRlbTphbnk7XHJcbiAgICBASW5wdXQoKSBhdXRvTGFiZWw6Ym9vbGVhbjtcclxuICAgIEBJbnB1dCgpIGRpc2FibGVkOmJvb2xlYW47XHJcbiAgICBAT3V0cHV0KCdzZWFyY2hIYW5kbGUnKSBzZWFyY2hIYW5kbGUgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcblxyXG4gICAgZHJvcERvd25MaXN0RGF0YVNvdXJjZTpBcnJheTxhbnk+PW5ldyBBcnJheTxhbnk+KCk7XHJcbiAgICAvKirliKTmlq3mmK/lkKbmmK/lnKjmianlsZXljLrln5/lsZXnpLogKi9cclxuICAgIGV4dGVuZDpib29sZWFuID0gZmFsc2U7XHJcbiAgICAvKirliKTmlq3mmK/lkKbmmL7npLpsYWJlbCAqL1xyXG4gICAgc2hvd2xhYmVsOmJvb2xlYW4gPSB0cnVlO1xyXG5cclxuICAgIHNlbGVjdGVkSXRlbUlkOiBhbnk7XHJcbiAgICBwbGFjZWhvbGRlcjogc3RyaW5nO1xyXG5cclxuXHJcbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmZpbHRlci1pdGVtLXdyYXAnKVxyXG4gICAgZ2V0IGlzRXh0ZW5kKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiAhdGhpcy5leHRlbmQgJiYgdGhpcy5hdXRvTGFiZWw7XHJcbiAgICB9XHJcbiAgICBASG9zdEJpbmRpbmcoJ2NsYXNzLmZpbHRlci1pdGVtLWhpZGRlbmxhYmVsJylcclxuICAgIGdldCBoaWRlbkxhYmVsKCk6IGJvb2xlYW4ge1xyXG4gICAgICAgIHJldHVybiAhdGhpcy5zaG93bGFiZWw7XHJcbiAgICB9XHJcblxyXG4gICAgY29uc3RydWN0b3IocHJpdmF0ZSBzb2x1dGlvblNlcnZpY2U6U29sdXRpb25TZXJ2aWNlKXt9XHJcblxyXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XHJcbiAgICAgICAgLy8gdGhpcy5nZXREYXRhU291cmNlKCk7XHJcbiAgICAgICAgLy8gY29uc3QgaW5pdGlhbFZhbHVlID0gdGhpcy5pdGVtLnZhbHVlIGFzIERyb3BEb3duTGlzdFZhbHVlO1xyXG4gICAgICAgIC8vIGluaXRpYWxWYWx1ZS52YWx1ZSAmJiAodGhpcy5zZWxlY3RlZEl0ZW1JZCA9IGluaXRpYWxWYWx1ZS52YWx1ZS5nZXRFbnVtVmFsdWUoKSk7XHJcbiAgICAgICAgaWYodGhpcy5pdGVtKXtcclxuICAgICAgICAgICAgY29uc3QgdHlwZSA9IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcuY2FsbCh0aGlzLml0ZW0ucGxhY2VIb2xkZXIpO1xyXG4gICAgICAgICAgICBpZih0eXBlID09ICdbb2JqZWN0IFVuZGVmaW5lZF0nKXtcclxuICAgICAgICAgICAgICAgIGlmKHRoaXMuaXRlbS5jb250cm9sICYmIHRoaXMuaXRlbS5jb250cm9sLmhhc093blByb3BlcnR5KCdwbGFjZWhvbGRlcicpKXtcclxuICAgICAgICAgICAgICAgICAgICB0aGlzLnBsYWNlaG9sZGVyID0gdGhpcy5pdGVtLmNvbnRyb2wucGxhY2Vob2xkZXI7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgZWxzZXtcclxuICAgICAgICAgICAgICAgIHRoaXMucGxhY2Vob2xkZXIgPSB0aGlzLml0ZW0ucGxhY2VIb2xkZXI7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcbiAgICAgICAgdGhpcy5nZXREYXRhU291cmNlKCk7XHJcbiAgICAgICAgY29uc3QgaW5pdGlhbFZhbHVlID0gdGhpcy5pdGVtLnZhbHVlIGFzIERyb3BEb3duTGlzdFZhbHVlO1xyXG4gICAgICAgIGluaXRpYWxWYWx1ZS52YWx1ZSAmJiAodGhpcy5zZWxlY3RlZEl0ZW1JZCA9IGluaXRpYWxWYWx1ZS52YWx1ZSk7XHJcbiAgICAgICAgaWYodGhpcy5pdGVtICYmIHRoaXMuaXRlbS5jb250cm9sICYmIHRoaXMuaXRlbS5jb250cm9sLmhhc093blByb3BlcnR5KCdpc0V4dGVuZCcpKXtcclxuICAgICAgICAgICAgdGhpcy5leHRlbmQgPSB0aGlzLml0ZW0uY29udHJvbC5pc0V4dGVuZDtcclxuICAgICAgICAgICAgaWYoIXRoaXMuZXh0ZW5kKXtcclxuICAgICAgICAgICAgICAgIHRoaXMuc2hvd2xhYmVsID0gdGhpcy5pdGVtLmNvbnRyb2wuc2hvd0xhYmVsO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuc29sdXRpb25TZXJ2aWNlLmFkZEZpbHRlckVkaXRvckluc3RhbmNlKHRoaXMuaXRlbS5maWVsZENvZGUsIHRoaXMpO1xyXG5cclxuXHJcbiAgICAgICAgKHRoaXMuaXRlbS52YWx1ZSBhcyBEcm9wRG93bkxpc3RWYWx1ZSkuY2xlYXIkLnN1YnNjcmliZSggKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdGVkSXRlbUlkID0gJyc7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgLy8gdGhpcy50ZXN0SWQgPSB0aGlzLnNvbHV0aW9uU2VydmljZS5nZXRHdWlkKCk7XHJcbiAgICB9XHJcblxyXG4gICAgbmdPbkNoYW5nZXMoKTogdm9pZCB7XHJcbiAgICAgICAgdGhpcy5nZXREYXRhU291cmNlKCk7XHJcbiAgICAgICAgLy9jb25zb2xlLmxvZyh0aGlzLmRyb3BEb3duTGlzdERhdGFTb3VyY2UpO1xyXG4gICAgfVxyXG5cclxuICAgIGdldERhdGFTb3VyY2UoKXtcclxuICAgICAgICBpZih0aGlzLml0ZW0mJnRoaXMuaXRlbS52YWx1ZVxyXG4gICAgICAgICAgICAmJnRoaXMuaXRlbS5jb250cm9sJiZ0aGlzLml0ZW0uY29udHJvbC5nZXRDb250cm9sVHlwZSgpPT1Db250cm9sVHlwZS5Ecm9wRG93bil7XHJcbiAgICAgICAgICAgICAgICBsZXQgZHJvcERvd25MaXN0PSh0aGlzLml0ZW0uY29udHJvbCBhcyBEcm9wRG93bkNvbnRyb2wpO1xyXG4gICAgICAgICAgICAgICAgaWYoZHJvcERvd25MaXN0LnZhbHVlVHlwZT09RW51bVR5cGUuQm9vbFR5cGUpe1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZHJvcERvd25MaXN0RGF0YVNvdXJjZT1BcnJheTxFbnVtQm9vbFZhbHVlPigpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKGRyb3BEb3duTGlzdC5lbnVtVmFsdWVzJiZkcm9wRG93bkxpc3QuZW51bVZhbHVlcy5sZW5ndGg+MCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRyb3BEb3duTGlzdC5lbnVtVmFsdWVzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRyb3BEb3duTGlzdERhdGFTb3VyY2UucHVzaChPYmplY3QuYXNzaWduKG5ldyBFbnVtQm9vbFZhbHVlKCksZWxlbWVudCkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmKGRyb3BEb3duTGlzdC52YWx1ZVR5cGU9PUVudW1UeXBlLkludFR5cGUpe1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZHJvcERvd25MaXN0RGF0YVNvdXJjZT1BcnJheTxFbnVtSW50ZWdlclZhbHVlPigpO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmKGRyb3BEb3duTGlzdC5lbnVtVmFsdWVzJiZkcm9wRG93bkxpc3QuZW51bVZhbHVlcy5sZW5ndGg+MCl7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGRyb3BEb3duTGlzdC5lbnVtVmFsdWVzLmZvckVhY2goZWxlbWVudCA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRyb3BEb3duTGlzdERhdGFTb3VyY2UucHVzaChPYmplY3QuYXNzaWduKG5ldyBFbnVtSW50ZWdlclZhbHVlKCksZWxlbWVudCkpO1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBlbHNlIGlmKGRyb3BEb3duTGlzdC52YWx1ZVR5cGU9PUVudW1UeXBlLlN0cmluZ1R5cGUpe1xyXG4gICAgICAgICAgICAgICAgICAgIHRoaXMuZHJvcERvd25MaXN0RGF0YVNvdXJjZT1BcnJheTxFbnVtU3RyaW5nVmFsdWU+KCk7XHJcbiAgICAgICAgICAgICAgICAgICAgaWYoZHJvcERvd25MaXN0LmVudW1WYWx1ZXMmJmRyb3BEb3duTGlzdC5lbnVtVmFsdWVzLmxlbmd0aD4wKXtcclxuICAgICAgICAgICAgICAgICAgICAgICAgZHJvcERvd25MaXN0LmVudW1WYWx1ZXMuZm9yRWFjaChlbGVtZW50ID0+IHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuZHJvcERvd25MaXN0RGF0YVNvdXJjZS5wdXNoKE9iamVjdC5hc3NpZ24obmV3IEVudW1TdHJpbmdWYWx1ZSgpLGVsZW1lbnQpKTtcclxuICAgICAgICAgICAgICAgICAgICAgICAgfSk7XHJcbiAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gZ2V0Q29uZGl0aW9uSXRlbVN0eWxlKGZpZWxkOiBRdWVyeUNvbmRpdGlvbiwgY29udHJvbFR5cGU6IGFueSkge1xyXG4gICAgLy8gICAgIHJldHVybiB0aGlzLnNvbHV0aW9uU2VydmljZS5nZXRDb25kaXRpb25JdGVtU3R5bGUoZmllbGQsY29udHJvbFR5cGUpO1xyXG4gICAgLy8gfVxyXG5cclxuICAgIGdldENvbmRpdGlvbkl0ZW1UaXRsZShmaWVsZDpRdWVyeUNvbmRpdGlvbil7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuc29sdXRpb25TZXJ2aWNlLmdldENvbmRpdGlvbkl0ZW1UaXRsZShmaWVsZCk7XHJcbiAgICB9XHJcblxyXG4gICAgb25TZWFyY2goZXZlbnQpe1xyXG4gICAgICAgIGlmKGV2ZW50KXtcclxuICAgICAgICAgICAgKHRoaXMuaXRlbS52YWx1ZSBhcyBEcm9wRG93bkxpc3RWYWx1ZSkudmFsdWUgPSBldmVudC5kYXRhLnZhbHVlO1xyXG4gICAgICAgIH1lbHNle1xyXG4gICAgICAgICAgICAodGhpcy5pdGVtLnZhbHVlIGFzIERyb3BEb3duTGlzdFZhbHVlKS52YWx1ZSA9ICcnO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYodGhpcy5kaXNhYmxlZCl7cmV0dXJuO31cclxuICAgICAgICB0aGlzLnNlYXJjaEhhbmRsZS5lbWl0KCk7XHJcbiAgICB9XHJcblxyXG4gICAgb25DbGVhcihldmVudCl7XHJcbiAgICAgICAgKHRoaXMuaXRlbS52YWx1ZSBhcyBEcm9wRG93bkxpc3RWYWx1ZSkudmFsdWUgPSAnJztcclxuICAgICAgICB0aGlzLnNlYXJjaEhhbmRsZS5lbWl0KCk7XHJcbiAgICB9XHJcbn1cclxuIl19