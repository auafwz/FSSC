import { MessagePipe } from './message-pipe';
import { RuntimeFrameworkService } from '../rtf-service';
import { QuerystringService } from '../querystring';
var MessagePipeService = /** @class */ (function () {
    function MessagePipeService() {
    }
    /**
     * 通过token获取消息管道
     * @param token 消息管道标识
     */
    MessagePipeService.get = function (token) {
        var pipe = new MessagePipe(token, this.rtfService);
        return pipe;
    };
    /**
     * 创建消息管道
     * @param pipeName 管道名称
     * @param useFormContext 是否使用表单上下文创建管道标识
     * @param pipeType 管道类型(可选)，默认Subject<any>
     */
    MessagePipeService.create = function (pipeName, useFormContext, pipeType) {
        var options = null;
        if (useFormContext) {
            var params = this.querystringService.parse(window.location.hash);
            var funcId = params.funcId, appId = params.appId, appEntrance = params.appEntrance;
            options = { funcId: funcId, appId: appId, appEntrance: appEntrance };
        }
        var token = this.rtfService.subjectRegister(pipeName, options, pipeType);
        if (!token) {
            console.warn('message pipe create failed.');
            return null;
        }
        var pipe = new MessagePipe(token, this.rtfService);
        return pipe;
    };
    MessagePipeService.rtfService = new RuntimeFrameworkService();
    MessagePipeService.querystringService = new QuerystringService();
    return MessagePipeService;
}());
export { MessagePipeService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZS1waXBlLXNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2NvbW1hbmQtc2VydmljZXMvIiwic291cmNlcyI6WyJsaWIvcnRmLW1lc3NhZ2UvbWVzc2FnZS1waXBlLXNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXpELE9BQU8sRUFBRSxrQkFBa0IsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBRXBEO0lBQUE7SUFnQ0EsQ0FBQztJQTdCQzs7O09BR0c7SUFDVyxzQkFBRyxHQUFqQixVQUFrQixLQUFhO1FBQzdCLElBQU0sSUFBSSxHQUFHLElBQUksV0FBVyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDckQsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBQ0Q7Ozs7O09BS0c7SUFDVyx5QkFBTSxHQUFwQixVQUFxQixRQUFnQixFQUFFLGNBQXVCLEVBQUUsUUFBdUI7UUFDckYsSUFBSSxPQUFPLEdBQUcsSUFBSSxDQUFDO1FBQ25CLElBQUksY0FBYyxFQUFFO1lBQ2xCLElBQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxrQkFBa0IsQ0FBQyxLQUFLLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsQ0FBQztZQUMzRCxJQUFBLHNCQUFNLEVBQUUsb0JBQUssRUFBRSxnQ0FBVyxDQUFZO1lBQzlDLE9BQU8sR0FBRyxFQUFFLE1BQU0sUUFBQSxFQUFFLEtBQUssT0FBQSxFQUFFLFdBQVcsYUFBQSxFQUFFLENBQUM7U0FDMUM7UUFDRCxJQUFNLEtBQUssR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDLGVBQWUsQ0FBQyxRQUFRLEVBQUUsT0FBTyxFQUFFLFFBQVEsQ0FBQyxDQUFDO1FBQzNFLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDVixPQUFPLENBQUMsSUFBSSxDQUFDLDZCQUE2QixDQUFDLENBQUM7WUFDNUMsT0FBTyxJQUFJLENBQUM7U0FDYjtRQUNELElBQU0sSUFBSSxHQUFHLElBQUksV0FBVyxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsVUFBVSxDQUFDLENBQUM7UUFDckQsT0FBTyxJQUFJLENBQUM7SUFDZCxDQUFDO0lBOUJjLDZCQUFVLEdBQTRCLElBQUksdUJBQXVCLEVBQUUsQ0FBQztJQUNwRSxxQ0FBa0IsR0FBdUIsSUFBSSxrQkFBa0IsRUFBRSxDQUFDO0lBOEJuRix5QkFBQztDQUFBLEFBaENELElBZ0NDO1NBaENZLGtCQUFrQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1lc3NhZ2VQaXBlIH0gZnJvbSAnLi9tZXNzYWdlLXBpcGUnO1xyXG5pbXBvcnQgeyBSdW50aW1lRnJhbWV3b3JrU2VydmljZSB9IGZyb20gJy4uL3J0Zi1zZXJ2aWNlJztcclxuaW1wb3J0IHsgU3ViamVjdCB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgeyBRdWVyeXN0cmluZ1NlcnZpY2UgfSBmcm9tICcuLi9xdWVyeXN0cmluZyc7XHJcblxyXG5leHBvcnQgY2xhc3MgTWVzc2FnZVBpcGVTZXJ2aWNlIHtcclxuICBwcml2YXRlIHN0YXRpYyBydGZTZXJ2aWNlOiBSdW50aW1lRnJhbWV3b3JrU2VydmljZSA9IG5ldyBSdW50aW1lRnJhbWV3b3JrU2VydmljZSgpO1xyXG4gIHByaXZhdGUgc3RhdGljIHF1ZXJ5c3RyaW5nU2VydmljZTogUXVlcnlzdHJpbmdTZXJ2aWNlID0gbmV3IFF1ZXJ5c3RyaW5nU2VydmljZSgpO1xyXG4gIC8qKlxyXG4gICAqIOmAmui/h3Rva2Vu6I635Y+W5raI5oGv566h6YGTXHJcbiAgICogQHBhcmFtIHRva2VuIOa2iOaBr+euoemBk+agh+ivhlxyXG4gICAqL1xyXG4gIHB1YmxpYyBzdGF0aWMgZ2V0KHRva2VuOiBzdHJpbmcpOiBNZXNzYWdlUGlwZSB7XHJcbiAgICBjb25zdCBwaXBlID0gbmV3IE1lc3NhZ2VQaXBlKHRva2VuLCB0aGlzLnJ0ZlNlcnZpY2UpO1xyXG4gICAgcmV0dXJuIHBpcGU7XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIOWIm+W7uua2iOaBr+euoemBk1xyXG4gICAqIEBwYXJhbSBwaXBlTmFtZSDnrqHpgZPlkI3np7BcclxuICAgKiBAcGFyYW0gdXNlRm9ybUNvbnRleHQg5piv5ZCm5L2/55So6KGo5Y2V5LiK5LiL5paH5Yib5bu6566h6YGT5qCH6K+GXHJcbiAgICogQHBhcmFtIHBpcGVUeXBlIOeuoemBk+exu+Weiyjlj6/pgIkp77yM6buY6K6kU3ViamVjdDxhbnk+XHJcbiAgICovXHJcbiAgcHVibGljIHN0YXRpYyBjcmVhdGUocGlwZU5hbWU6IHN0cmluZywgdXNlRm9ybUNvbnRleHQ6IGJvb2xlYW4sIHBpcGVUeXBlPzogU3ViamVjdDxhbnk+KTogTWVzc2FnZVBpcGUge1xyXG4gICAgbGV0IG9wdGlvbnMgPSBudWxsO1xyXG4gICAgaWYgKHVzZUZvcm1Db250ZXh0KSB7XHJcbiAgICAgIGNvbnN0IHBhcmFtcyA9IHRoaXMucXVlcnlzdHJpbmdTZXJ2aWNlLnBhcnNlKHdpbmRvdy5sb2NhdGlvbi5oYXNoKTtcclxuICAgICAgY29uc3QgeyBmdW5jSWQsIGFwcElkLCBhcHBFbnRyYW5jZSB9ID0gcGFyYW1zO1xyXG4gICAgICBvcHRpb25zID0geyBmdW5jSWQsIGFwcElkLCBhcHBFbnRyYW5jZSB9O1xyXG4gICAgfVxyXG4gICAgY29uc3QgdG9rZW4gPSB0aGlzLnJ0ZlNlcnZpY2Uuc3ViamVjdFJlZ2lzdGVyKHBpcGVOYW1lLCBvcHRpb25zLCBwaXBlVHlwZSk7XHJcbiAgICBpZiAoIXRva2VuKSB7XHJcbiAgICAgIGNvbnNvbGUud2FybignbWVzc2FnZSBwaXBlIGNyZWF0ZSBmYWlsZWQuJyk7XHJcbiAgICAgIHJldHVybiBudWxsO1xyXG4gICAgfVxyXG4gICAgY29uc3QgcGlwZSA9IG5ldyBNZXNzYWdlUGlwZSh0b2tlbiwgdGhpcy5ydGZTZXJ2aWNlKTtcclxuICAgIHJldHVybiBwaXBlO1xyXG4gIH1cclxufVxyXG4iXX0=