/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import * as tslib_1 from "tslib";
import { InputGroupComponent } from '@farris/ui-input-group';
import { ChangeDetectorRef } from '@angular/core';
/*
 * @Author: 疯狂秀才(Lucas Huang)
 * @Date: 2019-07-10 11:44:49
 * @LastEditors: 疯狂秀才(Lucas Huang)
 * @LastEditTime: 2019-11-05 11:44:18
 * @QQ: 1055818239
 * @Version: v0.0.1
 */
import { Component, ViewChild, ElementRef, Input, ContentChild, TemplateRef, QueryList, ContentChildren, Output, EventEmitter, ViewEncapsulation, NgZone } from '@angular/core';
import { of } from 'rxjs';
import { PerfectScrollbarComponent } from '@farris/ui-perfect-scrollbar';
import { PaginationControlsComponent } from '@farris/ui-pagination';
import { IdService } from '@farris/ui-common';
import { deepCopy } from './datatable-column';
import { ColumnDirective } from './datatable-column.component';
import { DataTableService } from './datatable.service';
import { DataTableHeaderComponent } from './table/datatable-header.component';
var DataTableComponent = /** @class */ (function () {
    function DataTableComponent(dataService, idService, el, cd, ngZone) {
        var _this = this;
        this.dataService = dataService;
        this.idService = idService;
        this.el = el;
        this.cd = cd;
        this.ngZone = ngZone;
        this.searchButtonText = '<i class="f-icon f-icon-search"></i>';
        this.keydownEnterEdit = false;
        this.allColumnsTitle = '所有列';
        // 数据表高度
        // 是否填充
        this.fill = false;
        // 默认分页
        this.pagination = true;
        this.pagerOnServer = true;
        this.pageSize = 10;
        this.pageIndex = 1;
        this.showPageInfo = true;
        this.showPageNumber = true;
        this.showPageList = true;
        this.pagerViewMode = 'default';
        /**
         * 显示表头
         */
        this.showHeader = true;
        this._pageList = [10, 20, 30, 50, 100];
        this.total = 0;
        // 可筛选
        this.showFilterBar = false;
        // table  数据
        this._data = [];
        this.remote = 'client';
        /**
         * 启用远端排序
         */
        this.remoteSort = true;
        /**
         * 允许多列排序
         */
        this.multiSort = false;
        // 多选  单选
        this.singleSelect = true;
        this.idField = 'id';
        // 显示鼠标悬停高亮
        this.hover = true;
        // 分页事件
        this.pageChanged = new EventEmitter();
        this.pageSizeChanged = new EventEmitter();
        this.search = new EventEmitter();
        this.columnSorted = new EventEmitter();
        this.rowDblClick = new EventEmitter();
        this.selectedRow = new EventEmitter();
        // 兼容
        this.selectRows = new EventEmitter();
        this.unSelectRow = new EventEmitter();
        this.cellClick = new EventEmitter();
        this.clearSearchValue = new EventEmitter();
        this.checkAll = new EventEmitter();
        this.sortChange = new EventEmitter();
        // 是否可拖拽  默认可以
        this.resizableColumns = true;
        /**
         * 针对同一条记录，单选时，多次单击后不取消选中。
         */
        this.keepSelect = true;
        // 是否有行模板
        this.hasRowTepml = false;
        // 设置拖拽停止器
        this.moveable = false;
        this.searchData = { field: '*', value: '' };
        // 事件订阅存储  便于销毁
        this.subscription = [];
        // 原数据
        this.filter = '';
        this.maxSize = 7;
        this.directionLinks = true;
        this.autoHide = false;
        this.responsive = true;
        this.paginationOptions = {
            id: 'Farris-DataTable-Pagination',
            itemsPerPage: this.pageSize,
            currentPage: this.pageIndex,
            pageList: this.pageList,
            totalItems: this.total,
            remote: this.pagerOnServer
        };
        this.labels = {
            previousLabel: ' ',
            nextLabel: ' ',
            screenReaderPaginationLabel: 'Pagination',
            screenReaderPageLabel: 'page',
            screenReaderCurrentLabel: "You're on page"
        };
        this._currentRowIndex = -1;
        this._currentRow = undefined;
        this.trackByRows = (/**
         * @param {?} index
         * @param {?} row
         * @return {?}
         */
        function (index, row) {
            return row[_this.idField];
        });
        this.dataService.selectedRow.subscribe((/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            if (_this.singleSelect) {
                _this._currentRowIndex = e.rowIndex;
                _this._currentRow = e.rowData;
            }
            else {
                if (_this.selections) {
                    _this.dtHeader.isCheckAll = Object.keys(_this.selections).length === _this.data.length;
                }
            }
        }));
        this.dataService.unSelectedRow.subscribe((/**
         * @param {?} e
         * @return {?}
         */
        function (e) {
            if (_this.singleSelect) {
                _this._currentRow = undefined;
                _this._currentRowIndex = -1;
            }
            else {
                _this.dtHeader.isCheckAll = false;
            }
        }));
    }
    Object.defineProperty(DataTableComponent.prototype, "pageList", {
        get: /**
         * @return {?}
         */
        function () {
            return this._pageList;
        },
        set: /**
         * @param {?} val
         * @return {?}
         */
        function (val) {
            this._pageList = val;
            if (this.pager) {
                this.pager.setPageList(val);
            }
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataTableComponent.prototype, "data", {
        get: /**
         * @return {?}
         */
        function () {
            return this._data;
        },
        set: /**
         * @param {?} data
         * @return {?}
         */
        function (data) {
            this._data = data;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataTableComponent.prototype, "selections", {
        get: /**
         * @return {?}
         */
        function () {
            return this.dtBody.selections;
        },
        set: /**
         * @param {?} v
         * @return {?}
         */
        function (v) {
            this.dtBody.selections = v ? v : {};
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataTableComponent.prototype, "currentRowIndex", {
        get: /**
         * @return {?}
         */
        function () {
            return this._currentRowIndex;
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(DataTableComponent.prototype, "currentRow", {
        get: /**
         * @return {?}
         */
        function () {
            return this._currentRow;
        },
        enumerable: true,
        configurable: true
    });
    /**
     * @return {?}
     */
    DataTableComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        var _this = this;
        setTimeout((/**
         * @return {?}
         */
        function () {
            _this.setBodyHeight();
            _this.ps = _this.perfectScrollbar.directiveRef.ps();
        }));
        if (!this.id) {
            this.id = "datatable_" + this.idService.generate();
        }
        this.paginationOptions.id = this.paginationOptions.id + this.id;
        this.copyData = deepCopy(this.data);
        if (!this.beforeSortColumn) {
            this.beforeSortColumn = (/**
             * @return {?}
             */
            function () { return of(true); });
        }
    };
    /**
     * @private
     * @return {?}
     */
    DataTableComponent.prototype.setBodyHeight = /**
     * @private
     * @return {?}
     */
    function () {
        this.tableHeight = this.height;
        if (this.showFilterBar) {
            this.tableHeight = this.height - 46;
        }
        if (this.showHeader) {
            this.scorllableBodyHeight = this.tableHeight - this.tableHeader.nativeElement.clientHeight;
        }
        if (this.pagination) {
            this.scorllableBodyHeight = this.scorllableBodyHeight - 50;
        }
        if (this.cd && !this.cd['destroyed']) {
            this.cd.detectChanges();
        }
    };
    /**
     * @return {?}
     */
    DataTableComponent.prototype.onClearSearchValue = /**
     * @return {?}
     */
    function () {
        this.searchData.value = '';
        this.cd.detectChanges();
        this.clearSearchValue.emit();
    };
    /**
     * @param {?} changes
     * @return {?}
     */
    DataTableComponent.prototype.ngOnChanges = /**
     * @param {?} changes
     * @return {?}
     */
    function (changes) {
        if (changes.height && !changes.height.isFirstChange()) {
            this.setBodyHeight();
        }
        if (changes.total && !changes.total.isFirstChange()) {
            this.paginationOptions.totalItems = changes.total.currentValue;
        }
        if (changes.pageSize) {
            this.paginationOptions.itemsPerPage = changes.pageSize.currentValue;
        }
        if (changes.pageIndex && !changes.pageIndex.isFirstChange()) {
            this.paginationOptions.currentPage = changes.pageIndex.currentValue;
        }
        if (changes.data && !changes.data.isFirstChange()) {
            /** @type {?} */
            var rows = changes.data.currentValue;
            this.updateCheckboxState(rows);
            this.paginationOptions = tslib_1.__assign({}, this.paginationOptions);
            this.dataService.loadSuccess.next(changes.data.currentValue);
        }
    };
    /**
     * @return {?}
     */
    DataTableComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        // 支持列组件写入
        if (!this.columns) {
            if (this.columnsRef && this.columnsRef.length) {
                this.columns = this.columnsRef.map((/**
                 * @param {?} col
                 * @return {?}
                 */
                function (col) {
                    return {
                        width: col.width,
                        title: col.title,
                        field: col.field,
                        align: col.align,
                        fixed: col.fixed,
                        className: col.className,
                        multipleFilter: col.multipleFilter,
                        filter: col.filter,
                        media: col.media,
                        sortable: col.sortable,
                        edit: col.edit
                    };
                }));
            }
        }
    };
    /**
     * @return {?}
     */
    DataTableComponent.prototype.ngOnDestroy = /**
     * @return {?}
     */
    function () {
        this.subscription.forEach((/**
         * @param {?} sub
         * @return {?}
         */
        function (sub) {
            sub.unsubscribe();
        }));
        this.subscription = [];
        this.pager = null;
    };
    /**
     * @return {?}
     */
    DataTableComponent.prototype.ngAfterViewInit = /**
     * @return {?}
     */
    function () {
        // 获取表格容器  即表格
        this.datatableContainer = this.el.nativeElement.querySelector('.farris-datatable');
        // this.headerTr = this.tableHeader.nativeElement.querySelectorAll('tr');
    };
    /**
     * @param {?} rows
     * @return {?}
     */
    DataTableComponent.prototype.updateCheckboxState = /**
     * @param {?} rows
     * @return {?}
     */
    function (rows) {
        var _this = this;
        /** @type {?} */
        var updateCheckAllStatus = (/**
         * @param {?} f
         * @return {?}
         */
        function (f) {
            if (_this.showHeader && _this.dtHeader) {
                _this.dtHeader.isCheckAll = f;
            }
        });
        if (rows && rows.length) {
            if (this.selections) {
                /** @type {?} */
                var keys = Object.keys(this.dtBody._selections);
                if (keys.length) {
                    /** @type {?} */
                    var count_1 = 0;
                    /** @type {?} */
                    var ids_1 = rows.map((/**
                     * @param {?} row
                     * @return {?}
                     */
                    function (row) {
                        return row[_this.idField].toString();
                    }));
                    keys.forEach((/**
                     * @param {?} id
                     * @return {?}
                     */
                    function (id) {
                        if (ids_1.indexOf(id) > -1) {
                            count_1++;
                        }
                    }));
                    updateCheckAllStatus(ids_1.length === count_1);
                }
                else {
                    updateCheckAllStatus(false);
                }
            }
            else {
                updateCheckAllStatus(false);
            }
        }
        else {
            updateCheckAllStatus(false);
        }
    };
    /**
     * 获取表格容器的位置  距离左边视口和上边视口的距离  如果页面有滚动条  需要加上滚动条滚动的数值
     */
    /**
     * 获取表格容器的位置  距离左边视口和上边视口的距离  如果页面有滚动条  需要加上滚动条滚动的数值
     * @return {?}
     */
    DataTableComponent.prototype.getContainerOffset = /**
     * 获取表格容器的位置  距离左边视口和上边视口的距离  如果页面有滚动条  需要加上滚动条滚动的数值
     * @return {?}
     */
    function () {
        /** @type {?} */
        var rect = this.datatableContainer.getBoundingClientRect();
        return {
            left: rect.left + document.body.scrollLeft,
            top: rect.top + document.body.scrollTop,
            right: rect.right,
            bottom: rect.bottom,
        };
    };
    /**
     *  鼠标按下  开始记录拖拽线的位置  拖拽线到达当前鼠标位置
     * @param e 鼠标对象
     */
    /**
     *  鼠标按下  开始记录拖拽线的位置  拖拽线到达当前鼠标位置
     * @param {?} e 鼠标对象
     * @return {?}
     */
    DataTableComponent.prototype.beginDrag = /**
     *  鼠标按下  开始记录拖拽线的位置  拖拽线到达当前鼠标位置
     * @param {?} e 鼠标对象
     * @return {?}
     */
    function (e) {
        this.dragLineX = e.pageX;
        event.preventDefault();
    };
    /**
     * 鼠标移动 移动拖拽线位置变动
     * @param e 鼠标对象
     */
    /**
     * 鼠标移动 移动拖拽线位置变动
     * @param {?} e 鼠标对象
     * @return {?}
     */
    DataTableComponent.prototype.moveDrag = /**
     * 鼠标移动 移动拖拽线位置变动
     * @param {?} e 鼠标对象
     * @return {?}
     */
    function (e) {
        // 获取表格的左边距离
        /** @type {?} */
        var containerLeft = this.getContainerOffset().left;
        // 设置拖拽线的高度  即获取表头+表内容+表尾的高度  此表格结构包含了分页  因此要去掉分页的高度
        if (this.tablePager) {
            this.dragLine.nativeElement.style.height = this.datatableContainer.offsetHeight -
                this.tablePager.nativeElement.offsetHeight + 'px';
        }
        else {
            // const headerHeight = this.el.nativeElement.querySelector('.farris-table-header');
            // const bodyHeight = this.el.nativeElement.querySelector('.ps-content');
            this.dragLine.nativeElement.style.height = this.datatableContainer.offsetHeight + 'px';
        }
        // 设置拖拽线的高度 拖拽线相对于表格relative定位是absolute，因此是0
        this.dragLine.nativeElement.style.top = 0 + 'px';
        // 鼠标移动时，拖拽线相对于表格的位置
        this.dragLine.nativeElement.style.left = (e.pageX - containerLeft) + 'px';
        // 鼠标移动  设置拖拽线总是可见
        this.dragLine.nativeElement.style.display = 'block';
    };
    // 重新计算表格宽度
    /**
     * 鼠标抬起 重新计算单元格宽度
     * 鼠标对象
     */
    // 重新计算表格宽度
    /**
     * 鼠标抬起 重新计算单元格宽度
     * 鼠标对象
     * @param {?} e
     * @param {?} column
     * @return {?}
     */
    DataTableComponent.prototype.stopDrag = 
    // 重新计算表格宽度
    /**
     * 鼠标抬起 重新计算单元格宽度
     * 鼠标对象
     * @param {?} e
     * @param {?} column
     * @return {?}
     */
    function (e, column) {
        this.resizeColumn(e, column);
    };
    /**
     * @param {?} e
     * @param {?} column
     * @return {?}
     */
    DataTableComponent.prototype.resizeColumn = /**
     * @param {?} e
     * @param {?} column
     * @return {?}
     */
    function (e, column) {
        if (this.isCheckBox(column, 'dt-checkbox-cell')) {
            this.dragLine.nativeElement.style.display = 'none';
            return;
        }
        // 偏移量
        /** @type {?} */
        var delta = e.pageX - this.dragLineX;
        // 拖拽前列宽
        /** @type {?} */
        var columnWidth = column.offsetWidth;
        // 拖拽后列宽
        /** @type {?} */
        var newColumnWidth = columnWidth + delta;
        // 最小宽度
        /** @type {?} */
        var minWidth = column.style.minWidth || 30;
        // 新宽度大于或等于最小宽度时
        newColumnWidth = newColumnWidth > minWidth ? newColumnWidth : minWidth;
        // 重新设置宽度
        /** @type {?} */
        var colIndex = -1;
        /** @type {?} */
        var othersCol = [];
        /** @type {?} */
        var cols = this.tableHeader.nativeElement.querySelectorAll('th');
        // 父节点宽度
        /** @type {?} */
        var parentWidth = column.parentElement.offsetWidth;
        // 判断是不是有checkbox
        /** @type {?} */
        var firstElement = column.parentElement.firstElementChild;
        /** @type {?} */
        var checkBoxWidth = this.isCheckBox(firstElement, 'dt-checkbox-cell') ? firstElement.offsetWidth : 0;
        // 其他列宽度
        /** @type {?} */
        var othersWidth = parentWidth - columnWidth - checkBoxWidth;
        /** @type {?} */
        var newOthersWidth = parentWidth - newColumnWidth - checkBoxWidth;
        for (var i = 0; i < cols.length; i++) {
            if (cols[i] === column) {
                colIndex = i;
            }
            else {
                if (this.isCheckBox(cols[i], 'dt-checkbox-cell')) {
                    continue;
                }
                /** @type {?} */
                var rate = cols[i].offsetWidth / othersWidth;
                if (rate > 1) {
                    console.log(cols[i]);
                }
                /** @type {?} */
                var colWidth = newOthersWidth * rate;
                if (newOthersWidth * rate > 15) {
                    colWidth = newOthersWidth * rate;
                }
                else {
                    colWidth = 15;
                    othersWidth = othersWidth - colWidth;
                    newOthersWidth = newOthersWidth - colWidth;
                    newColumnWidth = newColumnWidth - 15 + newOthersWidth * rate;
                }
                othersCol.push({ colIndex: i, colWidth: colWidth });
            }
        }
        this.resizeColGroup(this.dtHeader.el.nativeElement, colIndex, newColumnWidth, othersCol);
        this.resizeColGroup(this.dtBody.el.nativeElement, colIndex, newColumnWidth, othersCol);
        // 计算宽度完毕  设置拖拽线隐藏
        this.dragLine.nativeElement.style.display = 'none';
    };
    /**
     * @param {?} elements
     * @param {?} cName
     * @return {?}
     */
    DataTableComponent.prototype.isCheckBox = /**
     * @param {?} elements
     * @param {?} cName
     * @return {?}
     */
    function (elements, cName) {
        return !!elements.className.match(new RegExp('(\\s|^)' + cName + '(\\s|$)'));
    };
    /**
     * @param {?} table
     * @param {?} resizeColumnIndex
     * @param {?} newColumnWidth
     * @param {?} othersColumn
     * @return {?}
     */
    DataTableComponent.prototype.resizeColGroup = /**
     * @param {?} table
     * @param {?} resizeColumnIndex
     * @param {?} newColumnWidth
     * @param {?} othersColumn
     * @return {?}
     */
    function (table, resizeColumnIndex, newColumnWidth, othersColumn) {
        if (table) {
            // 此处要视不同的表格结构来确定 本组件中  header和body结构相同
            /** @type {?} */
            var colGroup = table.childNodes[0].children[0].nodeName === 'COLGROUP' ?
                table.childNodes[0].children[0] : null;
            if (colGroup) {
                /** @type {?} */
                var col = colGroup.children[resizeColumnIndex];
                col.style.width = newColumnWidth + 'px';
                for (var i = 0; i < othersColumn.length; i++) {
                    /** @type {?} */
                    var otherCol = colGroup.children[othersColumn[i].colIndex];
                    if (otherCol && othersColumn[i].colWidth) {
                        otherCol.style.width = othersColumn[i].colWidth + 'px';
                    }
                }
            }
            else {
                throw new Error('Scrollable tables require a colgroup to support resizable columns');
            }
        }
    };
    /**
     * @param {?} e
     * @return {?}
     */
    DataTableComponent.prototype.onScrollX = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        // 横向滚动 非固定表头滚动
        /** @type {?} */
        var x = e.srcElement.scrollLeft;
        this.tableHeader.nativeElement.scrollTo(x, 0);
    };
    /**
     * 滚动条纵向滚动
     */
    /**
     * 滚动条纵向滚动
     * @param {?} e
     * @return {?}
     */
    DataTableComponent.prototype.onScrollY = /**
     * 滚动条纵向滚动
     * @param {?} e
     * @return {?}
     */
    function (e) {
        if (!this.hasFixed) {
            return;
        }
        /** @type {?} */
        var y = e.srcElement.scrollTop;
        this.dtLeftFixed.nativeElement.style.top = -y + 'px';
        this.dtRightFixed.nativeElement.style.top = -y + 'px';
    };
    /**
     * @param {?} page
     * @return {?}
     */
    DataTableComponent.prototype.onPageChange = /**
     * @param {?} page
     * @return {?}
     */
    function (page) {
        if (this.pageIndex !== page.pageIndex) {
            this.pageIndex = page.pageIndex;
            this.paginationOptions.currentPage = page.pageIndex;
            this.pageChanged.emit({ pageInfo: page, search: this.searchData, sortName: this.sortName, sortOrder: this.sortOrder });
        }
    };
    /**
     * @param {?} pageSize
     * @return {?}
     */
    DataTableComponent.prototype.onPageSizeChange = /**
     * @param {?} pageSize
     * @return {?}
     */
    function (pageSize) {
        if (this.pageSize !== pageSize && this.total) {
            this.paginationOptions.itemsPerPage = pageSize;
            this.pageSize = pageSize;
            /** @type {?} */
            var total = this.total;
            /** @type {?} */
            var pageLength = Math.floor(total / pageSize);
            if (total % pageSize > 0) {
                pageLength += 1;
            }
            if (pageLength && this.pageIndex > pageLength) {
                this.pageIndex = pageLength;
                this.paginationOptions.currentPage = this.pageIndex;
            }
            this.pageSizeChanged.emit({
                pageInfo: { pageIndex: this.pageIndex, pageSize: pageSize },
                search: this.searchData, sortName: this.sortName, sortOrder: this.sortOrder
            });
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    DataTableComponent.prototype.onSearch = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if ($event.originalEvent) {
            $event.originalEvent.stopPropagation();
        }
        this.search.emit(this.searchData);
    };
    /**
     * @param {?} state
     * @return {?}
     */
    DataTableComponent.prototype.onCheckAll = /**
     * @param {?} state
     * @return {?}
     */
    function (state) {
        this.dataService.selectedAll.next(state);
        this.checkAll.emit(state);
    };
    /**
     * @param {?} e
     * @return {?}
     */
    DataTableComponent.prototype.onSelectedRow = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this.selectedRow.emit({ data: e.rowData, index: e.rowIndex });
        // 兼容
        this.selectRows.emit({ data: e.rowData, index: e.rowIndex });
    };
    // tslint:disable-next-line:no-shadowed-variable
    // tslint:disable-next-line:no-shadowed-variable
    /**
     * @param {?} size
     * @return {?}
     */
    DataTableComponent.prototype.resize = 
    // tslint:disable-next-line:no-shadowed-variable
    /**
     * @param {?} size
     * @return {?}
     */
    function (size) {
        this.width = size.width;
        this.height = size.height;
        this.setBodyHeight();
    };
    /**
     * @param {?} e
     * @return {?}
     */
    DataTableComponent.prototype.loadData = /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this.data = e.data;
        if (this.pagination) {
            var _a = tslib_1.__assign({}, e), _b = _a.total, total = _b === void 0 ? 0 : _b, _c = _a.pageSize, pageSize = _c === void 0 ? 20 : _c, _d = _a.pageIndex, pageIndex = _d === void 0 ? 1 : _d;
            this.paginationOptions.totalItems = total;
            this.paginationOptions.itemsPerPage = pageSize;
            this.paginationOptions.currentPage = pageIndex;
            this.paginationOptions.pageList = this.pageList;
            this.total = total;
            this.pageSize = pageSize;
            this.pageIndex = pageIndex;
        }
        this.cd.detectChanges();
        this.updateCheckboxState(this.data);
    };
    /*
     */
    /*
         */
    /**
     * @param {?} e
     * @return {?}
     */
    DataTableComponent.prototype.onCellClick = /*
         */
    /**
     * @param {?} e
     * @return {?}
     */
    function (e) {
        this.cellClick.emit(e);
    };
    /* 添加行 */
    /* 添加行 */
    /**
     * @param {?} dataItem
     * @return {?}
     */
    DataTableComponent.prototype.addRows = /* 添加行 */
    /**
     * @param {?} dataItem
     * @return {?}
     */
    function (dataItem) {
        this.data = this.data.concat(dataItem);
    };
    /* 删除行 */
    /* 删除行 */
    /**
     * @return {?}
     */
    DataTableComponent.prototype.removeRows = /* 删除行 */
    /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var SELECTIONS = this.selections;
        if (this.singleSelect) {
            for (var i = 0; i < this.data.length; i++) {
                if (this.data[i] === SELECTIONS) {
                    this.data.splice(i, 1);
                }
            }
        }
        else {
            for (var i = 0; i < SELECTIONS.length; i++) {
                for (var j = 0; j < this.data.length; j++) {
                    if (SELECTIONS[i][this.idField] === this.data[j][this.idField]) {
                        this.data.splice(j, 1);
                    }
                }
            }
        }
    };
    /**
     * @param {?} rid
     * @param {?=} emit
     * @return {?}
     */
    DataTableComponent.prototype.checkRow = /**
     * @param {?} rid
     * @param {?=} emit
     * @return {?}
     */
    function (rid, emit) {
        var _this = this;
        if (emit === void 0) { emit = false; }
        var _a, _b;
        /** @type {?} */
        var rowIndex = -1;
        /** @type {?} */
        var rowData = this.data.find((/**
         * @param {?} n
         * @param {?} i
         * @return {?}
         */
        function (n, i) {
            if (n[_this.idField] == rid) {
                rowIndex = i;
                return true;
            }
        }));
        if (!rowData) {
            return;
        }
        if (!this.selections) {
            this.selections = (_a = {}, _a[rid] = rowData, _a);
        }
        else {
            this.selections = tslib_1.__assign((_b = {}, _b[rid] = rowData, _b), this.selections.reduce((/**
             * @param {?} r
             * @param {?} n
             * @return {?}
             */
            function (r, n) {
                r[n[_this.idField]] = n;
                return r;
            }), {}));
        }
        this.dataService.selectedRow.next({
            rowIndex: rowIndex,
            rowData: rowData
        });
        if (emit) {
            /** @type {?} */
            var p = { data: rowData, index: rowIndex };
            this.selectedRow.emit(p);
            // 兼容
            this.selectRows.emit(p);
        }
    };
    /**
     * @param {?} rid
     * @param {?=} emit
     * @return {?}
     */
    DataTableComponent.prototype.unCheckRow = /**
     * @param {?} rid
     * @param {?=} emit
     * @return {?}
     */
    function (rid, emit) {
        var _this = this;
        if (emit === void 0) { emit = false; }
        /** @type {?} */
        var rowIndex = -1;
        /** @type {?} */
        var rowData = this.data.find((/**
         * @param {?} n
         * @param {?} i
         * @return {?}
         */
        function (n, i) {
            if (n[_this.idField] == rid) {
                rowIndex = i;
                return true;
            }
        }));
        if (this.selections) {
            this.selections = this.selections.filter((/**
             * @param {?} n
             * @return {?}
             */
            function (n) { return n[_this.idField] != rid; })).reduce((/**
             * @param {?} r
             * @param {?} n
             * @return {?}
             */
            function (r, n) {
                r[n[_this.idField]] = n;
                return r;
            }), {});
            this.dataService.unSelectedRow.next({
                rowIndex: rowIndex,
                rowData: rowData
            });
            if (emit) {
                this.unSelectRow.emit({ data: rowData, index: rowIndex });
            }
        }
    };
    /**
     * @return {?}
     */
    DataTableComponent.prototype.clearSelections = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    DataTableComponent.prototype.onKeydownEvent = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        var _this = this;
        if (!$event || !this.singleSelect || !this.data || !this.data.length) {
            return;
        }
        if (!['ArrowDown', 'ArrowUp'].includes($event.code)) {
            return;
        }
        /** @type {?} */
        var newIdx;
        if ($event.code === 'ArrowDown') {
            newIdx = this._currentRowIndex + 1;
            if (newIdx >= this.data.length) {
                newIdx = 0;
            }
        }
        else if ($event.code === 'ArrowUp') {
            if (this._currentRowIndex !== -1) {
                newIdx = this._currentRowIndex - 1;
            }
        }
        if (newIdx >= 0) {
            this.dtBody.selectedRow($event, newIdx, this.data[newIdx]);
        }
        setTimeout((/**
         * @return {?}
         */
        function () {
            // scroll intoView
            /** @type {?} */
            var trDoms = _this.dtBody.el.nativeElement.querySelectorAll('.ui-table-tbody tr');
            if (trDoms && trDoms[_this._currentRowIndex]) {
                trDoms[_this._currentRowIndex].scrollIntoView({ block: 'nearest' });
            }
        }));
    };
    DataTableComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farrisui-datatable,farris-datatable',
                    template: "<div class=\"filter-row\" [style.width]=\"width + 'px'\" *ngIf=\"showFilterBar\">\r\n    <form style=\"display: flex; width: 100%;\">\r\n        <div class=\"search-fields\">\r\n            <select class=\"custom-select\" [(ngModel)]=\"searchData.field\" name=\"field\">\r\n                <option value=\"*\">{{allColumnsTitle}}</option>\r\n                <option *ngFor=\"let col of searchFields\" value=\"{{col.value}}\">{{ col.label }}</option>\r\n            </select>\r\n        </div>\r\n        <div class=\"search-text flex-fill\">\r\n            <input-group [groupText]=\"searchButtonText\" name=\"searchValue\" (clear)=\"onClearSearchValue()\" #inputgroup\r\n                [(ngModel)]=\"searchData.value\" (clickHandle)=\"onSearch($event)\" (enterHandle)=\"onSearch($event)\"\r\n                (keydownHandle)=\"onKeydownEvent($event)\"></input-group>\r\n        </div>\r\n    </form>\r\n</div>\r\n<div [ngStyle]=\"{'height': tableHeight +'px', 'width': width +'px' }\" class=\"farris-datatable-container\">\r\n    <div class=\"farris-datatable\">\r\n        <div #tableHeader class=\"farris-table-header\" [style.display]=\"showHeader? '': 'none'\">\r\n            <datatable-header #dtHeader [size]=\"size\" [columns]=\"columns\" [singleSelect]=\"singleSelect\" [data]=\"data\"\r\n                (loadData)=\"loadData\" (checkedAll)=\"onCheckAll($event)\">\r\n                <ng-content select=\"data-columns\"></ng-content>\r\n            </datatable-header>\r\n        </div>\r\n        <div #scorllableBody class=\"farris-table-scorllable-body\" [style.height]=\"scorllableBodyHeight + 'px'\">\r\n            <perfect-scrollbar #perfectScrollbar [config]=\"{}\" (psScrollX)=\"onScrollX($event)\" (psScrollY)=\"onScrollY($event)\">\r\n                <ng-container [style.display]=\"data && data.length ? 'block': 'none'\">\r\n                    <datatable-body #dtBody [rows]=\"pagination ? (data | paginate: paginationOptions) : data\" [size]=\"size\" [columns]=\"columns\" [striped]=\"striped\"\r\n                        [bordered]=\"bordered\" [rowClassName]=\"rowClassName\" [cellClassName]=\"cellClassName\" (cellClick)=\"onCellClick($event)\">\r\n                    </datatable-body>\r\n                </ng-container>\r\n                <ng-container *ngIf=\"!(data && data.length)\">\r\n                    <h1 style=\"text-align:center;color:#ccc; margin-top: 50px;\"></h1>\r\n                </ng-container>\r\n            </perfect-scrollbar>\r\n        </div>\r\n        <div class=\"farris-table-header\" *ngIf=\"footer\">\r\n            <ng-template [ngTemplateOutlet]=\"footer\">\r\n            </ng-template>\r\n        </div>\r\n        <div *ngIf=\"pagination\" #tablePager class=\"farris-table-pager\">\r\n            <pagination-controls #pager [id]=\"paginationOptions.id\" [maxSize]=\"maxSize\" [directionLinks]=\"directionLinks\"\r\n                [autoHide]=\"autoHide\" [responsive]=\"responsive\" [previousLabel]=\"labels.previousLabel\" [nextLabel]=\"labels.nextLabel\"\r\n                [screenReaderPaginationLabel]=\"labels.screenReaderPaginationLabel\" [screenReaderPageLabel]=\"labels.screenReaderPageLabel\"\r\n                [screenReaderCurrentLabel]=\"labels.screenReaderCurrentLabel\" (pageChange)=\"onPageChange($event)\"\r\n                (pageSizeChange)=\"onPageSizeChange($event)\" [viewMode]=\"pagerViewMode\" [showGoToFirst]=\"true\" [showGoToLast]=\"true\"\r\n                [showPageInfo]=\"showPageInfo\" [showPageNumber]=\"showPageNumber\" [showPageList]=\"showPageList\">\r\n            </pagination-controls>\r\n        </div>\r\n        <div #dragLine *ngIf=\"resizableColumns\" class=\"column-resizer-helper\"></div>\r\n    </div>\r\n</div>",
                    encapsulation: ViewEncapsulation.None,
                    providers: [
                        DataTableService
                    ],
                    styles: [".farris-ui-datatable{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;height:100%;font-size:13px}.farris-ui-datatable table{border-collapse:collapse;width:100%;table-layout:fixed}.farris-ui-datatable .farris-table-footer,.farris-ui-datatable .farris-table-header{position:relative;min-height:34px}.farris-ui-datatable .farris-table-footer thead>tr>th,.farris-ui-datatable .farris-table-header thead>tr>th{padding:.571em .857em;border:1px solid #c8c8c8;font-weight:700;color:#333;background-color:#fff;border-top:0;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.farris-ui-datatable .farris-table-footer thead>tr>th .tt-checkbox,.farris-ui-datatable .farris-table-header thead>tr>th .tt-checkbox{margin-right:0;vertical-align:top;min-height:1rem}.farris-ui-datatable .farris-table-footer thead>tr>th:first-child,.farris-ui-datatable .farris-table-header thead>tr>th:first-child{border-left:0}.farris-ui-datatable .farris-table-footer thead>tr>th:last-child,.farris-ui-datatable .farris-table-header thead>tr>th:last-child{border-right:0}.farris-ui-datatable .farris-table-footer .checkbox-cell,.farris-ui-datatable .farris-table-header .checkbox-cell{width:40px}.farris-ui-datatable .farris-table-scorllable-body{overflow:hidden}.farris-ui-datatable .farris-table-scorllable-body .ui-table-tbody tr>td{background:inherit;border:1px solid #c8c8c8;padding:6px 10px;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.farris-ui-datatable .farris-table-scorllable-body .ui-table-tbody .tt-checkbox{margin-right:0;vertical-align:top}.farris-ui-datatable .farris-table-scorllable-body .ui-table-tbody .checkbox-cell{width:40px}.farris-ui-datatable .farris-table-scorllable-body .row-hight-light{background-color:#b7d7ff;color:#000}.farris-ui-datatable .farris-table-scorllable-body .ui-table-tbody tr:not(.row-hight-light):hover{cursor:pointer;background-color:#e7f2ff}.farris-ui-datatable .farris-table-scorllable-body .ui-table-tbody>tr:first-child>td{border-top:0}.farris-ui-datatable .farris-table-scorllable-body table>.ui-table-tbody>tr>td:last-child{border-right:0}.farris-ui-datatable .farris-table-scorllable-body table>.ui-table-tbody>tr>td:first-child{border-left:0}.farris-ui-datatable .farris-table-pager{background-color:#f3f3f3;height:50px;min-height:50px;width:100%;border-top:1px solid #c8c8c8}.filter-row{display:-webkit-box;display:flex;margin:10px 0}.filter-row .search-fields{min-width:140px}.filter-row .search-text{-webkit-box-flex:1;flex:1;margin-left:10px}.filter-row .search-text .btn-outline-secondary{border-color:#ced4da}.filter-row .search-text .btn-outline-secondary:active,.filter-row .search-text .btn-outline-secondary:focus{box-shadow:none}.filter-row .form-control:focus{border-color:#ced4da;box-shadow:none}.filter-row .custom-select:focus{box-shadow:none}.farris-datatable{position:relative}.resizable-column{background-clip:padding-box;position:relative}.column-resizer{display:block;position:absolute!important;top:0;right:0;margin:0;width:.5em;height:100%;padding:0;cursor:col-resize;border:1px solid transparent}.column-resizer-helper{width:1px;position:absolute;z-index:10;display:none;background-color:#6c757d;opacity:.6}.farris-table-fixed-body,.farris-table-fixed-header{position:absolute;top:0;left:0;overflow:hidden;box-shadow:2px 0 6px -2px rgba(0,0,0,.2)}.farris-table-fixed-right-body,.farris-table-fixed-right-header{position:absolute;top:0;right:0;overflow:hidden;box-shadow:-2px 0 6px -2px rgba(0,0,0,.2)}.td-hidden{visibility:hidden}@media (min-width:576px){.td-sm-hidden{visibility:hidden!important}.td-sm-visible{visibility:visible!important}}@media (min-width:768px){.td-md-hidden{visibility:hidden!important}.td-md-visible{visibility:visible!important}}@media (min-width:992px){.td-lg-hidden{visibility:hidden!important}.td-lg-visible{visibility:visible!important}}@media (min-width:1200px){.td-xl-hidden{visibility:hidden!important}.td-xl-visible{visibility:visible!important}}"]
                }] }
    ];
    /** @nocollapse */
    DataTableComponent.ctorParameters = function () { return [
        { type: DataTableService },
        { type: IdService },
        { type: ElementRef },
        { type: ChangeDetectorRef },
        { type: NgZone }
    ]; };
    DataTableComponent.propDecorators = {
        keydownEnterEdit: [{ type: Input }],
        id: [{ type: Input }],
        size: [{ type: Input }],
        allColumnsTitle: [{ type: Input }],
        width: [{ type: Input }],
        height: [{ type: Input }],
        fill: [{ type: Input }],
        pagination: [{ type: Input }],
        pagerOnServer: [{ type: Input }],
        pageSize: [{ type: Input }],
        pageIndex: [{ type: Input }],
        showPageInfo: [{ type: Input }],
        showPageNumber: [{ type: Input }],
        showPageList: [{ type: Input }],
        pagerViewMode: [{ type: Input }],
        showHeader: [{ type: Input }],
        pageList: [{ type: Input }],
        total: [{ type: Input }],
        columns: [{ type: Input }],
        searchFields: [{ type: Input }],
        showFilterBar: [{ type: Input }],
        data: [{ type: Input }],
        remote: [{ type: Input }],
        remoteSort: [{ type: Input }],
        sortName: [{ type: Input }],
        sortOrder: [{ type: Input }],
        multiSort: [{ type: Input }],
        beforeSortColumn: [{ type: Input }],
        singleSelect: [{ type: Input }],
        idField: [{ type: Input }],
        hover: [{ type: Input }],
        striped: [{ type: Input }],
        bordered: [{ type: Input }],
        rowClassName: [{ type: Input }],
        cellClassName: [{ type: Input }],
        rowStyler: [{ type: Input }],
        cellStyler: [{ type: Input }],
        selections: [{ type: Input }],
        scorllableBody: [{ type: ViewChild, args: ['scorllableBody',] }],
        tableHeader: [{ type: ViewChild, args: ['tableHeader',] }],
        tablePager: [{ type: ViewChild, args: ['tablePager',] }],
        dtHeader: [{ type: ViewChild, args: ['dtHeader',] }],
        dtBody: [{ type: ViewChild, args: ['dtBody',] }],
        dtLeftBody: [{ type: ViewChild, args: ['dtLeftBody',] }],
        dtRightBody: [{ type: ViewChild, args: ['dtRightBody',] }],
        dtLeftFixed: [{ type: ViewChild, args: ['dtLeftFixed',] }],
        dtRightFixed: [{ type: ViewChild, args: ['dtRightFixed',] }],
        pager: [{ type: ViewChild, args: ['pager',] }],
        inputGroup: [{ type: ViewChild, args: ['inputgroup',] }],
        pageChanged: [{ type: Output }],
        pageSizeChanged: [{ type: Output }],
        search: [{ type: Output }],
        columnSorted: [{ type: Output }],
        rowDblClick: [{ type: Output }],
        selectedRow: [{ type: Output }],
        selectRows: [{ type: Output }],
        unSelectRow: [{ type: Output }],
        cellClick: [{ type: Output }],
        clearSearchValue: [{ type: Output }],
        checkAll: [{ type: Output }],
        sortChange: [{ type: Output }],
        columnsRef: [{ type: ContentChildren, args: [ColumnDirective,] }],
        footer: [{ type: ContentChild, args: ['footer',] }],
        dragLine: [{ type: ViewChild, args: ['dragLine',] }],
        resizableColumns: [{ type: Input }],
        keepSelect: [{ type: Input }],
        perfectScrollbar: [{ type: ViewChild, args: ['perfectScrollbar',] }]
    };
    return DataTableComponent;
}());
export { DataTableComponent };
if (false) {
    /** @type {?} */
    DataTableComponent.prototype.searchButtonText;
    /** @type {?} */
    DataTableComponent.prototype.keydownEnterEdit;
    /** @type {?} */
    DataTableComponent.prototype.id;
    /** @type {?} */
    DataTableComponent.prototype.size;
    /** @type {?} */
    DataTableComponent.prototype.allColumnsTitle;
    /** @type {?} */
    DataTableComponent.prototype.width;
    /** @type {?} */
    DataTableComponent.prototype.height;
    /** @type {?} */
    DataTableComponent.prototype.tableHeight;
    /** @type {?} */
    DataTableComponent.prototype.fill;
    /** @type {?} */
    DataTableComponent.prototype.pagination;
    /** @type {?} */
    DataTableComponent.prototype.pagerOnServer;
    /** @type {?} */
    DataTableComponent.prototype.pageSize;
    /** @type {?} */
    DataTableComponent.prototype.pageIndex;
    /** @type {?} */
    DataTableComponent.prototype.showPageInfo;
    /** @type {?} */
    DataTableComponent.prototype.showPageNumber;
    /** @type {?} */
    DataTableComponent.prototype.showPageList;
    /** @type {?} */
    DataTableComponent.prototype.pagerViewMode;
    /**
     * 显示表头
     * @type {?}
     */
    DataTableComponent.prototype.showHeader;
    /**
     * @type {?}
     * @private
     */
    DataTableComponent.prototype._pageList;
    /** @type {?} */
    DataTableComponent.prototype.total;
    /** @type {?} */
    DataTableComponent.prototype.columns;
    /** @type {?} */
    DataTableComponent.prototype.searchFields;
    /** @type {?} */
    DataTableComponent.prototype.showFilterBar;
    /** @type {?} */
    DataTableComponent.prototype._data;
    /** @type {?} */
    DataTableComponent.prototype.copyData;
    /** @type {?} */
    DataTableComponent.prototype.remote;
    /**
     * 启用远端排序
     * @type {?}
     */
    DataTableComponent.prototype.remoteSort;
    /**
     * 排序字段
     * @type {?}
     */
    DataTableComponent.prototype.sortName;
    /**
     * 排序方式 asc | desc
     * @type {?}
     */
    DataTableComponent.prototype.sortOrder;
    /**
     * 允许多列排序
     * @type {?}
     */
    DataTableComponent.prototype.multiSort;
    /** @type {?} */
    DataTableComponent.prototype.beforeSortColumn;
    /** @type {?} */
    DataTableComponent.prototype.singleSelect;
    /** @type {?} */
    DataTableComponent.prototype.idField;
    /** @type {?} */
    DataTableComponent.prototype.hover;
    /** @type {?} */
    DataTableComponent.prototype.striped;
    /** @type {?} */
    DataTableComponent.prototype.bordered;
    /** @type {?} */
    DataTableComponent.prototype.rowClassName;
    /** @type {?} */
    DataTableComponent.prototype.cellClassName;
    /** @type {?} */
    DataTableComponent.prototype.rowStyler;
    /** @type {?} */
    DataTableComponent.prototype.cellStyler;
    /** @type {?} */
    DataTableComponent.prototype.scorllableBody;
    /** @type {?} */
    DataTableComponent.prototype.tableHeader;
    /** @type {?} */
    DataTableComponent.prototype.tablePager;
    /** @type {?} */
    DataTableComponent.prototype.dtHeader;
    /** @type {?} */
    DataTableComponent.prototype.dtBody;
    /** @type {?} */
    DataTableComponent.prototype.dtLeftBody;
    /** @type {?} */
    DataTableComponent.prototype.dtRightBody;
    /** @type {?} */
    DataTableComponent.prototype.dtLeftFixed;
    /** @type {?} */
    DataTableComponent.prototype.dtRightFixed;
    /** @type {?} */
    DataTableComponent.prototype.pager;
    /** @type {?} */
    DataTableComponent.prototype.inputGroup;
    /** @type {?} */
    DataTableComponent.prototype.pageChanged;
    /** @type {?} */
    DataTableComponent.prototype.pageSizeChanged;
    /** @type {?} */
    DataTableComponent.prototype.search;
    /** @type {?} */
    DataTableComponent.prototype.columnSorted;
    /** @type {?} */
    DataTableComponent.prototype.rowDblClick;
    /** @type {?} */
    DataTableComponent.prototype.selectedRow;
    /** @type {?} */
    DataTableComponent.prototype.selectRows;
    /** @type {?} */
    DataTableComponent.prototype.unSelectRow;
    /** @type {?} */
    DataTableComponent.prototype.cellClick;
    /** @type {?} */
    DataTableComponent.prototype.clearSearchValue;
    /** @type {?} */
    DataTableComponent.prototype.checkAll;
    /** @type {?} */
    DataTableComponent.prototype.sortChange;
    /** @type {?} */
    DataTableComponent.prototype.columnsRef;
    /** @type {?} */
    DataTableComponent.prototype.footer;
    /** @type {?} */
    DataTableComponent.prototype.dragLine;
    /** @type {?} */
    DataTableComponent.prototype.resizableColumns;
    /**
     * 针对同一条记录，单选时，多次单击后不取消选中。
     * @type {?}
     */
    DataTableComponent.prototype.keepSelect;
    /** @type {?} */
    DataTableComponent.prototype.hasRowTepml;
    /** @type {?} */
    DataTableComponent.prototype.datatableContainer;
    /** @type {?} */
    DataTableComponent.prototype.dragLineX;
    /** @type {?} */
    DataTableComponent.prototype.moveable;
    /** @type {?} */
    DataTableComponent.prototype.currentColumn;
    /** @type {?} */
    DataTableComponent.prototype.hasFixed;
    /** @type {?} */
    DataTableComponent.prototype.fixedLeftWidth;
    /** @type {?} */
    DataTableComponent.prototype.fixedRightWidth;
    /** @type {?} */
    DataTableComponent.prototype.searchData;
    /** @type {?} */
    DataTableComponent.prototype.subscription;
    /** @type {?} */
    DataTableComponent.prototype.headerTr;
    /** @type {?} */
    DataTableComponent.prototype.leftFixedHeaderTr;
    /** @type {?} */
    DataTableComponent.prototype.rightFixedHeaderTr;
    /** @type {?} */
    DataTableComponent.prototype.filter;
    /** @type {?} */
    DataTableComponent.prototype.maxSize;
    /** @type {?} */
    DataTableComponent.prototype.directionLinks;
    /** @type {?} */
    DataTableComponent.prototype.autoHide;
    /** @type {?} */
    DataTableComponent.prototype.responsive;
    /** @type {?} */
    DataTableComponent.prototype.paginationOptions;
    /** @type {?} */
    DataTableComponent.prototype.labels;
    /**
     * @type {?}
     * @private
     */
    DataTableComponent.prototype._currentRowIndex;
    /**
     * @type {?}
     * @private
     */
    DataTableComponent.prototype._currentRow;
    /** @type {?} */
    DataTableComponent.prototype.perfectScrollbar;
    /** @type {?} */
    DataTableComponent.prototype.scorllableBodyHeight;
    /**
     * @type {?}
     * @private
     */
    DataTableComponent.prototype.ps;
    /** @type {?} */
    DataTableComponent.prototype.trackByRows;
    /**
     * @type {?}
     * @private
     */
    DataTableComponent.prototype.dataService;
    /**
     * @type {?}
     * @private
     */
    DataTableComponent.prototype.idService;
    /**
     * @type {?}
     * @private
     */
    DataTableComponent.prototype.el;
    /** @type {?} */
    DataTableComponent.prototype.cd;
    /**
     * @type {?}
     * @private
     */
    DataTableComponent.prototype.ngZone;
}
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YXRhYmxlLmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiJuZzovL0BmYXJyaXMvdWktZGF0YXRhYmxlLyIsInNvdXJjZXMiOlsibGliL2RhdGF0YWJsZS5jb21wb25lbnQudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7QUFBQSxPQUFPLEVBQUUsbUJBQW1CLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQztBQUM3RCxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxlQUFlLENBQUM7Ozs7Ozs7OztBQVVsRCxPQUFPLEVBQ0gsU0FBUyxFQUFVLFNBQVMsRUFBRSxVQUFVLEVBQWEsS0FBSyxFQUFpQixZQUFZLEVBQUUsV0FBVyxFQUNwRyxTQUFTLEVBQW1DLGVBQWUsRUFBRSxNQUFNLEVBQUUsWUFBWSxFQUFFLGlCQUFpQixFQUFxQixNQUFNLEVBQ2xJLE1BQU0sZUFBZSxDQUFDO0FBRXZCLE9BQU8sRUFBNEIsRUFBRSxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBRXBELE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDhCQUE4QixDQUFDO0FBQ3pFLE9BQU8sRUFBc0IsMkJBQTJCLEVBQUUsTUFBTSx1QkFBdUIsQ0FBQztBQUN4RixPQUFPLEVBQUUsU0FBUyxFQUFFLE1BQU0sbUJBQW1CLENBQUM7QUFHOUMsT0FBTyxFQUFFLFFBQVEsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQzlDLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSw4QkFBOEIsQ0FBQztBQUMvRCxPQUFPLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN2RCxPQUFPLEVBQUUsd0JBQXdCLEVBQUUsTUFBTSxvQ0FBb0MsQ0FBQztBQUs5RTtJQXVNSSw0QkFBb0IsV0FBNkIsRUFBVSxTQUFvQixFQUFVLEVBQWMsRUFDNUYsRUFBcUIsRUFBVSxNQUFjO1FBRHhELGlCQXNCQztRQXRCbUIsZ0JBQVcsR0FBWCxXQUFXLENBQWtCO1FBQVUsY0FBUyxHQUFULFNBQVMsQ0FBVztRQUFV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eUNBQWdDOztJQUtoQyw4Q0FBMkU7O0lBRTNFLGtEQUE2Qjs7Ozs7SUF5QjdCLGdDQUE2Qjs7SUE2QzdCLHlDQUVDOzs7OztJQXZFVyx5Q0FBcUM7Ozs7O0lBQUUsdUNBQTRCOzs7OztJQUFFLGdDQUFzQjs7SUFDbkcsZ0NBQTRCOzs7OztJQUFFLG9DQUFzQiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IElucHV0R3JvdXBDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL3VpLWlucHV0LWdyb3VwJztcclxuaW1wb3J0IHsgQ2hhbmdlRGV0ZWN0b3JSZWYgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcclxuLypcclxuICogQEF1dGhvcjog55av54uC56eA5omNKEx1Y2FzIEh1YW5nKVxyXG4gKiBARGF0ZTogMjAxOS0wNy0xMCAxMTo0NDo0OVxyXG4gKiBATGFzdEVkaXRvcnM6IOeWr+eLguengOaJjShMdWNhcyBIdWFuZylcclxuICogQExhc3RFZGl0VGltZTogMjAxOS0xMS0wNSAxMTo0NDoxOFxyXG4gKiBAUVE6IDEwNTU4MTgyMzlcclxuICogQFZlcnNpb246IHYwLjAuMVxyXG4gKi9cclxuXHJcbmltcG9ydCB7XHJcbiAgICBDb21wb25lbnQsIE9uSW5pdCwgVmlld0NoaWxkLCBFbGVtZW50UmVmLCBPbkNoYW5nZXMsIElucHV0LCBTaW1wbGVDaGFuZ2VzLCBDb250ZW50Q2hpbGQsIFRlbXBsYXRlUmVmLFxyXG4gICAgUXVlcnlMaXN0LCBBZnRlckNvbnRlbnRJbml0LCBBZnRlclZpZXdJbml0LCBDb250ZW50Q2hpbGRyZW4sIE91dHB1dCwgRXZlbnRFbWl0dGVyLCBWaWV3RW5jYXBzdWxhdGlvbiwgT25EZXN0cm95LCBJbmplY3QsIE5nWm9uZVxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5cclxuaW1wb3J0IHsgU3Vic2NyaXB0aW9uLCBPYnNlcnZhYmxlLCBvZiB9IGZyb20gJ3J4anMnO1xyXG5pbXBvcnQgUGVyZmVjdFNjcm9sbGJhciBmcm9tICdwZXJmZWN0LXNjcm9sbGJhcic7XHJcbmltcG9ydCB7IFBlcmZlY3RTY3JvbGxiYXJDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL3VpLXBlcmZlY3Qtc2Nyb2xsYmFyJztcclxuaW1wb3J0IHsgUGFnaW5hdGlvbkluc3RhbmNlLCBQYWdpbmF0aW9uQ29udHJvbHNDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL3VpLXBhZ2luYXRpb24nO1xyXG5pbXBvcnQgeyBJZFNlcnZpY2UgfSBmcm9tICdAZmFycmlzL3VpLWNvbW1vbic7XHJcbmltcG9ydCB7IERhdGFDb2x1bW4gfSBmcm9tICdAZmFycmlzL3VpLWNvbW1vbi9jb2x1bW4nO1xyXG5cclxuaW1wb3J0IHsgZGVlcENvcHkgfSBmcm9tICcuL2RhdGF0YWJsZS1jb2x1bW4nO1xyXG5pbXBvcnQgeyBDb2x1bW5EaXJlY3RpdmUgfSBmcm9tICcuL2RhdGF0YWJsZS1jb2x1bW4uY29tcG9uZW50JztcclxuaW1wb3J0IHsgRGF0YVRhYmxlU2VydmljZSB9IGZyb20gJy4vZGF0YXRhYmxlLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBEYXRhVGFibGVIZWFkZXJDb21wb25lbnQgfSBmcm9tICcuL3RhYmxlL2RhdGF0YWJsZS1oZWFkZXIuY29tcG9uZW50JztcclxuXHJcblxyXG5cclxuXHJcbkBDb21wb25lbnQoe1xyXG4gICAgc2VsZWN0b3I6ICdmYXJyaXN1aS1kYXRhdGFibGUsZmFycmlzLWRhdGF0YWJsZScsXHJcbiAgICB0ZW1wbGF0ZVVybDogJy4vZGF0YXRhYmxlLmNvbXBvbmVudC5odG1sJyxcclxuICAgIHN0eWxlVXJsczogWycuL2RhdGF0YWJsZS5zY3NzJ10sXHJcbiAgICBlbmNhcHN1bGF0aW9uOiBWaWV3RW5jYXBzdWxhdGlvbi5Ob25lLFxyXG4gICAgcHJvdmlkZXJzOiBbXHJcbiAgICAgICAgRGF0YVRhYmxlU2VydmljZVxyXG4gICAgXVxyXG59KVxyXG5leHBvcnQgY2xhc3MgRGF0YVRhYmxlQ29tcG9uZW50IGltcGxlbWVudHMgT25Jbml0LCBPbkNoYW5nZXMsIE9uRGVzdHJveSwgQWZ0ZXJDb250ZW50SW5pdCwgQWZ0ZXJWaWV3SW5pdCB7XHJcbiAgICBzZWFyY2hCdXR0b25UZXh0ID0gJzxpIGNsYXNzPVwiZi1pY29uIGYtaWNvbi1zZWFyY2hcIj48L2k+JztcclxuICAgIEBJbnB1dCgpIGtleWRvd25FbnRlckVkaXQgPSBmYWxzZTtcclxuICAgIEBJbnB1dCgpIGlkOiBzdHJpbmc7XHJcbiAgICBASW5wdXQoKSBzaXplOiBzdHJpbmc7XHJcbiAgICBASW5wdXQoKSBhbGxDb2x1bW5zVGl0bGUgPSAn5omA5pyJ5YiXJztcclxuICAgIC8vIHRhYmxlIOWwuuWvuFxyXG4gICAgQElucHV0KCkgd2lkdGg7XHJcbiAgICAvLyDnu4Tku7bnuqfpq5jluqbljIXmi6zov4fmu6TmnaHpq5jluqZcclxuICAgIEBJbnB1dCgpIGhlaWdodDtcclxuXHJcbiAgICB0YWJsZUhlaWdodDogbnVtYmVyOyAvLyDmlbDmja7ooajpq5jluqZcclxuICAgIC8vIOaYr+WQpuWhq+WFhVxyXG4gICAgQElucHV0KCkgZmlsbCA9IGZhbHNlO1xyXG4gICAgLy8g6buY6K6k5YiG6aG1XHJcbiAgICBASW5wdXQoKSBwYWdpbmF0aW9uID0gdHJ1ZTtcclxuICAgIEBJbnB1dCgpIHBhZ2VyT25TZXJ2ZXIgPSB0cnVlO1xyXG4gICAgQElucHV0KCkgcGFnZVNpemUgPSAxMDtcclxuICAgIEBJbnB1dCgpIHBhZ2VJbmRleCA9IDE7XHJcbiAgICBASW5wdXQoKSBzaG93UGFnZUluZm8gPSB0cnVlO1xyXG4gICAgQElucHV0KCkgc2hvd1BhZ2VOdW1iZXIgPSB0cnVlO1xyXG4gICAgQElucHV0KCkgc2hvd1BhZ2VMaXN0ID0gdHJ1ZTtcclxuICAgIEBJbnB1dCgpIHBhZ2VyVmlld01vZGUgPSAnZGVmYXVsdCc7XHJcbiAgICAvKiog5pi+56S66KGo5aS0ICovXHJcbiAgICBASW5wdXQoKSBzaG93SGVhZGVyID0gdHJ1ZTtcclxuXHJcbiAgICBwcml2YXRlIF9wYWdlTGlzdCA9IFsxMCwgMjAsIDMwLCA1MCwgMTAwXTtcclxuXHJcbiAgICBnZXQgcGFnZUxpc3QoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX3BhZ2VMaXN0O1xyXG4gICAgfVxyXG4gICAgQElucHV0KCkgc2V0IHBhZ2VMaXN0KHZhbCkge1xyXG4gICAgICAgIHRoaXMuX3BhZ2VMaXN0ID0gdmFsO1xyXG4gICAgICAgIGlmICh0aGlzLnBhZ2VyKSB7XHJcbiAgICAgICAgICAgIHRoaXMucGFnZXIuc2V0UGFnZUxpc3QodmFsKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgQElucHV0KCkgdG90YWwgPSAwO1xyXG4gICAgLy8g5YiXIOaVsOaNrlxyXG4gICAgQElucHV0KCkgY29sdW1uczogRGF0YUNvbHVtbltdO1xyXG4gICAgQElucHV0KCkgc2VhcmNoRmllbGRzOiB7IGxhYmVsOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcgfVtdO1xyXG4gICAgLy8g5Y+v562b6YCJXHJcbiAgICBASW5wdXQoKSBzaG93RmlsdGVyQmFyID0gZmFsc2U7XHJcbiAgICAvLyB0YWJsZSAg5pWw5o2uXHJcbiAgICBfZGF0YSA9IFtdO1xyXG4gICAgQElucHV0KClcclxuICAgIGdldCBkYXRhKCkge1xyXG4gICAgICAgIHJldHVybiB0aGlzLl9kYXRhO1xyXG4gICAgfVxyXG4gICAgc2V0IGRhdGEoZGF0YTogQXJyYXk8YW55Pikge1xyXG4gICAgICAgIHRoaXMuX2RhdGEgPSBkYXRhO1xyXG4gICAgfVxyXG4gICAgLy8g5rex5ou36LSdZGF0YSDmlbDmja5cclxuICAgIGNvcHlEYXRhOiBhbnk7XHJcblxyXG4gICAgQElucHV0KCkgcmVtb3RlID0gJ2NsaWVudCc7XHJcblxyXG4gICAgLyoqIOWQr+eUqOi/nOerr+aOkuW6jyAqL1xyXG4gICAgQElucHV0KCkgcmVtb3RlU29ydCA9IHRydWU7XHJcbiAgICAvKiog5o6S5bqP5a2X5q61ICovXHJcbiAgICBASW5wdXQoKSBzb3J0TmFtZTogc3RyaW5nO1xyXG4gICAgLyoqIOaOkuW6j+aWueW8jyBhc2MgfCBkZXNjICovXHJcbiAgICBASW5wdXQoKSBzb3J0T3JkZXI6IHN0cmluZztcclxuICAgIC8qKiDlhYHorrjlpJrliJfmjpLluo8gKi9cclxuICAgIEBJbnB1dCgpIG11bHRpU29ydCA9IGZhbHNlO1xyXG4gICAgQElucHV0KCkgYmVmb3JlU29ydENvbHVtbjogKGZpZWxkOiBzdHJpbmcsIG9yZGVyOiBzdHJpbmcpID0+IE9ic2VydmFibGU8Ym9vbGVhbj47XHJcblxyXG4gICAgLy8g5aSa6YCJICDljZXpgIlcclxuICAgIEBJbnB1dCgpIHNpbmdsZVNlbGVjdCA9IHRydWU7XHJcbiAgICBASW5wdXQoKSBpZEZpZWxkID0gJ2lkJztcclxuICAgIC8vIOaYvuekuum8oOagh+aCrOWBnOmrmOS6rlxyXG4gICAgQElucHV0KCkgaG92ZXIgPSB0cnVlO1xyXG4gICAgLy8g5paR6ams57q/XHJcbiAgICBASW5wdXQoKSBzdHJpcGVkOiBib29sZWFuO1xyXG4gICAgLy8g6L655qGGXHJcbiAgICBASW5wdXQoKSBib3JkZXJlZDogYm9vbGVhbjtcclxuICAgIC8vIOaUr+aMgea3u+WKoOihjCDljZXlhYPmoLwg57G75qC35byPXHJcbiAgICBASW5wdXQoKSByb3dDbGFzc05hbWU6IChyb3c6IGFueSwgaW5kZXg6IG51bWJlcikgPT4gc3RyaW5nO1xyXG4gICAgQElucHV0KCkgY2VsbENsYXNzTmFtZTogKHZhbHVlOiBhbnksIGNvbDogYW55KSA9PiBzdHJpbmc7XHJcblxyXG4gICAgQElucHV0KCkgcm93U3R5bGVyOiAoYXJnczogYW55KSA9PiBhbnk7XHJcbiAgICBASW5wdXQoKSBjZWxsU3R5bGVyOiAodmFsOiBhbnkpID0+IGFueTtcclxuXHJcbiAgICBASW5wdXQoKVxyXG4gICAgc2V0IHNlbGVjdGlvbnModikge1xyXG4gICAgICAgIHRoaXMuZHRCb2R5LnNlbGVjdGlvbnMgPSB2ID8gdiA6IHt9O1xyXG4gICAgfVxyXG4gICAgZ2V0IHNlbGVjdGlvbnMoKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuZHRCb2R5LnNlbGVjdGlvbnM7XHJcbiAgICB9XHJcbiAgICAvLyDmu5rliqjmnaHlvJXnlKhcclxuICAgIEBWaWV3Q2hpbGQoJ3Njb3JsbGFibGVCb2R5Jykgc2NvcmxsYWJsZUJvZHk6IEVsZW1lbnRSZWY7XHJcbiAgICBAVmlld0NoaWxkKCd0YWJsZUhlYWRlcicpIHRhYmxlSGVhZGVyOiBFbGVtZW50UmVmO1xyXG4gICAgQFZpZXdDaGlsZCgndGFibGVQYWdlcicpIHRhYmxlUGFnZXI6IEVsZW1lbnRSZWY7XHJcbiAgICBAVmlld0NoaWxkKCdkdEhlYWRlcicpIGR0SGVhZGVyOiBEYXRhVGFibGVIZWFkZXJDb21wb25lbnQ7XHJcbiAgICBAVmlld0NoaWxkKCdkdEJvZHknKSBkdEJvZHk6IGFueTtcclxuICAgIEBWaWV3Q2hpbGQoJ2R0TGVmdEJvZHknKSBkdExlZnRCb2R5OiBhbnk7XHJcbiAgICBAVmlld0NoaWxkKCdkdFJpZ2h0Qm9keScpIGR0UmlnaHRCb2R5OiBhbnk7XHJcbiAgICBAVmlld0NoaWxkKCdkdExlZnRGaXhlZCcpIGR0TGVmdEZpeGVkOiBFbGVtZW50UmVmO1xyXG4gICAgQFZpZXdDaGlsZCgnZHRSaWdodEZpeGVkJykgZHRSaWdodEZpeGVkOiBFbGVtZW50UmVmO1xyXG4gICAgQFZpZXdDaGlsZCgncGFnZXInKSBwYWdlcjogUGFnaW5hdGlvbkNvbnRyb2xzQ29tcG9uZW50O1xyXG4gICAgQFZpZXdDaGlsZCgnaW5wdXRncm91cCcpIGlucHV0R3JvdXA6IElucHV0R3JvdXBDb21wb25lbnQ7XHJcbiAgICAvLyDliIbpobXkuovku7ZcclxuICAgIEBPdXRwdXQoKSBwYWdlQ2hhbmdlZCA9IG5ldyBFdmVudEVtaXR0ZXIoKTtcclxuICAgIEBPdXRwdXQoKSBwYWdlU2l6ZUNoYW5nZWQgPSBuZXcgRXZlbnRFbWl0dGVyKCk7XHJcbiAgICBAT3V0cHV0KCkgc2VhcmNoID0gbmV3IEV2ZW50RW1pdHRlcjx7IGZpZWxkOiBzdHJpbmcsIHZhbHVlOiBzdHJpbmcgfT4oKTtcclxuICAgIEBPdXRwdXQoKSBjb2x1bW5Tb3J0ZWQgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuICAgIEBPdXRwdXQoKSByb3dEYmxDbGljayA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG4gICAgQE91dHB1dCgpIHNlbGVjdGVkUm93ID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcbiAgICAvLyDlhbzlrrlcclxuICAgIEBPdXRwdXQoKSBzZWxlY3RSb3dzID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcbiAgICBAT3V0cHV0KCkgdW5TZWxlY3RSb3cgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuICAgIEBPdXRwdXQoKSBjZWxsQ2xpY2sgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcclxuICAgIEBPdXRwdXQoKSBjbGVhclNlYXJjaFZhbHVlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG4gICAgQE91dHB1dCgpIGNoZWNrQWxsID0gbmV3IEV2ZW50RW1pdHRlcjxhbnk+KCk7XHJcblxyXG5cclxuICAgIEBPdXRwdXQoKSBzb3J0Q2hhbmdlID0gbmV3IEV2ZW50RW1pdHRlcigpO1xyXG5cclxuICAgIEBDb250ZW50Q2hpbGRyZW4oQ29sdW1uRGlyZWN0aXZlKSBjb2x1bW5zUmVmOiBRdWVyeUxpc3Q8Q29sdW1uRGlyZWN0aXZlPjtcclxuICAgIC8vIOihqOWwvlxyXG4gICAgQENvbnRlbnRDaGlsZCgnZm9vdGVyJykgZm9vdGVyOiBUZW1wbGF0ZVJlZjxhbnk+O1xyXG4gICAgLy8g6KGo5qC85Y+v5ouW5ou95a695bqm57O75YiXXHJcbiAgICAvLyDmi5bmi73nur9cclxuICAgIEBWaWV3Q2hpbGQoJ2RyYWdMaW5lJykgZHJhZ0xpbmU6IEVsZW1lbnRSZWY7XHJcbiAgICAvLyDmmK/lkKblj6/mi5bmi70gIOm7mOiupOWPr+S7pVxyXG4gICAgQElucHV0KCkgcmVzaXphYmxlQ29sdW1ucyA9IHRydWU7XHJcblxyXG4gICAgLyoqIOmSiOWvueWQjOS4gOadoeiusOW9le+8jOWNlemAieaXtu+8jOWkmuasoeWNleWHu+WQjuS4jeWPlua2iOmAieS4reOAgiAqL1xyXG4gICAgQElucHV0KCkga2VlcFNlbGVjdCA9IHRydWU7XHJcblxyXG4gICAgLy8g5piv5ZCm5pyJ6KGM5qih5p2/XHJcbiAgICBoYXNSb3dUZXBtbCA9IGZhbHNlO1xyXG4gICAgLy8g55So5oi36I635Y+W6KGo5aS0K+ihqOagvOWGheWuueeahOmrmOW6piAg5a695bqmICDnrYlcclxuICAgIGRhdGF0YWJsZUNvbnRhaW5lcjogSFRNTERpdkVsZW1lbnQ7XHJcbiAgICAvLyDmi5bmi73nur/liJ3lp4vljJbkvY3nva5cclxuICAgIGRyYWdMaW5lWDogbnVtYmVyO1xyXG4gICAgLy8g6K6+572u5ouW5ou95YGc5q2i5ZmoXHJcbiAgICBtb3ZlYWJsZSA9IGZhbHNlO1xyXG4gICAgLy9cclxuICAgIGN1cnJlbnRDb2x1bW46IGFueTtcclxuICAgIC8vIOiuvue9ruW3puWbuuWumuWIl1xyXG4gICAgaGFzRml4ZWQ6IGJvb2xlYW47XHJcbiAgICBmaXhlZExlZnRXaWR0aDogc3RyaW5nO1xyXG4gICAgLy8g6K6+572u5Y+z5Zu65a6a5YiXXHJcbiAgICBmaXhlZFJpZ2h0V2lkdGg6IHN0cmluZztcclxuICAgIHNlYXJjaERhdGEgPSB7IGZpZWxkOiAnKicsIHZhbHVlOiAnJyB9O1xyXG4gICAgLy8g5LqL5Lu26K6i6ZiF5a2Y5YKoICDkvr/kuo7plIDmr4FcclxuICAgIHN1YnNjcmlwdGlvbjogU3Vic2NyaXB0aW9uW10gPSBbXTtcclxuICAgIC8vIOWbuuWumuWIl+aXtiAg5ZCM5LiA6KGM55qEdHIgaG92ZXLkuovku7ZcclxuICAgIGhlYWRlclRyOiBhbnk7XHJcbiAgICBsZWZ0Rml4ZWRIZWFkZXJUcjogYW55O1xyXG4gICAgcmlnaHRGaXhlZEhlYWRlclRyOiBhbnk7XHJcblxyXG4gICAgLy8g5Y6f5pWw5o2uXHJcbiAgICBwdWJsaWMgZmlsdGVyID0gJyc7XHJcbiAgICBwdWJsaWMgbWF4U2l6ZSA9IDc7XHJcbiAgICBwdWJsaWMgZGlyZWN0aW9uTGlua3MgPSB0cnVlO1xyXG4gICAgcHVibGljIGF1dG9IaWRlID0gZmFsc2U7XHJcbiAgICBwdWJsaWMgcmVzcG9uc2l2ZSA9IHRydWU7XHJcbiAgICBwdWJsaWMgcGFnaW5hdGlvbk9wdGlvbnM6IFBhZ2luYXRpb25JbnN0YW5jZSA9IHtcclxuICAgICAgICBpZDogJ0ZhcnJpcy1EYXRhVGFibGUtUGFnaW5hdGlvbicsXHJcbiAgICAgICAgaXRlbXNQZXJQYWdlOiB0aGlzLnBhZ2VTaXplLFxyXG4gICAgICAgIGN1cnJlbnRQYWdlOiB0aGlzLnBhZ2VJbmRleCxcclxuICAgICAgICBwYWdlTGlzdDogdGhpcy5wYWdlTGlzdCxcclxuICAgICAgICB0b3RhbEl0ZW1zOiB0aGlzLnRvdGFsLFxyXG4gICAgICAgIHJlbW90ZTogdGhpcy5wYWdlck9uU2VydmVyXHJcbiAgICB9O1xyXG4gICAgcHVibGljIGxhYmVsczogYW55ID0ge1xyXG4gICAgICAgIHByZXZpb3VzTGFiZWw6ICcgJyxcclxuICAgICAgICBuZXh0TGFiZWw6ICcgJyxcclxuICAgICAgICBzY3JlZW5SZWFkZXJQYWdpbmF0aW9uTGFiZWw6ICdQYWdpbmF0aW9uJyxcclxuICAgICAgICBzY3JlZW5SZWFkZXJQYWdlTGFiZWw6ICdwYWdlJyxcclxuICAgICAgICBzY3JlZW5SZWFkZXJDdXJyZW50TGFiZWw6IGBZb3UncmUgb24gcGFnZWBcclxuICAgIH07XHJcblxyXG4gICAgcHJpdmF0ZSBfY3VycmVudFJvd0luZGV4ID0gLTE7XHJcbiAgICBnZXQgY3VycmVudFJvd0luZGV4KCk6IG51bWJlciB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2N1cnJlbnRSb3dJbmRleDtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIF9jdXJyZW50Um93ID0gdW5kZWZpbmVkO1xyXG4gICAgZ2V0IGN1cnJlbnRSb3coKSB7XHJcbiAgICAgICAgcmV0dXJuIHRoaXMuX2N1cnJlbnRSb3c7XHJcbiAgICB9XHJcblxyXG4gICAgQFZpZXdDaGlsZCgncGVyZmVjdFNjcm9sbGJhcicpIHBlcmZlY3RTY3JvbGxiYXI6IFBlcmZlY3RTY3JvbGxiYXJDb21wb25lbnQ7XHJcblxyXG4gICAgc2NvcmxsYWJsZUJvZHlIZWlnaHQ6IG51bWJlcjtcclxuICAgIGNvbnN0cnVjdG9yKHByaXZhdGUgZGF0YVNlcnZpY2U6IERhdGFUYWJsZVNlcnZpY2UsIHByaXZhdGUgaWRTZXJ2aWNlOiBJZFNlcnZpY2UsIHByaXZhdGUgZWw6IEVsZW1lbnRSZWYsXHJcbiAgICAgICAgcHVibGljIGNkOiBDaGFuZ2VEZXRlY3RvclJlZiwgcHJpdmF0ZSBuZ1pvbmU6IE5nWm9uZSkge1xyXG5cclxuICAgICAgICB0aGlzLmRhdGFTZXJ2aWNlLnNlbGVjdGVkUm93LnN1YnNjcmliZSgoZTogYW55KSA9PiB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnNpbmdsZVNlbGVjdCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fY3VycmVudFJvd0luZGV4ID0gZS5yb3dJbmRleDtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2N1cnJlbnRSb3cgPSBlLnJvd0RhdGE7XHJcbiAgICAgICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5zZWxlY3Rpb25zKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kdEhlYWRlci5pc0NoZWNrQWxsID0gT2JqZWN0LmtleXModGhpcy5zZWxlY3Rpb25zKS5sZW5ndGggPT09IHRoaXMuZGF0YS5sZW5ndGg7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgdGhpcy5kYXRhU2VydmljZS51blNlbGVjdGVkUm93LnN1YnNjcmliZSgoZTogYW55KSA9PiB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLnNpbmdsZVNlbGVjdCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5fY3VycmVudFJvdyA9IHVuZGVmaW5lZDtcclxuICAgICAgICAgICAgICAgIHRoaXMuX2N1cnJlbnRSb3dJbmRleCA9IC0xO1xyXG4gICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5kdEhlYWRlci5pc0NoZWNrQWxsID0gZmFsc2U7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9KTtcclxuICAgIH1cclxuXHJcbiAgICBwcml2YXRlIHBzOiBQZXJmZWN0U2Nyb2xsYmFyO1xyXG5cclxuICAgIG5nT25Jbml0KCkge1xyXG4gICAgICAgIHNldFRpbWVvdXQoKCkgPT4ge1xyXG4gICAgICAgICAgICB0aGlzLnNldEJvZHlIZWlnaHQoKTtcclxuICAgICAgICAgICAgdGhpcy5wcyA9IHRoaXMucGVyZmVjdFNjcm9sbGJhci5kaXJlY3RpdmVSZWYucHMoKTtcclxuICAgICAgICB9KTtcclxuXHJcbiAgICAgICAgaWYgKCF0aGlzLmlkKSB7XHJcbiAgICAgICAgICAgIHRoaXMuaWQgPSBgZGF0YXRhYmxlXyR7dGhpcy5pZFNlcnZpY2UuZ2VuZXJhdGUoKX1gO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgdGhpcy5wYWdpbmF0aW9uT3B0aW9ucy5pZCA9IHRoaXMucGFnaW5hdGlvbk9wdGlvbnMuaWQgKyB0aGlzLmlkO1xyXG5cclxuICAgICAgICB0aGlzLmNvcHlEYXRhID0gZGVlcENvcHkodGhpcy5kYXRhKTtcclxuXHJcbiAgICAgICAgaWYgKCF0aGlzLmJlZm9yZVNvcnRDb2x1bW4pIHtcclxuICAgICAgICAgICAgdGhpcy5iZWZvcmVTb3J0Q29sdW1uID0gKCkgPT4gb2YodHJ1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIHByaXZhdGUgc2V0Qm9keUhlaWdodCgpIHtcclxuICAgICAgICB0aGlzLnRhYmxlSGVpZ2h0ID0gdGhpcy5oZWlnaHQ7XHJcbiAgICAgICAgaWYgKHRoaXMuc2hvd0ZpbHRlckJhcikge1xyXG4gICAgICAgICAgICB0aGlzLnRhYmxlSGVpZ2h0ID0gdGhpcy5oZWlnaHQgLSA0NjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICh0aGlzLnNob3dIZWFkZXIpIHtcclxuICAgICAgICAgICAgdGhpcy5zY29ybGxhYmxlQm9keUhlaWdodCA9IHRoaXMudGFibGVIZWlnaHQgLSB0aGlzLnRhYmxlSGVhZGVyLm5hdGl2ZUVsZW1lbnQuY2xpZW50SGVpZ2h0O1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKHRoaXMucGFnaW5hdGlvbikge1xyXG4gICAgICAgICAgICB0aGlzLnNjb3JsbGFibGVCb2R5SGVpZ2h0ID0gdGhpcy5zY29ybGxhYmxlQm9keUhlaWdodCAtIDUwO1xyXG4gICAgICAgIH1cclxuICAgICAgICBpZiAodGhpcy5jZCAmJiAhdGhpcy5jZFsnZGVzdHJveWVkJ10pIHtcclxuICAgICAgICAgICAgdGhpcy5jZC5kZXRlY3RDaGFuZ2VzKCk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uQ2xlYXJTZWFyY2hWYWx1ZSgpIHtcclxuICAgICAgICB0aGlzLnNlYXJjaERhdGEudmFsdWUgPSAnJztcclxuICAgICAgICB0aGlzLmNkLmRldGVjdENoYW5nZXMoKTtcclxuICAgICAgICB0aGlzLmNsZWFyU2VhcmNoVmFsdWUuZW1pdCgpO1xyXG4gICAgfVxyXG5cclxuICAgIHRyYWNrQnlSb3dzID0gKGluZGV4OiBudW1iZXIsIHJvdzogYW55KSA9PiB7XHJcbiAgICAgICAgcmV0dXJuIHJvd1t0aGlzLmlkRmllbGRdO1xyXG4gICAgfVxyXG5cclxuICAgIG5nT25DaGFuZ2VzKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcclxuICAgICAgICBpZiAoY2hhbmdlcy5oZWlnaHQgJiYgIWNoYW5nZXMuaGVpZ2h0LmlzRmlyc3RDaGFuZ2UoKSkge1xyXG4gICAgICAgICAgICB0aGlzLnNldEJvZHlIZWlnaHQoKTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChjaGFuZ2VzLnRvdGFsICYmICFjaGFuZ2VzLnRvdGFsLmlzRmlyc3RDaGFuZ2UoKSkge1xyXG4gICAgICAgICAgICB0aGlzLnBhZ2luYXRpb25PcHRpb25zLnRvdGFsSXRlbXMgPSBjaGFuZ2VzLnRvdGFsLmN1cnJlbnRWYWx1ZTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmIChjaGFuZ2VzLnBhZ2VTaXplKSB7XHJcbiAgICAgICAgICAgIHRoaXMucGFnaW5hdGlvbk9wdGlvbnMuaXRlbXNQZXJQYWdlID0gY2hhbmdlcy5wYWdlU2l6ZS5jdXJyZW50VmFsdWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBpZiAoY2hhbmdlcy5wYWdlSW5kZXggJiYgIWNoYW5nZXMucGFnZUluZGV4LmlzRmlyc3RDaGFuZ2UoKSkge1xyXG4gICAgICAgICAgICB0aGlzLnBhZ2luYXRpb25PcHRpb25zLmN1cnJlbnRQYWdlID0gY2hhbmdlcy5wYWdlSW5kZXguY3VycmVudFZhbHVlO1xyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKGNoYW5nZXMuZGF0YSAmJiAhY2hhbmdlcy5kYXRhLmlzRmlyc3RDaGFuZ2UoKSkge1xyXG4gICAgICAgICAgICBjb25zdCByb3dzID0gY2hhbmdlcy5kYXRhLmN1cnJlbnRWYWx1ZTtcclxuICAgICAgICAgICAgdGhpcy51cGRhdGVDaGVja2JveFN0YXRlKHJvd3MpO1xyXG4gICAgICAgICAgICB0aGlzLnBhZ2luYXRpb25PcHRpb25zID0geyAuLi50aGlzLnBhZ2luYXRpb25PcHRpb25zIH07XHJcbiAgICAgICAgICAgIHRoaXMuZGF0YVNlcnZpY2UubG9hZFN1Y2Nlc3MubmV4dChjaGFuZ2VzLmRhdGEuY3VycmVudFZhbHVlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgbmdBZnRlckNvbnRlbnRJbml0KCkge1xyXG4gICAgICAgIC8vIOaUr+aMgeWIl+e7hOS7tuWGmeWFpVxyXG4gICAgICAgIGlmICghdGhpcy5jb2x1bW5zKSB7XHJcbiAgICAgICAgICAgIGlmICh0aGlzLmNvbHVtbnNSZWYgJiYgdGhpcy5jb2x1bW5zUmVmLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgdGhpcy5jb2x1bW5zID0gdGhpcy5jb2x1bW5zUmVmLm1hcChjb2wgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiBjb2wud2lkdGgsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHRpdGxlOiBjb2wudGl0bGUsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpZWxkOiBjb2wuZmllbGQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGFsaWduOiBjb2wuYWxpZ24sXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGZpeGVkOiBjb2wuZml4ZWQsXHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGNsYXNzTmFtZTogY29sLmNsYXNzTmFtZSxcclxuICAgICAgICAgICAgICAgICAgICAgICAgbXVsdGlwbGVGaWx0ZXI6IGNvbC5tdWx0aXBsZUZpbHRlcixcclxuICAgICAgICAgICAgICAgICAgICAgICAgZmlsdGVyOiBjb2wuZmlsdGVyLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBtZWRpYTogY29sLm1lZGlhLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBzb3J0YWJsZTogY29sLnNvcnRhYmxlLFxyXG4gICAgICAgICAgICAgICAgICAgICAgICBlZGl0OiBjb2wuZWRpdFxyXG4gICAgICAgICAgICAgICAgICAgIH07XHJcbiAgICAgICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIG5nT25EZXN0cm95KCkge1xyXG4gICAgICAgIHRoaXMuc3Vic2NyaXB0aW9uLmZvckVhY2goc3ViID0+IHtcclxuICAgICAgICAgICAgc3ViLnVuc3Vic2NyaWJlKCk7XHJcbiAgICAgICAgfSk7XHJcbiAgICAgICAgdGhpcy5zdWJzY3JpcHRpb24gPSBbXTtcclxuXHJcbiAgICAgICAgdGhpcy5wYWdlciA9IG51bGw7XHJcbiAgICB9XHJcbiAgICBuZ0FmdGVyVmlld0luaXQoKSB7XHJcbiAgICAgICAgLy8g6I635Y+W6KGo5qC85a655ZmoICDljbPooajmoLxcclxuICAgICAgICB0aGlzLmRhdGF0YWJsZUNvbnRhaW5lciA9IHRoaXMuZWwubmF0aXZlRWxlbWVudC5xdWVyeVNlbGVjdG9yKCcuZmFycmlzLWRhdGF0YWJsZScpO1xyXG4gICAgICAgIC8vIHRoaXMuaGVhZGVyVHIgPSB0aGlzLnRhYmxlSGVhZGVyLm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgndHInKTtcclxuICAgIH1cclxuXHJcbiAgICB1cGRhdGVDaGVja2JveFN0YXRlKHJvd3M6IGFueVtdKSB7XHJcblxyXG4gICAgICAgIGNvbnN0IHVwZGF0ZUNoZWNrQWxsU3RhdHVzID0gKGYpID0+IHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuc2hvd0hlYWRlciAmJiB0aGlzLmR0SGVhZGVyKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLmR0SGVhZGVyLmlzQ2hlY2tBbGwgPSBmO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgfTtcclxuXHJcbiAgICAgICAgaWYgKHJvd3MgJiYgcm93cy5sZW5ndGgpIHtcclxuICAgICAgICAgICAgaWYgKHRoaXMuc2VsZWN0aW9ucykge1xyXG4gICAgICAgICAgICAgICAgY29uc3Qga2V5cyA9IE9iamVjdC5rZXlzKHRoaXMuZHRCb2R5Ll9zZWxlY3Rpb25zKTtcclxuICAgICAgICAgICAgICAgIGlmIChrZXlzLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgICAgIGxldCBjb3VudCA9IDA7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgaWRzID0gcm93cy5tYXAoKHJvdzogYW55KSA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiByb3dbdGhpcy5pZEZpZWxkXS50b1N0cmluZygpO1xyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG4gICAgICAgICAgICAgICAgICAgIGtleXMuZm9yRWFjaChpZCA9PiB7XHJcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChpZHMuaW5kZXhPZihpZCkgPiAtMSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgY291bnQrKztcclxuICAgICAgICAgICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgICAgIH0pO1xyXG5cclxuICAgICAgICAgICAgICAgICAgICB1cGRhdGVDaGVja0FsbFN0YXR1cyhpZHMubGVuZ3RoID09PSBjb3VudCk7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIHVwZGF0ZUNoZWNrQWxsU3RhdHVzKGZhbHNlKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHVwZGF0ZUNoZWNrQWxsU3RhdHVzKGZhbHNlKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIHVwZGF0ZUNoZWNrQWxsU3RhdHVzKGZhbHNlKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG5cclxuICAgIC8qKlxyXG4gICAgICog6I635Y+W6KGo5qC85a655Zmo55qE5L2N572uICDot53nprvlt6bovrnop4blj6PlkozkuIrovrnop4blj6PnmoTot53nprsgIOWmguaenOmhtemdouaciea7muWKqOadoSAg6ZyA6KaB5Yqg5LiK5rua5Yqo5p2h5rua5Yqo55qE5pWw5YC8XHJcbiAgICAgKi9cclxuICAgIGdldENvbnRhaW5lck9mZnNldCgpIHtcclxuICAgICAgICBjb25zdCByZWN0ID0gdGhpcy5kYXRhdGFibGVDb250YWluZXIuZ2V0Qm91bmRpbmdDbGllbnRSZWN0KCk7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICAgbGVmdDogcmVjdC5sZWZ0ICsgZG9jdW1lbnQuYm9keS5zY3JvbGxMZWZ0LFxyXG4gICAgICAgICAgICB0b3A6IHJlY3QudG9wICsgZG9jdW1lbnQuYm9keS5zY3JvbGxUb3AsXHJcbiAgICAgICAgICAgIHJpZ2h0OiByZWN0LnJpZ2h0LFxyXG4gICAgICAgICAgICBib3R0b206IHJlY3QuYm90dG9tLFxyXG4gICAgICAgIH07XHJcbiAgICB9XHJcbiAgICAvKipcclxuICAgICAqICDpvKDmoIfmjInkuIsgIOW8gOWni+iusOW9leaLluaLvee6v+eahOS9jee9riAg5ouW5ou957q/5Yiw6L6+5b2T5YmN6byg5qCH5L2N572uXHJcbiAgICAgKiBAcGFyYW0gZSDpvKDmoIflr7nosaFcclxuICAgICAqL1xyXG4gICAgYmVnaW5EcmFnKGUpIHtcclxuICAgICAgICB0aGlzLmRyYWdMaW5lWCA9IGUucGFnZVg7XHJcbiAgICAgICAgZXZlbnQucHJldmVudERlZmF1bHQoKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog6byg5qCH56e75YqoIOenu+WKqOaLluaLvee6v+S9jee9ruWPmOWKqFxyXG4gICAgICogQHBhcmFtIGUg6byg5qCH5a+56LGhXHJcbiAgICAgKi9cclxuICAgIG1vdmVEcmFnKGUpIHtcclxuICAgICAgICAvLyDojrflj5booajmoLznmoTlt6bovrnot53nprtcclxuICAgICAgICBjb25zdCBjb250YWluZXJMZWZ0ID0gdGhpcy5nZXRDb250YWluZXJPZmZzZXQoKS5sZWZ0O1xyXG4gICAgICAgIC8vIOiuvue9ruaLluaLvee6v+eahOmrmOW6piAg5Y2z6I635Y+W6KGo5aS0K+ihqOWGheWuuSvooajlsL7nmoTpq5jluqYgIOatpOihqOagvOe7k+aehOWMheWQq+S6huWIhumhtSAg5Zug5q2k6KaB5Y675o6J5YiG6aG155qE6auY5bqmXHJcbiAgICAgICAgaWYgKHRoaXMudGFibGVQYWdlcikge1xyXG4gICAgICAgICAgICB0aGlzLmRyYWdMaW5lLm5hdGl2ZUVsZW1lbnQuc3R5bGUuaGVpZ2h0ID0gdGhpcy5kYXRhdGFibGVDb250YWluZXIub2Zmc2V0SGVpZ2h0IC1cclxuICAgICAgICAgICAgICAgIHRoaXMudGFibGVQYWdlci5uYXRpdmVFbGVtZW50Lm9mZnNldEhlaWdodCArICdweCc7XHJcbiAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgLy8gY29uc3QgaGVhZGVySGVpZ2h0ID0gdGhpcy5lbC5uYXRpdmVFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoJy5mYXJyaXMtdGFibGUtaGVhZGVyJyk7XHJcbiAgICAgICAgICAgIC8vIGNvbnN0IGJvZHlIZWlnaHQgPSB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvcignLnBzLWNvbnRlbnQnKTtcclxuICAgICAgICAgICAgdGhpcy5kcmFnTGluZS5uYXRpdmVFbGVtZW50LnN0eWxlLmhlaWdodCA9IHRoaXMuZGF0YXRhYmxlQ29udGFpbmVyLm9mZnNldEhlaWdodCArICdweCc7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIOiuvue9ruaLluaLvee6v+eahOmrmOW6piDmi5bmi73nur/nm7jlr7nkuo7ooajmoLxyZWxhdGl2ZeWumuS9jeaYr2Fic29sdXRl77yM5Zug5q2k5pivMFxyXG4gICAgICAgIHRoaXMuZHJhZ0xpbmUubmF0aXZlRWxlbWVudC5zdHlsZS50b3AgPSAwICsgJ3B4JztcclxuICAgICAgICAvLyDpvKDmoIfnp7vliqjml7bvvIzmi5bmi73nur/nm7jlr7nkuo7ooajmoLznmoTkvY3nva5cclxuICAgICAgICB0aGlzLmRyYWdMaW5lLm5hdGl2ZUVsZW1lbnQuc3R5bGUubGVmdCA9IChlLnBhZ2VYIC0gY29udGFpbmVyTGVmdCkgKyAncHgnO1xyXG4gICAgICAgIC8vIOm8oOagh+enu+WKqCAg6K6+572u5ouW5ou957q/5oC75piv5Y+v6KeBXHJcbiAgICAgICAgdGhpcy5kcmFnTGluZS5uYXRpdmVFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnYmxvY2snO1xyXG4gICAgfVxyXG4gICAgLy8g6YeN5paw6K6h566X6KGo5qC85a695bqmXHJcbiAgICAvKipcclxuICAgICAqIOm8oOagh+aKrOi1tyDph43mlrDorqHnrpfljZXlhYPmoLzlrr3luqZcclxuICAgICAqIOm8oOagh+WvueixoVxyXG4gICAgICovXHJcbiAgICBzdG9wRHJhZyhlLCBjb2x1bW4pIHtcclxuICAgICAgICB0aGlzLnJlc2l6ZUNvbHVtbihlLCBjb2x1bW4pO1xyXG4gICAgfVxyXG4gICAgcmVzaXplQ29sdW1uKGUsIGNvbHVtbikge1xyXG4gICAgICAgIGlmICh0aGlzLmlzQ2hlY2tCb3goY29sdW1uLCAnZHQtY2hlY2tib3gtY2VsbCcpKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZHJhZ0xpbmUubmF0aXZlRWxlbWVudC5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG4gICAgICAgIC8vIOWBj+enu+mHj1xyXG4gICAgICAgIGNvbnN0IGRlbHRhID0gZS5wYWdlWCAtIHRoaXMuZHJhZ0xpbmVYO1xyXG4gICAgICAgIC8vIOaLluaLveWJjeWIl+WuvVxyXG4gICAgICAgIGNvbnN0IGNvbHVtbldpZHRoID0gY29sdW1uLm9mZnNldFdpZHRoO1xyXG4gICAgICAgIC8vIOaLluaLveWQjuWIl+WuvVxyXG4gICAgICAgIGxldCBuZXdDb2x1bW5XaWR0aCA9IGNvbHVtbldpZHRoICsgZGVsdGE7XHJcbiAgICAgICAgLy8g5pyA5bCP5a695bqmXHJcbiAgICAgICAgY29uc3QgbWluV2lkdGggPSBjb2x1bW4uc3R5bGUubWluV2lkdGggfHwgMzA7XHJcbiAgICAgICAgLy8g5paw5a695bqm5aSn5LqO5oiW562J5LqO5pyA5bCP5a695bqm5pe2XHJcbiAgICAgICAgbmV3Q29sdW1uV2lkdGggPSBuZXdDb2x1bW5XaWR0aCA+IG1pbldpZHRoID8gbmV3Q29sdW1uV2lkdGggOiBtaW5XaWR0aDtcclxuICAgICAgICAvLyDph43mlrDorr7nva7lrr3luqZcclxuICAgICAgICBsZXQgY29sSW5kZXggPSAtMTtcclxuICAgICAgICBjb25zdCBvdGhlcnNDb2wgPSBbXTtcclxuICAgICAgICBjb25zdCBjb2xzID0gdGhpcy50YWJsZUhlYWRlci5uYXRpdmVFbGVtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoJ3RoJyk7XHJcblxyXG4gICAgICAgIC8vIOeItuiKgueCueWuveW6plxyXG4gICAgICAgIGNvbnN0IHBhcmVudFdpZHRoID0gY29sdW1uLnBhcmVudEVsZW1lbnQub2Zmc2V0V2lkdGg7XHJcbiAgICAgICAgLy8g5Yik5pat5piv5LiN5piv5pyJY2hlY2tib3hcclxuICAgICAgICBjb25zdCBmaXJzdEVsZW1lbnQgPSBjb2x1bW4ucGFyZW50RWxlbWVudC5maXJzdEVsZW1lbnRDaGlsZDtcclxuICAgICAgICBjb25zdCBjaGVja0JveFdpZHRoID0gdGhpcy5pc0NoZWNrQm94KGZpcnN0RWxlbWVudCwgJ2R0LWNoZWNrYm94LWNlbGwnKSA/IGZpcnN0RWxlbWVudC5vZmZzZXRXaWR0aCA6IDA7XHJcbiAgICAgICAgLy8g5YW25LuW5YiX5a695bqmXHJcbiAgICAgICAgbGV0IG90aGVyc1dpZHRoID0gcGFyZW50V2lkdGggLSBjb2x1bW5XaWR0aCAtIGNoZWNrQm94V2lkdGg7XHJcbiAgICAgICAgbGV0IG5ld090aGVyc1dpZHRoID0gcGFyZW50V2lkdGggLSBuZXdDb2x1bW5XaWR0aCAtIGNoZWNrQm94V2lkdGg7XHJcbiAgICAgICAgZm9yIChsZXQgaSA9IDA7IGkgPCBjb2xzLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgIGlmIChjb2xzW2ldID09PSBjb2x1bW4pIHtcclxuICAgICAgICAgICAgICAgIGNvbEluZGV4ID0gaTtcclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIGlmICh0aGlzLmlzQ2hlY2tCb3goY29sc1tpXSwgJ2R0LWNoZWNrYm94LWNlbGwnKSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnRpbnVlO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgY29uc3QgcmF0ZSA9IGNvbHNbaV0ub2Zmc2V0V2lkdGggLyBvdGhlcnNXaWR0aDtcclxuICAgICAgICAgICAgICAgIGlmIChyYXRlID4gMSkge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbnNvbGUubG9nKGNvbHNbaV0pO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgICAgbGV0IGNvbFdpZHRoID0gbmV3T3RoZXJzV2lkdGggKiByYXRlO1xyXG4gICAgICAgICAgICAgICAgaWYgKG5ld090aGVyc1dpZHRoICogcmF0ZSA+IDE1KSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29sV2lkdGggPSBuZXdPdGhlcnNXaWR0aCAqIHJhdGU7XHJcbiAgICAgICAgICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICAgICAgICAgIGNvbFdpZHRoID0gMTU7XHJcbiAgICAgICAgICAgICAgICAgICAgb3RoZXJzV2lkdGggPSBvdGhlcnNXaWR0aCAtIGNvbFdpZHRoO1xyXG4gICAgICAgICAgICAgICAgICAgIG5ld090aGVyc1dpZHRoID0gbmV3T3RoZXJzV2lkdGggLSBjb2xXaWR0aDtcclxuICAgICAgICAgICAgICAgICAgICBuZXdDb2x1bW5XaWR0aCA9IG5ld0NvbHVtbldpZHRoIC0gMTUgKyBuZXdPdGhlcnNXaWR0aCAqIHJhdGU7XHJcbiAgICAgICAgICAgICAgICB9XHJcbiAgICAgICAgICAgICAgICBvdGhlcnNDb2wucHVzaCh7IGNvbEluZGV4OiBpLCBjb2xXaWR0aCB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnJlc2l6ZUNvbEdyb3VwKHRoaXMuZHRIZWFkZXIuZWwubmF0aXZlRWxlbWVudCwgY29sSW5kZXgsIG5ld0NvbHVtbldpZHRoLCBvdGhlcnNDb2wpO1xyXG4gICAgICAgIHRoaXMucmVzaXplQ29sR3JvdXAodGhpcy5kdEJvZHkuZWwubmF0aXZlRWxlbWVudCwgY29sSW5kZXgsIG5ld0NvbHVtbldpZHRoLCBvdGhlcnNDb2wpO1xyXG4gICAgICAgIC8vIOiuoeeul+WuveW6puWujOavlSAg6K6+572u5ouW5ou957q/6ZqQ6JePXHJcbiAgICAgICAgdGhpcy5kcmFnTGluZS5uYXRpdmVFbGVtZW50LnN0eWxlLmRpc3BsYXkgPSAnbm9uZSc7XHJcbiAgICB9XHJcbiAgICBpc0NoZWNrQm94KGVsZW1lbnRzLCBjTmFtZSkge1xyXG4gICAgICAgIHJldHVybiAhIWVsZW1lbnRzLmNsYXNzTmFtZS5tYXRjaChuZXcgUmVnRXhwKCcoXFxcXHN8XiknICsgY05hbWUgKyAnKFxcXFxzfCQpJykpO1xyXG4gICAgfVxyXG4gICAgcmVzaXplQ29sR3JvdXAodGFibGUsIHJlc2l6ZUNvbHVtbkluZGV4LCBuZXdDb2x1bW5XaWR0aCwgb3RoZXJzQ29sdW1uKSB7XHJcbiAgICAgICAgaWYgKHRhYmxlKSB7XHJcbiAgICAgICAgICAgIC8vIOatpOWkhOimgeinhuS4jeWQjOeahOihqOagvOe7k+aehOadpeehruWumiDmnKznu4Tku7bkuK0gIGhlYWRlcuWSjGJvZHnnu5PmnoTnm7jlkIxcclxuICAgICAgICAgICAgY29uc3QgY29sR3JvdXAgPSB0YWJsZS5jaGlsZE5vZGVzWzBdLmNoaWxkcmVuWzBdLm5vZGVOYW1lID09PSAnQ09MR1JPVVAnID9cclxuICAgICAgICAgICAgICAgIHRhYmxlLmNoaWxkTm9kZXNbMF0uY2hpbGRyZW5bMF0gOiBudWxsO1xyXG4gICAgICAgICAgICBpZiAoY29sR3JvdXApIHtcclxuICAgICAgICAgICAgICAgIGNvbnN0IGNvbCA9IGNvbEdyb3VwLmNoaWxkcmVuW3Jlc2l6ZUNvbHVtbkluZGV4XTtcclxuICAgICAgICAgICAgICAgIGNvbC5zdHlsZS53aWR0aCA9IG5ld0NvbHVtbldpZHRoICsgJ3B4JztcclxuICAgICAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgb3RoZXJzQ29sdW1uLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgY29uc3Qgb3RoZXJDb2wgPSBjb2xHcm91cC5jaGlsZHJlbltvdGhlcnNDb2x1bW5baV0uY29sSW5kZXhdO1xyXG4gICAgICAgICAgICAgICAgICAgIGlmIChvdGhlckNvbCAmJiBvdGhlcnNDb2x1bW5baV0uY29sV2lkdGgpIHtcclxuICAgICAgICAgICAgICAgICAgICAgICAgb3RoZXJDb2wuc3R5bGUud2lkdGggPSBvdGhlcnNDb2x1bW5baV0uY29sV2lkdGggKyAncHgnO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignU2Nyb2xsYWJsZSB0YWJsZXMgcmVxdWlyZSBhIGNvbGdyb3VwIHRvIHN1cHBvcnQgcmVzaXphYmxlIGNvbHVtbnMnKTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIG9uU2Nyb2xsWChlOiBhbnkpIHtcclxuICAgICAgICAvLyDmqKrlkJHmu5rliqgg6Z2e5Zu65a6a6KGo5aS05rua5YqoXHJcbiAgICAgICAgY29uc3QgeCA9IGUuc3JjRWxlbWVudC5zY3JvbGxMZWZ0O1xyXG4gICAgICAgIHRoaXMudGFibGVIZWFkZXIubmF0aXZlRWxlbWVudC5zY3JvbGxUbyh4LCAwKTtcclxuICAgIH1cclxuICAgIC8qKlxyXG4gICAgICog5rua5Yqo5p2h57q15ZCR5rua5YqoXHJcbiAgICAgKi9cclxuICAgIG9uU2Nyb2xsWShlOiBhbnkpIHtcclxuICAgICAgICBpZiAoIXRoaXMuaGFzRml4ZWQpIHtcclxuICAgICAgICAgICAgcmV0dXJuO1xyXG4gICAgICAgIH1cclxuICAgICAgICBjb25zdCB5ID0gZS5zcmNFbGVtZW50LnNjcm9sbFRvcDtcclxuICAgICAgICB0aGlzLmR0TGVmdEZpeGVkLm5hdGl2ZUVsZW1lbnQuc3R5bGUudG9wID0gLXkgKyAncHgnO1xyXG4gICAgICAgIHRoaXMuZHRSaWdodEZpeGVkLm5hdGl2ZUVsZW1lbnQuc3R5bGUudG9wID0gLXkgKyAncHgnO1xyXG5cclxuICAgIH1cclxuXHJcbiAgICBvblBhZ2VDaGFuZ2UocGFnZTogeyBwYWdlSW5kZXg6IG51bWJlciwgcGFnZVNpemU6IG51bWJlciB9KSB7XHJcbiAgICAgICAgaWYgKHRoaXMucGFnZUluZGV4ICE9PSBwYWdlLnBhZ2VJbmRleCkge1xyXG4gICAgICAgICAgICB0aGlzLnBhZ2VJbmRleCA9IHBhZ2UucGFnZUluZGV4O1xyXG4gICAgICAgICAgICB0aGlzLnBhZ2luYXRpb25PcHRpb25zLmN1cnJlbnRQYWdlID0gcGFnZS5wYWdlSW5kZXg7XHJcbiAgICAgICAgICAgIHRoaXMucGFnZUNoYW5nZWQuZW1pdCh7IHBhZ2VJbmZvOiBwYWdlLCBzZWFyY2g6IHRoaXMuc2VhcmNoRGF0YSwgc29ydE5hbWU6IHRoaXMuc29ydE5hbWUsIHNvcnRPcmRlcjogdGhpcy5zb3J0T3JkZXIgfSk7XHJcbiAgICAgICAgfVxyXG4gICAgfVxyXG5cclxuICAgIG9uUGFnZVNpemVDaGFuZ2UocGFnZVNpemU6IG51bWJlcikge1xyXG4gICAgICAgIGlmICh0aGlzLnBhZ2VTaXplICE9PSBwYWdlU2l6ZSAmJiB0aGlzLnRvdGFsKSB7XHJcbiAgICAgICAgICAgIHRoaXMucGFnaW5hdGlvbk9wdGlvbnMuaXRlbXNQZXJQYWdlID0gcGFnZVNpemU7XHJcbiAgICAgICAgICAgIHRoaXMucGFnZVNpemUgPSBwYWdlU2l6ZTtcclxuXHJcbiAgICAgICAgICAgIGNvbnN0IHRvdGFsID0gdGhpcy50b3RhbDtcclxuICAgICAgICAgICAgbGV0IHBhZ2VMZW5ndGggPSBNYXRoLmZsb29yKHRvdGFsIC8gcGFnZVNpemUpO1xyXG4gICAgICAgICAgICBpZiAodG90YWwgJSBwYWdlU2l6ZSA+IDApIHtcclxuICAgICAgICAgICAgICAgIHBhZ2VMZW5ndGggKz0gMTtcclxuICAgICAgICAgICAgfVxyXG5cclxuICAgICAgICAgICAgaWYgKHBhZ2VMZW5ndGggJiYgdGhpcy5wYWdlSW5kZXggPiBwYWdlTGVuZ3RoKSB7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnBhZ2VJbmRleCA9IHBhZ2VMZW5ndGg7XHJcbiAgICAgICAgICAgICAgICB0aGlzLnBhZ2luYXRpb25PcHRpb25zLmN1cnJlbnRQYWdlID0gdGhpcy5wYWdlSW5kZXg7XHJcbiAgICAgICAgICAgIH1cclxuXHJcbiAgICAgICAgICAgIHRoaXMucGFnZVNpemVDaGFuZ2VkLmVtaXQoe1xyXG4gICAgICAgICAgICAgICAgcGFnZUluZm86IHsgcGFnZUluZGV4OiB0aGlzLnBhZ2VJbmRleCwgcGFnZVNpemUgfSxcclxuICAgICAgICAgICAgICAgIHNlYXJjaDogdGhpcy5zZWFyY2hEYXRhLCBzb3J0TmFtZTogdGhpcy5zb3J0TmFtZSwgc29ydE9yZGVyOiB0aGlzLnNvcnRPcmRlclxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgb25TZWFyY2goJGV2ZW50KSB7XHJcbiAgICAgICAgaWYgKCRldmVudC5vcmlnaW5hbEV2ZW50KSB7XHJcbiAgICAgICAgICAgICRldmVudC5vcmlnaW5hbEV2ZW50LnN0b3BQcm9wYWdhdGlvbigpO1xyXG4gICAgICAgIH1cclxuICAgICAgICB0aGlzLnNlYXJjaC5lbWl0KHRoaXMuc2VhcmNoRGF0YSk7XHJcbiAgICB9XHJcblxyXG4gICAgb25DaGVja0FsbChzdGF0ZTogYm9vbGVhbikge1xyXG4gICAgICAgIHRoaXMuZGF0YVNlcnZpY2Uuc2VsZWN0ZWRBbGwubmV4dChzdGF0ZSk7XHJcbiAgICAgICAgdGhpcy5jaGVja0FsbC5lbWl0KHN0YXRlKTtcclxuICAgIH1cclxuXHJcblxyXG4gICAgb25TZWxlY3RlZFJvdyhlOiBhbnkpIHtcclxuICAgICAgICB0aGlzLnNlbGVjdGVkUm93LmVtaXQoeyBkYXRhOiBlLnJvd0RhdGEsIGluZGV4OiBlLnJvd0luZGV4IH0pO1xyXG4gICAgICAgIC8vIOWFvOWuuVxyXG4gICAgICAgIHRoaXMuc2VsZWN0Um93cy5lbWl0KHsgZGF0YTogZS5yb3dEYXRhLCBpbmRleDogZS5yb3dJbmRleCB9KTtcclxuICAgIH1cclxuXHJcbiAgICAvLyB0c2xpbnQ6ZGlzYWJsZS1uZXh0LWxpbmU6bm8tc2hhZG93ZWQtdmFyaWFibGVcclxuICAgIHJlc2l6ZShzaXplOiB7IHdpZHRoOiBudW1iZXIsIGhlaWdodDogbnVtYmVyIH0pIHtcclxuICAgICAgICB0aGlzLndpZHRoID0gc2l6ZS53aWR0aDtcclxuICAgICAgICB0aGlzLmhlaWdodCA9IHNpemUuaGVpZ2h0O1xyXG5cclxuICAgICAgICB0aGlzLnNldEJvZHlIZWlnaHQoKTtcclxuICAgIH1cclxuXHJcbiAgICBsb2FkRGF0YShlOiB7IHBhZ2VTaXplOiBudW1iZXIsIHRvdGFsOiBudW1iZXIsIGRhdGE6IGFueSwgcGFnZUluZGV4OiBudW1iZXIgfSkge1xyXG4gICAgICAgIHRoaXMuZGF0YSA9IGUuZGF0YTtcclxuICAgICAgICBpZiAodGhpcy5wYWdpbmF0aW9uKSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHsgdG90YWwgPSAwLCBwYWdlU2l6ZSA9IDIwLCBwYWdlSW5kZXggPSAxIH0gPSB7IC4uLmUgfTtcclxuICAgICAgICAgICAgdGhpcy5wYWdpbmF0aW9uT3B0aW9ucy50b3RhbEl0ZW1zID0gdG90YWw7XHJcbiAgICAgICAgICAgIHRoaXMucGFnaW5hdGlvbk9wdGlvbnMuaXRlbXNQZXJQYWdlID0gcGFnZVNpemU7XHJcbiAgICAgICAgICAgIHRoaXMucGFnaW5hdGlvbk9wdGlvbnMuY3VycmVudFBhZ2UgPSBwYWdlSW5kZXg7XHJcbiAgICAgICAgICAgIHRoaXMucGFnaW5hdGlvbk9wdGlvbnMucGFnZUxpc3QgPSB0aGlzLnBhZ2VMaXN0O1xyXG4gICAgICAgICAgICB0aGlzLnRvdGFsID0gdG90YWw7XHJcbiAgICAgICAgICAgIHRoaXMucGFnZVNpemUgPSBwYWdlU2l6ZTtcclxuICAgICAgICAgICAgdGhpcy5wYWdlSW5kZXggPSBwYWdlSW5kZXg7XHJcbiAgICAgICAgfVxyXG4gICAgICAgIHRoaXMuY2QuZGV0ZWN0Q2hhbmdlcygpO1xyXG4gICAgICAgIHRoaXMudXBkYXRlQ2hlY2tib3hTdGF0ZSh0aGlzLmRhdGEpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qXHJcbiAgICAgKi9cclxuICAgIG9uQ2VsbENsaWNrKGUpIHtcclxuICAgICAgICB0aGlzLmNlbGxDbGljay5lbWl0KGUpO1xyXG4gICAgfVxyXG5cclxuICAgIC8qIOa3u+WKoOihjCAqL1xyXG4gICAgYWRkUm93cyhkYXRhSXRlbSkge1xyXG4gICAgICAgIHRoaXMuZGF0YSA9IHRoaXMuZGF0YS5jb25jYXQoZGF0YUl0ZW0pO1xyXG4gICAgfVxyXG4gICAgLyog5Yig6Zmk6KGMICovXHJcbiAgICByZW1vdmVSb3dzKCkge1xyXG4gICAgICAgIGNvbnN0IFNFTEVDVElPTlMgPSB0aGlzLnNlbGVjdGlvbnM7XHJcbiAgICAgICAgaWYgKHRoaXMuc2luZ2xlU2VsZWN0KSB7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgdGhpcy5kYXRhLmxlbmd0aDsgaSsrKSB7XHJcbiAgICAgICAgICAgICAgICBpZiAodGhpcy5kYXRhW2ldID09PSBTRUxFQ1RJT05TKSB7XHJcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5kYXRhLnNwbGljZShpLCAxKTtcclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSB7XHJcbiAgICAgICAgICAgIGZvciAobGV0IGkgPSAwOyBpIDwgU0VMRUNUSU9OUy5sZW5ndGg7IGkrKykge1xyXG4gICAgICAgICAgICAgICAgZm9yIChsZXQgaiA9IDA7IGogPCB0aGlzLmRhdGEubGVuZ3RoOyBqKyspIHtcclxuICAgICAgICAgICAgICAgICAgICBpZiAoU0VMRUNUSU9OU1tpXVt0aGlzLmlkRmllbGRdID09PSB0aGlzLmRhdGFbal1bdGhpcy5pZEZpZWxkXSkge1xyXG4gICAgICAgICAgICAgICAgICAgICAgICB0aGlzLmRhdGEuc3BsaWNlKGosIDEpO1xyXG4gICAgICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBjaGVja1JvdyhyaWQ6IGFueSwgZW1pdCA9IGZhbHNlKSB7XHJcbiAgICAgICAgbGV0IHJvd0luZGV4ID0gLTE7XHJcbiAgICAgICAgY29uc3Qgcm93RGF0YSA9IHRoaXMuZGF0YS5maW5kKChuLCBpKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChuW3RoaXMuaWRGaWVsZF0gPT0gcmlkKSB7XHJcbiAgICAgICAgICAgICAgICByb3dJbmRleCA9IGk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG5cclxuXHJcbiAgICAgICAgaWYgKCFyb3dEYXRhKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICghdGhpcy5zZWxlY3Rpb25zKSB7XHJcbiAgICAgICAgICAgIHRoaXMuc2VsZWN0aW9ucyA9IHsgW3JpZF06IHJvd0RhdGEgfTtcclxuICAgICAgICB9IGVsc2Uge1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdGlvbnMgPSB7XHJcbiAgICAgICAgICAgICAgICBbcmlkXTogcm93RGF0YSwgLi4udGhpcy5zZWxlY3Rpb25zLnJlZHVjZSgociwgbikgPT4ge1xyXG4gICAgICAgICAgICAgICAgICAgIHJbblt0aGlzLmlkRmllbGRdXSA9IG47XHJcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHI7XHJcbiAgICAgICAgICAgICAgICB9LCB7fSlcclxuICAgICAgICAgICAgfTtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIHRoaXMuZGF0YVNlcnZpY2Uuc2VsZWN0ZWRSb3cubmV4dCh7XHJcbiAgICAgICAgICAgIHJvd0luZGV4LFxyXG4gICAgICAgICAgICByb3dEYXRhXHJcbiAgICAgICAgfSk7XHJcblxyXG4gICAgICAgIGlmIChlbWl0KSB7XHJcbiAgICAgICAgICAgIGNvbnN0IHAgPSB7IGRhdGE6IHJvd0RhdGEsIGluZGV4OiByb3dJbmRleCB9O1xyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdGVkUm93LmVtaXQocCk7XHJcbiAgICAgICAgICAgIC8vIOWFvOWuuVxyXG4gICAgICAgICAgICB0aGlzLnNlbGVjdFJvd3MuZW1pdChwKTtcclxuICAgICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgdW5DaGVja1JvdyhyaWQ6IGFueSwgZW1pdCA9IGZhbHNlKSB7XHJcbiAgICAgICAgbGV0IHJvd0luZGV4ID0gLTE7XHJcbiAgICAgICAgY29uc3Qgcm93RGF0YSA9IHRoaXMuZGF0YS5maW5kKChuLCBpKSA9PiB7XHJcbiAgICAgICAgICAgIGlmIChuW3RoaXMuaWRGaWVsZF0gPT0gcmlkKSB7XHJcbiAgICAgICAgICAgICAgICByb3dJbmRleCA9IGk7XHJcbiAgICAgICAgICAgICAgICByZXR1cm4gdHJ1ZTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgICAgIGlmICh0aGlzLnNlbGVjdGlvbnMpIHtcclxuICAgICAgICAgICAgdGhpcy5zZWxlY3Rpb25zID0gdGhpcy5zZWxlY3Rpb25zLmZpbHRlcihuID0+IG5bdGhpcy5pZEZpZWxkXSAhPSByaWQpLnJlZHVjZSgociwgbikgPT4ge1xyXG4gICAgICAgICAgICAgICAgcltuW3RoaXMuaWRGaWVsZF1dID0gbjtcclxuICAgICAgICAgICAgICAgIHJldHVybiByO1xyXG4gICAgICAgICAgICB9LCB7fSk7XHJcbiAgICAgICAgICAgIHRoaXMuZGF0YVNlcnZpY2UudW5TZWxlY3RlZFJvdy5uZXh0KHtcclxuICAgICAgICAgICAgICAgIHJvd0luZGV4LFxyXG4gICAgICAgICAgICAgICAgcm93RGF0YVxyXG4gICAgICAgICAgICB9KTtcclxuICAgICAgICAgICAgaWYgKGVtaXQpIHtcclxuICAgICAgICAgICAgICAgIHRoaXMudW5TZWxlY3RSb3cuZW1pdCh7IGRhdGE6IHJvd0RhdGEsIGluZGV4OiByb3dJbmRleCB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICBjbGVhclNlbGVjdGlvbnMoKSB7XHJcblxyXG4gICAgfVxyXG5cclxuICAgIG9uS2V5ZG93bkV2ZW50KCRldmVudCkge1xyXG4gICAgICAgIGlmICghJGV2ZW50IHx8ICF0aGlzLnNpbmdsZVNlbGVjdCB8fCAhdGhpcy5kYXRhIHx8ICF0aGlzLmRhdGEubGVuZ3RoKSB7XHJcbiAgICAgICAgICAgIHJldHVybjtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIGlmICghWydBcnJvd0Rvd24nLCAnQXJyb3dVcCddLmluY2x1ZGVzKCRldmVudC5jb2RlKSkge1xyXG4gICAgICAgICAgICByZXR1cm47XHJcbiAgICAgICAgfVxyXG5cclxuXHJcbiAgICAgICAgbGV0IG5ld0lkeDtcclxuICAgICAgICBpZiAoJGV2ZW50LmNvZGUgPT09ICdBcnJvd0Rvd24nKSB7XHJcbiAgICAgICAgICAgIG5ld0lkeCA9IHRoaXMuX2N1cnJlbnRSb3dJbmRleCArIDE7XHJcbiAgICAgICAgICAgIGlmIChuZXdJZHggPj0gdGhpcy5kYXRhLmxlbmd0aCkge1xyXG4gICAgICAgICAgICAgICAgbmV3SWR4ID0gMDtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0gZWxzZSBpZiAoJGV2ZW50LmNvZGUgPT09ICdBcnJvd1VwJykge1xyXG4gICAgICAgICAgICBpZiAodGhpcy5fY3VycmVudFJvd0luZGV4ICE9PSAtMSkge1xyXG4gICAgICAgICAgICAgICAgbmV3SWR4ID0gdGhpcy5fY3VycmVudFJvd0luZGV4IC0gMTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH1cclxuXHJcbiAgICAgICAgaWYgKG5ld0lkeCA+PSAwKSB7XHJcbiAgICAgICAgICAgIHRoaXMuZHRCb2R5LnNlbGVjdGVkUm93KCRldmVudCwgbmV3SWR4LCB0aGlzLmRhdGFbbmV3SWR4XSk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcclxuICAgICAgICAgICAgLy8gc2Nyb2xsIGludG9WaWV3XHJcbiAgICAgICAgICAgIGNvbnN0IHRyRG9tcyA9IHRoaXMuZHRCb2R5LmVsLm5hdGl2ZUVsZW1lbnQucXVlcnlTZWxlY3RvckFsbCgnLnVpLXRhYmxlLXRib2R5IHRyJyk7XHJcbiAgICAgICAgICAgIGlmICh0ckRvbXMgJiYgdHJEb21zW3RoaXMuX2N1cnJlbnRSb3dJbmRleF0pIHtcclxuICAgICAgICAgICAgICAgIHRyRG9tc1t0aGlzLl9jdXJyZW50Um93SW5kZXhdLnNjcm9sbEludG9WaWV3KHsgYmxvY2s6ICduZWFyZXN0JyB9KTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgIH0pO1xyXG4gICAgfVxyXG59XHJcblxyXG4iXX0=