/**
 * 命令处理扩展注册器相关定义
 * @author Witt<jiwt@inspur.com>
 */
import { Injectable, Optional, Inject } from '@angular/core';
import { MetadataUtil } from '../metadata/index';
import { NG_COMMAND_HANDLER_EXTENDER } from './decorators';
import { COMMAND_HANDLER_EXTENDERS_TOKEN } from './command_handler_extender';
/**
 * 命令处理扩展注册器
 */
var CommandHandlerExtenderRegistry = /** @class */ (function () {
    /**
     * 构造函数
     * @param extenders 命令扩展实例数组
     */
    function CommandHandlerExtenderRegistry(extenders) {
        var self = this;
        this.extendersMap = new Map();
        if (extenders) {
            extenders.forEach(function (extender) {
                self.regist(extender);
            });
        }
    }
    /**
     * 获取命令扩展实例数组
     * @param   commandName 命令名称
     * @returns 命令处理扩展实例数组
     */
    CommandHandlerExtenderRegistry.prototype.get = function (commandName) {
        if (this.extendersMap.has(commandName) === false) {
            return [];
        }
        return this.extendersMap.get(commandName);
    };
    /**
     * 添加命令扩展
     * @param commandName Command名称
     * @param extender    CommandHandlerExtender实例
     * @return void
     */
    CommandHandlerExtenderRegistry.prototype.set = function (commandName, extender) {
        if (this.extendersMap.has(commandName)) {
            // 如果commandName对应的扩展已经存在，则在扩展数组中追加
            this.extendersMap.get(commandName).push(extender);
        }
        else {
            // 如果不存在，则创建新的扩展数组，并追加
            this.extendersMap.set(commandName, [extender]);
        }
    };
    /**
     * 注册命令扩展
     * @param extender CommandHandlerExtender实例
     */
    CommandHandlerExtenderRegistry.prototype.regist = function (extender) {
        // 通过元数据获取要扩展的Comamnd名称
        var extenderMetadata = MetadataUtil.getClassMetadataByName(extender.constructor, NG_COMMAND_HANDLER_EXTENDER);
        if (!extenderMetadata) {
            throw new Error('CommandHandlerExtender必须指定要扩展的命令名称');
        }
        var commandName = extenderMetadata.commandName;
        // 添加到Map中
        this.set(commandName, extender);
    };
    CommandHandlerExtenderRegistry.decorators = [
        { type: Injectable }
    ];
    /** @nocollapse */
    CommandHandlerExtenderRegistry.ctorParameters = function () { return [
        { type: Array, decorators: [{ type: Optional }, { type: Inject, args: [COMMAND_HANDLER_EXTENDERS_TOKEN,] }] }
    ]; };
    return CommandHandlerExtenderRegistry;
}());
export { CommandHandlerExtenderRegistry };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY29tbWFuZF9oYW5kbGVyX2V4dGVuZGVyX3JlZ2lzdHJ5LmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy9kZXZraXQvIiwic291cmNlcyI6WyJsaWIvY29tbWFuZC9jb21tYW5kX2hhbmRsZXJfZXh0ZW5kZXJfcmVnaXN0cnkudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7OztHQUdHO0FBRUgsT0FBTyxFQUFFLFVBQVUsRUFBRSxRQUFRLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzdELE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxtQkFBbUIsQ0FBQztBQUNqRCxPQUFPLEVBQUUsMkJBQTJCLEVBQXFCLE1BQU0sY0FBYyxDQUFDO0FBQzlFLE9BQU8sRUFBRSwrQkFBK0IsRUFBMEIsTUFBTSw0QkFBNEIsQ0FBQztBQUVyRzs7R0FFRztBQUNIO0lBVUU7OztPQUdHO0lBQ0gsd0NBQWdFLFNBQW1DO1FBQ2pHLElBQU0sSUFBSSxHQUFHLElBQUksQ0FBQztRQUNsQixJQUFJLENBQUMsWUFBWSxHQUFHLElBQUksR0FBRyxFQUFvQyxDQUFDO1FBQ2hFLElBQUksU0FBUyxFQUFFO1lBQ2IsU0FBUyxDQUFDLE9BQU8sQ0FBQyxVQUFDLFFBQWdDO2dCQUNqRCxJQUFJLENBQUMsTUFBTSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQ3hCLENBQUMsQ0FBQyxDQUFDO1NBQ0o7SUFDSCxDQUFDO0lBRUQ7Ozs7T0FJRztJQUNILDRDQUFHLEdBQUgsVUFBSSxXQUFtQjtRQUNyQixJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxLQUFLLEtBQUssRUFBRTtZQUNoRCxPQUFPLEVBQUUsQ0FBQztTQUNYO1FBQ0QsT0FBTyxJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQztJQUM1QyxDQUFDO0lBRUQ7Ozs7O09BS0c7SUFDSCw0Q0FBRyxHQUFILFVBQUksV0FBbUIsRUFBRSxRQUFnQztRQUN2RCxJQUFJLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxFQUFFO1lBRXRDLG1DQUFtQztZQUNuQyxJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxXQUFXLENBQUMsQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUM7U0FDbkQ7YUFBTTtZQUVMLHNCQUFzQjtZQUN0QixJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEVBQUUsQ0FBQyxRQUFRLENBQUMsQ0FBQyxDQUFDO1NBQ2hEO0lBQ0gsQ0FBQztJQUVEOzs7T0FHRztJQUNILCtDQUFNLEdBQU4sVUFBTyxRQUFnQztRQUVyQyx1QkFBdUI7UUFDdkIsSUFBTSxnQkFBZ0IsR0FDcEIsWUFBWSxDQUFDLHNCQUFzQixDQUFDLFFBQVEsQ0FBQyxXQUFXLEVBQUUsMkJBQTJCLENBQUMsQ0FBQztRQUN6RixJQUFJLENBQUMsZ0JBQWdCLEVBQUU7WUFDckIsTUFBTSxJQUFJLEtBQUssQ0FBQyxvQ0FBb0MsQ0FBQyxDQUFDO1NBQ3ZEO1FBQ0QsSUFBTSxXQUFXLEdBQUcsZ0JBQWdCLENBQUMsV0FBVyxDQUFDO1FBRWpELFVBQVU7UUFDVixJQUFJLENBQUMsR0FBRyxDQUFDLFdBQVcsRUFBRSxRQUFRLENBQUMsQ0FBQztJQUNsQyxDQUFDOztnQkF0RUYsVUFBVTs7Ozs0Q0FjSSxRQUFRLFlBQUksTUFBTSxTQUFDLCtCQUErQjs7SUEwRGpFLHFDQUFDO0NBQUEsQUF4RUQsSUF3RUM7QUFFRCxPQUFPLEVBQUUsOEJBQThCLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxyXG4gKiDlkb3ku6TlpITnkIbmianlsZXms6jlhozlmajnm7jlhbPlrprkuYlcclxuICogQGF1dGhvciBXaXR0PGppd3RAaW5zcHVyLmNvbT5cclxuICovXHJcblxyXG5pbXBvcnQgeyBJbmplY3RhYmxlLCBPcHRpb25hbCwgSW5qZWN0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IE1ldGFkYXRhVXRpbCB9IGZyb20gJy4uL21ldGFkYXRhL2luZGV4JztcclxuaW1wb3J0IHsgTkdfQ09NTUFORF9IQU5ETEVSX0VYVEVOREVSLCBOZ0NvbW1hbmRFeHRlbmRlciB9IGZyb20gJy4vZGVjb3JhdG9ycyc7XHJcbmltcG9ydCB7IENPTU1BTkRfSEFORExFUl9FWFRFTkRFUlNfVE9LRU4sIENvbW1hbmRIYW5kbGVyRXh0ZW5kZXIgfSBmcm9tICcuL2NvbW1hbmRfaGFuZGxlcl9leHRlbmRlcic7XHJcblxyXG4vKipcclxuICog5ZG95Luk5aSE55CG5omp5bGV5rOo5YaM5ZmoXHJcbiAqL1xyXG5ASW5qZWN0YWJsZSgpXHJcbmNsYXNzIENvbW1hbmRIYW5kbGVyRXh0ZW5kZXJSZWdpc3RyeSB7XHJcblxyXG4gIC8qKlxyXG4gICAqIENvbW1hbmRIYW5kbGVyRXh0ZW5kZXLlrp7kvotNYXBcclxuICAgKiAtIGtlee+8muWRveS7pOWQjeensFxyXG4gICAqIC0gdmFsdWXvvJrlkb3ku6TmianlsZXlrp7kvotcclxuICAgKi9cclxuICBwcml2YXRlIGV4dGVuZGVyc01hcDogTWFwPHN0cmluZywgQ29tbWFuZEhhbmRsZXJFeHRlbmRlcltdPjtcclxuXHJcbiAgLyoqXHJcbiAgICog5p6E6YCg5Ye95pWwXHJcbiAgICogQHBhcmFtIGV4dGVuZGVycyDlkb3ku6TmianlsZXlrp7kvovmlbDnu4RcclxuICAgKi9cclxuICBjb25zdHJ1Y3RvcihAT3B0aW9uYWwoKSBASW5qZWN0KENPTU1BTkRfSEFORExFUl9FWFRFTkRFUlNfVE9LRU4pZXh0ZW5kZXJzOiBDb21tYW5kSGFuZGxlckV4dGVuZGVyW10pIHtcclxuICAgIGNvbnN0IHNlbGYgPSB0aGlzO1xyXG4gICAgdGhpcy5leHRlbmRlcnNNYXAgPSBuZXcgTWFwPHN0cmluZywgQ29tbWFuZEhhbmRsZXJFeHRlbmRlcltdPigpO1xyXG4gICAgaWYgKGV4dGVuZGVycykge1xyXG4gICAgICBleHRlbmRlcnMuZm9yRWFjaCgoZXh0ZW5kZXI6IENvbW1hbmRIYW5kbGVyRXh0ZW5kZXIpID0+IHtcclxuICAgICAgICBzZWxmLnJlZ2lzdChleHRlbmRlcik7XHJcbiAgICAgIH0pO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog6I635Y+W5ZG95Luk5omp5bGV5a6e5L6L5pWw57uEXHJcbiAgICogQHBhcmFtICAgY29tbWFuZE5hbWUg5ZG95Luk5ZCN56ewXHJcbiAgICogQHJldHVybnMg5ZG95Luk5aSE55CG5omp5bGV5a6e5L6L5pWw57uEXHJcbiAgICovXHJcbiAgZ2V0KGNvbW1hbmROYW1lOiBzdHJpbmcpOiBDb21tYW5kSGFuZGxlckV4dGVuZGVyW10ge1xyXG4gICAgaWYgKHRoaXMuZXh0ZW5kZXJzTWFwLmhhcyhjb21tYW5kTmFtZSkgPT09IGZhbHNlKSB7XHJcbiAgICAgIHJldHVybiBbXTtcclxuICAgIH1cclxuICAgIHJldHVybiB0aGlzLmV4dGVuZGVyc01hcC5nZXQoY29tbWFuZE5hbWUpO1xyXG4gIH1cclxuXHJcbiAgLyoqXHJcbiAgICog5re75Yqg5ZG95Luk5omp5bGVXHJcbiAgICogQHBhcmFtIGNvbW1hbmROYW1lIENvbW1hbmTlkI3np7BcclxuICAgKiBAcGFyYW0gZXh0ZW5kZXIgICAgQ29tbWFuZEhhbmRsZXJFeHRlbmRlcuWunuS+i1xyXG4gICAqIEByZXR1cm4gdm9pZFxyXG4gICAqL1xyXG4gIHNldChjb21tYW5kTmFtZTogc3RyaW5nLCBleHRlbmRlcjogQ29tbWFuZEhhbmRsZXJFeHRlbmRlcikge1xyXG4gICAgaWYgKHRoaXMuZXh0ZW5kZXJzTWFwLmhhcyhjb21tYW5kTmFtZSkpIHtcclxuXHJcbiAgICAgIC8vIOWmguaenGNvbW1hbmROYW1l5a+55bqU55qE5omp5bGV5bey57uP5a2Y5Zyo77yM5YiZ5Zyo5omp5bGV5pWw57uE5Lit6L+95YqgXHJcbiAgICAgIHRoaXMuZXh0ZW5kZXJzTWFwLmdldChjb21tYW5kTmFtZSkucHVzaChleHRlbmRlcik7XHJcbiAgICB9IGVsc2Uge1xyXG5cclxuICAgICAgLy8g5aaC5p6c5LiN5a2Y5Zyo77yM5YiZ5Yib5bu65paw55qE5omp5bGV5pWw57uE77yM5bm26L+95YqgXHJcbiAgICAgIHRoaXMuZXh0ZW5kZXJzTWFwLnNldChjb21tYW5kTmFtZSwgW2V4dGVuZGVyXSk7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiDms6jlhozlkb3ku6TmianlsZVcclxuICAgKiBAcGFyYW0gZXh0ZW5kZXIgQ29tbWFuZEhhbmRsZXJFeHRlbmRlcuWunuS+i1xyXG4gICAqL1xyXG4gIHJlZ2lzdChleHRlbmRlcjogQ29tbWFuZEhhbmRsZXJFeHRlbmRlcikge1xyXG5cclxuICAgIC8vIOmAmui/h+WFg+aVsOaNruiOt+WPluimgeaJqeWxleeahENvbWFtbmTlkI3np7BcclxuICAgIGNvbnN0IGV4dGVuZGVyTWV0YWRhdGE6IE5nQ29tbWFuZEV4dGVuZGVyID1cclxuICAgICAgTWV0YWRhdGFVdGlsLmdldENsYXNzTWV0YWRhdGFCeU5hbWUoZXh0ZW5kZXIuY29uc3RydWN0b3IsIE5HX0NPTU1BTkRfSEFORExFUl9FWFRFTkRFUik7XHJcbiAgICBpZiAoIWV4dGVuZGVyTWV0YWRhdGEpIHtcclxuICAgICAgdGhyb3cgbmV3IEVycm9yKCdDb21tYW5kSGFuZGxlckV4dGVuZGVy5b+F6aG75oyH5a6a6KaB5omp5bGV55qE5ZG95Luk5ZCN56ewJyk7XHJcbiAgICB9XHJcbiAgICBjb25zdCBjb21tYW5kTmFtZSA9IGV4dGVuZGVyTWV0YWRhdGEuY29tbWFuZE5hbWU7XHJcblxyXG4gICAgLy8g5re75Yqg5YiwTWFw5LitXHJcbiAgICB0aGlzLnNldChjb21tYW5kTmFtZSwgZXh0ZW5kZXIpO1xyXG4gIH1cclxuXHJcbn1cclxuXHJcbmV4cG9ydCB7IENvbW1hbmRIYW5kbGVyRXh0ZW5kZXJSZWdpc3RyeSB9O1xyXG4iXX0=