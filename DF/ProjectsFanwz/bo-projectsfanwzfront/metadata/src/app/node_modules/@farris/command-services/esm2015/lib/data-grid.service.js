import { Injectable } from "@angular/core";
import { Service } from "./service";
import { DatagridComponent } from '@farris/ui-datagrid';
import { QueryCondition } from '@farris/component-querycondition';
export class DataGridService extends Service {
    /**
     * 清空grid勾选行
     */
    clearChecks() {
        const params = this.eventParam;
        if (params && Array.isArray(params)) {
            const param = params[0];
            if (param instanceof QueryCondition) {
                const gridComponents = this.getFormGridComponents(this.context);
                if (gridComponents && gridComponents.length > 0) {
                    gridComponents.forEach((gridComponent) => {
                        let clearSelections = true;
                        if (gridComponent.hasOwnProperty('clearSelectionsWhenDataIsEmpty')) {
                            clearSelections = gridComponent['clearSelectionsWhenDataIsEmpty'];
                        }
                        if (clearSelections) {
                            gridComponent.clearCheckeds(true);
                        }
                    });
                }
            }
        }
    }
    /**
     * 取消勾选删除的行
     * @param ids ids
     * @returns
     */
    uncheckDeletedRows(ids) {
        if (typeof ids === 'string') {
            ids = [ids];
        }
        if (!ids || ids.length < 1) {
            return;
        }
        const gridComponents = this.getFormGridComponents(this.context);
        if (gridComponents && gridComponents.length > 0) {
            gridComponents.forEach((gridComponent) => {
                gridComponent.unCheckRows(ids, true);
            });
        }
    }
    /**
     * 取消勾选行
     * @param ids ids
     * @returns
     */
    uncheckRows(ids) {
        if (typeof ids === 'string') {
            ids = [ids];
        }
        if (!ids || ids.length < 1) {
            return;
        }
        const gridComponents = this.getFormGridComponents(this.context);
        if (gridComponents && gridComponents.length > 0) {
            gridComponents.forEach((gridComponent) => {
                gridComponent.unCheckRows(ids, true);
            });
        }
    }
    /**
     * 获取当前表单内的所有表格实例
     * @param commandContext 命令上下文
     * @returns
     */
    getFormGridComponents(commandContext) {
        let grids = [];
        const appContext = commandContext && commandContext.frameContext && commandContext.frameContext.appContext || null;
        if (appContext) {
            const componentRefs = appContext.componentRefs;
            const collect = Array.from(componentRefs.values()); // [Map<string,any>,Map<string,any>]
            collect.forEach((item) => {
                const components = Array.from(item.values());
                const gridComponents = components.filter((component) => component instanceof DatagridComponent);
                grids = grids.concat(gridComponents);
            });
        }
        return grids;
    }
}
DataGridService.decorators = [
    { type: Injectable }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS1ncmlkLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2NvbW1hbmQtc2VydmljZXMvIiwic291cmNlcyI6WyJsaWIvZGF0YS1ncmlkLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFVBQVUsRUFBRSxNQUFNLGVBQWUsQ0FBQztBQUMzQyxPQUFPLEVBQUUsT0FBTyxFQUFFLE1BQU0sV0FBVyxDQUFDO0FBQ3BDLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDO0FBQ3hELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxrQ0FBa0MsQ0FBQztBQUdsRSxNQUFNLE9BQU8sZUFBZ0IsU0FBUSxPQUFPO0lBQzFDOztPQUVHO0lBQ0ksV0FBVztRQUNoQixNQUFNLE1BQU0sR0FBRyxJQUFJLENBQUMsVUFBVSxDQUFDO1FBQy9CLElBQUksTUFBTSxJQUFJLEtBQUssQ0FBQyxPQUFPLENBQUMsTUFBTSxDQUFDLEVBQUU7WUFDbkMsTUFBTSxLQUFLLEdBQUcsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQ3hCLElBQUksS0FBSyxZQUFZLGNBQWMsRUFBRTtnQkFDbkMsTUFBTSxjQUFjLEdBQUcsSUFBSSxDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztnQkFDaEUsSUFBSSxjQUFjLElBQUksY0FBYyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7b0JBQy9DLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxhQUFnQyxFQUFFLEVBQUU7d0JBQzFELElBQUksZUFBZSxHQUFHLElBQUksQ0FBQzt3QkFDM0IsSUFBSSxhQUFhLENBQUMsY0FBYyxDQUFDLGdDQUFnQyxDQUFDLEVBQUU7NEJBQ2xFLGVBQWUsR0FBRyxhQUFhLENBQUMsZ0NBQWdDLENBQUMsQ0FBQzt5QkFDbkU7d0JBQ0QsSUFBSSxlQUFlLEVBQUU7NEJBQ25CLGFBQWEsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLENBQUM7eUJBQ25DO29CQUNILENBQUMsQ0FBQyxDQUFDO2lCQUNKO2FBQ0Y7U0FDRjtJQUNILENBQUM7SUFDRDs7OztPQUlHO0lBQ0ksa0JBQWtCLENBQUMsR0FBUTtRQUNoQyxJQUFJLE9BQU8sR0FBRyxLQUFLLFFBQVEsRUFBRTtZQUMzQixHQUFHLEdBQUcsQ0FBQyxHQUFHLENBQUMsQ0FBQztTQUNiO1FBQ0QsSUFBSSxDQUFDLEdBQUcsSUFBSSxHQUFHLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtZQUMxQixPQUFPO1NBQ1I7UUFDRCxNQUFNLGNBQWMsR0FBRyxJQUFJLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBQ2hFLElBQUksY0FBYyxJQUFJLGNBQWMsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQy9DLGNBQWMsQ0FBQyxPQUFPLENBQUMsQ0FBQyxhQUFnQyxFQUFFLEVBQUU7Z0JBQzFELGFBQWEsQ0FBQyxXQUFXLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDO1lBQ3ZDLENBQUMsQ0FBQyxDQUFDO1NBQ0o7SUFDSCxDQUFDO0lBQ0Q7Ozs7T0FJRztJQUNJLFdBQVcsQ0FBQyxHQUFRO1FBQ3pCLElBQUksT0FBTyxHQUFHLEtBQUssUUFBUSxFQUFFO1lBQzNCLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ2I7UUFDRCxJQUFJLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQzFCLE9BQU87U0FDUjtRQUNELE1BQU0sY0FBYyxHQUFHLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDaEUsSUFBSSxjQUFjLElBQUksY0FBYyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDL0MsY0FBYyxDQUFDLE9BQU8sQ0FBQyxDQUFDLGFBQWdDLEVBQUUsRUFBRTtnQkFDMUQsYUFBYSxDQUFDLFdBQVcsQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLENBQUM7WUFDdkMsQ0FBQyxDQUFDLENBQUM7U0FDSjtJQUNILENBQUM7SUFDRDs7OztPQUlHO0lBQ0sscUJBQXFCLENBQUMsY0FBOEI7UUFDMUQsSUFBSSxLQUFLLEdBQUcsRUFBRSxDQUFDO1FBQ2YsTUFBTSxVQUFVLEdBQUcsY0FBYyxJQUFJLGNBQWMsQ0FBQyxZQUFZLElBQUksY0FBYyxDQUFDLFlBQVksQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDO1FBQ25ILElBQUksVUFBVSxFQUFFO1lBQ2QsTUFBTSxhQUFhLEdBQWtDLFVBQVUsQ0FBQyxhQUFhLENBQUM7WUFDOUUsTUFBTSxPQUFPLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFBLG9DQUFvQztZQUN2RixPQUFPLENBQUMsT0FBTyxDQUFDLENBQUMsSUFBc0IsRUFBRSxFQUFFO2dCQUN6QyxNQUFNLFVBQVUsR0FBRyxLQUFLLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQyxDQUFDO2dCQUM3QyxNQUFNLGNBQWMsR0FBRyxVQUFVLENBQUMsTUFBTSxDQUFDLENBQUMsU0FBYyxFQUFFLEVBQUUsQ0FBQyxTQUFTLFlBQVksaUJBQWlCLENBQUMsQ0FBQztnQkFDckcsS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLENBQUM7WUFDdkMsQ0FBQyxDQUFDLENBQUM7U0FDSjtRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQzs7O1lBakZGLFVBQVUiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBJbmplY3RhYmxlIH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcclxuaW1wb3J0IHsgU2VydmljZSB9IGZyb20gXCIuL3NlcnZpY2VcIjtcclxuaW1wb3J0IHsgRGF0YWdyaWRDb21wb25lbnQgfSBmcm9tICdAZmFycmlzL3VpLWRhdGFncmlkJztcclxuaW1wb3J0IHsgUXVlcnlDb25kaXRpb24gfSBmcm9tICdAZmFycmlzL2NvbXBvbmVudC1xdWVyeWNvbmRpdGlvbic7XHJcbmltcG9ydCB7IENvbW1hbmRDb250ZXh0IH0gZnJvbSBcIkBmYXJyaXMvZGV2a2l0XCI7XHJcbkBJbmplY3RhYmxlKClcclxuZXhwb3J0IGNsYXNzIERhdGFHcmlkU2VydmljZSBleHRlbmRzIFNlcnZpY2Uge1xyXG4gIC8qKlxyXG4gICAqIOa4heepumdyaWTli77pgInooYxcclxuICAgKi9cclxuICBwdWJsaWMgY2xlYXJDaGVja3MoKSB7XHJcbiAgICBjb25zdCBwYXJhbXMgPSB0aGlzLmV2ZW50UGFyYW07XHJcbiAgICBpZiAocGFyYW1zICYmIEFycmF5LmlzQXJyYXkocGFyYW1zKSkge1xyXG4gICAgICBjb25zdCBwYXJhbSA9IHBhcmFtc1swXTtcclxuICAgICAgaWYgKHBhcmFtIGluc3RhbmNlb2YgUXVlcnlDb25kaXRpb24pIHtcclxuICAgICAgICBjb25zdCBncmlkQ29tcG9uZW50cyA9IHRoaXMuZ2V0Rm9ybUdyaWRDb21wb25lbnRzKHRoaXMuY29udGV4dCk7XHJcbiAgICAgICAgaWYgKGdyaWRDb21wb25lbnRzICYmIGdyaWRDb21wb25lbnRzLmxlbmd0aCA+IDApIHtcclxuICAgICAgICAgIGdyaWRDb21wb25lbnRzLmZvckVhY2goKGdyaWRDb21wb25lbnQ6IERhdGFncmlkQ29tcG9uZW50KSA9PiB7XHJcbiAgICAgICAgICAgIGxldCBjbGVhclNlbGVjdGlvbnMgPSB0cnVlO1xyXG4gICAgICAgICAgICBpZiAoZ3JpZENvbXBvbmVudC5oYXNPd25Qcm9wZXJ0eSgnY2xlYXJTZWxlY3Rpb25zV2hlbkRhdGFJc0VtcHR5JykpIHtcclxuICAgICAgICAgICAgICBjbGVhclNlbGVjdGlvbnMgPSBncmlkQ29tcG9uZW50WydjbGVhclNlbGVjdGlvbnNXaGVuRGF0YUlzRW1wdHknXTtcclxuICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICBpZiAoY2xlYXJTZWxlY3Rpb25zKSB7XHJcbiAgICAgICAgICAgICAgZ3JpZENvbXBvbmVudC5jbGVhckNoZWNrZWRzKHRydWUpO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICB9KTtcclxuICAgICAgICB9XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcbiAgLyoqXHJcbiAgICog5Y+W5raI5Yu+6YCJ5Yig6Zmk55qE6KGMXHJcbiAgICogQHBhcmFtIGlkcyBpZHNcclxuICAgKiBAcmV0dXJucyBcclxuICAgKi9cclxuICBwdWJsaWMgdW5jaGVja0RlbGV0ZWRSb3dzKGlkczogYW55KSB7XHJcbiAgICBpZiAodHlwZW9mIGlkcyA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgaWRzID0gW2lkc107XHJcbiAgICB9XHJcbiAgICBpZiAoIWlkcyB8fCBpZHMubGVuZ3RoIDwgMSkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBjb25zdCBncmlkQ29tcG9uZW50cyA9IHRoaXMuZ2V0Rm9ybUdyaWRDb21wb25lbnRzKHRoaXMuY29udGV4dCk7XHJcbiAgICBpZiAoZ3JpZENvbXBvbmVudHMgJiYgZ3JpZENvbXBvbmVudHMubGVuZ3RoID4gMCkge1xyXG4gICAgICBncmlkQ29tcG9uZW50cy5mb3JFYWNoKChncmlkQ29tcG9uZW50OiBEYXRhZ3JpZENvbXBvbmVudCkgPT4ge1xyXG4gICAgICAgIGdyaWRDb21wb25lbnQudW5DaGVja1Jvd3MoaWRzLCB0cnVlKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIOWPlua2iOWLvumAieihjFxyXG4gICAqIEBwYXJhbSBpZHMgaWRzXHJcbiAgICogQHJldHVybnMgXHJcbiAgICovXHJcbiAgcHVibGljIHVuY2hlY2tSb3dzKGlkczogYW55KSB7XHJcbiAgICBpZiAodHlwZW9mIGlkcyA9PT0gJ3N0cmluZycpIHtcclxuICAgICAgaWRzID0gW2lkc107XHJcbiAgICB9XHJcbiAgICBpZiAoIWlkcyB8fCBpZHMubGVuZ3RoIDwgMSkge1xyXG4gICAgICByZXR1cm47XHJcbiAgICB9XHJcbiAgICBjb25zdCBncmlkQ29tcG9uZW50cyA9IHRoaXMuZ2V0Rm9ybUdyaWRDb21wb25lbnRzKHRoaXMuY29udGV4dCk7XHJcbiAgICBpZiAoZ3JpZENvbXBvbmVudHMgJiYgZ3JpZENvbXBvbmVudHMubGVuZ3RoID4gMCkge1xyXG4gICAgICBncmlkQ29tcG9uZW50cy5mb3JFYWNoKChncmlkQ29tcG9uZW50OiBEYXRhZ3JpZENvbXBvbmVudCkgPT4ge1xyXG4gICAgICAgIGdyaWRDb21wb25lbnQudW5DaGVja1Jvd3MoaWRzLCB0cnVlKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgfVxyXG4gIC8qKlxyXG4gICAqIOiOt+WPluW9k+WJjeihqOWNleWGheeahOaJgOacieihqOagvOWunuS+i1xyXG4gICAqIEBwYXJhbSBjb21tYW5kQ29udGV4dCDlkb3ku6TkuIrkuIvmlodcclxuICAgKiBAcmV0dXJucyBcclxuICAgKi9cclxuICBwcml2YXRlIGdldEZvcm1HcmlkQ29tcG9uZW50cyhjb21tYW5kQ29udGV4dDogQ29tbWFuZENvbnRleHQpIHtcclxuICAgIGxldCBncmlkcyA9IFtdO1xyXG4gICAgY29uc3QgYXBwQ29udGV4dCA9IGNvbW1hbmRDb250ZXh0ICYmIGNvbW1hbmRDb250ZXh0LmZyYW1lQ29udGV4dCAmJiBjb21tYW5kQ29udGV4dC5mcmFtZUNvbnRleHQuYXBwQ29udGV4dCB8fCBudWxsO1xyXG4gICAgaWYgKGFwcENvbnRleHQpIHtcclxuICAgICAgY29uc3QgY29tcG9uZW50UmVmczogTWFwPHN0cmluZywgTWFwPHN0cmluZywgYW55Pj4gPSBhcHBDb250ZXh0LmNvbXBvbmVudFJlZnM7XHJcbiAgICAgIGNvbnN0IGNvbGxlY3QgPSBBcnJheS5mcm9tKGNvbXBvbmVudFJlZnMudmFsdWVzKCkpOy8vIFtNYXA8c3RyaW5nLGFueT4sTWFwPHN0cmluZyxhbnk+XVxyXG4gICAgICBjb2xsZWN0LmZvckVhY2goKGl0ZW06IE1hcDxzdHJpbmcsIGFueT4pID0+IHtcclxuICAgICAgICBjb25zdCBjb21wb25lbnRzID0gQXJyYXkuZnJvbShpdGVtLnZhbHVlcygpKTtcclxuICAgICAgICBjb25zdCBncmlkQ29tcG9uZW50cyA9IGNvbXBvbmVudHMuZmlsdGVyKChjb21wb25lbnQ6IGFueSkgPT4gY29tcG9uZW50IGluc3RhbmNlb2YgRGF0YWdyaWRDb21wb25lbnQpO1xyXG4gICAgICAgIGdyaWRzID0gZ3JpZHMuY29uY2F0KGdyaWRDb21wb25lbnRzKTtcclxuICAgICAgfSk7XHJcbiAgICB9XHJcbiAgICByZXR1cm4gZ3JpZHM7XHJcbiAgfVxyXG59Il19