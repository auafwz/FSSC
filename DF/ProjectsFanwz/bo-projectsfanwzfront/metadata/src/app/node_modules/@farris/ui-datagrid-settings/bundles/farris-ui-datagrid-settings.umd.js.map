{"version":3,"file":"farris-ui-datagrid-settings.umd.js","sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@farris/ui-datagrid-settings/lib/datagrid-settings.component.ts","ng://@farris/ui-datagrid-settings/lib/simple-mode/simple-columns.component.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-settings.service.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-sort-setting.component.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-view-columns.component.ts","ng://@farris/ui-datagrid-settings/lib/column-format-setting/column-format-setting.component.ts","ng://@farris/ui-datagrid-settings/lib/column-group/column-group.component.ts","ng://@farris/ui-datagrid-settings/lib/column-format-setting/column-visible-drag.directive.ts","ng://@farris/ui-datagrid-settings/lib/column-group/column-group-drag.directive.ts","ng://@farris/ui-datagrid-settings/lib/datagrid-settings.module.ts"],"sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import {\r\n    Component, ViewEncapsulation, ViewChild, ElementRef, Input, EventEmitter,\r\n    OnInit, OnChanges, SimpleChanges, ChangeDetectorRef, Injector, Output\r\n} from '@angular/core';\r\nimport { BsModalRef } from '@farris/ui-modal';\r\nimport { DataColumn, DatagridComponent } from '@farris/ui-datagrid';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { MessagerService } from '@farris/ui-messager';\r\n\r\n@Component({\r\n    selector: 'datagrid-settings',\r\n    templateUrl: './datagrid-settings.component.html',\r\n    styles: [\r\n        `\r\n\r\n        .f-datagrid-settings .header {\r\n            position:relative;width:100%; height: 56px;padding: 0 24px;border:0px\r\n        }\r\n\r\n        .f-datagrid-settings .header .title {\r\n            display: block; white-space: nowrap; font-size: 17px; line-height: 56px;\r\n        }\r\n        .f-datagrid-settings .header .tabs {\r\n            height: 32px;\r\n            top: 12px; font-size: 14px;\r\n            position: relative;\r\n            line-height: 32px;\r\n        }\r\n        .f-datagrid-settings .header .tabs .tabs-labels {\r\n            background: #EFF5FF;border-radius: 17px;color:#6080AD\r\n        }\r\n\r\n        .f-datagrid-settings .header .tabs .tabs-labels .navitem.active {\r\n            line-height: 28px;\r\n            margin: 2px;\r\n            height: 28px;\r\n            background: rgb(246 250 255);\r\n            border-radius: 15px;\r\n            box-shadow: 0 4px 18px 0 rgb(2 75 193 / 20%)\r\n        }\r\n        .f-datagrid-settings .header .close {\r\n            line-height: 56px;padding: 0;width: 20px\r\n        }\r\n        .f-datagrid-settings .tabs-container {\r\n            height: 100%;overflow: hidden; position: relative; margin: 0 24px; border: 1px solid #DEE1EA; border-radius: 8px;\r\n        }\r\n        .f-datagrid-settings .buttons\r\n        {\r\n            height: 66px;text-align: right;padding: 14px 24px 20px 24px;\r\n        }\r\n\r\n        .f-datagrid-settings .buttons button {\r\n            width: 66px;height: 32px;\r\n        }\r\n        .f-datagrid-settings .buttons .cancel {\r\n            margin-left: 12px;margin-right: 8px;\r\n        }\r\n        .f-datagrid-settings .buttons .ok {\r\n            width: 100px;\r\n        }\r\n\r\n        .f-datagrid-settings .dg-column-format-setting>div{\r\n            width: 360px; min-width:260px;overflow: hidden;background:#ffffff;padding: 10px 5px 10px 8px;border-right: 1px solid #DEE1EA\r\n        }\r\n\r\n        .f-datagrid-settings .dg-column-format-setting .checkbox, .format-setting-column .checkbox{\r\n            margin-right: 5px; font-size: 14px;color: #0089FF;\r\n        }\r\n\r\n        .f-datagrid-settings  .column-group-setting .title{\r\n            height: 36px; line-height: 36px; color: #59a1ff\r\n        }\r\n\r\n        .f-datagrid-settings  .column-group-setting .all-fields {\r\n            background-color:#fff;padding-top: 0px!important;\r\n        }\r\n\r\n        .f-datagrid-settings  .column-group-setting .group-sum-fields {\r\n            height: 36px; line-height: 36px; border-top: 1px solid #e4e7ef; color: #59a1ff\r\n        }\r\n\r\n\r\n        .smooth-dnd-ghost.format-setting-column {\r\n            border: 1px solid #2a87ff;\r\n            z-index: 999999999 !important;\r\n            background-color: #e7f1ff;;\r\n            padding: 4px 8px;\r\n            color: rgb(0 0 0);\r\n        }\r\n\r\n        .smooth-dnd-ghost.format-setting-column .field-drag-handle {\r\n            float: right;\r\n        }\r\n\r\n        .dg-column-format-setting  .smooth-dnd-drop-preview-constant-class {\r\n            background-color: #dee1ea;\r\n        }\r\n        .dg-column-format-setting .format-setting-column {\r\n            background: #fafbfd;\r\n            padding: 4px 8px;\r\n            margin-bottom: 5px;\r\n            border: 1px solid #f2f4f8;\r\n            border-radius: 5px;\r\n        }\r\n        .dg-column-format-setting .format-setting-column.active {\r\n            color: rgb(0 0 0);\r\n            border: 1px solid #2a87ff;\r\n            background: #e7f1ff;\r\n            border-top: 1px solid #2a87ff!important;\r\n            border-bottom: 1px solid #2a87ff!important;\r\n        }\r\n\r\n        .dg-column-format-setting .format-setting-column .field-drag-handle{\r\n            float: right;\r\n            cursor: grab;\r\n        }\r\n\r\n        .dg-column-format-setting .format-setting-column .field-drag-handle:active{\r\n            cursor: grabbing;\r\n        }\r\n\r\n        `\r\n    ],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DatagridSettingsComponent implements OnInit, OnChanges {\r\n    modalRef: BsModalRef;\r\n    gridInstance: DatagridComponent;\r\n    activeTabIndex = 1;\r\n\r\n    /** æåºåæ°æ® */\r\n    sortTreeData = [];\r\n    sortNames = [];\r\n    sortInfo = {};\r\n\r\n    /** æ¾ç¤ºåæ°æ® */\r\n    viewTreeData = [];\r\n    viewColumns = [];\r\n\r\n    columnFormat = [];\r\n\r\n    groupFields = [];\r\n\r\n    canSetColumnSort = true;\r\n    canSetColumnVisible = true;\r\n    @Input() enableReset = false;\r\n    @Input() columns: DataColumn[][];\r\n\r\n    @Output() cancelHandle = new EventEmitter();\r\n    @Output() submitHandle = new EventEmitter();\r\n    @Output() reset = new EventEmitter();\r\n    @Output() concise = new EventEmitter();\r\n\r\n    @ViewChild('header') header: ElementRef;\r\n    searchItems = [];\r\n    alignItems = [];\r\n    summaryItems = [];\r\n    summaryItems2 = [];\r\n\r\n    private localeSer: LocaleService;\r\n    private messager: MessagerService;\r\n    constructor(private cd: ChangeDetectorRef, private inject: Injector) {\r\n        this.messager = this.inject.get(MessagerService, null);\r\n        this.localeSer = this.inject.get(LocaleService);\r\n        this.searchItems = [\r\n            { value: 'all', title: this.localeSer.getValue('datagrid.settings.allColumns') },\r\n            { value: 'visible', title: this.localeSer.getValue('datagrid.settings.visibleColumns') },\r\n            { value: 'hidden', title: this.localeSer.getValue('datagrid.settings.hiddenColumns') }\r\n        ];\r\n\r\n        this.alignItems = [\r\n            { value: 'left', title: this.localeSer.getValue('datagrid.settings.alignLeft')},\r\n            { value: 'center', title: this.localeSer.getValue('datagrid.settings.alignCenter')},\r\n            { value: 'right', title: this.localeSer.getValue('datagrid.settings.alignRight')},\r\n        ];\r\n\r\n        this.summaryItems = [\r\n            { value: -1, title: this.localeSer.getValue('datagrid.settings.summaryNone') },\r\n            { value: 2, title: this.localeSer.getValue('datagrid.settings.summarySum') },\r\n            { value: 0, title: this.localeSer.getValue('datagrid.settings.summaryMax') },\r\n            { value: 1, title: this.localeSer.getValue('datagrid.settings.summaryMin') },\r\n            { value: 3, title: this.localeSer.getValue('datagrid.settings.summaryAverage') },\r\n            { value: 4, title: this.localeSer.getValue('datagrid.settings.summarCount') },\r\n        ];\r\n\r\n        this.summaryItems2 = [\r\n            { value: -1, title: this.localeSer.getValue('datagrid.settings.summaryNone') },\r\n            { value: 4, title: this.localeSer.getValue('datagrid.settings.summarCount') },\r\n        ];\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.sortNames = this.gridInstance.sortName ? this.gridInstance.sortName.split(',') : [];\r\n        this.viewColumns = this.getViewColumns();\r\n        this.sortInfo = this.gridInstance['__sortInfo'] || {};\r\n        this.columnFormat = [...this.columns[0]];\r\n        this.groupFields = this.gridInstance.groupField ? this.gridInstance.groupField.split(',') : [];\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.columns && !changes.columns.isFirstChange()) {\r\n            // console.log(this.columns);\r\n        }\r\n    }\r\n\r\n    close($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        if (this.modalRef) {\r\n            this.modalRef.close();\r\n        }\r\n    }\r\n\r\n    changeTabs(idx) {\r\n        this.activeTabIndex = idx;\r\n    }\r\n\r\n    onSortInfoChange(sortInfo: any) {\r\n        this.sortInfo = sortInfo;\r\n    }\r\n\r\n    private getViewColumns() {\r\n        // å¤è¡¨å¤´\r\n        let visibleCls = [];\r\n        if (this.columns.length > 1 ) {\r\n            this.columns.forEach(cols => {\r\n                visibleCls = visibleCls.concat(this._getViewColumns(cols));\r\n            });\r\n        } else {\r\n            visibleCls = this.columns[0].filter(n => (n.visible || n.visible === undefined));\r\n        }\r\n\r\n        return visibleCls.map(n => n.field);\r\n    }\r\n\r\n    private _getViewColumns(cols: any[]) {\r\n        return cols.filter(c => !c.colspan && (c.visible || c.visible === undefined));\r\n    }\r\n\r\n    onColumnFormatChange(colFormatData) {\r\n        this.columnFormat = colFormatData;\r\n    }\r\n\r\n    onSubmitClick($event) {\r\n        this.submitHandle.emit($event);\r\n    }\r\n\r\n    onCancelClick($event) {\r\n        this.cancelHandle.emit($event);\r\n    }\r\n\r\n    onSettingReset($event) {\r\n        // this.reset.emit($event);\r\n        const restorDefaultText = this.localeSer.getValue('datagrid.settings.restoreDefaultSettingsText') || 'ç¡®è®¤è¦æ¢å¤é»è®¤è®¾ç½®åï¼';\r\n        this.messager.confirm(restorDefaultText).subscribe((t: boolean) => {\r\n            if (t) {\r\n                this.reset2Default();\r\n            }\r\n        });\r\n    }\r\n\r\n    private reset2Default() {\r\n        const options = this.gridInstance.dfs['_state'].initialOptions;\r\n        if (options.columnFields && options.columnFields.length) {\r\n\r\n            const newColumns = [];\r\n            options.columnFields.forEach(c => {\r\n                if (c.field !== '_datagrid-setting-control_') {\r\n                    const col = this.gridInstance.columns[0].find((n: any) => n.field === c.field);\r\n                    if (col) {\r\n                        col.visible = c.visible;\r\n                        col.halign = c.halign;\r\n                        col.align = c.align;\r\n                        col.width = c.width;\r\n                        col.footer = {...c.footer || {}};\r\n                        col.groupFooter = {...c.groupFooter || {}};\r\n                        newColumns.push(col);\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.columns = [newColumns];\r\n        }\r\n\r\n        this.viewColumns = this.getViewColumns();\r\n\r\n        if (options.sort) {\r\n            const sortOrders = options.sort.sortOrder? options.sort.sortOrder.split(',') : [];\r\n            this.sortNames = options.sort.sortName ? options.sort.sortName.split(',') : [];\r\n            this.sortInfo = { sortName: this.sortNames, sortOrder:  sortOrders };\r\n        } else {\r\n            this.sortNames = [];\r\n            this.sortInfo = {};\r\n        }\r\n        this.columnFormat = [...this.columns[0]];\r\n        this.groupFields =  options.groupField ? options.groupField.split(',') : [];\r\n    }\r\n    /** æ¾ç¤ºç®æ´æ¨¡å¼çªå£ */\r\n    showConcise($event) {\r\n\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        this.concise.emit();\r\n\r\n    }\r\n}\r\n","import { ChangeDetectorRef, Component, EventEmitter, HostBinding, Injector, Input, OnInit,\r\n        Output, ViewEncapsulation, HostListener, ViewChild, ElementRef } from '@angular/core';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { DatagridComponent } from '@farris/ui-datagrid';\r\n\r\n@Component({\r\n    selector: 'datagrid-settings-simple',\r\n    templateUrl: './simple-columns.component.html',\r\n    styles: [\r\n        `\r\n        .f-datagrid-settings-simple {\r\n            position: absolute;\r\n            top: 100px;\r\n            right: 0px;\r\n            z-index: 10000;\r\n            height: calc(100vh - 100px);\r\n            width: 468px;\r\n            background: #FFFFFF;\r\n            border: 1px solid #E6E9F0;\r\n            border-radius: 10px 0 0 10px;\r\n        }\r\n\r\n        .f-datagrid-settings-simple:focus {\r\n            outline: none;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .header {\r\n            height: 50px;\r\n            line-height: 50px;\r\n            border-bottom: 1px solid #EAEDF3;\r\n            font-size: 18px;\r\n            color: #2D2F33;\r\n        }\r\n        .f-datagrid-settings-simple .header .title {\r\n            padding-left: 21px;\r\n            font-weight:bold;\r\n        }\r\n        .f-datagrid-settings-simple .header .closed\r\n        {\r\n            width: 50px;\r\n            text-align: center;\r\n            cursor: pointer;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .content .count{font-size: 14px; color: #2D2F33;}\r\n        .f-datagrid-settings-simple .content .tip {\r\n            background: #F7FAFF; border-radius: 6px;line-height: 42px; padding-left: 10px; margin-bottom: 10px;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .content .checkall{\r\n            margin-left: 5px;\r\n            font-size: 14px;\r\n            color: #0089FF;\r\n            margin-right: 5px;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .content {\r\n            margin: 20px 24px;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .footer {\r\n            height: 32px;\r\n            margin: 20px;\r\n        }\r\n\r\n\r\n        .smooth-dnd-ghost.format-setting-column {\r\n            z-index: 999999999 !important;\r\n            padding: 4px 8px;\r\n            background-color: #e7f1ff;\r\n            border: 1px solid #2a87ff;\r\n        }\r\n        .smooth-dnd-ghost.format-setting-column .field-drag-handle {\r\n            float: right;\r\n        }\r\n        .f-datagrid-settings-simple  .smooth-dnd-drop-preview-constant-class {\r\n            background-color: #dee1ea;\r\n        }\r\n        .f-datagrid-settings-simple .format-setting-column {\r\n            background: #fafbfd;\r\n            padding: 4px 8px;\r\n            margin-bottom: 5px;\r\n            border: 1px solid #f2f4f8;\r\n            border-radius: 5px;\r\n            color: #000;\r\n        }\r\n        .f-datagrid-settings-simple .format-setting-column.active {\r\n            border: 1px solid #2a87ff;\r\n            background: #e7f1ff;\r\n            border-top: 1px solid #2a87ff!important;\r\n            border-bottom: 1px solid #2a87ff!important;\r\n        }\r\n\r\n        .format-setting-column .checkbox{\r\n            font-size: 14px;\r\n            color: #0089FF;\r\n            margin-right: 5px;\r\n            cursor:pointer;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .format-setting-column .field-drag-handle{\r\n            float: right;\r\n            cursor: grab;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .format-setting-column .field-drag-handle:active{\r\n            cursor: grabbing;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .list-group-flush:last-child .list-group-item:last-child {\r\n            border-bottom: 1px solid #f2f4f8;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .list-group-flush:first-child .list-group-item:first-child {\r\n            border-top: 1px solid #f2f4f8;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .buttons\r\n        {\r\n            text-align: right;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .buttons button {\r\n            width: 66px;height: 32px;\r\n        }\r\n        .f-datagrid-settings-simple .buttons .cancel {\r\n            margin-left: 12px;margin-right: 8px;\r\n        }\r\n        .f-datagrid-settings-simple .buttons .ok {\r\n            width: 100px;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .buttons .advanced{ width: 66px;height: 32px; float: left; }\r\n\r\n        .f-datagrid-settings-simple-host {\r\n            width: 100%;\r\n            height: 100%;\r\n            position: absolute;\r\n            top: 0;\r\n            left: 0;\r\n            z-index: 1000;\r\n        }\r\n\r\n        .f-datagrid-settings-simple .visible-cols-count {\r\n            font-size: 18px;\r\n            font-weight: 500;\r\n        }\r\n        `\r\n    ],\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class SimpleColumnsComponent implements OnInit {\r\n\r\n    @Input() seartTypes: any = [];\r\n    /** ææå */\r\n    @Input() columns = [];\r\n    /** æ¾ç¤ºçå */\r\n    @Input() fields = [];\r\n    /** ç¹å»ä¾§è¾¹æ ·å¼ä»¥å¤çåºåéèé¢æ¿ãé»è®¤ä¸º true */\r\n    @Input() clickToHidden = true;\r\n\r\n    @Input() top = 0;\r\n\r\n    @HostBinding('class') cls = 'f-datagrid-settings-simple-host';\r\n\r\n    @ViewChild('colcontainer') container: ElementRef;\r\n    @ViewChild('okbtn') btnOk: ElementRef;\r\n    @ViewChild('inputWord') searchInput: ElementRef;\r\n\r\n    @Output() formatChange = new EventEmitter();\r\n    @Output() fieldsChange = new EventEmitter();\r\n    @Output() submit = new EventEmitter();\r\n    @Output() closed = new EventEmitter();\r\n    @Output() advanced = new EventEmitter();\r\n\r\n    allCols = [];\r\n    columnType = 'all';\r\n\r\n    gridInstance: DatagridComponent;\r\n    localeSer: LocaleService;\r\n    isEn = false;\r\n    private messager: MessagerService;\r\n\r\n    private settings: any = {};\r\n\r\n    constructor(private injector: Injector, public cd: ChangeDetectorRef) {\r\n        this.localeSer = this.injector.get(LocaleService, null);\r\n        this.messager = this.injector.get(MessagerService, null);\r\n    }\r\n\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick($event: MouseEvent) {\r\n        // console.log($event);\r\n        $event.stopPropagation();\r\n        const clsname = $event.target['className'] || '';\r\n        if (clsname.indexOf('f-datagrid-settings-simple-host') > -1) {\r\n            // éèä¾§è¾¹æ ï¼\r\n            if (this.clickToHidden) {\r\n                this.close();\r\n            }\r\n        }\r\n    }\r\n\r\n    @HostListener('window:keydown.esc', ['$event'])\r\n    onEscKeydown($event) {\r\n        $event.stopPropagation();\r\n        if (!document.querySelector('modal-container')) {\r\n            this.close();\r\n        }\r\n    }\r\n\r\n    @HostListener('window:keydown.enter', ['$event'])\r\n    onEnterKeydown($event) {\r\n        $event.stopPropagation();\r\n        if (!document.querySelector('modal-container')) {\r\n            this.onSubmitClick();\r\n        }\r\n    }\r\n\r\n    @HostListener('keydown', ['$event'])\r\n    onControlGKeydown($event: KeyboardEvent) {\r\n        if ($event.ctrlKey && !document.querySelector('modal-container')) {\r\n            $event.preventDefault();\r\n            $event.stopPropagation();\r\n            if ($event.key.toLowerCase() === 'g') {\r\n                this.showAdvanced($event);\r\n            } else if ($event.key.toLowerCase() === 'r') {\r\n                this.onSettingReset();\r\n            } else if ($event.key.toLowerCase() === 's') {\r\n                this.searchInput.nativeElement.focus();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.allCols = this.columns[0];\r\n        this.fields = this.getViewColumns();\r\n        this.container.nativeElement.focus();\r\n    }\r\n\r\n    private getViewColumns() {\r\n        // å¤è¡¨å¤´\r\n        let visibleCls = [];\r\n        if (this.columns.length > 1 ) {\r\n            this.columns.forEach(cols => {\r\n                visibleCls = visibleCls.concat(this._getViewColumns(cols));\r\n            });\r\n        } else {\r\n            visibleCls = this.columns[0].filter(n => (n.visible || n.visible === undefined));\r\n        }\r\n\r\n        return visibleCls.map(n => n.field);\r\n    }\r\n\r\n    private _getViewColumns(cols: any[]) {\r\n        return cols.filter(c => !c.colspan && (c.visible || c.visible === undefined));\r\n    }\r\n\r\n\r\n    // æ ¹æ®åçç±»åè¿è¡ç­éè¿æ»¤ï¼\r\n    // all ææå\r\n    // visible å¯è§å\r\n    // hidden éèå\r\n    // group åç»å\r\n    filterColumns(ct: string, searchWords = '') {\r\n        let cols = [];\r\n        switch (ct) {\r\n            case 'visible':\r\n                cols = this.columns[0].filter(n => this.fields.indexOf(n.field) > -1);\r\n                break;\r\n            case 'hidden':\r\n                cols = this.columns[0].filter(n => this.fields.indexOf(n.field) === -1);\r\n                break;\r\n            case 'all':\r\n            default:\r\n                cols = this.columns[0];\r\n                break;\r\n        }\r\n\r\n        if (searchWords) {\r\n            cols = cols.filter(c => c.title.toLowerCase().indexOf(searchWords) > -1);\r\n        }\r\n\r\n        this.allCols = cols;\r\n    }\r\n\r\n\r\n\r\n    private onFieldsChanged() {\r\n        this.fieldsChange.emit(this.fields);\r\n    }\r\n    onDblClick($event, col) {\r\n        // console.log('æ¾ç¤ºä¸éèåæ¢äºä»¶', col);\r\n        this.onCheckboxClick($event, col);\r\n    }\r\n\r\n    onCheckboxClick($event, col) {\r\n        // console.log('æ¾ç¤ºä¸éèåæ¢äºä»¶', col);\r\n        $event.stopPropagation();\r\n        const index = this.fields.indexOf(col.field);\r\n        if (index === -1) {\r\n            this.fields.push(col.field);\r\n        } else {\r\n            this.fields.splice(index, 1);\r\n        }\r\n\r\n        this.columns[0].forEach(f => {\r\n            f.visible = this.fields.indexOf(f.field) > -1;\r\n        });\r\n\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n\r\n        this.onFieldsChanged();\r\n    }\r\n\r\n    searchColumn($event, ct) {\r\n        const txt = $event.target.value;\r\n        this.filterColumns(ct, txt);\r\n    }\r\n\r\n    onFieldDrop(fieldInfo, ct, txt, ulElRef: any) {\r\n       // console.log('drop', fieldInfo);\r\n        const { removedIndex, addedIndex } = fieldInfo;\r\n\r\n        const moveItem = this.allCols[removedIndex];\r\n        const targetItem = this.allCols[addedIndex];\r\n\r\n        const moveItemIndex = this.columns[0].findIndex(n => n.field === moveItem.field);\r\n        const targetItemIndex = this.columns[0].findIndex(n => n.field === targetItem.field);\r\n\r\n        const removedItem = this.columns[0].splice(moveItemIndex, 1);\r\n        this.columns[0].splice(targetItemIndex, 0, ...removedItem);\r\n\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n        this.onFieldsChanged();\r\n\r\n        this.filterColumns(ct, txt);\r\n    }\r\n\r\n    /**\r\n     * 0: 1ä¸ªä¹æ²¡æéä¸­ï¼ 1: å¨é¨éä¸­ï¼ 2: æéä¸­çä¹ææ²¡éä¸­ç\r\n     */\r\n    private getCheckAllState() {\r\n        if (this.fields.length === 0) {\r\n            return 0;\r\n        } else {\r\n            if (this.fields.length === this.columns[0].length) {\r\n                return 1;\r\n            }\r\n            return 2;\r\n        }\r\n    }\r\n\r\n    onCheckAllClick($event, ct, txt) {\r\n        const state = this.getCheckAllState();\r\n        if (state === 0 || state === 2) {\r\n            // æ§è¡å¨é\r\n            this.columns[0].forEach(n => n.visible = true);\r\n            this.fields = this.columns[0].map(n => n.field);\r\n        } else {\r\n            // åæ¶å¨é\r\n            this.columns[0].forEach(n => n.visible = false);\r\n            this.fields = [];\r\n        }\r\n\r\n        this.onFieldsChanged();\r\n        this.filterColumns(ct, txt);\r\n    }\r\n\r\n    close($event?: MouseEvent) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        this.closed.emit();\r\n    }\r\n\r\n    showAdvanced($event) {\r\n        this.close($event);\r\n        this.advanced.emit();\r\n    }\r\n\r\n    onSettingReset($event?: any) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n        const restorDefaultText = this.localeSer.getValue('datagrid.settings.restoreDefaultSettingsText') || 'ç¡®è®¤è¦æ¢å¤é»è®¤è®¾ç½®åï¼';\r\n        this.messager.confirm(restorDefaultText).subscribe((t: boolean) => {\r\n            if (t) {\r\n                this.reset2Default();\r\n            }\r\n        });\r\n    }\r\n\r\n    private reset2Default() {\r\n        const options = this.gridInstance.dfs['_state'].initialOptions;\r\n        if (options.columnFields && options.columnFields.length) {\r\n\r\n            const newColumns = [];\r\n            options.columnFields.forEach(c => {\r\n                if (c.field !== '_datagrid-setting-control_') {\r\n                    const col = this.gridInstance.columns[0].find((n: any) => n.field === c.field);\r\n                    if (col) {\r\n                        col.visible = c.visible;\r\n                        col.halign = c.halign;\r\n                        col.align = c.align;\r\n                        col.width = c.width;\r\n                        col.footer = {...c.footer || {}};\r\n                        col.groupFooter = {...c.groupFooter || {}};\r\n                        newColumns.push(col);\r\n                    }\r\n                }\r\n            });\r\n\r\n            this.columns = [newColumns];\r\n        }\r\n\r\n        this.allCols = this.columns[0];\r\n\r\n        this.fields = this.getViewColumns();\r\n        this.settings.viewColumns = this.fields;\r\n        this.settings.columnFormat = [...this.columns[0]];\r\n        if (options.sort) {\r\n            const sortOrders = options.sort.sortOrder? options.sort.sortOrder.split(',') : [];\r\n            const sortNames = options.sort.sortName ? options.sort.sortName.split(',') : [];\r\n            this.settings.sortInfo = { sortName: sortNames, sortOrder:  sortOrders };\r\n        } else {\r\n            this.settings.sortInfo = {};\r\n        }\r\n        this.settings.groupFields =  options.groupField ? options.groupField.split(',') : [];\r\n    }\r\n\r\n    onSubmitClick($event?: any) {\r\n        if ($event) {\r\n            $event.stopPropagation();\r\n        }\r\n\r\n        this.settings.viewColumns = this.fields;\r\n        this.settings.columnFormat = [...this.columns[0]];\r\n\r\n        if (!this.settings.sortInfo) {\r\n            this.settings.sortInfo = {\r\n                sortName: this.gridInstance.sortName ? this.gridInstance.sortName.split(',') : [],\r\n                sortOrder:  this.gridInstance.sortOrder ? this.gridInstance.sortOrder.split(',') : []\r\n            };\r\n        }\r\n\r\n        if (this.settings.groupFields === undefined) {\r\n            this.settings.groupFields = this.gridInstance.groupField ? this.gridInstance.groupField.split(',') : [];\r\n        }\r\n\r\n        this.submit.emit({content: this.settings, close: this.close.bind(this), target: this.btnOk.nativeElement});\r\n    }\r\n}\r\n","import { map, switchMap, tap } from 'rxjs/operators';\r\nimport { Observable, of } from 'rxjs';\r\nimport { Injectable, Injector, InjectionToken, ComponentFactoryResolver, ApplicationRef } from '@angular/core';\r\nimport { DatagridComponent, DataColumn } from '@farris/ui-datagrid';\r\nimport { BsModalService, ModalOptions, ModalContainerComponent } from '@farris/ui-modal';\r\nimport { MessagerService } from '@farris/ui-messager';\r\nimport { DatagridSettingsComponent } from './datagrid-settings.component';\r\nimport { cloneDeep } from 'lodash-es';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { TreeNode } from '@farris/ui-treetable';\r\nimport { IdService } from '@farris/ui-common';\r\nimport { SimpleColumnsComponent } from './simple-mode/simple-columns.component';\r\n\r\nexport const GRID_SETTINGS_WEBAPI =  new InjectionToken(' Farris DataGrid User Setting WebApi URI.');\r\n\r\n@Injectable()\r\nexport class DatagridSettingsService {\r\n\r\n    private multiSortMsg = 'åè¡¨ä¸­æªå¼å¯å¤åæåºçåè½ã è¯·æ£æ¥ï¼';\r\n    private columnsSortableMsg = 'æªå¼å¯åçæåºåè½ãè¯·æ£æ¥ï¼';\r\n    private notSupportHeaderGroupMsg = 'æä¸æ¯æå¤è¡¨å¤´è®¾ç½®';\r\n    private notShowDialog = 'å¤è¡¨å¤´æä¸æ¯æåæ¾ç¤ºè®¾ç½®ï¼åæ¶æªå¯ç¨åæåºåè½ã';\r\n\r\n    public httpRestService: any;\r\n    gridInstance: any = null;\r\n    private gridRefs: {[key: string]: DatagridComponent} = null;\r\n\r\n    private saving = false;\r\n    private cfr: ComponentFactoryResolver = null;\r\n    private app: ApplicationRef = null;\r\n    constructor(private injector: Injector, private modalSer: BsModalService,\r\n                private messager: MessagerService, private idService: IdService,\r\n                private localeSer: LocaleService) {\r\n\r\n        this.cfr = this.injector.get(ComponentFactoryResolver);\r\n        this.app = this.injector.get(ApplicationRef);\r\n    }\r\n\r\n    destroy(id?: string) {\r\n        if (id && this.gridRefs && this.gridRefs[id]) {\r\n            delete this.gridRefs[id];\r\n        } else {\r\n            this.gridRefs = null;\r\n        }\r\n    }\r\n\r\n    registerGridInstance(dg: DatagridComponent) {\r\n        if (!dg) {\r\n            console.log('DatagridSettingService: grid instance is null.');\r\n            return;\r\n        }\r\n        const id = dg.id;\r\n        this.gridRefs = this.gridRefs || {};\r\n        if (!this.gridRefs[id]) {\r\n            this.gridRefs[id] = dg;\r\n        }\r\n    }\r\n\r\n    getGridInstance(dgID: string) {\r\n        return this.gridRefs ? this.gridRefs[dgID] : null;\r\n    }\r\n\r\n    getSearchTypes() {\r\n        return [\r\n            { value: 'all', title: this.localeSer.getValue('datagrid.settings.allColumns') },\r\n            { value: 'visible', title: this.localeSer.getValue('datagrid.settings.visibleColumns') },\r\n            { value: 'hidden', title: this.localeSer.getValue('datagrid.settings.hiddenColumns') }\r\n        ];\r\n    }\r\n\r\n    showSimple(gridInstance: DatagridComponent) {\r\n        const columns = this.convertColumnsToSimple(gridInstance.columns);\r\n        columns[0] = columns[0].filter(n => n.field && n.field !== gridInstance.ControlPanelFeild);\r\n\r\n        const searchTypes = this.getSearchTypes();\r\n\r\n        if (this.cfr) {\r\n            const cmpFactory = this.cfr.resolveComponentFactory(SimpleColumnsComponent);\r\n            let simpleRef = cmpFactory.create(this.injector);\r\n            this.app.attachView(simpleRef.hostView);\r\n            simpleRef.instance.columns = columns;\r\n            simpleRef.instance.seartTypes = searchTypes;\r\n            simpleRef.instance.gridInstance = gridInstance;\r\n\r\n            if (document.querySelector('#page-wrapper')) {\r\n                simpleRef.instance.top = 76;\r\n            }\r\n\r\n            document.body.appendChild(simpleRef.location.nativeElement);\r\n\r\n\r\n            simpleRef.instance.closed.subscribe( () => {\r\n                simpleRef.location.nativeElement.remove();\r\n                simpleRef.destroy();\r\n                simpleRef = null;\r\n            });\r\n\r\n            simpleRef.instance.advanced.subscribe(() => {\r\n                this.showAdvanced(gridInstance);\r\n            });\r\n\r\n            simpleRef.instance.submit.subscribe( (e: any) => {\r\n                e.target.disabled = true;\r\n                if (this.saving) {\r\n                    return;\r\n                }\r\n                if (!this.saving) {\r\n                    this.updateGridView(e, gridInstance, e.target);\r\n                }\r\n            });\r\n\r\n            simpleRef.hostView.detectChanges();\r\n\r\n            return simpleRef;\r\n        }\r\n    }\r\n\r\n\r\n    show(gridInstance: DatagridComponent, opts?: ModalOptions) {\r\n        this.registerGridInstance(gridInstance);\r\n\r\n        if (gridInstance.enableSimpleMode) {\r\n            return this.showSimple(gridInstance);\r\n        } else {\r\n            return this.showAdvanced(gridInstance, opts);\r\n        }\r\n    }\r\n\r\n    private showAdvanced(gridInstance: DatagridComponent, opts?: ModalOptions) {\r\n        let _editColSortInfo = true;\r\n        const editColSortInfo = this.canSetColumnSort(gridInstance);\r\n        if (editColSortInfo !== true) {\r\n            // this.messager.warning(msg);\r\n            // return;\r\n            _editColSortInfo = false;\r\n        }\r\n\r\n        const showSetColumnsTab = !this.isHeaderGroup(gridInstance);\r\n        const getActiveTabIndex = () => {\r\n            if (showSetColumnsTab) {\r\n                return 1;\r\n            } else {\r\n                if (_editColSortInfo) {\r\n                    return 2;\r\n                } else {\r\n                    return -1;\r\n                }\r\n            }\r\n        };\r\n        const activeTabIndex = getActiveTabIndex();\r\n\r\n        if (activeTabIndex === -1) {\r\n            this.messager.warning(this.notShowDialog);\r\n            return;\r\n        }\r\n\r\n        const columns = this.convertColumnsToSimple(gridInstance.columns);\r\n        columns[0] = columns[0].filter(n => n.field && n.field !== gridInstance.ControlPanelFeild);\r\n        const treeData = this.convertColumns2TreeData(cloneDeep(columns), true);\r\n        const viewColumnsTreeData = this.convertColumns2TreeData(cloneDeep(columns), false);\r\n        this.checkViewTreeNodes(viewColumnsTreeData);\r\n\r\n        let modalRef = null;\r\n\r\n        const okText = this.localeSer.getValue('datagrid.settings.ok') || 'ç¡®å®';\r\n        const cancelText = this.localeSer.getValue('datagrid.settings.cancel') || 'åæ¶';\r\n        const resetText =  this.localeSer.getValue('datagrid.settings.reset') || 'éç½®';\r\n\r\n\r\n        const defaultOpts = {\r\n            width: 760, height: 560, showHeader: false, title: 'æ§å¶é¢æ¿',\r\n            initialState: {\r\n                columns,\r\n                sortTreeData: treeData,\r\n                viewTreeData: viewColumnsTreeData,\r\n                gridInstance,\r\n                canSetColumnSort: _editColSortInfo,\r\n                canSetColumnVisible: showSetColumnsTab,\r\n                activeTabIndex\r\n            },\r\n            showButtons: false\r\n        };\r\n        const modalOpts = Object.assign(defaultOpts, opts || {});\r\n\r\n        modalRef = this.modalSer.show(DatagridSettingsComponent, modalOpts);\r\n        const instance = modalRef.content as DatagridSettingsComponent;\r\n        instance.enableReset = true;\r\n        instance.modalRef = modalRef;\r\n        instance.canSetColumnSort = _editColSortInfo;\r\n        instance.canSetColumnVisible = !this.isHeaderGroup(gridInstance);\r\n\r\n        instance.submitHandle.subscribe((e) => {\r\n            e.target.disabled = true;\r\n            if (this.saving) {\r\n                return;\r\n            }\r\n            if (!this.saving) {\r\n                this.updateGridView(modalRef, gridInstance, e.target);\r\n            }\r\n        });\r\n\r\n        instance.cancelHandle.subscribe((e) => {\r\n            modalRef.close();\r\n        });\r\n\r\n        instance.concise.subscribe((e) => {\r\n            modalRef.close();\r\n            this.showSimple(gridInstance);\r\n        });\r\n\r\n        const modalContainer = modalRef.dialog.instance as ModalContainerComponent;\r\n        modalContainer.draggbar.handle = instance.header.nativeElement;\r\n        return modalRef;\r\n    }\r\n\r\n\r\n\r\n    private canSetColumnSort(gridInstance: DatagridComponent) {\r\n        if (gridInstance.multiSort && this.hasEnableSortColumns(gridInstance)) {\r\n            return true;\r\n        } else {\r\n            if (!this.hasEnableSortColumns(gridInstance)) {\r\n                return this.columnsSortableMsg;\r\n            } else if (!gridInstance.multiSort) {\r\n                return this.multiSortMsg;\r\n            }\r\n        }\r\n    }\r\n\r\n    private hasEnableSortColumns(gridInstance: DatagridComponent) {\r\n        const sortColumnsCount = gridInstance.flatColumns.reduce((c, r) => {\r\n            if (r.sortable) {\r\n                return c + 1;\r\n            }\r\n            return c;\r\n        }, 0);\r\n\r\n        return sortColumnsCount > 0;\r\n    }\r\n\r\n    private isHeaderGroup(grid: DatagridComponent) {\r\n        const flag = grid.columns.length > 1;\r\n        if (flag) {\r\n            return this.notSupportHeaderGroupMsg;\r\n        }\r\n        return flag;\r\n    }\r\n\r\n    private getChilds(cols, rowIndex, colStartIndex, colCount, forSort = false) {\r\n        const childCols = [];\r\n        let _count = colStartIndex;\r\n        if (!cols[rowIndex]) {\r\n            return  [];\r\n        }\r\n\r\n        cols[rowIndex].slice().forEach(element => {\r\n            _count = _count + element.colspan;\r\n            if ( _count <= colCount ) {\r\n                childCols.push(element);\r\n            }\r\n        });\r\n\r\n        cols[rowIndex].splice(0, childCols.length);\r\n\r\n        return childCols.map((c, i) => {\r\n            let n: any = {\r\n                data: c,\r\n                selectable: forSort ? !!c.sortable : true\r\n            };\r\n\r\n            if (c.colspan && c.colspan > 1) {\r\n                n = {\r\n                    data: c,\r\n                    selectable: false,\r\n                    expanded: true,\r\n                    children: this.getChilds(cols, rowIndex + 1, 0 , c.colspan)\r\n                };\r\n            }\r\n            return n;\r\n        });\r\n    }\r\n    convertColumns2TreeData(cols: DataColumn[][], forSort = false) {\r\n        const columns = cols.map((c: any) => {\r\n            c.map((_) => {\r\n                _.colspan = _.colspan || 1;\r\n                return _;\r\n            });\r\n            return c;\r\n        });\r\n        if (columns.length === 1) {\r\n            return columns[0].map(c => {\r\n                return {\r\n                    data: c,\r\n                    selectable: forSort ? !!c.sortable : true\r\n                };\r\n            });\r\n        } else {\r\n            return columns[0].map((c, i) => {\r\n                if (c.colspan && c.colspan > 1) {\r\n                    return {\r\n                        data: c,\r\n                        selectable: false,\r\n                        expanded: true,\r\n                        children: this.getChilds(columns, 1, 0, c.colspan, forSort)\r\n                    };\r\n                } else {\r\n                    return {\r\n                        data: c,\r\n                        selectable: forSort ? !!c.sortable : true\r\n                    };\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n\r\n    private checkViewTreeNodes(treeNodes: TreeNode[]) {\r\n        treeNodes.forEach((tn: TreeNode) => {\r\n            if (!tn.children || !tn.children.length) {\r\n                tn.selectable = true;\r\n            } else {\r\n                tn.selectable = false;\r\n                this.checkViewTreeNodes(tn.children);\r\n            }\r\n        });\r\n    }\r\n\r\n    private convertColumnsToSimple(cols: any) {\r\n        // ç§»é¤è®¾ç½®å\r\n        return cols.map( (_cols: DataColumn[]) => {\r\n            return _cols.map( (c: DataColumn) => {\r\n                if (c.field !== '_datagrid-setting-control_') {\r\n                    return {\r\n                        field: c.field,\r\n                        title: c.title,\r\n                        colspan: c.colspan,\r\n                        rowspan: c.rowspan,\r\n                        sortable: c.sortable,\r\n                        order: c.order,\r\n                        halign: c.halign || 'left',\r\n                        align: c.align || 'left',\r\n                        visible: c.visible,\r\n                        allowGrouping: c.allowGrouping,\r\n                        groupFooter: c.groupFooter,\r\n                        footer: c.footer,\r\n                        width: c.width || 100,\r\n                        dataType: c.dataType || 'string'\r\n                    };\r\n                }\r\n            }).filter(n => n);\r\n        });\r\n    }\r\n\r\n    private resetGridView(gridInstance: any) {\r\n        if (!gridInstance) {\r\n            return;\r\n        }\r\n        const dfs = gridInstance.dfs;\r\n        if (dfs) {\r\n            const options = dfs['_state'].initialOptions;\r\n\r\n            if (options.sort) {\r\n                if (options.sort.sortName) {\r\n                    gridInstance.sortName = options.sort.sortName;\r\n                }\r\n                if (options.sort.sortOrder) {\r\n                    gridInstance.sortOrder = options.sort.sortOrder;\r\n                }\r\n            }\r\n\r\n            gridInstance.groupField = options.groupField || '';\r\n            // TODO: è¿éè¦ä¿®æ­£é»è®¤åçæ¾ç¤ºé¡ºåº\r\n            if (options.columnFields && options.columnFields.length) {\r\n\r\n                const newColumns = [];\r\n                options.columnFields.forEach(c => {\r\n                    const col = gridInstance.columns[0].find((n: any) => n.field === c.field);\r\n                    if (col) {\r\n                        col.visible = c.visible;\r\n                        col.halign = c.halign;\r\n                        col.align = c.align;\r\n                        col.width = c.width;\r\n                        col.footer = c.footer;\r\n                        col.groupFooter = c.groupFooter;\r\n                        newColumns.push(col);\r\n                    }\r\n                });\r\n\r\n                gridInstance.columns[0] = newColumns;\r\n            }\r\n\r\n            // gridInstance['checkOptions']();\r\n            gridInstance['columnsChanged']();\r\n        }\r\n    }\r\n\r\n    private updateGridView(modalRef, gridInstance, btn = null) {\r\n        const settings = modalRef.content;\r\n\r\n        if (settings) {\r\n            const key = this.createConfigKey(gridInstance.id);\r\n            const { sortInfo, viewColumns, columnFormat, groupFields } = settings;\r\n\r\n            this.saving = true;\r\n\r\n            let groupField = '';\r\n            if (gridInstance.groupRows && groupFields && groupFields.length) {\r\n                groupField = groupFields.join(',') ;\r\n            }\r\n            gridInstance.groupField = groupField;\r\n\r\n            this.setUserConfig(key, { sortInfo, viewColumns, groupField, columnFormat }).subscribe( () => {\r\n                if (btn) {\r\n                    btn.disabled = false;\r\n                }\r\n                this.saving = false;\r\n                modalRef.close();\r\n\r\n                if (sortInfo && Object.keys(sortInfo).length) {\r\n                    const { sortName, sortOrder } = sortInfo;\r\n                    if (sortName && sortName.length) {\r\n                        gridInstance.sort(sortName.join(','), sortOrder.join(','));\r\n                    } else {\r\n                        gridInstance.clearSort();\r\n                    }\r\n                } else {\r\n                    gridInstance.clearSort();\r\n                }\r\n\r\n                if (viewColumns && viewColumns.length) {\r\n                    gridInstance.columns = gridInstance.columns.map(cols => {\r\n                        this.updateColumnFormat(cols, columnFormat, gridInstance);\r\n                        return this.newVisibleOrderColumns(cols, viewColumns, columnFormat);\r\n                    });\r\n                }\r\n\r\n                gridInstance.columnsChanged(true);\r\n            });\r\n        } else {\r\n            modalRef.close();\r\n        }\r\n    }\r\n\r\n\r\n    newVisibleOrderColumns(cols: any, viewColumns: any, columnFormat: any) {\r\n        const hideColumns = [];\r\n        cols.forEach((element, index) => {\r\n            if (this.isNewAddColumn(element.field, columnFormat) && element.field !== '_datagrid-setting-control_') {\r\n                viewColumns.push(element.field);\r\n            } else {\r\n                element.visible = viewColumns.includes(element.field);\r\n                if (!element.visible) {\r\n                    hideColumns.push(element);\r\n                }\r\n            }\r\n        });\r\n\r\n        // æ¸çä¸å­å¨çå\r\n        let newCols = viewColumns.map( field => {\r\n            return cols.find(c => c.field === field);\r\n        }).filter(n => n);\r\n\r\n        if (hideColumns.length) {\r\n            newCols = newCols.concat(hideColumns);\r\n        }\r\n\r\n        return newCols.filter(c => c && c.field && c.field !== '_datagrid-setting-control_' );\r\n    }\r\n\r\n    /**\r\n     * æ¯å¦ä¸ºæ°å¢å çå­æ®µ\r\n     * æ°å¢çå­æ®µï¼éè¦å¨åè¡¨ä¸­å±ç¤ºåºæ¥ï¼å¹¶ä¿å­å°ä¸ªæ§åè®¾ç½®ä¸­\r\n     */\r\n    private isNewAddColumn(field: any, columns: any) {\r\n        return !columns.find(c => c.field === field);\r\n    }\r\n\r\n\r\n    updateColumnFormat(cols: any[], columnFormat: any[], gridInstance) {\r\n        if (columnFormat && columnFormat.length) {\r\n            cols.forEach(col => {\r\n                const formatCol = columnFormat.find(f=> f.field === col.field);\r\n                if (formatCol) {\r\n                    col.width = formatCol.width;\r\n                    col.halign = formatCol.halign || 'left';\r\n                    col.align = formatCol.align || 'left';\r\n\r\n                    if (gridInstance.groupRows && (col.allowGrouping || col.allowGrouping === undefined)) {\r\n                        if (!col.groupFooter) {\r\n                            col.groupFooter = formatCol.groupFooter;\r\n                        }\r\n\r\n                        if (col.groupFooter && col.groupFooter.options) {\r\n                            col.groupFooter.options.text = formatCol.groupFooter.options.text || '';\r\n                            col.groupFooter.options.calculationType =\r\n                                formatCol.groupFooter.options.calculationType !== undefined &&\r\n                                formatCol.groupFooter.options.calculationType !== null ?\r\n                                parseInt(formatCol.groupFooter.options.calculationType, 10) : -1;\r\n                        }\r\n                    }\r\n\r\n                    if (gridInstance.showFooter && !gridInstance.footerTemplate) {\r\n                        if (!col.footer) {\r\n                            col.footer = formatCol.footer;\r\n                        }\r\n\r\n                        if (col.footer && col.footer.options) {\r\n                            col.footer.options.text = formatCol.footer.options.text || '';\r\n                            col.footer.options.calculationType =\r\n                                formatCol.footer.options.calculationType !== undefined &&\r\n                                formatCol.footer.options.calculationType !== null ?\r\n                                parseInt(formatCol.footer.options.calculationType, 10) : -1;\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    // åå»ºå¯ä¸key, ç±uri + gridId ç»æï¼å¹¶æ··æ·\r\n    private createConfigKey(gridId: string) {\r\n        const grid = this.getGridInstance(gridId);\r\n        if (grid) {\r\n            return grid.dgs.createConfigKey(gridId);\r\n        } else {\r\n            console.log('DatagridSettingService: Can not find the grid instance.');\r\n        }\r\n\r\n    }\r\n\r\n    saveUserConfig(gridId: string) {\r\n        const gridInstance = this.getGridInstance(gridId);\r\n        const key = this.createConfigKey(gridId);\r\n        const config = {sortInfo: {}, viewColumns: [], groupField: '', columnFormat: []};\r\n\r\n        if (gridInstance) {\r\n            const { sortName, sortOrder, columns} = gridInstance;\r\n            if (sortName) {\r\n                const sortInfo = {\r\n                    sortName: sortName.split(','),\r\n                    sortOrder: sortOrder.split(',')\r\n                };\r\n\r\n                config.sortInfo = sortInfo;\r\n            }\r\n\r\n            const viewColumns = columns[0].filter(n => n.visible || n.visible === undefined).map(n => n.field);\r\n            config.viewColumns = viewColumns;\r\n            config.columnFormat = this.convertColumnsToSimple(columns)[0];\r\n\r\n            if (gridInstance.groupRows) {\r\n                config.groupField = gridInstance.groupField;\r\n            }\r\n        }\r\n\r\n        return this.setUserConfig(key, config);\r\n    }\r\n\r\n    setUserConfig(key: string, config: any): Observable<any> {\r\n\r\n        const LOCALEID = this.localeSer.localeId;\r\n        const currentConfig = localStorage.getItem(key);\r\n        const _config = (currentConfig ? JSON.parse(currentConfig) : { }) || {};\r\n        if (config) {\r\n            if (_config) {\r\n                _config[LOCALEID] = config;\r\n            }\r\n\r\n            localStorage.setItem(key, JSON.stringify(_config));\r\n        } else {\r\n            localStorage.removeItem(key);\r\n        }\r\n        if (this.httpRestService) {\r\n            // ä¿å­è³æ°æ®åº\r\n            return this._saveUserConfig(key,  config ? _config :  '');\r\n        }\r\n\r\n        return of(true);\r\n    }\r\n\r\n    getUserConfig(key): Observable<any> {\r\n        if (this.httpRestService) {\r\n            return this._getUserConfig(key);\r\n        } else {\r\n            const config = localStorage.getItem(key);\r\n            if (config) {\r\n                const con = JSON.parse(config);\r\n                if (con[this.localeSer.localeId]) {\r\n                    return of(con[this.localeSer.localeId]);\r\n                } else {\r\n                    if (Object.keys(con).indexOf('viewColumns') > -1) {\r\n                        return of(con);\r\n                    }\r\n                    return null;\r\n                }\r\n            } else {\r\n                return of(null);\r\n            }\r\n        }\r\n    }\r\n\r\n    getSettings(gridID: string) {\r\n        const key = this.createConfigKey(gridID);\r\n        return this.getUserConfig(key);\r\n    }\r\n\r\n\r\n    private _saveUserConfig(key, config) {\r\n        try {\r\n            const userConfigSetting = {\r\n                configkey1: key,\r\n                configkey2: '',\r\n                configkey3: '',\r\n                textvalue: config ? JSON.stringify(config) :  ''\r\n            };\r\n\r\n            return this.httpRestService.saveUserSettings(userConfigSetting);\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n    resetUserConfig(gridInstance, modalRef) {\r\n        const restorDefaultText = this.localeSer.getValue('datagrid.settings.restoreDefaultSettingsText') || 'ç¡®è®¤è¦æ¢å¤é»è®¤è®¾ç½®åï¼';\r\n        this.messager.confirm(restorDefaultText).pipe(\r\n            switchMap( (t: boolean) => {\r\n                if (t) {\r\n                    const key = this.createConfigKey(gridInstance.id);\r\n                    return this.setUserConfig(key, '');\r\n                }\r\n                return of(t);\r\n            })\r\n        ).subscribe((t: boolean) => {\r\n            if (t) {\r\n                this.resetGridView(gridInstance);\r\n                modalRef.close();\r\n            }\r\n        });\r\n    }\r\n\r\n    private _getUserConfig(key) {\r\n        try {\r\n            return this.httpRestService.getUserSettings(key).pipe(\r\n                map((ucs: any) => {\r\n                    if (ucs && ucs.textValue) {\r\n                        const c = JSON.parse(ucs.textValue);\r\n                        if (c) {\r\n                            if (c[this.localeSer.localeId]) {\r\n                                localStorage.setItem(key, ucs.textValue);\r\n                                return c[this.localeSer.localeId];\r\n                            } else {\r\n                                localStorage.setItem(key, JSON.stringify({[this.localeSer.localeId]: c}));\r\n                                if (Object.keys(c).indexOf('viewColumns') > -1) {\r\n                                    return c;\r\n                                }\r\n                                return null;\r\n                            }\r\n\r\n                        }\r\n                        return null;\r\n                    }\r\n                    return null;\r\n                })\r\n            );\r\n        } catch (e) {\r\n            console.error(e);\r\n        }\r\n    }\r\n\r\n}\r\n","import { OnInit, Component, Input, ViewChild, Injector, EventEmitter, Output, ChangeDetectorRef } from '@angular/core';\r\nimport { MultiSelectComponent } from '@farris/ui-multi-select';\r\n\r\n@Component({\r\n    selector: 'sort-setting',\r\n    templateUrl: './datagrid-sort-setting.component.html'\r\n})\r\nexport class DatagridSortSettingComponent implements OnInit {\r\n\r\n    @Input() idField = 'field';\r\n    @Input() valueField = 'field';\r\n    @Input() textField = 'title';\r\n    @Input() selectedIds = [];\r\n\r\n    @Input() treeData = [];\r\n    @ViewChild('ms') ms: MultiSelectComponent;\r\n\r\n    @Output() sortInfoChange = new EventEmitter();\r\n\r\n    constructor(private injector: Injector, private cd: ChangeDetectorRef) {}\r\n\r\n\r\n    ngOnInit() {}\r\n\r\n    setFieldSortOrder($event: MouseEvent, data: any, order: string) {\r\n        $event.stopPropagation();\r\n        data.sortable = true;\r\n        data.order = order;\r\n\r\n        if (!order) {\r\n            this.ms.moveToLeft(data);\r\n        }\r\n\r\n        this.cd.detectChanges();\r\n        this.onSelectionsChange(null);\r\n        return false;\r\n    }\r\n\r\n    getSortInfo() {\r\n        if (this.ms.selections) {\r\n            const names = [];\r\n            const orders = [];\r\n            this.ms.selections.forEach(col => {\r\n                col.order = col.order || 'asc';\r\n                names.push(col.field);\r\n                orders.push(col.order);\r\n            });\r\n\r\n            return { sortName: names, sortOrder: orders };\r\n        }\r\n        return '';\r\n    }\r\n\r\n    onSelectionsChange($event) {\r\n        const si = this.getSortInfo();\r\n        this.sortInfoChange.emit(si);\r\n    }\r\n\r\n    onBeforeMove($event) {\r\n        const items: any = $event.items as any;\r\n        if ($event.target.indexOf('rightAll') > -1) {\r\n            for (const id in items) {\r\n                if ($event.items[id]) {\r\n                    $event.items[id].order = 'asc';\r\n                }\r\n            }\r\n        } else {\r\n            if ($event.target === 'right') {\r\n                for (const id in items) {\r\n                    if ($event.items[id]) {\r\n                        $event.items[id].order = 'asc';\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { OnInit, Component, Input, ViewChild, Injector, EventEmitter,\r\n    Output, ChangeDetectorRef, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { MultiSelectComponent } from '@farris/ui-multi-select';\r\n@Component({\r\n    selector: 'view-columns',\r\n    templateUrl: './datagrid-view-columns.component.html',\r\n})\r\nexport class DatagridViewColumnsComponent implements OnInit, OnChanges {\r\n    @Input() idField = 'field';\r\n    @Input() valueField = 'field';\r\n    @Input() textField = 'title';\r\n\r\n\r\n    private _selectedIds = [];\r\n    get selectedIds() {\r\n        return this._selectedIds;\r\n    }\r\n    @Input() set selectedIds(vals) {\r\n        this._selectedIds = vals;\r\n        this.selectedIdsChange.emit(vals);\r\n    }\r\n\r\n    @Input() treeData = [];\r\n    @ViewChild('ms') ms: MultiSelectComponent;\r\n\r\n    @Output() selectedIdsChange = new EventEmitter();\r\n\r\n    constructor(private injector: Injector, private cd: ChangeDetectorRef) {}\r\n\r\n\r\n    ngOnInit() {}\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n\r\n    }\r\n\r\n    onBeforeMove($event) {\r\n\r\n    }\r\n\r\n    hiddenColumn($event: MouseEvent, column: any) {\r\n        $event.stopPropagation();\r\n        this.ms.moveToLeft(column);\r\n    }\r\n}\r\n","import { LocaleService } from '@farris/ui-locale';\r\nimport { Component, Input, OnInit, Injector, ViewChild, Output, EventEmitter, ChangeDetectorRef, OnChanges, SimpleChanges, ViewEncapsulation } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { DatagridSettingsComponent } from '../datagrid-settings.component';\r\n\r\n@Component({\r\n    selector: 'column-format-setting',\r\n    templateUrl: './column-format-setting.component.html',\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ColumnFormatSettingComponent implements OnInit, OnChanges {\r\n    @Input() columns = [];\r\n    @Input() fields = [];\r\n\r\n    @ViewChild('colformatform') colForm: NgForm;\r\n\r\n    @Output() formatChange = new EventEmitter();\r\n    @Output() fieldsChange = new EventEmitter();\r\n\r\n    allCols = [];\r\n\r\n    /** format Data */\r\n    formatData = [];\r\n    columnType = 'all';\r\n    activeField = null;\r\n    showGridFooter = false;\r\n\r\n    searchItems = [];\r\n    alignItems = [];\r\n    summaryItems = [];\r\n    summaryItems2 = [];\r\n    localeSer: LocaleService;\r\n    isEn = false;\r\n    constructor(private injector: Injector, public gridSettingComponentRef: DatagridSettingsComponent, private cd: ChangeDetectorRef) {\r\n        this.showGridFooter = this.gridSettingComponentRef.gridInstance.showFooter &&\r\n                                !this.gridSettingComponentRef.gridInstance.footerTemplate;\r\n        this.localeSer = this.injector.get(LocaleService, null);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.columns && !changes.columns.isFirstChange()) {\r\n            this.setFormatData();\r\n            this.allCols = this.columns[0];\r\n            this.activeField = this.columns[0][0];\r\n            this.checkColumnOptions();\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.isEn = this.localeSer.localeId === 'en';\r\n\r\n        this.initData();\r\n\r\n        if (this.colForm) {\r\n            this.colForm.valueChanges.subscribe(v => {\r\n                if (!this.colForm.pristine) {\r\n                    this.formatChange.emit(this.formatData);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private setFormatData() {\r\n        this.formatData = this.fields.map(n => {\r\n            return this.columns[0].find(col => col.field === n);\r\n        });\r\n    }\r\n\r\n    private initData() {\r\n\r\n        this.alignItems = this.gridSettingComponentRef.alignItems;\r\n        this.searchItems = this.gridSettingComponentRef.searchItems;\r\n        this.summaryItems = this.gridSettingComponentRef.summaryItems;\r\n        this.summaryItems2 = this.gridSettingComponentRef.summaryItems2;\r\n\r\n\r\n        this.setFormatData();\r\n        this.allCols = this.columns[0];\r\n        this.activeField = this.columns[0][0];\r\n        this.checkColumnOptions();\r\n    }\r\n\r\n    private checkColumnOptions() {\r\n        if (this.activeField) {\r\n            if (this.activeField.allowGrouping === undefined) {\r\n                this.activeField.allowGrouping = true;\r\n            }\r\n\r\n            if (this.activeField.groupFooter === undefined) {\r\n                this.activeField.groupFooter = { options: {calculationType: -1} };\r\n            } else {\r\n                this.activeField.groupFooter.options = this.activeField.groupFooter.options || {calculationType: -1};\r\n                if (this.activeField.groupFooter.options.calculationType === undefined) {\r\n                    this.activeField.groupFooter.options.calculationType = -1;\r\n                }\r\n            }\r\n\r\n            if (this.activeField.footer === undefined) {\r\n                this.activeField.footer =  { options: {calculationType: -1} };\r\n            } else {\r\n                this.activeField.footer.options = this.activeField.footer.options || {calculationType: -1};\r\n                if (this.activeField.footer.options.calculationType === undefined) {\r\n                    this.activeField.footer.options.calculationType = -1;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    // æ ¹æ®åçç±»åè¿è¡ç­éè¿æ»¤ï¼\r\n    // all ææå\r\n    // visible å¯è§å\r\n    // hidden éèå\r\n    // group åç»å\r\n    filterColumns(ct: string, searchWords = '') {\r\n        let cols = [];\r\n        switch (ct) {\r\n            case 'visible':\r\n                cols = this.formatData;\r\n                break;\r\n            case 'hidden':\r\n                cols = this.columns[0].filter(n => this.fields.indexOf(n.field) === -1);\r\n                break;\r\n            case 'all':\r\n            default:\r\n                cols = this.columns[0];\r\n                break;\r\n        }\r\n\r\n        if (searchWords) {\r\n            cols = cols.filter(c => c.title.toLowerCase().indexOf(searchWords) > -1);\r\n        }\r\n\r\n        this.allCols = cols;\r\n    }\r\n\r\n    onFieldClick(col, $event) {\r\n        this.activeField = col;\r\n        this.checkColumnOptions();\r\n    }\r\n\r\n\r\n    private onFieldsChanged() {\r\n        this.setFormatData();\r\n        this.fieldsChange.emit(this.fields);\r\n    }\r\n\r\n    onDblClick($event, col) {\r\n        // console.log('æ¾ç¤ºä¸éèåæ¢äºä»¶', col);\r\n        this.onCheckboxClick($event, col);\r\n    }\r\n\r\n    onCheckboxClick($event, col) {\r\n        // console.log('æ¾ç¤ºä¸éèåæ¢äºä»¶', col);\r\n        $event.stopPropagation();\r\n        const index = this.fields.indexOf(col.field);\r\n        if (index === -1) {\r\n            this.fields.push(col.field);\r\n        } else {\r\n            this.fields.splice(index, 1);\r\n        }\r\n\r\n        this.columns[0].forEach(f => {\r\n            f.visible = this.fields.indexOf(f.field) > -1;\r\n        });\r\n\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n\r\n        this.onFieldsChanged();\r\n    }\r\n\r\n    searchColumn($event, ct) {\r\n        const txt = $event.target.value;\r\n        this.filterColumns(ct, txt);\r\n    }\r\n\r\n    onFieldDrop(fieldInfo, ct, txt, ulElRef: any) {\r\n       // console.log('drop', fieldInfo);\r\n        const { removedIndex, addedIndex } = fieldInfo;\r\n\r\n        const moveItem = this.allCols[removedIndex];\r\n        const targetItem = this.allCols[addedIndex];\r\n\r\n        const moveItemIndex = this.columns[0].findIndex(n => n.field === moveItem.field);\r\n        const targetItemIndex = this.columns[0].findIndex(n => n.field === targetItem.field);\r\n\r\n        const removedItem = this.columns[0].splice(moveItemIndex, 1);\r\n        this.columns[0].splice(targetItemIndex, 0, ...removedItem);\r\n\r\n        this.fields = this.columns[0].filter(n => n.visible).map(n => n.field);\r\n        this.onFieldsChanged();\r\n\r\n        this.filterColumns(ct, txt);\r\n\r\n        // if (ulElRef) {\r\n        //     ulElRef.querySelectorAll('li .field-drag-handle').forEach(el => {\r\n        //         el.style.cursor = 'grab';\r\n        //     });\r\n        // }\r\n    }\r\n\r\n    /**\r\n     * 0: 1ä¸ªä¹æ²¡æéä¸­ï¼ 1: å¨é¨éä¸­ï¼ 2: æéä¸­çä¹ææ²¡éä¸­ç\r\n     */\r\n    private getCheckAllState() {\r\n        if (this.fields.length === 0) {\r\n            return 0;\r\n        } else {\r\n            if (this.fields.length === this.columns[0].length) {\r\n                return 1;\r\n            }\r\n            return 2;\r\n        }\r\n    }\r\n\r\n    onCheckAllClick($event, ct, txt) {\r\n        const state = this.getCheckAllState();\r\n        if (state === 0 || state === 2) {\r\n            // æ§è¡å¨é\r\n            this.columns[0].forEach(n => n.visible = true);\r\n            this.fields = this.columns[0].map(n => n.field);\r\n        } else {\r\n            // åæ¶å¨é\r\n            this.columns[0].forEach(n => n.visible = false);\r\n            this.fields = [];\r\n        }\r\n\r\n        this.onFieldsChanged();\r\n        this.filterColumns(ct, txt);\r\n    }\r\n}\r\n","import { Component, OnInit, Input, Injector, ChangeDetectorRef, ElementRef, ViewChild, EventEmitter, Output, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { DatagridSettingsComponent } from '../datagrid-settings.component';\r\n\r\n@Component({\r\n    selector: 'column-group-setting',\r\n    templateUrl: './column-group.component.html',\r\n    styles: [\r\n        `\r\n        .column-group-setting{ height: 100%; background-color: #ffffff; padding: 0 10px 10px 10px}\r\n        .smooth-dnd-ghost.group-field {\r\n            z-index: 999999999 !important;\r\n        }\r\n        .active {\r\n            background-color: rgb(231 241 255);\r\n            color: rgb(0 0 0);\r\n        }\r\n        .column-group-setting .group-field {\r\n            float: left;max-width: 200px;margin-right: 10px;\r\n            width: auto; padding: 5px;padding-right: 30px;\r\n            border-radius: 20px;padding-left: 10px; cursor:move\r\n        }\r\n        .group-field .f-icon { position: absolute;right: 2px;top: 7px; }\r\n        .btn-add-groupfield{float: left;width: 32px;padding: 0px;padding-top: 3px; border-radius: 20px;}\r\n        .group-field-panel{\r\n            height: 260px; border-radius: 5px; z-index: 3;position: absolute;\r\n            background: rgb(255 255 255); box-shadow: 1px 1px 4px rgb(156 155 155 / 75%);\r\n            overflow: hidden;\r\n            overflow-y: auto;\r\n        }\r\n        .group-field-panel ul {\r\n            display: inline-block;margin: 20px;margin-top: 5px;\r\n        }\r\n        .group-field-panel li {\r\n            float: left; cursor: pointer;max-width: 200px;margin-right: 10px;width: auto;\r\n            padding: 10px; min-width: 80px; margin-top: 15px; text-align: center;\r\n        }\r\n        .format-setting-column {\r\n            background: rgba(247,248,251,0.6);\r\n            padding: 7px 10px;\r\n            margin-bottom: 5px;\r\n            border: 1px solid rgba(233,236,243,0.45);\r\n            border-radius: 5px;\r\n        }\r\n        .format-setting-column.active {\r\n            border: 1px solid rgb(42 135 255);\r\n            background: rgb(239 247 255);\r\n            border-top: 1px solid rgb(42 135 255)!important;\r\n            border-bottom: 1px solid rgb(42 135 255)!important;\r\n        }\r\n\r\n        `\r\n    ]\r\n})\r\nexport class ColumnGroupSettingComponent implements OnInit, OnChanges {\r\n    @Input() columns;\r\n    @Input() fields = [];\r\n    @Input() formatColumns = [];\r\n\r\n    @Input() groupFields = [];\r\n\r\n    @Output() groupFieldsChange = new EventEmitter();\r\n    @Output() formatColumnsChange = new EventEmitter();\r\n\r\n    @ViewChild('groupingSetting') groupingSettingEl: ElementRef;\r\n    @ViewChild('selectcolumnspanel') selectcolumnspanel: ElementRef;\r\n    @ViewChild('groupSumform') colForm: NgForm;\r\n\r\n    groupColumns = [];\r\n    allowGroupColumns = [];\r\n    activeCalculationCol = null;\r\n\r\n    showSelectColumnsPanel = false;\r\n    summaryItems = [];\r\n    summaryItems2 = [];\r\n    constructor(private injector: Injector, public gridSettingComponentRef: DatagridSettingsComponent, private cd: ChangeDetectorRef) { }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.summaryItems = this.gridSettingComponentRef.summaryItems;\r\n        this.summaryItems2 = this.gridSettingComponentRef.summaryItems2;\r\n\r\n        this.setGroupColumns();\r\n        this.registerEventHandle();\r\n        this.initCalculationColumns();\r\n\r\n        if (this.colForm) {\r\n            this.colForm.valueChanges.subscribe(v => {\r\n                if (!this.colForm.pristine) {\r\n                    this.formatColumnsChange.emit(this.formatColumns);\r\n                }\r\n            });\r\n        }\r\n\r\n        this.formatColumns.forEach(n => {\r\n            this.checkColumnOptions(n);\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.formatColumns && !changes.formatColumns.isFirstChange()) {\r\n            this.formatColumns.forEach(n => {\r\n                this.checkColumnOptions(n);\r\n            });\r\n            this.setGroupColumns();\r\n            this.initCalculationColumns();\r\n        }\r\n    }\r\n\r\n    private initCalculationColumns() {\r\n        this.activeCalculationCol = this.formatColumns[0];\r\n    }\r\n\r\n    private registerEventHandle() {\r\n        this.groupingSettingEl.nativeElement.addEventListener('click', (e) => {\r\n            if (e.target  !== this.selectcolumnspanel.nativeElement) {\r\n                this.showSelectColumnsPanel = false;\r\n            }\r\n        }, false);\r\n    }\r\n\r\n    private setGroupColumns() {\r\n        if (this.groupFields && this.groupFields.length) {\r\n            this.groupColumns = this.groupFields.map( f => {\r\n                return this.columns[0].find(col => col.field === f);\r\n            }).filter(n => n);\r\n        } else {\r\n            this.groupColumns = [];\r\n        }\r\n        this.onGroupFieldsChange();\r\n    }\r\n\r\n    private getAllowGroupingColumns() {\r\n        return this.columns[0].filter(n => n.allowGrouping || n.allowGrouping === undefined);\r\n    }\r\n\r\n    private onGroupFieldsChange() {\r\n        this.groupFieldsChange.emit(this.groupFields);\r\n    }\r\n\r\n    private checkColumnOptions(col) {\r\n        if (col) {\r\n\r\n            if (col.groupFooter === undefined) {\r\n                col.groupFooter = { options: {calculationType: -1} };\r\n            } else {\r\n                col.groupFooter.options = col.groupFooter.options || {calculationType: -1};\r\n                if (col.groupFooter.options.calculationType === undefined) {\r\n                    col.groupFooter.options.calculationType = -1;\r\n                }\r\n            }\r\n\r\n            // if (this.activeField.footer === undefined) {\r\n            //     this.activeField.footer =  { options: {calculationType: -1} };\r\n            // } else {\r\n            //     this.activeField.footer.options = this.activeField.footer.options || {calculationType: -1};\r\n            //     if (this.activeField.footer.options.calculationType === undefined) {\r\n            //         this.activeField.footer.options.calculationType = -1;\r\n            //     }\r\n            // }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ¾ç¤ºæéèå­æ®µéåé¢æ¿\r\n     */\r\n    toggleGroupingColumnPanel($event) {\r\n        $event.stopPropagation();\r\n        this.showSelectColumnsPanel = !this.showSelectColumnsPanel;\r\n        this.allowGroupColumns = this.getAllowGroupingColumns();\r\n    }\r\n\r\n    /** æ·»å åç»å­æ®µ */\r\n    addGroupColumn($event, col) {\r\n        $event.stopPropagation();\r\n        if (this.groupFields.indexOf(col.field) === -1) {\r\n            this.groupColumns = [...this.groupColumns, col];\r\n            this.groupFields = this.groupColumns.map(n => n.field);\r\n            this.onGroupFieldsChange();\r\n            this.showSelectColumnsPanel = false;\r\n        }\r\n    }\r\n\r\n    /** ç§»é¤åç»å­æ®µ */\r\n    onRemoveGroupingField($event, col) {\r\n        $event.stopPropagation();\r\n        this.groupFields = this.groupFields.filter(n => n !== col.field);\r\n        this.setGroupColumns();\r\n    }\r\n\r\n    /** æå¨åç»å­æ®µè¿è¡æåº */\r\n    onGroupingFieldDropped($event) {\r\n        console.log('grouping field droped.', $event);\r\n        const { removedIndex, addedIndex } = $event;\r\n\r\n        const removedItem = this.groupFields.splice(removedIndex, 1);\r\n        this.groupFields.splice(addedIndex, 0, ...removedItem);\r\n        this.setGroupColumns();\r\n    }\r\n\r\n    onFieldClick($event, col) {\r\n        this.activeCalculationCol = col;\r\n    }\r\n}\r\n","\r\nimport { Directive, NgZone, Injector, Renderer2, ElementRef, AfterViewInit, Input,\r\n        OnChanges, SimpleChanges, Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { dropHandlers, smoothDnD as SmoothDndForVisible, DropResult, ContainerOptions, constants } from '@farris/smooth-dnd';\r\n\r\n\r\nconst { wrapperClass, animationClass } = constants;\r\nSmoothDndForVisible.dropHandler = dropHandlers.reactDropHandler().handler;\r\nSmoothDndForVisible.wrapChild = false;\r\n\r\nexport interface DragStartEndInfo {\r\n    isSource: boolean;\r\n    payload: any;\r\n    willAcceptDrop: boolean;\r\n}\r\n\r\n@Directive({\r\n    selector: '[column-visible-drag]',\r\n})\r\nexport class ColumnVisibleDragDirective implements AfterViewInit, OnDestroy {\r\n    private container: any;\r\n    @Output() drop = new EventEmitter();\r\n    @Input() options: ContainerOptions = {\r\n        behaviour: 'move',\r\n        dragHandleSelector: '.field-drag-handle',\r\n        dropPlaceholder: {\r\n            className: 'drop-group-field',\r\n        },\r\n        getGhostParent: () => {\r\n            return document.body;\r\n        },\r\n        getChildPayload: this.getChildPayload.bind(this),\r\n        shouldAcceptDrop: (sourceContainerOptions, payload) => {\r\n            return true;\r\n        },\r\n        onDropReady: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDropReady(dropResult);\r\n            });\r\n        },\r\n        onDrop: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.drop.emit(dropResult);\r\n            });\r\n        },\r\n        onDragEnter: () => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnter();\r\n            });\r\n        },\r\n        onDragStart: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragStart(info);\r\n            });\r\n        },\r\n        onDragEnd: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnd(info);\r\n            });\r\n        }\r\n    };\r\n\r\n    constructor(private ngzone: NgZone, private injector: Injector, private render: Renderer2, private el: ElementRef) { }\r\n    ngAfterViewInit() {\r\n        this.initDnD();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disposeDnd();\r\n    }\r\n\r\n    private disposeDnd() {\r\n        if (this.container) {\r\n            this.container.dispose();\r\n            this.container = null;\r\n        }\r\n    }\r\n\r\n    private initDnD() {\r\n        this.disposeDnd();\r\n        this.container = SmoothDndForVisible(\r\n            this.el.nativeElement,\r\n            this.options\r\n        );\r\n    }\r\n\r\n    private getChildPayload(index) {\r\n        return index;\r\n    }\r\n\r\n    private onDropReady(dropResult) {\r\n        // console.log('DROP READY', dropResult);\r\n    }\r\n\r\n    private onDragStart(info) {\r\n        console.log('DRAG START', info);\r\n    }\r\n\r\n    private onDragEnd(info) {\r\n        // console.log('DRAG END', info);\r\n    }\r\n\r\n\r\n    private onDragEnter() {\r\n        // console.log('DRAG ENTER');\r\n    }\r\n\r\n}\r\n","import { Directive, NgZone, Injector, Renderer2, ElementRef, AfterViewInit, Input,  Output, EventEmitter, OnDestroy } from '@angular/core';\r\nimport { dropHandlers, smoothDnD as SmoothDndForGroupingField, DropResult, ContainerOptions, constants } from '@farris/smooth-dnd';\r\n\r\nSmoothDndForGroupingField.dropHandler = dropHandlers.reactDropHandler().handler;\r\nSmoothDndForGroupingField.wrapChild = false;\r\n\r\n@Directive({\r\n    selector: '[column-group-drag]',\r\n})\r\nexport class ColumnGroupDragDirective implements AfterViewInit, OnDestroy {\r\n    private container: any;\r\n    @Output() drop = new EventEmitter();\r\n    @Input() options: ContainerOptions = {\r\n        orientation: 'horizontal',\r\n        behaviour: 'move',\r\n        dropPlaceholder: {\r\n            className: 'drop-group-field',\r\n        },\r\n        getGhostParent: () => {\r\n            return document.body;\r\n        },\r\n        getChildPayload: this.getChildPayload.bind(this),\r\n        shouldAcceptDrop: (sourceContainerOptions, payload) => {\r\n            return true;\r\n        },\r\n        onDropReady: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDropReady(dropResult);\r\n            });\r\n        },\r\n        onDrop: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.drop.emit(dropResult);\r\n            });\r\n        },\r\n        onDragEnter: () => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnter();\r\n            });\r\n        },\r\n        onDragStart: (info) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragStart(info);\r\n            });\r\n        },\r\n        onDragEnd: (info) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnd(info);\r\n            });\r\n        }\r\n    };\r\n\r\n    constructor(private ngzone: NgZone, private injector: Injector, private render: Renderer2, private el: ElementRef) { }\r\n    ngAfterViewInit() {\r\n        this.initDnD();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disposeDnd();\r\n    }\r\n\r\n    private disposeDnd() {\r\n        if (this.container) {\r\n            this.container.dispose();\r\n            this.container = null;\r\n        }\r\n    }\r\n\r\n\r\n    private initDnD() {\r\n        this.disposeDnd();\r\n        this.container = SmoothDndForGroupingField(\r\n            this.el.nativeElement,\r\n            this.options\r\n        );\r\n    }\r\n\r\n    private getChildPayload(index) {\r\n        return index;\r\n    }\r\n\r\n    private onDropReady(dropResult) {\r\n        // console.log('DROP READY', dropResult);\r\n    }\r\n\r\n    private onDragStart(info) {\r\n        // console.log('DRAG START', info);\r\n    }\r\n\r\n    private onDragEnd(info) {\r\n        // console.log('DRAG END', info);\r\n    }\r\n\r\n\r\n    private onDragEnter() {\r\n        // console.log('DRAG ENTER');\r\n    }\r\n}\r\n","\r\nimport { FormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { NgModule, ModuleWithProviders } from '@angular/core';\r\nimport { ModalModule } from '@farris/ui-modal';\r\nimport { GRID_SETTINGS_SERVICE} from '@farris/ui-datagrid';\r\nimport { MultiSelectModule } from '@farris/ui-multi-select';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { MessagerModule } from '@farris/ui-messager';\r\n\r\nimport { DatagridSettingsComponent } from './datagrid-settings.component';\r\n\r\nimport { DatagridSettingsService } from './datagrid-settings.service';\r\nimport { DatagridSortSettingComponent } from './datagrid-sort-setting.component';\r\nimport { DatagridViewColumnsComponent } from './datagrid-view-columns.component';\r\nimport { FarrisCommonModule } from '@farris/ui-common';\r\nimport { ColumnFormatSettingComponent } from './column-format-setting/column-format-setting.component';\r\nimport { ColumnGroupSettingComponent } from './column-group/column-group.component';\r\nimport { ColumnVisibleDragDirective } from './column-format-setting/column-visible-drag.directive';\r\nimport { ColumnGroupDragDirective } from './column-group/column-group-drag.directive';\r\nimport { ComboListModule } from '@farris/ui-combo-list';\r\nimport { SimpleColumnsComponent } from './simple-mode/simple-columns.component';\r\n\r\n\r\n@NgModule({\r\n    declarations: [\r\n        DatagridSettingsComponent,\r\n        DatagridSortSettingComponent,\r\n        DatagridViewColumnsComponent,\r\n        ColumnFormatSettingComponent,\r\n        ColumnGroupSettingComponent,\r\n        ColumnVisibleDragDirective,\r\n        ColumnGroupDragDirective,\r\n        SimpleColumnsComponent\r\n    ],\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        MultiSelectModule,\r\n        ComboListModule,\r\n        FarrisCommonModule.forRoot(),\r\n        MessagerModule.forRoot(),\r\n        LocaleModule.forRoot(),\r\n        ModalModule.forRoot(),\r\n    ],\r\n    entryComponents: [\r\n        DatagridSettingsComponent,\r\n        SimpleColumnsComponent\r\n    ],\r\n    exports: [\r\n        DatagridSettingsComponent,\r\n        SimpleColumnsComponent\r\n    ]\r\n})\r\nexport class DatagridSettingsModule {\r\n    static forRoot(apiUri = ''): ModuleWithProviders {\r\n        return {\r\n            ngModule: DatagridSettingsModule,\r\n            providers: [\r\n                { provide: GRID_SETTINGS_SERVICE, useClass: DatagridSettingsService }\r\n            ]\r\n        };\r\n    }\r\n}\r\n"],"names":["EventEmitter","MessagerService","LocaleService","Component","ViewEncapsulation","ChangeDetectorRef","Injector","Input","Output","ViewChild","HostBinding","HostListener","InjectionToken","ComponentFactoryResolver","ApplicationRef","cloneDeep","of","switchMap","map","Injectable","BsModalService","IdService","SmoothDndForVisible","dropHandlers","Directive","NgZone","Renderer2","ElementRef","smoothDnD","SmoothDndForGroupingField","GRID_SETTINGS_SERVICE","NgModule","CommonModule","FormsModule","MultiSelectModule","ComboListModule","FarrisCommonModule","MessagerModule","LocaleModule","ModalModule"],"mappings":"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"}