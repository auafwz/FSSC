import * as tslib_1 from "tslib";
import { Injectable } from "@angular/core";
import { Service } from "./service";
import { DatagridComponent } from '@farris/ui-datagrid';
import { QueryCondition } from '@farris/component-querycondition';
var DataGridService = /** @class */ (function (_super) {
    tslib_1.__extends(DataGridService, _super);
    function DataGridService() {
        return _super !== null && _super.apply(this, arguments) || this;
    }
    /**
     * 清空grid勾选行
     */
    DataGridService.prototype.clearChecks = function () {
        var params = this.eventParam;
        if (params && Array.isArray(params)) {
            var param = params[0];
            if (param instanceof QueryCondition) {
                var gridComponents = this.getFormGridComponents(this.context);
                if (gridComponents && gridComponents.length > 0) {
                    gridComponents.forEach(function (gridComponent) {
                        var clearSelections = true;
                        if (gridComponent.hasOwnProperty('clearSelectionsWhenDataIsEmpty')) {
                            clearSelections = gridComponent['clearSelectionsWhenDataIsEmpty'];
                        }
                        if (clearSelections) {
                            gridComponent.clearCheckeds(true);
                        }
                    });
                }
            }
        }
    };
    /**
     * 取消勾选删除的行
     * @param ids ids
     * @returns
     */
    DataGridService.prototype.uncheckDeletedRows = function (ids) {
        if (typeof ids === 'string') {
            ids = [ids];
        }
        if (!ids || ids.length < 1) {
            return;
        }
        var gridComponents = this.getFormGridComponents(this.context);
        if (gridComponents && gridComponents.length > 0) {
            gridComponents.forEach(function (gridComponent) {
                gridComponent.unCheckRows(ids, true);
            });
        }
    };
    /**
     * 取消勾选行
     * @param ids ids
     * @returns
     */
    DataGridService.prototype.uncheckRows = function (ids) {
        if (typeof ids === 'string') {
            ids = [ids];
        }
        if (!ids || ids.length < 1) {
            return;
        }
        var gridComponents = this.getFormGridComponents(this.context);
        if (gridComponents && gridComponents.length > 0) {
            gridComponents.forEach(function (gridComponent) {
                gridComponent.unCheckRows(ids, true);
            });
        }
    };
    /**
     * 获取当前表单内的所有表格实例
     * @param commandContext 命令上下文
     * @returns
     */
    DataGridService.prototype.getFormGridComponents = function (commandContext) {
        var grids = [];
        var appContext = commandContext && commandContext.frameContext && commandContext.frameContext.appContext || null;
        if (appContext) {
            var componentRefs = appContext.componentRefs;
            var collect = Array.from(componentRefs.values()); // [Map<string,any>,Map<string,any>]
            collect.forEach(function (item) {
                var components = Array.from(item.values());
                var gridComponents = components.filter(function (component) { return component instanceof DatagridComponent; });
                grids = grids.concat(gridComponents);
            });
        }
        return grids;
    };
    DataGridService.decorators = [
        { type: Injectable }
    ];
    return DataGridService;
}(Service));
export { DataGridService };
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZGF0YS1ncmlkLnNlcnZpY2UuanMiLCJzb3VyY2VSb290Ijoibmc6Ly9AZmFycmlzL2NvbW1hbmQtc2VydmljZXMvIiwic291cmNlcyI6WyJsaWIvZGF0YS1ncmlkLnNlcnZpY2UudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBLE9BQU8sRUFBRSxVQUFVLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDM0MsT0FBTyxFQUFFLE9BQU8sRUFBRSxNQUFNLFdBQVcsQ0FBQztBQUNwQyxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUN4RCxPQUFPLEVBQUUsY0FBYyxFQUFFLE1BQU0sa0NBQWtDLENBQUM7QUFFbEU7SUFDcUMsMkNBQU87SUFENUM7O0lBa0ZBLENBQUM7SUFoRkM7O09BRUc7SUFDSSxxQ0FBVyxHQUFsQjtRQUNFLElBQU0sTUFBTSxHQUFHLElBQUksQ0FBQyxVQUFVLENBQUM7UUFDL0IsSUFBSSxNQUFNLElBQUksS0FBSyxDQUFDLE9BQU8sQ0FBQyxNQUFNLENBQUMsRUFBRTtZQUNuQyxJQUFNLEtBQUssR0FBRyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUM7WUFDeEIsSUFBSSxLQUFLLFlBQVksY0FBYyxFQUFFO2dCQUNuQyxJQUFNLGNBQWMsR0FBRyxJQUFJLENBQUMscUJBQXFCLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO2dCQUNoRSxJQUFJLGNBQWMsSUFBSSxjQUFjLENBQUMsTUFBTSxHQUFHLENBQUMsRUFBRTtvQkFDL0MsY0FBYyxDQUFDLE9BQU8sQ0FBQyxVQUFDLGFBQWdDO3dCQUN0RCxJQUFJLGVBQWUsR0FBRyxJQUFJLENBQUM7d0JBQzNCLElBQUksYUFBYSxDQUFDLGNBQWMsQ0FBQyxnQ0FBZ0MsQ0FBQyxFQUFFOzRCQUNsRSxlQUFlLEdBQUcsYUFBYSxDQUFDLGdDQUFnQyxDQUFDLENBQUM7eUJBQ25FO3dCQUNELElBQUksZUFBZSxFQUFFOzRCQUNuQixhQUFhLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxDQUFDO3lCQUNuQztvQkFDSCxDQUFDLENBQUMsQ0FBQztpQkFDSjthQUNGO1NBQ0Y7SUFDSCxDQUFDO0lBQ0Q7Ozs7T0FJRztJQUNJLDRDQUFrQixHQUF6QixVQUEwQixHQUFRO1FBQ2hDLElBQUksT0FBTyxHQUFHLEtBQUssUUFBUSxFQUFFO1lBQzNCLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ2I7UUFDRCxJQUFJLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQzFCLE9BQU87U0FDUjtRQUNELElBQU0sY0FBYyxHQUFHLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDaEUsSUFBSSxjQUFjLElBQUksY0FBYyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDL0MsY0FBYyxDQUFDLE9BQU8sQ0FBQyxVQUFDLGFBQWdDO2dCQUN0RCxhQUFhLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztZQUN2QyxDQUFDLENBQUMsQ0FBQztTQUNKO0lBQ0gsQ0FBQztJQUNEOzs7O09BSUc7SUFDSSxxQ0FBVyxHQUFsQixVQUFtQixHQUFRO1FBQ3pCLElBQUksT0FBTyxHQUFHLEtBQUssUUFBUSxFQUFFO1lBQzNCLEdBQUcsR0FBRyxDQUFDLEdBQUcsQ0FBQyxDQUFDO1NBQ2I7UUFDRCxJQUFJLENBQUMsR0FBRyxJQUFJLEdBQUcsQ0FBQyxNQUFNLEdBQUcsQ0FBQyxFQUFFO1lBQzFCLE9BQU87U0FDUjtRQUNELElBQU0sY0FBYyxHQUFHLElBQUksQ0FBQyxxQkFBcUIsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7UUFDaEUsSUFBSSxjQUFjLElBQUksY0FBYyxDQUFDLE1BQU0sR0FBRyxDQUFDLEVBQUU7WUFDL0MsY0FBYyxDQUFDLE9BQU8sQ0FBQyxVQUFDLGFBQWdDO2dCQUN0RCxhQUFhLENBQUMsV0FBVyxDQUFDLEdBQUcsRUFBRSxJQUFJLENBQUMsQ0FBQztZQUN2QyxDQUFDLENBQUMsQ0FBQztTQUNKO0lBQ0gsQ0FBQztJQUNEOzs7O09BSUc7SUFDSywrQ0FBcUIsR0FBN0IsVUFBOEIsY0FBOEI7UUFDMUQsSUFBSSxLQUFLLEdBQUcsRUFBRSxDQUFDO1FBQ2YsSUFBTSxVQUFVLEdBQUcsY0FBYyxJQUFJLGNBQWMsQ0FBQyxZQUFZLElBQUksY0FBYyxDQUFDLFlBQVksQ0FBQyxVQUFVLElBQUksSUFBSSxDQUFDO1FBQ25ILElBQUksVUFBVSxFQUFFO1lBQ2QsSUFBTSxhQUFhLEdBQWtDLFVBQVUsQ0FBQyxhQUFhLENBQUM7WUFDOUUsSUFBTSxPQUFPLEdBQUcsS0FBSyxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQyxDQUFBLG9DQUFvQztZQUN2RixPQUFPLENBQUMsT0FBTyxDQUFDLFVBQUMsSUFBc0I7Z0JBQ3JDLElBQU0sVUFBVSxHQUFHLEtBQUssQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLE1BQU0sRUFBRSxDQUFDLENBQUM7Z0JBQzdDLElBQU0sY0FBYyxHQUFHLFVBQVUsQ0FBQyxNQUFNLENBQUMsVUFBQyxTQUFjLElBQUssT0FBQSxTQUFTLFlBQVksaUJBQWlCLEVBQXRDLENBQXNDLENBQUMsQ0FBQztnQkFDckcsS0FBSyxHQUFHLEtBQUssQ0FBQyxNQUFNLENBQUMsY0FBYyxDQUFDLENBQUM7WUFDdkMsQ0FBQyxDQUFDLENBQUM7U0FDSjtRQUNELE9BQU8sS0FBSyxDQUFDO0lBQ2YsQ0FBQzs7Z0JBakZGLFVBQVU7O0lBa0ZYLHNCQUFDO0NBQUEsQUFsRkQsQ0FDcUMsT0FBTyxHQWlGM0M7U0FqRlksZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IEluamVjdGFibGUgfSBmcm9tIFwiQGFuZ3VsYXIvY29yZVwiO1xyXG5pbXBvcnQgeyBTZXJ2aWNlIH0gZnJvbSBcIi4vc2VydmljZVwiO1xyXG5pbXBvcnQgeyBEYXRhZ3JpZENvbXBvbmVudCB9IGZyb20gJ0BmYXJyaXMvdWktZGF0YWdyaWQnO1xyXG5pbXBvcnQgeyBRdWVyeUNvbmRpdGlvbiB9IGZyb20gJ0BmYXJyaXMvY29tcG9uZW50LXF1ZXJ5Y29uZGl0aW9uJztcclxuaW1wb3J0IHsgQ29tbWFuZENvbnRleHQgfSBmcm9tIFwiQGZhcnJpcy9kZXZraXRcIjtcclxuQEluamVjdGFibGUoKVxyXG5leHBvcnQgY2xhc3MgRGF0YUdyaWRTZXJ2aWNlIGV4dGVuZHMgU2VydmljZSB7XHJcbiAgLyoqXHJcbiAgICog5riF56m6Z3JpZOWLvumAieihjFxyXG4gICAqL1xyXG4gIHB1YmxpYyBjbGVhckNoZWNrcygpIHtcclxuICAgIGNvbnN0IHBhcmFtcyA9IHRoaXMuZXZlbnRQYXJhbTtcclxuICAgIGlmIChwYXJhbXMgJiYgQXJyYXkuaXNBcnJheShwYXJhbXMpKSB7XHJcbiAgICAgIGNvbnN0IHBhcmFtID0gcGFyYW1zWzBdO1xyXG4gICAgICBpZiAocGFyYW0gaW5zdGFuY2VvZiBRdWVyeUNvbmRpdGlvbikge1xyXG4gICAgICAgIGNvbnN0IGdyaWRDb21wb25lbnRzID0gdGhpcy5nZXRGb3JtR3JpZENvbXBvbmVudHModGhpcy5jb250ZXh0KTtcclxuICAgICAgICBpZiAoZ3JpZENvbXBvbmVudHMgJiYgZ3JpZENvbXBvbmVudHMubGVuZ3RoID4gMCkge1xyXG4gICAgICAgICAgZ3JpZENvbXBvbmVudHMuZm9yRWFjaCgoZ3JpZENvbXBvbmVudDogRGF0YWdyaWRDb21wb25lbnQpID0+IHtcclxuICAgICAgICAgICAgbGV0IGNsZWFyU2VsZWN0aW9ucyA9IHRydWU7XHJcbiAgICAgICAgICAgIGlmIChncmlkQ29tcG9uZW50Lmhhc093blByb3BlcnR5KCdjbGVhclNlbGVjdGlvbnNXaGVuRGF0YUlzRW1wdHknKSkge1xyXG4gICAgICAgICAgICAgIGNsZWFyU2VsZWN0aW9ucyA9IGdyaWRDb21wb25lbnRbJ2NsZWFyU2VsZWN0aW9uc1doZW5EYXRhSXNFbXB0eSddO1xyXG4gICAgICAgICAgICB9XHJcbiAgICAgICAgICAgIGlmIChjbGVhclNlbGVjdGlvbnMpIHtcclxuICAgICAgICAgICAgICBncmlkQ29tcG9uZW50LmNsZWFyQ2hlY2tlZHModHJ1ZSk7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICAgIH0pO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuICAvKipcclxuICAgKiDlj5bmtojli77pgInliKDpmaTnmoTooYxcclxuICAgKiBAcGFyYW0gaWRzIGlkc1xyXG4gICAqIEByZXR1cm5zIFxyXG4gICAqL1xyXG4gIHB1YmxpYyB1bmNoZWNrRGVsZXRlZFJvd3MoaWRzOiBhbnkpIHtcclxuICAgIGlmICh0eXBlb2YgaWRzID09PSAnc3RyaW5nJykge1xyXG4gICAgICBpZHMgPSBbaWRzXTtcclxuICAgIH1cclxuICAgIGlmICghaWRzIHx8IGlkcy5sZW5ndGggPCAxKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGNvbnN0IGdyaWRDb21wb25lbnRzID0gdGhpcy5nZXRGb3JtR3JpZENvbXBvbmVudHModGhpcy5jb250ZXh0KTtcclxuICAgIGlmIChncmlkQ29tcG9uZW50cyAmJiBncmlkQ29tcG9uZW50cy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGdyaWRDb21wb25lbnRzLmZvckVhY2goKGdyaWRDb21wb25lbnQ6IERhdGFncmlkQ29tcG9uZW50KSA9PiB7XHJcbiAgICAgICAgZ3JpZENvbXBvbmVudC51bkNoZWNrUm93cyhpZHMsIHRydWUpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcbiAgLyoqXHJcbiAgICog5Y+W5raI5Yu+6YCJ6KGMXHJcbiAgICogQHBhcmFtIGlkcyBpZHNcclxuICAgKiBAcmV0dXJucyBcclxuICAgKi9cclxuICBwdWJsaWMgdW5jaGVja1Jvd3MoaWRzOiBhbnkpIHtcclxuICAgIGlmICh0eXBlb2YgaWRzID09PSAnc3RyaW5nJykge1xyXG4gICAgICBpZHMgPSBbaWRzXTtcclxuICAgIH1cclxuICAgIGlmICghaWRzIHx8IGlkcy5sZW5ndGggPCAxKSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuICAgIGNvbnN0IGdyaWRDb21wb25lbnRzID0gdGhpcy5nZXRGb3JtR3JpZENvbXBvbmVudHModGhpcy5jb250ZXh0KTtcclxuICAgIGlmIChncmlkQ29tcG9uZW50cyAmJiBncmlkQ29tcG9uZW50cy5sZW5ndGggPiAwKSB7XHJcbiAgICAgIGdyaWRDb21wb25lbnRzLmZvckVhY2goKGdyaWRDb21wb25lbnQ6IERhdGFncmlkQ29tcG9uZW50KSA9PiB7XHJcbiAgICAgICAgZ3JpZENvbXBvbmVudC51bkNoZWNrUm93cyhpZHMsIHRydWUpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICB9XHJcbiAgLyoqXHJcbiAgICog6I635Y+W5b2T5YmN6KGo5Y2V5YaF55qE5omA5pyJ6KGo5qC85a6e5L6LXHJcbiAgICogQHBhcmFtIGNvbW1hbmRDb250ZXh0IOWRveS7pOS4iuS4i+aWh1xyXG4gICAqIEByZXR1cm5zIFxyXG4gICAqL1xyXG4gIHByaXZhdGUgZ2V0Rm9ybUdyaWRDb21wb25lbnRzKGNvbW1hbmRDb250ZXh0OiBDb21tYW5kQ29udGV4dCkge1xyXG4gICAgbGV0IGdyaWRzID0gW107XHJcbiAgICBjb25zdCBhcHBDb250ZXh0ID0gY29tbWFuZENvbnRleHQgJiYgY29tbWFuZENvbnRleHQuZnJhbWVDb250ZXh0ICYmIGNvbW1hbmRDb250ZXh0LmZyYW1lQ29udGV4dC5hcHBDb250ZXh0IHx8IG51bGw7XHJcbiAgICBpZiAoYXBwQ29udGV4dCkge1xyXG4gICAgICBjb25zdCBjb21wb25lbnRSZWZzOiBNYXA8c3RyaW5nLCBNYXA8c3RyaW5nLCBhbnk+PiA9IGFwcENvbnRleHQuY29tcG9uZW50UmVmcztcclxuICAgICAgY29uc3QgY29sbGVjdCA9IEFycmF5LmZyb20oY29tcG9uZW50UmVmcy52YWx1ZXMoKSk7Ly8gW01hcDxzdHJpbmcsYW55PixNYXA8c3RyaW5nLGFueT5dXHJcbiAgICAgIGNvbGxlY3QuZm9yRWFjaCgoaXRlbTogTWFwPHN0cmluZywgYW55PikgPT4ge1xyXG4gICAgICAgIGNvbnN0IGNvbXBvbmVudHMgPSBBcnJheS5mcm9tKGl0ZW0udmFsdWVzKCkpO1xyXG4gICAgICAgIGNvbnN0IGdyaWRDb21wb25lbnRzID0gY29tcG9uZW50cy5maWx0ZXIoKGNvbXBvbmVudDogYW55KSA9PiBjb21wb25lbnQgaW5zdGFuY2VvZiBEYXRhZ3JpZENvbXBvbmVudCk7XHJcbiAgICAgICAgZ3JpZHMgPSBncmlkcy5jb25jYXQoZ3JpZENvbXBvbmVudHMpO1xyXG4gICAgICB9KTtcclxuICAgIH1cclxuICAgIHJldHVybiBncmlkcztcclxuICB9XHJcbn0iXX0=