import { Injectable, Component, Input, Directive, TemplateRef, ContentChild, Output, EventEmitter, NgModule, defineInjectable } from '@angular/core';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { RouterModule } from '@angular/router';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class ListNavService {
    constructor() { }
}
ListNavService.decorators = [
    { type: Injectable, args: [{
                providedIn: 'root'
            },] }
];
/** @nocollapse */
ListNavService.ctorParameters = () => [];
/** @nocollapse */ ListNavService.ngInjectableDef = defineInjectable({ factory: function ListNavService_Factory() { return new ListNavService(); }, token: ListNavService, providedIn: "root" });

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class listNavHeaderTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
listNavHeaderTemplateDirective.decorators = [
    { type: Directive, args: [{
                selector: '[listNavHeader]'
            },] }
];
/** @nocollapse */
listNavHeaderTemplateDirective.ctorParameters = () => [
    { type: TemplateRef }
];
class listNavContentTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
listNavContentTemplateDirective.decorators = [
    { type: Directive, args: [{
                selector: '[listNavContent]'
            },] }
];
/** @nocollapse */
listNavContentTemplateDirective.ctorParameters = () => [
    { type: TemplateRef }
];
class listNavFooterTemplateDirective {
    /**
     * @param {?} template
     */
    constructor(template) {
        this.template = template;
    }
}
listNavFooterTemplateDirective.decorators = [
    { type: Directive, args: [{
                selector: '[listNavFooter]'
            },] }
];
/** @nocollapse */
listNavFooterTemplateDirective.ctorParameters = () => [
    { type: TemplateRef }
];
class ListNavComponent {
    /**
     * 是否展开navlist
     */
    // showList:boolean = true;
    constructor() {
        /**
         * listnav宽度
         */
        this.listNavWidth = 218;
        // 显示入口
        this.showEntry = true;
        this.hover = false;
        this.disabled = false;
        this.position = 'left';
        this.hideNav = false;
        /**link发生变化 */
        // @Output('link-change') linkChange = new EventEmitter();
        /**
         * 收起折叠状态变化
         */
        this.navStateChange = new EventEmitter();
    }
    /**
     * @return {?}
     */
    ngOnInit() {
    }
    /**
     * @param {?} event
     * @return {?}
     */
    toggle(event) {
        event.stopPropagation();
        if (this.disabled) {
            return;
        }
        this.hideNav = !this.hideNav;
        this.navStateChange.emit({ 'showNav': !this.hideNav });
    }
    /**
     * @param {?} event
     * @return {?}
     */
    hoverToggle(event) {
        this.hideNav = !this.hideNav;
        this.navStateChange.emit({ 'showNav': !this.hideNav });
    }
}
ListNavComponent.decorators = [
    { type: Component, args: [{
                selector: 'farris-list-nav',
                template: "<div class=\"f-list-nav\" [ngClass]=\"{'f-list-nav-left': position === 'left','f-list-nav-right': position === 'right'}\">\r\n    <div class=\"f-list-nav-in\" [ngStyle]=\"{'width': !hideNav? listNavWidth +'px' : '0px','transition':'width .5s'}\">\r\n        <div class=\"f-list-nav-main\" [hidden]=\"hideNav\">\r\n            <div class=\"f-list-nav-header\" *ngIf=\"HeaderTemplate\">\r\n                <ng-container [ngTemplateOutlet]=\"HeaderTemplate\"></ng-container>\r\n            </div>\r\n            <div class=\"f-list-nav-header\" *ngIf=\"!HeaderTemplate && title\">\r\n                <div class=\"f-list-nav-title\">\r\n                    {{title}}\r\n                </div>\r\n            </div>\r\n            <div class=\"f-list-nav-content\" *ngIf=\"NavContentTemplate\">\r\n                <ng-container [ngTemplateOutlet]=\"NavContentTemplate\"></ng-container>\r\n            </div>\r\n            <div class=\"f-list-nav-footer\" *ngIf=\"NavFooterTemplate\">\r\n                <ng-container [ngTemplateOutlet]=\"NavFooterTemplate\"></ng-container>\r\n            </div>\r\n        </div>\r\n        <div class=\"f-list-nav-toggle-sidebar\" *ngIf=\"showEntry\" [ngClass]=\"{'f-list-nav-toggle-disabled': disabled,'active': hideNav}\" (click)=\"toggle($event)\">\r\n            <span class=\"triangle\"></span>\r\n        </div>\r\n    </div>\r\n    \r\n</div>",
                styles: [".f-list-nav{height:100%;min-height:200px}.f-list-nav .f-list-nav-in{position:relative;height:100%;background-color:#fff;box-shadow:1px 1px 8px 0 rgba(0,28,64,.08)}.f-list-nav .f-list-nav-main{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;height:100%;overflow-x:hidden}.f-list-nav .f-list-nav-main .f-list-nav-footer,.f-list-nav .f-list-nav-main .f-list-nav-header{flex-shrink:0}.f-list-nav .f-list-nav-main .f-list-nav-content{-webkit-box-flex:1;flex-grow:1;flex-shrink:1;flex-basis:0;overflow-y:auto}.f-list-nav .f-list-nav-main .f-list-nav-header .f-list-nav-title{padding:1rem 3rem 1rem 2.5rem;line-height:1.375rem;font-size:1rem;color:#000;border-bottom:1px solid #e9e9e9;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.f-list-nav .f-list-nav-toggle-sidebar{position:absolute;right:-.375rem;top:50%;z-index:99;margin-top:-2.375rem;width:.375rem;height:4.75rem;line-height:4.75rem;text-align:center;border-radius:0 4px 4px 0;cursor:pointer}.f-list-nav .f-list-nav-toggle-sidebar .triangle{display:inline-block;width:0;height:0}.f-list-nav .f-list-nav-toggle-sidebar.f-list-nav-toggle-disabled{cursor:not-allowed}.f-list-nav .f-list-nav-toggle-sidebar.f-list-nav-toggle-disabled:hover{background:rgba(0,28,64,.1)}.f-list-nav .f-list-nav-toggle-sidebar.f-list-nav-toggle-disabled:hover .triangle{border-right:.25rem solid #818fab}.f-list-nav.f-list-nav-left{padding-right:.375rem}.f-list-nav.f-list-nav-left .f-list-nav-toggle-sidebar .triangle{border-top:.3875rem solid transparent;border-bottom:.3875rem solid transparent;border-right:.25rem solid #818fab}.f-list-nav.f-list-nav-left .f-list-nav-toggle-sidebar:hover .triangle{border-right:.25rem solid #fff}.f-list-nav.f-list-nav-left .f-list-nav-toggle-sidebar.active .triangle{border-right:none;border-left:.25rem solid #fff}.f-list-nav.f-list-nav-right{padding-left:.375rem}.f-list-nav.f-list-nav-right .f-list-nav-toggle-sidebar{left:-.375rem}.f-list-nav.f-list-nav-right .f-list-nav-toggle-sidebar .triangle{border-top:.3875rem solid transparent;border-bottom:.3875rem solid transparent;border-left:.25rem solid #818fab}.f-list-nav.f-list-nav-right .f-list-nav-toggle-sidebar:hover .triangle{border-left:.25rem solid #fff}.f-list-nav.f-list-nav-right .f-list-nav-toggle-sidebar.active .triangle{border-left:none;border-right:.25rem solid #fff}"]
            }] }
];
/** @nocollapse */
ListNavComponent.ctorParameters = () => [];
ListNavComponent.propDecorators = {
    HeaderTemplate: [{ type: ContentChild, args: [listNavHeaderTemplateDirective, { read: TemplateRef },] }],
    NavContentTemplate: [{ type: ContentChild, args: [listNavContentTemplateDirective, { read: TemplateRef },] }],
    NavFooterTemplate: [{ type: ContentChild, args: [listNavFooterTemplateDirective, { read: TemplateRef },] }],
    title: [{ type: Input }],
    listNavWidth: [{ type: Input }],
    showEntry: [{ type: Input }],
    hover: [{ type: Input }],
    disabled: [{ type: Input }],
    position: [{ type: Input }],
    hideNav: [{ type: Input }],
    navStateChange: [{ type: Output, args: ['navStateChange',] }]
};

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
class ListNavModule {
}
ListNavModule.decorators = [
    { type: NgModule, args: [{
                declarations: [ListNavComponent, listNavHeaderTemplateDirective, listNavContentTemplateDirective, listNavFooterTemplateDirective],
                imports: [
                    CommonModule,
                    FormsModule,
                    RouterModule
                ],
                exports: [ListNavComponent, listNavHeaderTemplateDirective, listNavContentTemplateDirective, listNavFooterTemplateDirective]
            },] }
];

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { ListNavService, listNavHeaderTemplateDirective, listNavContentTemplateDirective, listNavFooterTemplateDirective, ListNavComponent, ListNavModule };

//# sourceMappingURL=farris-ui-list-nav.js.map