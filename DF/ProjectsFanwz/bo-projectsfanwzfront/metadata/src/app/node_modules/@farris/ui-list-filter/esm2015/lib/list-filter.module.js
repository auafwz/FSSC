/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
import { NgModule } from '@angular/core';
import { ListFilterComponent } from './list-filter.component';
import { InputComponent } from './controlcomponent/inputcomponent/input.component';
import { SearchComponent } from './controlcomponent/searchcomponent/search.component';
import { HelpComponent } from './controlcomponent/helpcomponent.ts/help.component';
import { DateComponent } from './controlcomponent/datecomponent/date.component';
import { DropDownComponent } from './controlcomponent/dropdowncomponent/dropdown.component';
import { NumberComponent } from './controlcomponent/numbercomponent/number.component';
import { FilterCheckboxComponent } from './controlcomponent/checkboxcomponent/checkbox.component';
import { DateRangeComponent } from './controlcomponent/daterangecomponent/daterange.component';
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms';
import { InputGroupModule } from '@farris/ui-input-group';
import { FarrisDatePickerModule } from '@farris/ui-datepicker';
import { DatalistModule } from '@farris/ui-datalist';
import { ComboListModule } from '@farris/ui-combo-list';
import { LookupModule } from '@farris/ui-lookup';
import { FarrisFormsModule } from '@farris/ui-forms';
import { PerfectScrollbarModule } from '@farris/ui-perfect-scrollbar';
// import { InputsModule } from '@progress/kendo-angular-inputs';
import { SolutionService } from './service/solution.service';
import { NumberSpinnerModule } from '@farris/ui-number-spinner';
import { QuerySolutionService } from './submithandlers/query-solution.service';
import { ConvertorService } from './service/convertorservice';
import { ListFilterCommonComponent } from './list-filter-common';
import { LocaleModule } from '@farris/ui-locale';
import { ControlTypeXPipe } from './controlType.pipe';
import { FilterRadioComponent } from './controlcomponent/radiocomponent/radio.component';
import { FilterInputGroupComponent } from './controlcomponent/inputgroupcomponent/inputgroup.component';
export class ListFilterModule {
}
ListFilterModule.decorators = [
    { type: NgModule, args: [{
                declarations: [
                    ListFilterComponent,
                    DateComponent,
                    NumberComponent,
                    HelpComponent,
                    InputComponent,
                    DropDownComponent,
                    SearchComponent,
                    FilterCheckboxComponent,
                    DateRangeComponent,
                    ListFilterCommonComponent,
                    FilterRadioComponent,
                    FilterInputGroupComponent,
                    ControlTypeXPipe
                ],
                imports: [
                    CommonModule,
                    FormsModule,
                    InputGroupModule,
                    FarrisDatePickerModule,
                    DatalistModule,
                    ComboListModule,
                    LookupModule,
                    FarrisFormsModule,
                    NumberSpinnerModule,
                    PerfectScrollbarModule,
                    LocaleModule.forRoot()
                    // InputsModule
                ],
                providers: [
                    ConvertorService,
                    SolutionService,
                    QuerySolutionService
                ],
                exports: [
                    ListFilterComponent,
                    DateComponent,
                    NumberComponent,
                    HelpComponent,
                    InputComponent,
                    DropDownComponent,
                    SearchComponent,
                    FilterCheckboxComponent,
                    DateRangeComponent,
                    ListFilterCommonComponent,
                    FilterRadioComponent,
                    FilterInputGroupComponent,
                    ControlTypeXPipe
                ]
            },] }
];
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibGlzdC1maWx0ZXIubW9kdWxlLmpzIiwic291cmNlUm9vdCI6Im5nOi8vQGZhcnJpcy91aS1saXN0LWZpbHRlci8iLCJzb3VyY2VzIjpbImxpYi9saXN0LWZpbHRlci5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7OztBQUFBLE9BQU8sRUFBRSxRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDekMsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0seUJBQXlCLENBQUM7QUFFOUQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQ25GLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUN0RixPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sb0RBQW9ELENBQUM7QUFDbkYsT0FBTyxFQUFFLGFBQWEsRUFBRSxNQUFNLGlEQUFpRCxDQUFDO0FBQ2hGLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHlEQUF5RCxDQUFDO0FBQzVGLE9BQU8sRUFBRSxlQUFlLEVBQUUsTUFBTSxxREFBcUQsQ0FBQztBQUN0RixPQUFPLEVBQUUsdUJBQXVCLEVBQUUsTUFBTSx5REFBeUQsQ0FBQztBQUNsRyxPQUFPLEVBQUUsa0JBQWtCLEVBQUUsTUFBTSwyREFBMkQsQ0FBQztBQUUvRixPQUFPLEVBQUUsWUFBWSxFQUFFLE1BQU0saUJBQWlCLENBQUM7QUFDL0MsT0FBTyxFQUFFLFdBQVcsRUFBRSxNQUFNLGdCQUFnQixDQUFDO0FBQzdDLE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHdCQUF3QixDQUFDO0FBQzFELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLHVCQUF1QixDQUFDO0FBQy9ELE9BQU8sRUFBRSxjQUFjLEVBQUUsTUFBTSxxQkFBcUIsQ0FBQztBQUNyRCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sdUJBQXVCLENBQUM7QUFDeEQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLGtCQUFrQixDQUFDO0FBQ3JELE9BQU8sRUFBRSxzQkFBc0IsRUFBRSxNQUFNLDhCQUE4QixDQUFDOztBQUd0RSxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDN0QsT0FBTyxFQUFFLG1CQUFtQixFQUFFLE1BQU0sMkJBQTJCLENBQUM7QUFFaEUsT0FBTyxFQUFFLG9CQUFvQixFQUFFLE1BQU0seUNBQXlDLENBQUM7QUFDL0UsT0FBTyxFQUFFLGdCQUFnQixFQUFFLE1BQU0sNEJBQTRCLENBQUM7QUFDOUQsT0FBTyxFQUFFLHlCQUF5QixFQUFFLE1BQU0sc0JBQXNCLENBQUM7QUFFakUsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLG1CQUFtQixDQUFDO0FBQ2pELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLG9CQUFvQixDQUFDO0FBQ3RELE9BQU8sRUFBRSxvQkFBb0IsRUFBRSxNQUFNLG1EQUFtRCxDQUFDO0FBQ3pGLE9BQU8sRUFBRSx5QkFBeUIsRUFBRSxNQUFNLDZEQUE2RCxDQUFDO0FBc0R4RyxNQUFNLE9BQU8sZ0JBQWdCOzs7WUFwRDVCLFFBQVEsU0FBQztnQkFDUixZQUFZLEVBQUU7b0JBQ1osbUJBQW1CO29CQUNuQixhQUFhO29CQUNiLGVBQWU7b0JBQ2YsYUFBYTtvQkFDYixjQUFjO29CQUNkLGlCQUFpQjtvQkFDakIsZUFBZTtvQkFDZix1QkFBdUI7b0JBQ3ZCLGtCQUFrQjtvQkFDbEIseUJBQXlCO29CQUN6QixvQkFBb0I7b0JBQ3BCLHlCQUF5QjtvQkFDekIsZ0JBQWdCO2lCQUVqQjtnQkFDRCxPQUFPLEVBQUU7b0JBQ1AsWUFBWTtvQkFDWixXQUFXO29CQUNYLGdCQUFnQjtvQkFDaEIsc0JBQXNCO29CQUN0QixjQUFjO29CQUNkLGVBQWU7b0JBQ2YsWUFBWTtvQkFDWixpQkFBaUI7b0JBQ2pCLG1CQUFtQjtvQkFDbkIsc0JBQXNCO29CQUN0QixZQUFZLENBQUMsT0FBTyxFQUFFO29CQUN0QixlQUFlO2lCQUNoQjtnQkFDRCxTQUFTLEVBQUM7b0JBQ1IsZ0JBQWdCO29CQUNoQixlQUFlO29CQUNmLG9CQUFvQjtpQkFDckI7Z0JBQ0QsT0FBTyxFQUFFO29CQUNQLG1CQUFtQjtvQkFDbkIsYUFBYTtvQkFDYixlQUFlO29CQUNmLGFBQWE7b0JBQ2IsY0FBYztvQkFDZCxpQkFBaUI7b0JBQ2pCLGVBQWU7b0JBQ2YsdUJBQXVCO29CQUN2QixrQkFBa0I7b0JBQ2xCLHlCQUF5QjtvQkFDekIsb0JBQW9CO29CQUNwQix5QkFBeUI7b0JBQ3pCLGdCQUFnQjtpQkFDakI7YUFDRiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IExpc3RGaWx0ZXJDb21wb25lbnQgfSBmcm9tICcuL2xpc3QtZmlsdGVyLmNvbXBvbmVudCc7XHJcblxyXG5pbXBvcnQgeyBJbnB1dENvbXBvbmVudCB9IGZyb20gJy4vY29udHJvbGNvbXBvbmVudC9pbnB1dGNvbXBvbmVudC9pbnB1dC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBTZWFyY2hDb21wb25lbnQgfSBmcm9tICcuL2NvbnRyb2xjb21wb25lbnQvc2VhcmNoY29tcG9uZW50L3NlYXJjaC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBIZWxwQ29tcG9uZW50IH0gZnJvbSAnLi9jb250cm9sY29tcG9uZW50L2hlbHBjb21wb25lbnQudHMvaGVscC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBEYXRlQ29tcG9uZW50IH0gZnJvbSAnLi9jb250cm9sY29tcG9uZW50L2RhdGVjb21wb25lbnQvZGF0ZS5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBEcm9wRG93bkNvbXBvbmVudCB9IGZyb20gJy4vY29udHJvbGNvbXBvbmVudC9kcm9wZG93bmNvbXBvbmVudC9kcm9wZG93bi5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBOdW1iZXJDb21wb25lbnQgfSBmcm9tICcuL2NvbnRyb2xjb21wb25lbnQvbnVtYmVyY29tcG9uZW50L251bWJlci5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBGaWx0ZXJDaGVja2JveENvbXBvbmVudCB9IGZyb20gJy4vY29udHJvbGNvbXBvbmVudC9jaGVja2JveGNvbXBvbmVudC9jaGVja2JveC5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBEYXRlUmFuZ2VDb21wb25lbnQgfSBmcm9tICcuL2NvbnRyb2xjb21wb25lbnQvZGF0ZXJhbmdlY29tcG9uZW50L2RhdGVyYW5nZS5jb21wb25lbnQnO1xyXG5cclxuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcclxuaW1wb3J0IHsgRm9ybXNNb2R1bGUgfSBmcm9tICdAYW5ndWxhci9mb3Jtcyc7XHJcbmltcG9ydCB7IElucHV0R3JvdXBNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWlucHV0LWdyb3VwJztcclxuaW1wb3J0IHsgRmFycmlzRGF0ZVBpY2tlck1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktZGF0ZXBpY2tlcic7XHJcbmltcG9ydCB7IERhdGFsaXN0TW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1kYXRhbGlzdCc7XHJcbmltcG9ydCB7IENvbWJvTGlzdE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktY29tYm8tbGlzdCc7XHJcbmltcG9ydCB7IExvb2t1cE1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktbG9va3VwJztcclxuaW1wb3J0IHsgRmFycmlzRm9ybXNNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWZvcm1zJztcclxuaW1wb3J0IHsgUGVyZmVjdFNjcm9sbGJhck1vZHVsZSB9IGZyb20gJ0BmYXJyaXMvdWktcGVyZmVjdC1zY3JvbGxiYXInO1xyXG5cclxuLy8gaW1wb3J0IHsgSW5wdXRzTW9kdWxlIH0gZnJvbSAnQHByb2dyZXNzL2tlbmRvLWFuZ3VsYXItaW5wdXRzJztcclxuaW1wb3J0IHsgU29sdXRpb25TZXJ2aWNlIH0gZnJvbSAnLi9zZXJ2aWNlL3NvbHV0aW9uLnNlcnZpY2UnO1xyXG5pbXBvcnQgeyBOdW1iZXJTcGlubmVyTW9kdWxlIH0gZnJvbSAnQGZhcnJpcy91aS1udW1iZXItc3Bpbm5lcic7XHJcblxyXG5pbXBvcnQgeyBRdWVyeVNvbHV0aW9uU2VydmljZSB9IGZyb20gJy4vc3VibWl0aGFuZGxlcnMvcXVlcnktc29sdXRpb24uc2VydmljZSc7XHJcbmltcG9ydCB7IENvbnZlcnRvclNlcnZpY2UgfSBmcm9tICcuL3NlcnZpY2UvY29udmVydG9yc2VydmljZSc7XHJcbmltcG9ydCB7IExpc3RGaWx0ZXJDb21tb25Db21wb25lbnQgfSBmcm9tICcuL2xpc3QtZmlsdGVyLWNvbW1vbic7XHJcblxyXG5pbXBvcnQgeyBMb2NhbGVNb2R1bGUgfSBmcm9tICdAZmFycmlzL3VpLWxvY2FsZSc7XHJcbmltcG9ydCB7IENvbnRyb2xUeXBlWFBpcGUgfSBmcm9tICcuL2NvbnRyb2xUeXBlLnBpcGUnO1xyXG5pbXBvcnQgeyBGaWx0ZXJSYWRpb0NvbXBvbmVudCB9IGZyb20gJy4vY29udHJvbGNvbXBvbmVudC9yYWRpb2NvbXBvbmVudC9yYWRpby5jb21wb25lbnQnO1xyXG5pbXBvcnQgeyBGaWx0ZXJJbnB1dEdyb3VwQ29tcG9uZW50IH0gZnJvbSAnLi9jb250cm9sY29tcG9uZW50L2lucHV0Z3JvdXBjb21wb25lbnQvaW5wdXRncm91cC5jb21wb25lbnQnO1xyXG5cclxuQE5nTW9kdWxlKHtcclxuICBkZWNsYXJhdGlvbnM6IFtcclxuICAgIExpc3RGaWx0ZXJDb21wb25lbnQsXHJcbiAgICBEYXRlQ29tcG9uZW50LFxyXG4gICAgTnVtYmVyQ29tcG9uZW50LFxyXG4gICAgSGVscENvbXBvbmVudCxcclxuICAgIElucHV0Q29tcG9uZW50LFxyXG4gICAgRHJvcERvd25Db21wb25lbnQsXHJcbiAgICBTZWFyY2hDb21wb25lbnQsXHJcbiAgICBGaWx0ZXJDaGVja2JveENvbXBvbmVudCxcclxuICAgIERhdGVSYW5nZUNvbXBvbmVudCxcclxuICAgIExpc3RGaWx0ZXJDb21tb25Db21wb25lbnQsXHJcbiAgICBGaWx0ZXJSYWRpb0NvbXBvbmVudCxcclxuICAgIEZpbHRlcklucHV0R3JvdXBDb21wb25lbnQsXHJcbiAgICBDb250cm9sVHlwZVhQaXBlXHJcblxyXG4gIF0sXHJcbiAgaW1wb3J0czogW1xyXG4gICAgQ29tbW9uTW9kdWxlLFxyXG4gICAgRm9ybXNNb2R1bGUsXHJcbiAgICBJbnB1dEdyb3VwTW9kdWxlLFxyXG4gICAgRmFycmlzRGF0ZVBpY2tlck1vZHVsZSxcclxuICAgIERhdGFsaXN0TW9kdWxlLFxyXG4gICAgQ29tYm9MaXN0TW9kdWxlLFxyXG4gICAgTG9va3VwTW9kdWxlLFxyXG4gICAgRmFycmlzRm9ybXNNb2R1bGUsXHJcbiAgICBOdW1iZXJTcGlubmVyTW9kdWxlLFxyXG4gICAgUGVyZmVjdFNjcm9sbGJhck1vZHVsZSxcclxuICAgIExvY2FsZU1vZHVsZS5mb3JSb290KClcclxuICAgIC8vIElucHV0c01vZHVsZVxyXG4gIF0sXHJcbiAgcHJvdmlkZXJzOltcclxuICAgIENvbnZlcnRvclNlcnZpY2UsXHJcbiAgICBTb2x1dGlvblNlcnZpY2UsXHJcbiAgICBRdWVyeVNvbHV0aW9uU2VydmljZVxyXG4gIF0sXHJcbiAgZXhwb3J0czogW1xyXG4gICAgTGlzdEZpbHRlckNvbXBvbmVudCxcclxuICAgIERhdGVDb21wb25lbnQsXHJcbiAgICBOdW1iZXJDb21wb25lbnQsXHJcbiAgICBIZWxwQ29tcG9uZW50LFxyXG4gICAgSW5wdXRDb21wb25lbnQsXHJcbiAgICBEcm9wRG93bkNvbXBvbmVudCxcclxuICAgIFNlYXJjaENvbXBvbmVudCxcclxuICAgIEZpbHRlckNoZWNrYm94Q29tcG9uZW50LFxyXG4gICAgRGF0ZVJhbmdlQ29tcG9uZW50LFxyXG4gICAgTGlzdEZpbHRlckNvbW1vbkNvbXBvbmVudCxcclxuICAgIEZpbHRlclJhZGlvQ29tcG9uZW50LFxyXG4gICAgRmlsdGVySW5wdXRHcm91cENvbXBvbmVudCxcclxuICAgIENvbnRyb2xUeXBlWFBpcGVcclxuICBdXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBMaXN0RmlsdGVyTW9kdWxlIHsgfVxyXG4iXX0=