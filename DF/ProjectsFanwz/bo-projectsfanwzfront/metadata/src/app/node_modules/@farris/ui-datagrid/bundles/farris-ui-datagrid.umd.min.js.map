{"version":3,"sources":["../../../../node_modules/tslib/tslib.es6.js","ng://@farris/ui-datagrid/lib/types/data-column.ts","ng://@farris/ui-datagrid/lib/types/constant.ts","ng://@farris/ui-datagrid/lib/services/state.ts","ng://@farris/ui-datagrid/lib/utils/utils.ts","ng://@farris/ui-datagrid/lib/services/datagrid-columns.helper.ts","ng://@farris/ui-datagrid/lib/services/datagrid-facade.service.ts","ng://@farris/ui-datagrid/lib/services/datagrid.service.ts","ng://@farris/ui-datagrid/lib/services/rest.service.ts","ng://@farris/ui-datagrid/lib/types/datagrid-validator.ts","ng://@farris/ui-datagrid/lib/services/validator-messager.service.ts","ng://@farris/ui-datagrid/lib/services/domhandler.ts","ng://@farris/ui-datagrid/lib/services/datagrid-filter.service.ts","ng://@farris/ui-datagrid/lib/pagination/ngx-pagination.module.ts","ng://@farris/ui-datagrid/lib/pagination/pagination.service.ts","ng://@farris/ui-datagrid/lib/scrollbar/scrollbar.interfaces.ts","ng://@farris/ui-datagrid/lib/scrollbar/scrollbar.directive.ts","ng://@farris/ui-datagrid/lib/scrollbar/scrollbar.component.ts","ng://@farris/ui-datagrid/lib/scrollbar/scrollbar.module.ts","ng://@farris/ui-datagrid/lib/components/columns/column-cell-edit.directive.ts","ng://@farris/ui-datagrid/lib/components/columns/datagrid-column.directive.ts","ng://@farris/ui-datagrid/lib/components/filter-toolbar/smart-filter-toolbar.component.ts","ng://@farris/ui-datagrid/lib/plugins/smart-filter/controlData/filter-control.options.ts","ng://@farris/ui-datagrid/lib/services/datagrid-smart-filter.service.ts","ng://@farris/ui-datagrid/lib/services/selection-mode.service.ts","ng://@farris/ui-datagrid/lib/datagrid.component.ts","ng://@farris/ui-datagrid/lib/plugins/smart-filter/datagrid-smart-filter.component.ts","ng://@farris/ui-datagrid/lib/plugins/smart-filter/datagrid-smart-filter.module.ts","ng://@farris/ui-datagrid/lib/utils/format-cell-data.pipe.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-body.component.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-row-hover.directive.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-row.directive.ts","ng://@farris/ui-datagrid/lib/components/editors/cell-editor.directive.ts","ng://@farris/ui-datagrid/lib/utils/safe.pipe.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-cell.component.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-cell-editable.directive.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-rows.component.ts","ng://@farris/ui-datagrid/lib/components/editors/text-editor.component.ts","ng://@farris/ui-datagrid/lib/components/header/datagrid-header.component.ts","ng://@farris/ui-datagrid/lib/components/header/datagrid-resize-column.directive.ts","ng://@farris/ui-datagrid/lib/components/footer/datagrid-footer.component.ts","ng://@farris/ui-datagrid/lib/components/pager/pager.component.ts","ng://@farris/ui-datagrid/lib/components/loading.component.ts","ng://@farris/ui-datagrid/lib/components/pager/selected-list/selected-list.component.ts","ng://@farris/ui-datagrid/lib/components/pager/selected-item.pipe.ts","ng://@farris/ui-datagrid/lib/datagrid-error-handler.ts","ng://@farris/ui-datagrid/lib/components/checkbox/datagrid-checkbox.component.ts","ng://@farris/ui-datagrid/lib/components/checkbox/datagrid-header-checkbox.component.ts","ng://@farris/ui-datagrid/lib/utils/rowid.pipe.ts","ng://@farris/ui-datagrid/lib/utils/format-group-row.pipe.ts","ng://@farris/ui-datagrid/lib/components/body/fixed-left-rows.component.ts","ng://@farris/ui-datagrid/lib/utils/rexplaceX.pipe.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-grouprow.directive.ts","ng://@farris/ui-datagrid/lib/utils/show-required-label.pipe.ts","ng://@farris/ui-datagrid/lib/utils/disable-row.pipe.ts","ng://@farris/ui-datagrid/lib/utils/select-row.pipe.ts","ng://@farris/ui-datagrid/lib/utils/field-value.pipe.ts","ng://@farris/ui-datagrid/lib/components/tooltip/cell-tooltip.directive.ts","ng://@farris/ui-datagrid/lib/components/tooltip/tip-message.pipe.ts","ng://@farris/ui-datagrid/lib/components/filter-toolbar/filter-toolbar.component.ts","ng://@farris/ui-datagrid/lib/components/header/header-style.directive.ts","ng://@farris/ui-datagrid/lib/components/auto-height/auto-height.component.ts","ng://@farris/ui-datagrid/lib/utils/row-is-selected.pipe.ts","ng://@farris/ui-datagrid/lib/utils/row-is-checked.pipe.ts","ng://@farris/ui-datagrid/lib/components/auto-height/auto-height.directive.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-row-dblclick.directive.ts","ng://@farris/ui-datagrid/lib/components/footer/datagrid-footer-cell.styler.directive.ts","ng://@farris/ui-datagrid/lib/components/header/drag-drop-column.service.ts","ng://@farris/ui-datagrid/lib/components/header/datagrid-drag-column.directive.ts","ng://@farris/ui-datagrid/lib/components/header/datagrid-drop-column.directive.ts","ng://@farris/ui-datagrid/lib/components/body/datagrid-group-footer-styler.directive.ts","ng://@farris/ui-datagrid/lib/datagrid.module.ts"],"names":["__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__read","o","m","Symbol","iterator","r","e","ar","next","done","push","value","error","__spread","concat","string","number","boolean","date","time","datetime","enum","fromdata","none","max","min","sum","average","count","GRID_EDITORS","InjectionToken","GRID_VALIDATORS","GRID_FILTER_ROW","GRID_SETTINGS_PANEL","GRID_SETTINGS_SERVICE","GRID_SETTINGS_HTTP","SCROLL_X_ACTION","SCROLL_X_REACH_END_ACTION","SCROLL_X_REACH_START_ACTION","FIXED_LEFT_SHADOW_CLS","CELL_SELECTED_CLS","CELL_EDITING_CLS","SIZE_TYPE","sm","row","header","pager","md","lg","xl","ALLOW_EDIT_CELL_HIGHLIGHT_CLS","datagrid","textarea","textbox","checkbox","datepicker","input-group","select","lookup","numberbox","combolist","combo-lookup","switch","timepicker","language-textbox","enum-editor","initDataGridState","idField","showLineNumber","selections","checkedRows","currentRow","columnsGroup","columns","fitColumns","onlySelectSelf","selectOnCheck","checkOnSelect","pageIndex","pageSize","pagerHeight","checkboxColumnWidth","pagination","virtual","rowIndex","scrollTop","topHideHeight","bottomHideHeight","isScrollChange","sortName","undefined","sortOrder","multiSort","remoteSort","changes","showGroupColumn","ROW_INDEX_FIELD","IS_GROUP_ROW_FIELD","GROUP_ROW_FIELD","IS_GROUP_FOOTER_ROW_FIELD","GROUP_VISIBLE_FIELD","GROUP_LEVEL_FIELD","Utils","uuid","S4","Math","random","toString","substring","getValue","field","data","safe","resultVal","indexOf","split","reduce","obj","key","escapeValue","setValue","val","nest","lastObj_1","_fields","c","pop","getMultilingualValue","valObj","localeId","keys","console","log","replace","eventPath","evt","path","composedPath","target","window","getParents","node","memo","parentNode","hasDialogOpen","document","body","className","on","el","fn","opts","delegatorFn","matches","addEventListener","options","removeEventListener","off","getBLen","str","getWhenEmptyText","col","EMPTY_INPUT_TEXT","zh-CHS","zh-CHT","en","editor","type","DatagridColumnsHelper","getColumnTotal","firstCols","total","forEach","colspan","findUndefinedItem","arr","getColumnFields","aa","colTotal","Array","k","id","rowspan","columnIsVisible","ins","visible","instance","column","getFields","_cols","map","cols","filter","gridInstance","fields","getFilterEnumOptions","enumSetting","ColumnFilterType","fmt","getEnumText","enumOpts","value1","valueField","textField","v","find","d","join","columnVisibleAsObservable","bindCallback","visibleAsObservable","of","getParentColumns","allCols","_getParents","parentId","parentCol","getChildColumns","_getChilds","childs","splice","child","checkGroupHeaderColumnVisible","_col","_childs","onlyOneColumn","DatagridFacadeService","http","localId","store","BehaviorSubject","virtualRowSubject","gridSizeSubject","Subject","errorSubject","selectRowSubject","unSelectRowSubject","columnResizeSubject","clearSelectionSubject","checkRowSubject","unCheckRowSubject","clearCheckedsSubject","clearAllSubject","checkAllSubject","unCheckAllSubject","selectAllSubject","selectCellSubject","error$","asObservable","selectRow$","unSelectRow$","columnResize$","clearSelections$","checkRow$","unCheckRow$","clearCheckeds$","clearAll$","checkAll$","unCheckAll$","selectAll$","currentCell$","editCell$","EventEmitter","clientSort$","rowAppend$","rowUpdate$","rowDelete$","state$","pipe","state","columnGroup$","switchMap","colgroup","distinctUntilChanged","gridSize$","_a","headerHeight","width","height","rowHeight","data$","vs","index","startIndex","rows","virtualRows","top","bottom","scrolling","difference","first","second","item","includes","differenceBy","a","b","Set","has","_state","cloneDeep","updateVirthualRows","scrolltop","getVirthualRows","updateState","autoHeight","groupRows","flatColumns","groupRows2","mergeCell","enableClientSortForMergeCell","sort","getData","original","originalData","getState","getVirtualState","getPageInfo","initState","initColumns","loadData","updateOriginalData","sortable","sortedData","resetRow","rowId","_this","origData","origRowData","primaryId","getCurrentRow","updateRow","fetchData","url","get","setTotal","updateProperty","property","setPagination","setScrollTop","isMultiSelect","multiSelect","_isRowSelected","isRowSelected","flag","_canCancelSelectWhenMulti","findIndex","sr","isRowChecked","checkeds","getCheckeds","isCheckAll","allRows","getAllRowsForLive","checkIds","getCurrentPageCheckeds","getSelections","temp_1","getCheckedRowsFromSource","findRow","fromDataSource","updateCheckedData","rowid","rowData","item_1","setCheckedRows","ids","checked","checkeds_1","srow","enableMorePageSelect","_clearCheckeds","checkRecord","checkRow","unCheckRow","selectRow","unSelectRow","setCurrentPageData","currentPageData","getCurrentPageData","allData","pagerOnServer","disableRow","checkAll","allCheckeds","_checkeds_1","element","selectAll","index_1","findRowIndex","setSelectRow","selectRowForMulti","unSelectRowForMulti","_sr","selectRecord","showCheckbox","emit","_clearSelections","keepSelect","excludeIds","clearSelections","unCheckRows","t1","clearCheckeds","clearAll","_rows","setMultiSelect","setCheckOnSelect","setSelectOnCheck","setCurrentCell","dr","cellElement","cellRef","currentCell","ControlPanelFeild","getColumn","isLastRow","cancelSelectCell","getCurrentCell","editCell","isEditing","cei","endEditCell","appendRow","Error","pid","newData","refresh","deleteRow","removeRow","isCellSelected","cellInfo","cc","newState","resize","newSize","resetColumnsSize","fit","useUserSetColumnSize","autoFitColumns","gridWidth","originalTotalWidth","setFitColumnsWidth","updateColumns","restitute","resizeColumns","restColumnWidth","leftFixed","rightFixed","normalColumns","leftFixedCols","getFixedCols","rightFixedCols","normalCols","originalWidth","initColumnsWidth","leftFixedWidth","rightFixedWidth","normalWidth","totalWidth","getColumnIndex","fixed","columnResizeEnd","getAllFlatColumns","flatten","fieldName","minWidth_1","Number","toFixed","direction","newcols_1","f","offset","lineNumberWidth","getColsWidth","reset","left","isShow","hideCheckbox","hideLineNumber","setSortInfo","orders","updateFieldOrder","order","orderBy","props","colObj","tslib_1.__spread","acc","prop","valA","valB","p1","p2","localeCompare","mergeFields","newOrders_1","newFields_1","clientSort","clearSort","loadFilterData","filterData","hasRowChanges","_changes","appendChanges","_id","acceptChanges","rejectChanges","orgiRow_1","getChanges","getFooterData","showFooter","footerRow_1","footer","text","typ","calculation","arrToGroup","items","first_1","shift","g1","groupBy","toGroup","fieldArr","_nextFields","_f","groupRows2Flat","initLevel","parent","results","idfield","groupFieldArr","groupField","groupItem","expanded","isPlainObject","level","groupFooter","footerItem","_b","updateGroupFooterData","groupFooterRow","columns_1","groupData","result_1","k_1","showGroupFooter","updateGroupFooter","groupRowId","groupRow","groupFooterRows","columns_2","rows_1","CalculationType","BigNumber","div","setinitialOptions","initialOptions","halign","align","Injectable","HttpClient","DatagridService","scorllSubject","scrollX","rowHoverSubject","rowSelectSubject","dataSourceChangedSubject","editCellSubject","endCellEdit","changeCheckedRows","scorll$","scrollX$","x","debounceTime","scrollY$","rowHover$","rowClick$","onDataSourceChange","cellEdit$","endCellEdit$","checkedRowsTotalChanged$","updateEmptyStyle$","showGridHeader","uncheckAll","columnResized","rowHeightChanged","loadVirtualData","showFixedShadow","setSelecedRow","scrollToCurrentRow","columnsChanged","cellContentWrapChanged","onFilterChanged","clearFilter","filterTextChange","toggleFilterRow","refreshFooterData","disableHeader","changeCheckAllStatus","setScrollbarPosition","smartFilterBarExpand","smartFilterDataChange","scrollbarUpdate","footerPositionChanged","styleElement","commonUtils","idService","cellEditorCreated","cellEditorDestory","focusRowChanged","onScrollMove","action","dataSourceChanged","onRowHover","mouseEnter","mouseenter","onRowClick","onCellEdit","tdElement","onEndCellEdit","cell","onSelectCell","onCheckedRowsCountChange","onRowHeightChange","onLoadVirtualData","onClearFilter","onFilterTextChange","txt","restoreScrollbarPosition","updateEmptyStyle","getMergeCellInfo","currVal","result","firstVal","j","show","_item","strIndex","getMergeCellInfo0","getMergeCellInfo2","groupKeys","startRowIndex","getMergeCellInfo3","firstField","prevItem_1","getMergeInfo","mergeCellInfo","removeStyleSheet","remove","createStyleElement","styleSheetId","_createStyleSheet","appendCssRules","rules","_appendCssRules","sheet","removeCssRule","ruleName","_removeCssRule","isArray","htmlHead","querySelector","styleEleId","innerText","createElement","appendChild","styleSheet","rules_1","tslib_1.__values","rules_1_1","rule","slice","trim","removedCssRule","addRule","cssText","insertRule","cssRules","ii","cssRule","selectorText","toLowerCase","deleteRule","removeRule","createConfigKey","gridID","location","host","hash","pathname","href","formCode","menuId","_searchArr","searchObj_1","catchFuncIdKEY","funcId","localStorage","setItem","getItem","IdService","encrypt","getCustomStyle","styler","args","findNextTr","nextTr","dir","getNextElement","getEle","DATAGRID_REST_SERVICEE","DefaultDatagridValidatorMessager","required","minlength","maxlength","email","requriedtrue","pattern","ValidatorMessagerService","getValidatorErrorMessage","validatorName","validators","validator","messager","ddvm","DomHandler","hasClass","classList","from","removeClass","RegExp","findSingle","selector","getOffset","rect","getBoundingClientRect","scrollLeft","getOuterHeight","margin","offsetHeight","style","getComputedStyle","parseFloat","marginTop","marginBottom","getOuterWidth","offsetWidth","marginLeft","marginRight","DatagridFilterService","dfs","localeSer","inject","removeField","validateRowData","conditions","checkAllFieldInRowData","executeFilter","enableSmartFilter","executeSmartFilter","getCompareResult","fieldDataValue","operator","targetValue","parseInt","Compare","Equal","NotEqual","Greater","GreaterOrEqual","Less","LessOrEqual","Like","NotLike","In","getRelationResult","result1","relation","result2","checkAllFieldResult","resultObj","values","fieldValue","columnObj","isMultilingualField","where","operator1","operator2","value2","removeFilterField","convertFilterCondition2String","andText","orText","and","and2","or","lastANDidx","title","getCompareString","txt2","s2","lbracket","lastIndexOf","resultStr","substr","op","code","convert2FilterArray","condition","filterArr","filterField","rbracket","compare","conditionVal","obj2","op2","createColumnFilterOptions","filterTypeOptions","enableOperator","dateFormat","returnFormat","formatter","tye","returnFmt","format","convertSmartFilter2EntityFilter","validateRowData2","checkRowDataWithCondition","FilterField","Value","Relation","_filters","LocaleService","Injector","NgxPaginationModule","NgModule","declarations","imports","CommonModule","exports","providers","PaginationService","SCROLLBAR_CONFIG","Geometry","y","w","h","Position","ScrollbarEvents","ScrollbarConfig","config","ScrollbarDirective","zone","differs","elementRef","platformId","defaults","ro","timeout","animation","configDiff","ngDestroy","disabled","psScrollY","psScrollX","psScrollUp","psScrollDown","psScrollLeft","psScrollRight","psYReachEnd","psYReachStart","psXReachEnd","psXReachStart","ngOnInit","isPlatformBrowser","config_1","runOutsideAngular","setTimeout","PerfectScrollbar","nativeElement","create","diff","ResizeObserver","update","children","observe","eventName","eventType","fromEvent","subscribe","event","auditTime","takeUntil","ngAfterViewInit","ngOnDestroy","complete","disconnect","clearTimeout","destroy","ngDoCheck","ngOnChanges","isFirstChange","currentValue","previousValue","ps","geometry","prefix","position","absolute","reach","scrollable","contains","scrollTo","speed","animateScrolling","scrollToX","scrollToY","scrollToTop","scrollToLeft","scrollToRight","scrollWidth","clientWidth","scrollToBottom","scrollHeight","clientHeight","scrollToElement","qs","elementPos","scrollerPos","currentPos","cancelAnimationFrame","newValue_1","scrollCount_1","oldTimestamp_1","performance","now","oldValue_1","cosParameter_1","step_1","newTimestamp","PI","round","cos","requestAnimationFrame","Directive","exportAs","NgZone","KeyValueDiffers","ElementRef","Inject","PLATFORM_ID","Optional","Input","Output","ScrollbarComponent","cdRef","states","indicatorX","indicatorY","interaction","scrollPositionX","scrollPositionY","scrollDirectionX","scrollDirectionY","usePropagationX","usePropagationY","allowPropagationX","allowPropagationY","stateTimeout","stateUpdate","usePSClass","autoPropagation","scrollIndicators","right","markForCheck","detectChanges","directiveRef","scrollDeltaX","deltaX","scrollDeltaY","deltaY","checkPropagation","touches","clientX","clientY","merge","mapTo","unsubscribe","preventDefault","stopPropagation","Component","template","encapsulation","ViewEncapsulation","None","ChangeDetectorRef","HostBinding","ViewChild","ScrollbarModule","DatagridCellEditorDirective","TemplateRef","DatagridColumnDirective","readonly","editable","ngAfterContentInit","ContentChild","SmartFilterToolbarComponent","render","padding","clearFilters","removeFilter","filterChange","sk","dg","DatagridComponent","dgs","onQuery","$event","filterItem","JSON","parse","onResetFilter","onRemoveFilter","onResize","smartFilterWrapper","Renderer2","EnumFilterControl","enumopts","controltype","enumValues","name","DatagridSmartFilterService","controlData","filterChanged","clearAllFilter","getColumnFilterData","filterControlData","single","showType","showTime","DateFilterControl","filterConditionChanged","ctrlIdx","labelCode","removeCondition","emitRemove","SelectionModeService","grid","dgRef","oldSettings","selectStartEvent","events","selectionMode","registerStopSelectionEvent","removeEvents","toggleMode","enableWindowsSelectionMode","restoreSettings","render2","listen","ctrlKey","shiftKey","unselectable","keyCode","enableSelectable","setAttribute","dgContainer","setStyle","removeAttribute","removeStyle","beforRowClick","param","isSelected","isCtrlKey","isShiftKey","endEditing","focusIndex","focusRowIndex","endIndex","start","end","willCheckIds","getRows","checkRows","currentPagerIds_1","unCheckIDs","checkValues","unSelectIds","beforeSelect","delay","canSelect","selectedRow","rowClick","dblclick","selected","endRowClick","cd","app","domSanitizer","auther","version","__component_type__","pos","hostCls","useThemes","useHtmlTable","showBorder","striped","showHeader","headerWrap","footerHeight","footerDataFrom","footerPosition","_sizeType","_fit","_fitColumns","_autoFitColumns","scrollBarShowMode","scrollBarOptions","resizeColumn","lineNumberTitle","rowHover","clickToEdit","_lockPagination","__pagination","pagerViewMode","pageList","showPageList","showPageInfo","showPageNumber","pagerLabelSize","showGotoInput","showSelectedList","cellTipTimer","controlPaginationState","_total","enableSelectRow","showAllCheckbox","emptyDataHeight","emptyMessage","emptyTemplate","_footerData","endEditByInvalid","_columns","nowrap","virtualized","virtualizedAsyncLoad","editMode","_editable","enableEditCellStyle","selectOnEditing","editorHeight","hoverRowCls","enableDragColumn","rowGroupPanelHeight","groupSummaryPosition","groupCellColSpan","_groupField","groupFields$","_showRowGroupPanel","AutoColumnWidthUseDblclick","useDefaultFilter","enableFilterRow","remoteFilter","showFilterBar","filterBarHeight","filterRowHeight","selectValue","selectValues","useControlPanel","enableSimpleMode","controlPanelMode","closeOtherGridEditor","clearSelectionsWhenDataIsEmpty","enableContextMenu","contextMenus","selectValueChange","checkValuesChange","selectValuesChange","beginEdit","endEdit","cancelEdited","scrollY","pageSizeChanged","pageChanged","loadSuccess","enableHighlightCell","checkedRowsDataFromSource","editcellWhenTabKeydwon","beforeClickCell","dblclickRow","selectChanged","unSelect","unSelectAll","scrollYLoad","unChecked","unCheckAll","checkedChange","columnSorted","rowAppended","rowDeleted","rowUpdated","dataChange","lastCellEnterHandle","groupFieldChange","columnMoved","cellClick","_loading","_selectedRow","ds","pagerOpts","editors","footerWidth","clickDelay","resizeColumnInfo","proxyLineEdge","startWidth","startX","subscriptions","realHeaderHeight","modalClickEvent","pending","scrollInstance","ignoreTarget","clientFilterService","_isResized","gridSize","clientFilterChanged","groupRowPanelPlaceholder","smartFilterService","smartFilterResult","smartFilterBarHeight","_active_datagrid_cls","_blured_datagrid_cls","_custom_datagrid_cls","documentBodyMouseDown","farrisInstances","currentPagerData","trackByRows","onDocumentMouseDown","closest","activeDataGrid","indlg","inDialog","currentTargetInDialog","closeEdit","unbindDocumentEditListener","localeService","restService","colFormatSer","ColumnFormatService","CommonUtils","FarrisComponentInstanceService","settingService","settingsHttp","httpRestService","dataSubscription","dataSource","cleanDom","setPagerTotal","updateFooterData","columnGroupSubscription","cg","colGroup","initEditorAndValidator","currentCellSubscription","unbindMoveSelectRowEvent","bindDocumentEditListener","bindDocumentMoveSelectRowEvent","filterChangedSubscription","footerDataSubscription","sms","defineProperty","setFitColumns","dgPager","totalItems","itemsPerPage","setFooterHeight","correctColumns","chkeds","initSelectOrChecked","setCurrentPagerData","$data","footerData","checkFilterStyle","_checkSize","checkOptions","stringify","onFilterBarResize","addClass","setHeaderHeight","setPagerHeight","initBeforeEvents","setGridNewSizeWhenFit","add","res","display","_w","contentRect","_h","_floowW","floor","_roundW","_floorH","_roundH","calculateGridSize","parentElement","footerTemplate","dgColumns","dgc","checkNowrap","setRowHeight","isSingleClick","headerHeightChange","fh","remote","currentPage","sizeType","uncheckIds","updateAllCheckboxStatus","toggleVisibleColumn","checkDragColumns","showRowGroupPanel","st","isMultiHeader","warn","registerGridInstance","checkSortInfo","checkMergeCell","setCheckboxBehavior","initPaginationOptions","checkGroupHeaderColumns","checkGroupRowSetting","checkColumnsType","_defaultSetting","_flatColumns","settings$","getSettings","sets","userProfileSetting","err","refreshSelectedData","rd","unsubscribes","documentRowKeydownHandler","onClick","closeSelectedList","nodeName","_editorClickEvent","updatePagerOptions","customStyleKey","useSizeType","_rowHeight","key1","key2","rowHeightCSS","_data","chkids","diffIds","checkAllStatus","allDataIDs","newCheckValues","isSame","addControlCol","controlCol","cp","columnsIndex","valign","bind","gridHeaderEl","trs","querySelectorAll","reloadData","useColumnSettingWidth","_useColumnSettingWidth","Editors","ed","_validators","outerHeight","cmpRect","getElementPadding","border","getElementBorderWidth","beforeUnselect","beforeCheck","beforeUncheck","beforeSortColumn","beforeEdit","afterEdit","isActived","targetName","selectNextRow","selectPrevRow","bindEditListenerInModal","modalElement","_fmodal","documentCellClickHandler","docuemntCellClickEvents","documentCellKeydownHandler","onKeyDownEvent","documentCellKeydownEvents","onSpaceHandler","onEnterHandler","selectNextCell","ss","isRowEditing","isCellEditing","editorTemplate","endRowEdit","getEditors","trId","trDom","tdDom","trDomL","trDomR","cellEditorRef","hideCover","stopEdit","editRow","beforeEditEvent","click","cells_1","cells","toArray","cellEditor","componentRef","inputElement","focus","bindRowEditorKeydownEvent","canEnd","currentEditor","rowForm","markAsTouched","invalid","afterEditEvent","closeAllCellEditor","form","formControl","cancelEdit","unbindRowEditorKeydownEvent","rowEditTabKeydwonEvent","which","td","tr_1","nextTd_1","nextElementSibling","hasNoEditor","_td","editNextRow","nextRowid","getAttribute","tds","tdIdx_1","nextTrEdit","documentRowEditKeydownHanlder","documentClickEndRowEditHandler","_clientFilter","excuteLocaleFilter","allClientData","smartFilterData","entityFilters","onClearSmartFilters","onRemoveSmartFilterItem","fieldCode","smartFilterEl","onSmartFilterChange","clearCondition","keepSortState","keepScrollPosition","loading","closeLoading","lst","lastScrollTop","lsl","lastScrollLeft","showLoading","params","reload","setPageIndex","setPageList","onPageChange","lockPagination","onPageSizeChange","onRemoveSelectedItem","onClearSelectedItem","replacePX2Empty","strNum","renderCustomCls","cls","dom","renderCustomStyle","cs","cssRuleText","paddingTop","paddingLeft","paddingBottom","paddingRight","borderTopWidth","borderBottomWidth","borderRightWidth","borderLeftWidth","formatData","getFieldValue","canOperateCheckbox","findNextCell","cellIndex","currCellEl","prevTr","previousElementSibling","nextTd","tr","_next","tagName","selectCell","removeCellSelectedCls","selectedCell","toCurrentPosition","selectAllRows","cancelSelected","checkAllRows","emitUnCheckAll","getResizeProxyPosLeft","dgRect","tdLeft","deltaEdge","pageX","toggleResizeProxy","resizeProxyBg","resizeProxy","onColumnResizeBegin","proxy","proxyPosLeft","top_1","bottomH","onColumnResize","onColumnResizeEnd","newColWidth","moveLeft","saveUserConfig","restituteColumnsSize","sizeToContent","th","longestText","longTextArea","innerHTML","w1","maxWidth","thMinWidth","refreshRow","validateRow","insertRow","_setColumnReadonly","setColumnReadonly","allCols_1","origianlColSpan","parents","_colspan_1","showColumn","hideColumn","updateColumn","columnObject","detectChange","setColumnFormatter","updateColumnFormatterOptions","formatterOptions","colFormatter","setColumnTitle","onColumnSorted","orders_1","updateSortInfo","newSortName","newSortOrder","sortFields","sortOrders","_sortFields","_sortOrders","nField","nIndex","colOrder","newOrder","_order","showControlPanel","settings","sortInfo","viewColumns","columnFormat","updateColumnFormat","newVisibleOrderColumns","tips","cellIsReadOnly","readOnly","groupFieldChanged","newGroupField","removeGroupField","delIdx","clearAllGrouppingField","setGroupFields","groupFields","active","grids","onDatagridContainerFocus","changeDetection","ChangeDetectionStrategy","OnPush","ApplicationRef","DomSanitizer","ContentChildren","HostListener","DatagridSmartFilterComponent","filterPanelService","smartFilterSer","smartFilterDataChanged$","removeFilter$","clearAllFilter$","smartFilterEvents","control","filterPanelRef","hidePanel","getFilterData","placeHolder","getPanelPosition","pageY","targetRect","moveArrow","innerWidth","hideFilterPanel","valueText","clearColumnFilter","showFilterPanel","showPanel","panelExtendTemplate","sortTmp","localStorageKey","arrowEl","filterSubmit","onSort","FilterPanelService","decorators","DatagridSmartFilterModule","FilterPanelModule","LocaleModule","forRoot","FormatCellDataPipe","cfs","injector","LOCALE_ID","transform","isPassword","formatterFn","thousand","precision","dateRange","dateRangeDatesDelimiter","getDatagridInstance","dataGrid","utils","setPlaceHolderWhenEnableEditCellStyle","resoultStr","isFooter","elRef","span","Pipe","pure","DatagridBodyComponent","psConfig","swipeEasing","minScrollbarLength","handlers","suppressScrollY","deltaTopHeight","wheelWidth","_fixedRightScrollLeft","maxScrollLeft","showRightShadow","scrollBarMode","visibleContextMenus","currentRowId","_hoverRowIndex","minRowBuffer","vScrollDir","rowsCache","lastRenderedScrollTop","lastRenderedScrollLeft","prevScrollTop","prevScrollLeft","blankTopHeight","blankBottomHeight","cellContentFormatter","__triggerBodyClickEvent","onBeforeShowContextMenu","contextMenuDom","rowID","focusTargetWidth","viewportW","ngZone","columnFormatService","rowIdx","listenSubjects","s1","updateContainerSize","s10","s3","checkScrollbarPosition","s5","viewScrollContainer","onMouseClick","hh","setPositionTop","bodyStyle","getBodyStyle","onDataChanged","scrollbarYActive","destroySubscriptions","ngAfterViewChecked","toTop","scrollBar","scrollElRef","viewportH","getViewPortHeight","scrollInfo","renderData","updateRowHeight","sub","gridSizeSubscribe","canvasHeight","getCanvasHeight","updateColumnSize","colsWidth","dgContainerWidth","allColsWidth","fixedRightScrollLeft","_timer","scrollbarRef","columnResizeSubscribe","selectRowSubscribe","unselectRowSubscribe","prevRow","selectAllSubscribe","checkRowSubscribe","checkedRowsChanged","clearSelectionsSubscribe","uncheckRowSubscribe","checkAllSubscribe","clearCheckedsSubscribe","updateScrollPosition","trID","buildCustomCellStyle","rightTrs","leftTrs","fixedRightEl","fixedLeftEl","mainArea","updateCellStyle","_rd","getTrDomHeight","list","trdoms","t2","ceil","t3","trDomId","dgBody","cssTextArr","domSel","_arr","rtr","ltr","leftTrId","rightTrId","key3","updateCanvasHeight","rightRowsCmp","fd","onScrollToX","onScrollToY","handleScroll","onPsXReachStart","onPsXReachEnd","isChecked","toggleGroupRow","open","viewPortHeight","allRowsHeight","itemsCount","getRowFromPosition","getVisibleRange","viewportTop","viewportLeft","leftPx","rightPx","getRenderedRange","range","buffer","minBuffer","canvasWidth","renderRows","dataLength","rowNode","cellColSpans","cellNodesByColumnIdx","cellRenderQueue","removeRowFromCache","cleanupRows","rangeToKeep","detectchanges","rendered","_handleScroll","viewportContainer","maxScrollDistanceY","maxScrollDistanceX","vScrollDist","abs","hScrollDist","_scrollTo","dx","dy","newScrollTop","gridCellData","edit","DatagridRowHoverDirective","dgb","_mouseenter","_mouseleave","onmouseenter","capture","onmouseleave","setRowHoverCls","hover","leftTableDom","rightTableDom","centerTableDom","method","trSelector","forwardRef","DatagridRowDirective","fb","drHover","clickHandler","FormGroup","documentRowDblclickEvent","columnsChangedSubscription","datasourceChangedSubscription","createControl","s$","s1$","updateCellEmptyStyle","s2$","getRowPosition","drl","drr","rowStyler","trStyle","beforEventParam","canUnselect","trCLS","canendedit","initFormControl","group","controls","createFormControl","addControl","bindValidations","validations","validation","Validators","minLength","maxLength","requiredTrue","vfn","vr","centerTr","leftTrDom","rightTrDom","heightSizeList","maxHeight","rowIsDisabled","emptyicon_cls","colVal","fmtVal","updateCellEmptyText","FormBuilder","Self","DatagridCellComponent","descendants","GridCellEditorDirective","resolver","container","createCellEditor","editorRef","editorType","factory","resolveComponentFactory","createComponent","controlId","updateControlValue","changeDetectorRef","changeDetector","destroyed","emitEvent","hide","ComponentFactoryResolver","ViewContainerRef","SafePipe","sanitizer","dangerWords","bypassSecurityTrustHtml","bypassSecurityTrustStyle","bypassSecurityTrustScript","bypassSecurityTrustUrl","bypassSecurityTrustResourceUrl","hasDanger","lastColumn","_isEditing","controlHeight","_cellEditorTemplate","cellDblClick","cellContext","cellStyler","safePipe","canEdit","formGroup","input","templateRef","va","ha","justify-content","horizontalAlign","align-items","verticalAlign","initCellTemplateContext","tools","cellSubscription","rowUpdateSubscription","updateValue","rowid_1","Default","read","DatagridCellEditableDirective","cellEditorCreatedSubscription","cellEditorDestorySubscription","emitBeginEdit","bindEditorInputEvent","setCellClsWithEditorType","initCellEvent","celldblclick","onDblClickCell","onClickCell","openCellEditor","clickTimer","closeEditingCell","cellclick","unBindEditorInputEvent","bindCellEventSubscription","isDifferentCell","isReadonly","observers","getReadonlyValue","dc","_cellEditorRef","editType","showDialog","domName","blurFn","onBlur","blur","_col_","cellEndEdit","cancelCellEditing","ceRef","editorInputKeydownEvent","onKeyDownForInput","altKey","updateChecked","enterParam","gird","lastRow","movePrevCellAndEdit","moveNextCellAndEdit","clearCellSelectedClass","moveScrollbar","tdPosLeft","offsetLeft","containerWidth","tdRect","scrollContainer","psContainer","scrollbarXLeft","tdPosTop","fieldIndex","nextColumn","firstEditor","cleanOtherEditorIcon","DatagridRowsComponent","fixedRight","isGroupRow","isGroupFooter","groupLevelField","filterConditions","listenEvent","_s3","_s4","_s5","scrollToCurrentRowSubscription","scrollToFirstSelectedRow","unSubscriptions","getGroupColumn","trackByField","isElementInViewport","box","scrollIntoView","block","inline","currentTrTop","setGroupRowsVisible","footerRows","mergeInfo","showCell","getRowSpan","getGroupSummaryData","groupId","TextboxEditorComponent","DatagridHeaderComponent","wrapHeader","scrollbarMode","rightFixedColumnWidth","normalColumnWidth","showOverlay","disableSort","showShadowCls","cfr","dfrs","headerColumnsTable","fixedLeft","setFixedColumnPosition","_chkall","checkedsCount","isIndeterminate","chk","indeterminate","_checked","updateStatus","getRightFixedColWidth","setHeaderPosition","isShowShadow","fixedLeftWidth","isColspan","isdatafield","realWidth","l","onRowNumerColumnDblClick","rntd","maxRowNumber","onSortColumnClick","FilterRowCreateDirective","vc","filterRowType","filterRowRef","clearFilterValue","createFilterRow","rebuild","_createFilterRow","columnsData","cf","conditionChange","DatagridResizeColumnDirective","dh","ngzone","isEnable","resizer","mouseUp$","resizerMouseDownListener","onMouseDown","onDblClickHandler","thRef","resizable","bindDocumentEvents","documentMouseMoveListener","onMouseMove","documentMouseUpListener","onMouseUp","unbindDocumentEvents","dblclickListener","DatagridFooterComponent","scrollXSubscription","footerBody","setFooterPosition","renderFooterStyle","positionBottom","footerContainer","positionTop","footerStyler","trStyleAndCls","cssRuleID","cssRuleId2","DatagridPagerComponent","maxSize","directionLinks","autoHide","responsive","previousLabel","nextLabel","locked","selectedData","viewMode","pageChange","pageSizeChange","removeSelectedItem","clearSelectedItem","styles","opacity","mouseInSelectedList","openSelectedList","selectionDataChange$","notifySer","NotifyService","paginationDirective","getPageSize","getTotalItems","pc","listenCheckDataChanged","lock","unlock","onMouseEnter","onDelSelectedItem","onClearSelected","onSelectListPanelClose","DataGridLoadingComponent","PagerSelectedListComponent","close","clear","onClose","onRemoveClick","onClearClick","SelectedItemPipe","DatagridErrorHandler","handleError","ɵs","DatagridCheckboxComponent","checked$","changeCheckedStatus","rid","_setcheckrows","handleClick","canUncheck","canCheck","status","DatagridHeaderCheckboxComponent","RowDataIdPipe","FormatGroupRowPipe","valueField_1","enumItem","FixedLeftRowsComponent","toggle","selectedRows","groupRowIndex","listenSubject","_setselectrow","ReplaceXPipe","_i","DatagridGroupRowDirective","groupStyler","ShowRequiredStarPipe","DisableRowPipe","disableRowFn","SelectedRowPipe","FieldValuePipe","rowdata","DatagridCellTooltipDirective","tipMode","showTipTimer","_mouseclick","onMouseLeave","cellTiptimer","getTextContainer","donotShowTips","tdWidth","tagetSty","txtWidth","getTextWidth","message","font","_width","removeChild","cellEl","enable","tipWidth","tipHeight","boxEl","elSize","getBoxSizeObj","minWidth","targetTop","targetLeft","changeTooltipPosition","arrow","tooltipSize","getTooltipSize","innerHeight","textContainer","overflow","updateArrowPosition","zIndex","elOffset","halfHeight","styleClass","tooltipCls","tooltipStyleClass","tooltipArrow","tooltipText","wordBreak","textAlign","positionStyle","getThemeCls","getWindowSize","boxSize","tooltip","winSize","elLeft","elRight","toolTipTextWidth","CellTootipMessagePipe","showTips","msg","getCellTooltipContent","tipContent","DatagridFilterToolbarComponent","empty","filterText","openFilterPanel","showExpand","enableFilterSetting","windowResizeHandler","filterToolbarRef","actionW","toolbarWidth","filterPanelTextRef","filterChangeSubscription","updateExpandState","bindEvent","filterFields","bindFilterFieldHandler","dropdownFilterFields","ff","isShowExpand","filterTextContainerWidth","filterTextRealWidth","refreshFilter","showFilterTextPanel","HeaderStyleDirective","renderCss2Element","headerStyler","renderStyle","targetEl","styleObj","AutoHeightComponent","RowIsSelectedPipe","RowIsCheckedPipe","AutoHeightDirective","updateDatagridHeight","wheelHeight","wh","dgHeight","DatagridRowDblClickDirective","dblclickRowEvent","FooterCellStylerDirective","setGroupFooterCellStyle","_customStyles_1","DragDropColumnService","moveItem","newIndex","removedIndex","removedItem","backupColumns","providedIn","smoothDnd","constants","wrapperClass","animationClass","SmoothDnDForHeader","dropHandler","dropHandlers","reactDropHandler","handler","wrapChild","DragColumnDirective","dndSer","enableDrag","groupName","orientation","behaviour","dragHandleSelector","dragClass","dropPlaceholder","getGhostParent","getChildPayload","shouldAcceptDrop","sourceContainerOptions","payload","onDropReady","dropResult","run","onDrop","onDragEnter","onDragStart","info","onDragEnd","initDnD","disposeDnd","dispose","groupColumns","middle","addedIndex","currIndex","targetColumn_1","realTagetIndex","moveColumn","newColumns","smoothDnD","DropColumnDirective","getGroupFields","allowGrouping","newGroupFields","some","GroupFooterRowStylerDirective","buildCustomGroupFooterRowStyle","groupFooterStyler","cs_1","DatagridModule","ngModule","FormsModule","ReactiveFormsModule","HttpClientModule","PaginationModule","DataColumnModule","NotifyModule","SimpleFilterModule","FarrisContextMenuModule","provide","ErrorHandler","useClass","useValue","ɵ0","entryComponents"],"mappings":"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rB,UACjBqrB,EAAAA,aAAarrB,UACbsrB,EAAAA,mBACAzrB,GACA0rB,EAAAA,yBAEJ59C,aAAc,CACV0iC,GACApQ,GACAyf,GACAC,GACAa,GACAI,GACAR,GACAK,GACAE,GACAwD,GACAtrC,GACA++B,GACA6D,GACAlB,GACA/H,GACAvD,GACAhD,GACA3K,GACA+a,GACAvkC,GACAE,GACA+9B,GACA+J,GACA5U,GACAmT,GACAW,GACAS,GACAtQ,GACAwI,GACA2I,GACAQ,GACA0D,GACAuB,GACAS,GACAH,GACAC,GACAC,GACA3H,GACAN,GACAuI,GACAE,GACAoB,GACAkC,GACAzQ,GACAvhC,GACAqyC,IAEJ38C,UAAW,CACP,CAAEy9C,QAASC,EAAAA,aAAcC,SAAU7M,IACnC,CACI2M,QAASv9C,GACT09C,SAAQC,IAEZvlD,IAEJyH,QAAS,CACL+K,GACA++B,GACA5/B,GACAF,GACA06B,GACAtH,GACAqP,GACA5C,GACA1X,GACAyf,GACAU,GACAQ,GACAuD,GACA3D,GACAM,GACA0D,GACA8B,GACAC,GACAM,GACAE,GACAoB,GACAkC,GACAzQ,GACAvhC,GACAwnB,GACA6qB,GACAa,EAAAA,yBAEJM,gBAAiB,OAWrBf,EAhHA,0MrEzD0C,01BAIJ,yZAET,0CAEG,qFAhBE,oCACA,qCACC,mCAHH,iHAFD,wCAMU,4CACE,yKA+Df,oBADH,yFDyG4B,CACjD/I,QAAQ,EACR5jE,UAAW,EACXC,SAAU","sourcesContent":["/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-11 09:52:46\r\n * @Company: Inspur\r\n * @Version: v0.0.1\r\n */\r\nimport { TemplateRef } from '@angular/core';\r\nimport { ColumnFormatter } from '@farris/ui-common/column';\r\nimport { DatagridValidator } from './datagrid-validator';\r\nimport { Compare } from '@farris/ui-common/types';\r\n\r\nexport interface CustomStyle {\r\n    cls?: string;\r\n    style?: {\r\n        [key: string]: string;\r\n    };\r\n}\r\n\r\nexport type MoveDirection = 'left' | 'right' | 'up' | 'down';\r\ntype TooltipContentFn = (value: any, rowData: any, column: any) => string;\r\ntype TooltipContent = string | TooltipContentFn;\r\nexport type HeaderStyleFn = (column: DataColumn) => CustomStyle;\r\ntype HeaderStyle = string | { [cssKey: string]: string } | HeaderStyleFn;\r\n\r\ntype ColumnFormatterFn = (value, rowData, rowIndex) => any;\r\ntype ColumnFormatterType = ColumnFormatterFn | ColumnFormatter;\r\nexport interface DataColumn {\r\n    dataType?: string;\r\n    id?: string;\r\n    parentId?: any;\r\n    field: string;\r\n    title: string;\r\n    width: number;\r\n    /** è®°å½åå§å®ä¹å®½åº¦ */\r\n    originalWidth?: number;\r\n    /** æ é¢å¯¹é½æ¹å¼ */\r\n    halign?: 'left' | 'center' | 'right';\r\n    /** ææ¬å¯¹é½æ¹å¼ */\r\n    align?: 'left' | 'center' | 'right';\r\n    /** åç´å¯¹é½æ¹å¼ */\r\n    valign?: 'top' | 'middle' | 'bottom';\r\n\r\n    formatter?: ColumnFormatterType;\r\n    styler?: (value, rowData, rowIndex) => CustomStyle;\r\n    /** è¡¨å¤´èªå®ä¹æ ·å¼ */\r\n    headerStyler?: HeaderStyle;\r\n    left?: number;\r\n    /** æ¯å¦åºå® */\r\n    fixed?: 'left' | 'right';\r\n    /** æ¯å¦æ¾ç¤º */\r\n    visible?: boolean | any;\r\n    /** åªè¯» */\r\n    readonly?: boolean | any;\r\n\r\n    editor?: GridEditor;\r\n    /** ååæ ¼èªå®ä¹æ¨¡æ¿ */\r\n    template?: TemplateRef<any>;\r\n    /** è¡¨å³æ¨¡æ¿ */\r\n    headerTemplate?: TemplateRef<any>;\r\n    /** ç¼è¾å¨æ¨¡æ¿ */\r\n    editorTemplate?: TemplateRef<any>;\r\n    /** é¼ æ ç§»å¨è³ååæ ¼åï¼æ¾ç¤ºæ¬æµ®æ¶æ¯ */\r\n    showTips?: boolean;\r\n    /** ååæ ¼æç¤ºæ¨¡å¼ï¼\r\n     *  allwaysï¼ é¼ æ æ»è¿å³æ¾ç¤º\r\n     *  auto: ååæ ¼å®½åº¦ä¸å¤æ¶æä¼æ¾ç¤º\r\n     */\r\n    tipMode?: 'allways' | 'auto';\r\n    tipContent?: TooltipContent;\r\n    tipOptions?: any;\r\n    /** True to allow the column can be sorted. */\r\n    sortable?: boolean;\r\n    order?: 'asc' | 'desc';\r\n    sorter?: (r1: any, r2: any) => 0 | 1 | -1;\r\n    /** True to allow the column can be resized. */\r\n    resizable?: boolean;\r\n    rowspan?: number;\r\n    /** ååå¹¶ */\r\n    colspan?: number;\r\n    /** ååå¹¶åå§å¼  */\r\n    origianlColSpan?: number;\r\n    index?: number;\r\n    footer?: GridFooterRow;\r\n    /** åè®¸åç»ï¼é»è®¤ä¸º true */\r\n    allowGrouping?: boolean;\r\n    groupFooter?: GridFooterRow;\r\n    validators?: DatagridValidator[];\r\n    // è¿æ»¤è¡\r\n    filter?: ColumnFilter | any;\r\n    /** æ¯å¦å¤è¯­å­æ®µ */\r\n    isMultilingualField?: boolean;\r\n\r\n    /** ç©ºæ ¼é®ååºåè°å½æ° */\r\n    onSpaceHandler?: (e) => any;\r\n    /** åè½¦ååºåè°å½æ° */\r\n    onEnterHandler?: (e) => any;\r\n}\r\n\r\nexport enum ColumnFilterType {\r\n    string = 0,\r\n    number = 1,\r\n    boolean = 2,\r\n    date = 3,\r\n    time = 4,\r\n    datetime = 5,\r\n    enum = 6,\r\n    fromdata = 7\r\n}\r\n/** Client Filter Type */\r\nexport interface FilterCondition {\r\n    operator1?: Compare;\r\n    value1?: any;\r\n    relation?: 'and' | 'or' | '';\r\n    operator2?: Compare;\r\n    value2?: any;\r\n}\r\n\r\nexport interface ColumnFilter {\r\n    type?: ColumnFilterType;\r\n    enableOperator?: boolean;\r\n    options?: any;\r\n}\r\n\r\nexport interface GridEditor {\r\n    type: string;\r\n    options?: any;\r\n    validators?: DatagridValidator[];\r\n}\r\n\r\nexport interface ColumnGroup {\r\n    /** å·¦ä¾§åºå®åæ»å®½åº¦ */\r\n    leftFixedWidth?: number;\r\n    /** å·¦ä¾§åºå®åéå */\r\n    leftFixed?: DataColumn[];\r\n    /** éåºå®åéå */\r\n    normalColumns?: DataColumn[];\r\n    /** å³ä¾§åºå®åå®½åº¦ */\r\n    rightFixedWidth?: number;\r\n    /** å³ä¾§åºå®åéå */\r\n    rightFixed?: DataColumn[];\r\n    /** æ­£å¸¸å®½åº¦ */\r\n    normalWidth?: number;\r\n    /** ææåå®½åº¦ä¹å */\r\n    totalWidth?: number;\r\n    /** ç¨æ·è®¾ç½®çåå®½ä¹å */\r\n    originalTotalWidth?: number;\r\n}\r\n\r\nexport interface PaginationInfo {\r\n    enable?: boolean;\r\n    pageList?: number[];\r\n    pageSize?: number;\r\n    pageIndex?: number;\r\n    total?: number;\r\n}\r\n\r\nexport enum CalculationType {\r\n    /** æ  */\r\n    none = -1,\r\n    /** æå¤§å¼ */\r\n    max = 0,\r\n    /** æå°å¼ */\r\n    min,\r\n    /** æ±å */\r\n    sum,\r\n    /** å¹³åæ° */\r\n    average,\r\n    /** æ»è®°å½æ° */\r\n    count\r\n}\r\n\r\nexport interface GridFooterRow {\r\n    options?: {\r\n        /** è®¡ç®ç±»å */\r\n        calculationType?: CalculationType,\r\n        /** éæææ¬ï¼ç´æ¥éå å°TD ä¸­ */\r\n        text?: string;\r\n    };\r\n    /** ææ¬å¯¹é½æ¹å¼ */\r\n    align?: 'left' | 'center' | 'right';\r\n    /** æ°æ®æ ¼å¼å */\r\n    formatter?: (value, rowData, rowIndex) => any | ColumnFormatter;\r\n    /** ååæ ¼æ ·å¼ */\r\n    styler?: (value, rowData, rowIndex) => CustomStyle;\r\n    rowspan?: number;\r\n    colspan?: number;\r\n    visible?: boolean;\r\n}\r\n\r\n\r\nexport const defaultPaginationInfo: PaginationInfo = {\r\n    enable: true,\r\n    pageIndex: 1,\r\n    pageSize: 10\r\n};\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-11 10:48:38\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n\r\nimport { InjectionToken } from '@angular/core';\r\nexport const GRID_EDITORS = new InjectionToken('Farris DataGrid Editors.');\r\nexport const GRID_VALIDATORS = new InjectionToken('Farris DataGrid Validators.');\r\nexport const GRID_FILTER_ROW = new InjectionToken('Farris DataGrid Filter-Row Component.');\r\n\r\nexport const GRID_SETTINGS_PANEL = new InjectionToken('Farris DataGrid Setting Panel Component.');\r\nexport const GRID_SETTINGS_SERVICE = new InjectionToken('Farris DataGrid Setting Service.');\r\nexport const GRID_SETTINGS_HTTP = new InjectionToken(' Datagrid Settings HttpClient.');\r\n\r\nexport const SCROLL_Y_ACTION = 'psScrollY';\r\nexport const SCROLL_X_ACTION = 'psScrollX';\r\nexport const SCROLL_UP_ACTION = 'psScrollUp';\r\nexport const SCROLL_DOWN_ACTION = 'psScrollDown';\r\nexport const SCROLL_LEFT_ACTION = 'psScrollLeft';\r\nexport const SCROLL_RIGHT_ACTION = 'psScrollRight';\r\nexport const SCROLL_Y_REACH_END_ACTION = 'psYReachEnd';\r\nexport const SCROLL_Y_REACH_START_ACTION = 'psYReachStart';\r\nexport const SCROLL_X_REACH_END_ACTION = 'psXReachEnd';\r\nexport const SCROLL_X_REACH_START_ACTION = 'psXReachStart';\r\n\r\nexport const DATAGRID_SETTING_FIELDNAME = '_DATAGRID_CONTROL_PANEL_';\r\n\r\n/** å·¦ä¾§åºå®åé´å½±æ ·å¼åç§° */\r\nexport const FIXED_LEFT_SHADOW_CLS = 'f-datagrid-fixed-left-shadow';\r\nexport const FIXED_RIGHT_SHADOW_CLS = 'f-datagrid-fixed-right-shadow';\r\n\r\nexport const ROW_HOVER_CLS = 'f-datagrid-row-hover';\r\n\r\nexport const ROW_SELECTED_CLS = 'f-datagrid-row-selected';\r\n\r\nexport const CELL_SELECTED_CLS = 'f-datagrid-cell-selected';\r\n\r\nexport const CELL_EDITING_CLS = 'f-datagrid-cell-editing';\r\n\r\n/** è¡é«å°ºå¯¸å®ä¹ */\r\nexport const SIZE_TYPE = {\r\n    sm: {\r\n        row: 29,      // è¡é«\r\n        header: 34,   // è¡¨å¤´è¡é«\r\n        pager:  40    // åé¡µæ¡é«åº¦\r\n    },\r\n    md: {\r\n        row: 36,\r\n        header: 40,\r\n        pager:  44\r\n    },\r\n    lg: {\r\n        row: 46,\r\n        header: 40,\r\n        pager:  44\r\n    },\r\n    xl: {\r\n        row: 60,\r\n        header: 40,\r\n        pager:  44\r\n    },\r\n};\r\n\r\n/** åè®¸ç¼è¾æ¶ï¼éç®æ¾ç¤ºå¯ç¼è¾ååæ ¼çæ ·å¼ */\r\nexport const ALLOW_EDIT_CELL_HIGHLIGHT_CLS = {\r\n    datagrid: 'highlight-allowedit-cell',\r\n    textarea: 'cell-textarea',\r\n    textbox: 'cell-textbox',\r\n    checkbox: 'cell-checkbox',\r\n    datepicker: 'cell-datepicker',\r\n    'input-group': 'cell-input-group',\r\n    select: 'cell-combolist',\r\n    lookup: 'cell-lookup',\r\n    numberbox: 'cell-numberbox',\r\n    combolist: 'cell-combolist',\r\n    'combo-lookup': 'cell-combolist',\r\n    switch: 'cell-switch',\r\n    timepicker: 'cell-timepicker',\r\n    'language-textbox': 'cell-language-textbox',\r\n    'enum-editor': 'cell-enum-editor'\r\n};\r\n\r\n\r\nexport const TR_PREFIX = 'row_';\r\nexport const TR_ID_PREFIX = '#row_';\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-12 07:47:12\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-19 20:30:44\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { ColumnGroup, DataColumn, FilterCondition} from './../types';\r\nimport { EntityFilter } from '@farris/ui-common/types';\r\n\r\nexport interface RowDataChanges {[id: string]: any; }\r\n\r\nexport interface FarrisDatagridState {\r\n    [key: string]: any;\r\n    width?: number;\r\n    height?: number;\r\n    rowHeight?: number;\r\n    idField?: string;\r\n    data?: any;\r\n    /** å½åé¡µæ°æ® */\r\n    currentPageData?: any;\r\n    originalData?: any;\r\n    showHeader?: boolean;\r\n    headerHeight?: number;\r\n    pageIndex?: number;\r\n    pageSize?: number;\r\n    pagerHeight?: number;\r\n    pagination?: boolean;\r\n    columns: Array<DataColumn> | Array<DataColumn>[];\r\n    flatColumns?: Array<DataColumn>;\r\n    fitColumns: boolean;\r\n    autoFitColumns?: boolean;\r\n    showLineNumber?: boolean;\r\n    showCheckbox?: boolean;\r\n    checkboxColumnWidth: number;\r\n    multiSelect?: boolean;\r\n    /** å½å¯ç¨å¤éæ¶ï¼ç¹å»è¡éä¸­ï¼åªåè®¸ä¸åªæä¸è¡è¢«éä¸­ã */\r\n    onlySelectSelf: boolean;\r\n    selectOnCheck: boolean;\r\n    checkOnSelect: boolean;\r\n    selections?: SelectedRow[];\r\n    checkedRows?: SelectedRow[];\r\n    currentRow?: SelectedRow;\r\n    currentCell?: CellInfo;\r\n    columnsGroup: ColumnGroup;\r\n    virtualized?: boolean;\r\n    showFooter?: boolean;\r\n    /** æ¯å¦å¯ç¨å¼æ­¥èæå è½½æ°æ®: false - å®¢æ·ç«¯åå­ä¸­åæ°ï¼true - è¿ç«¯æå¡å¨å è½½æ°æ®, é»è®¤å¼ä¸º false */\r\n    virtualizedAsyncLoad?: boolean;\r\n    virtual?: VirtualizedState;\r\n    sortName?: string;\r\n    sortOrder?: string;\r\n    multiSort?: boolean;\r\n    remoteSort?: boolean;\r\n    /** æå¡å¨ç«¯è¿æ»¤ */\r\n    remoteFilter?: boolean;\r\n    /** è¿æ»¤æ¡ä»¶ */\r\n    conditions?: EntityFilter | FilterCondition;\r\n    changes: RowDataChanges;\r\n    // å¯ç¨è¡åç»\r\n    groupRows?: boolean;\r\n    // åç»å­æ®µ\r\n    groupField?: string;\r\n    // åç»åè®¡è¡\r\n    groupFooter?: boolean;\r\n    /** æ¾ç¤ºåç»å */\r\n    showGroupColumn?: boolean;\r\n    mergeCell?: boolean;\r\n    enableClientSortForMergeCell?: boolean;\r\n    /** å­å¨ç»ä»¶åå§æ¶çç¸å³å±æ§è®¾ç½® */\r\n    initialOptions?: any;\r\n}\r\n\r\nexport interface VirtualizedState {\r\n    /** èæå è½½ä¸ä¸æ¾ç¤ºåé¡µæ¡æ¶ï¼è®°å½å è½½æ°è®°å½æ¶çç´¢å¼å¼ */\r\n    rowIndex: number;\r\n    /** æ°æ®æ¾ç¤ºçç´¢å¼å¼ */\r\n    startIndex?: number;\r\n    scrollTop?: number;\r\n    virtualRows?: any;\r\n    topHideHeight?: number;\r\n    bottomHideHeight?: number;\r\n    /** é¡µèæ°æ® */\r\n    footer?: any[];\r\n    /** æ¯å¦ç±æ»å¨æ¡è§¦å */\r\n    isScrollChange?: boolean;\r\n}\r\n\r\nexport interface SelectedRow {\r\n    index: number;\r\n    id: any;\r\n    data: any;\r\n    /** ä¸­é´ä½ç½®è¡å¼ç¨ */\r\n    dr?: any;\r\n    /** å·¦ä¾§ä½ç½®è¡å¼ç¨ */\r\n    drl?: any;\r\n    /** å³ä¾§ä½ç½®è¡å¼ç¨ */\r\n    drr?: any;\r\n    editors?: any[];\r\n}\r\n\r\nexport const initDataGridState: FarrisDatagridState = {\r\n    idField: 'id',\r\n    showLineNumber: false,\r\n    selections: [],\r\n    checkedRows: [],\r\n    currentRow: null,\r\n    columnsGroup: null,\r\n    columns: [],\r\n    fitColumns: false,\r\n    onlySelectSelf: true,\r\n    selectOnCheck: true,\r\n    checkOnSelect: true,\r\n    pageIndex: 1,\r\n    pageSize: 20,\r\n    pagerHeight: 40,\r\n    checkboxColumnWidth: 36,\r\n    pagination: false,\r\n    virtual: {\r\n        rowIndex: 0,\r\n        scrollTop: 0,\r\n        topHideHeight: 0,\r\n        bottomHideHeight: 0,\r\n        isScrollChange: false\r\n    },\r\n    sortName: undefined,\r\n    sortOrder: undefined,\r\n    multiSort: false,\r\n    remoteSort: true,\r\n    changes: null,\r\n    showGroupColumn: false\r\n};\r\n\r\nexport interface CellInfo {\r\n    isEditing?: boolean;\r\n    rowData?: any;\r\n    rowId?: any;\r\n    rowIndex?: number;\r\n    field?: string;\r\n    cellElement?: any;\r\n    cellRef?: any;\r\n    editor?: any;\r\n    column?: any;\r\n    cellEditorRef?: any;   //  GridCellEditorDirective\r\n    lastRow?: boolean;\r\n}\r\n\r\nexport interface DataResult {\r\n    footer?: any[];\r\n    items: any[];\r\n    total?: number;\r\n    pageIndex?: number;\r\n    pageSize?: number;\r\n}\r\n/** è¡ç´¢å¼ */\r\nexport const ROW_INDEX_FIELD = '__row_index__';\r\n/** æ¯å¦ä¸ºåç»è¡ */\r\nexport const IS_GROUP_ROW_FIELD = '__group__';\r\n/** å¼ç¨çåç»è¡å±æ§ */\r\nexport const GROUP_ROW_FIELD = '__group_parent_id__';\r\n/** æ¯å¦ä¸ºåç»åè®¡è¡ */\r\nexport const IS_GROUP_FOOTER_ROW_FIELD = '__group_footer__';\r\nexport const GROUP_VISIBLE_FIELD = '__group_visible__';\r\nexport const GROUP_LEVEL_FIELD = '__group_level__';\r\n\r\n\r\nexport interface DatagridGroupRow {\r\n    /** æ è¯æ­¤æ°æ®è¡ä¸ºåç»è¡ */\r\n    [IS_GROUP_ROW_FIELD]: boolean;\r\n    /** åç»ç­çº§ */\r\n    level: number;\r\n    /** æå¨è¡æ°æ® */\r\n    data: any;\r\n    /** åç»å­æ®µå¼ */\r\n    value: any;\r\n    /** åç»è¡æ¯å¦å¯è§ */\r\n    [GROUP_VISIBLE_FIELD]: boolean;\r\n    /** æ¯å¦å±å¼åç»è¡ */\r\n    expanded: boolean;\r\n    /** åç»å­æ®µ */\r\n    field: string;\r\n    colspan: number;\r\n    /** åç»æ»è®°å½æ° */\r\n    total: number;\r\n    /** åç»æ°æ®è¡ */\r\n    rows: any;\r\n    /** ç¶çº§åç»è¡ */\r\n    [GROUP_ROW_FIELD]: any;\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-19 20:31:27\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nexport class Utils {\r\n\r\n    static uuid() {\r\n        function S4() {\r\n            // tslint:disable-next-line: no-bitwise\r\n            return (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return (S4() + S4() + '-' + S4() + '-' + S4() + '-' + S4() + '-' + S4() + S4() + S4());\r\n    }\r\n\r\n\r\n    /**\r\n     * è·åå¯¹è±¡ä¸­æå®å­æ®µçå¼ã field: å¯ä»¥ä¸ºå¸¦æå±çº§ç»æçè·¯å¾ï¼å¦ï¼ user.firstName | name ç­\r\n     */\r\n    static getValue(field: string, data: any, safe = false) {\r\n        if (!data) {\r\n            return  '';\r\n        }\r\n        let resultVal = '';\r\n        if (field.indexOf('.') === -1 || data.hasOwnProperty(field)) {\r\n            resultVal = data[field];\r\n        } else {\r\n            resultVal = field.split('.').reduce((obj, key) => {\r\n                if (obj) {\r\n                    return obj[key];\r\n                } else {\r\n                    return null;\r\n                }\r\n            }, data);\r\n        }\r\n\r\n        if (safe) {\r\n            return this.escapeValue(resultVal);\r\n        }\r\n        return resultVal;\r\n    }\r\n\r\n    static setValue( field: string, val: any, obj: { [key: string]: any }, nest = true) {\r\n        if (field) {\r\n            if (field.indexOf('.') > -1 && nest) {\r\n                let lastObj = null;\r\n                const _fields = field.split('.');\r\n                _fields.reduce( (c, p) => {\r\n                    lastObj = c;\r\n                    return c[p];\r\n                }, obj);\r\n\r\n                if (lastObj) {\r\n                    lastObj[_fields.pop()] = val;\r\n                }\r\n            } else {\r\n                obj[field] = val;\r\n            }\r\n        }\r\n    }\r\n\r\n    /** è·åå¤è¯­å¼ */\r\n    static getMultilingualValue(valObj, localeId) {\r\n        if (valObj && typeof valObj === 'object' && Object.keys(valObj).length > 0) {\r\n            localeId = localeId || 'zh-CHS';\r\n            const val = valObj[localeId];\r\n            if (val !== undefined) {\r\n                return val;\r\n            } else {\r\n                console.log(`can not find '${localeId}' in `, valObj);\r\n                return '';\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n\r\n    static escapeValue(val: any) {\r\n        if (val === null || val === undefined || val === '') {\r\n            return '';\r\n        }\r\n\r\n        const escapeHTML = (unsafe_str) => {\r\n            return unsafe_str\r\n                .replace(/&/g, '&amp;')\r\n                .replace(/</g, '&lt;')\r\n                .replace(/>/g, '&gt;')\r\n                .replace(/\\\"/g, '&quot;')\r\n                .replace(/\\'/g, '&#39;')\r\n                .replace(/\\//g, '&#x2F;');\r\n                // .replace('src','drc');\r\n        };\r\n\r\n        if (typeof val === 'string') {\r\n            return escapeHTML(val);\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    static eventPath(evt: any) {\r\n        const path = (evt.composedPath && evt.composedPath()) || evt.path;\r\n        const target = evt.target;\r\n\r\n        if (path != null) {\r\n            return (path.indexOf(window) < 0) ? path.concat(window) : path;\r\n        }\r\n\r\n        if (target === window) {\r\n            return [window];\r\n        }\r\n\r\n        const getParents = (node, memo = undefined) => {\r\n            memo = memo || [];\r\n            const parentNode = node.parentNode;\r\n\r\n            if (!parentNode) {\r\n                return memo;\r\n            } else {\r\n                return getParents(parentNode, memo.concat(parentNode));\r\n            }\r\n        };\r\n\r\n        return [target].concat(getParents(target), window);\r\n    }\r\n\r\n    static hasDialogOpen() {\r\n        // return document.body.classList.value.indexOf('modal-open') > -1;\r\n        // å¼å®¹IE 11\r\n        return document.body.className.indexOf('modal-open') > -1;\r\n    }\r\n\r\n    static on(el, evt, fn, opts: any = {}) {\r\n        const delegatorFn = e => e.target.matches(opts.target) && fn.call(e.target, e);\r\n        el.addEventListener(evt, opts.target ? delegatorFn : fn, opts.options || false);\r\n        return () => {\r\n            el.removeEventListener(evt, delegatorFn, opts);\r\n        };\r\n    }\r\n\r\n    static off(el, evt, fn= () => {}, opts: any = {}) {\r\n        el.removeEventListener(evt, fn, opts);\r\n    }\r\n    /** è·åå­ç¬¦é¿åº¦ï¼ä¸­ææ±å­å 2ä¸ªå­ç¬¦ */\r\n    static getBLen(str) {\r\n        if (str == null) {\r\n            return 0;\r\n        }\r\n        if (typeof str !== 'string') {\r\n          str += '';\r\n        }\r\n        return str.replace(/[^\\x00-\\xff]/g, '01').length;\r\n    }\r\n\r\n    // static difference(first: any[], second: any[]): any[] {\r\n    //     return first.filter(item => !second.includes(item));\r\n    // }\r\n\r\n    // static getDiffItems(arr1, arr2) {\r\n    //     const diff1 = Utils.difference(arr1, arr2);\r\n    //     const diff2 = Utils.difference(arr2, arr1);\r\n\r\n    //     return diff1.concat(diff2);\r\n    // }\r\n\r\n    static getWhenEmptyText(col: any, localeId) {\r\n\r\n        const EMPTY_INPUT_TEXT = {\r\n            'zh-CHS': 'è¯·è¾å¥',\r\n            'zh-CHT': 'è«è¼¸å¥',\r\n            en: 'Please input'\r\n        };\r\n\r\n        const EMPTY_SELECT_TEXT = {\r\n            'zh-CHS': 'è¯·éæ©',\r\n            'zh-CHT': 'è«é¸æ',\r\n            en: 'Please select'\r\n        };\r\n\r\n\r\n        if (col.editor) {\r\n            switch (col.editor.type) {\r\n                case 'datepicker':\r\n                case 'select':\r\n                case 'lookup':\r\n                case 'combolist':\r\n                case 'combo-lookup':\r\n                    return  EMPTY_SELECT_TEXT[localeId];\r\n                default:\r\n                    return EMPTY_INPUT_TEXT[localeId];\r\n            }\r\n        }\r\n\r\n        // æ§å¶é¢æ¿å\r\n        if (col.field === '_datagrid-setting-control_') {\r\n            return '';\r\n        }\r\n\r\n        return EMPTY_INPUT_TEXT[localeId];\r\n    }\r\n}\r\n\r\n","import { DataColumn, ColumnFilterType } from './../types/data-column';\r\nimport { bindCallback, of } from 'rxjs';\r\n\r\nexport class DatagridColumnsHelper {\r\n\r\n    static gridInstance = null;\r\n\r\n    /** è·åæ»åæ° */\r\n    private static getColumnTotal(firstCols: any[]) {\r\n        let total = 0;\r\n        firstCols.forEach(n => {\r\n            total += (n.colspan || 1);\r\n        });\r\n        return total;\r\n    }\r\n\r\n    // æ¥æ¾æªèµå¼é¡¹çç´¢å¼\r\n    private static findUndefinedItem(arr) {\r\n        for (let i = 0; i < arr.length; i++) {\r\n            if (arr[i] == undefined) {\r\n                return i;\r\n            }\r\n        }\r\n        return -1;\r\n    }\r\n\r\n    private static getColumnFields(columns) {\r\n        const aa = [];\r\n        // æ ¹æ®ç¬¬ä¸è¡è®¡ç®æ»åæ°\r\n        const colTotal = DatagridColumnsHelper.getColumnTotal(columns[0]);\r\n        // åå»ºç©ºæ°ç»\r\n        for (let i = 0; i < columns.length; i++) {\r\n            aa[i] = new Array(colTotal);\r\n        }\r\n        for (let i = 0; i < columns.length; i++) {\r\n            columns[i].forEach(col => {\r\n                let k = DatagridColumnsHelper.findUndefinedItem(aa[i]);\r\n                if (k >= 0) {\r\n                    const field = col.field || col.id || '';\r\n                    for (let c = 0; c < (col.colspan || 1); c++) {\r\n                        for (let r = 0; r < (col.rowspan || 1); r++) {\r\n                            aa[i + r][k] = field;\r\n                        }\r\n                        k++;\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return aa;\r\n    }\r\n\r\n    static columnIsVisible(col: any, ins: any) {\r\n        if (col.visible === undefined) {\r\n            col.visible = true;\r\n        }\r\n\r\n        const t = typeof col.visible;\r\n        if (t === 'boolean') {\r\n            return col.visible;\r\n        } else if ( t === 'function') {\r\n            return col.visible({instance: ins, column: col});\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    static getFields(columns) {\r\n        // ç§»é¤éèçå\r\n        const _cols = columns.map(cols => {\r\n            cols = cols.filter(col => DatagridColumnsHelper.columnIsVisible(col, DatagridColumnsHelper.gridInstance));\r\n            return cols;\r\n        });\r\n\r\n        const fields =  DatagridColumnsHelper.getColumnFields(_cols);\r\n        return fields.length ? fields[fields.length - 1] : fields;\r\n    }\r\n\r\n    static getFilterEnumOptions(column: DataColumn) {\r\n        let enumSetting = null;\r\n        if (column.filter.type === ColumnFilterType.enum) {\r\n            const fmt = column.formatter as any;\r\n            if (fmt) {\r\n                enumSetting = fmt.options;\r\n            } else {\r\n                if (column.filter.options) {\r\n                    enumSetting = column.filter.options;\r\n                }\r\n            }\r\n        }\r\n\r\n        return enumSetting;\r\n    }\r\n\r\n    static getEnumText(enumOpts: any, value1: any) {\r\n        if (!enumOpts) {\r\n            return  '';\r\n        }\r\n        const { valueField, textField, data } = enumOpts;\r\n        let str = '';\r\n        if (value1) {\r\n            str += ` ${value1.map(v => {\r\n                const enumItem = data.find(d => d[valueField] === v);\r\n                return enumItem[textField];\r\n            }).join(',')}`;\r\n        }\r\n        return str;\r\n    }\r\n\r\n    static columnVisibleAsObservable(col: DataColumn) {\r\n        if (typeof col.visible === 'function') {\r\n            const visibleAsObservable = bindCallback(col.visible);\r\n            return visibleAsObservable();\r\n        }\r\n        return of(col.visible);\r\n    }\r\n\r\n    static getParentColumns(col: DataColumn, allCols) {\r\n        const arr = [];\r\n        const _getParents = (c) => {\r\n            if (c && c.parentId) {\r\n                const parentCol = allCols.find(n => n.id === c.parentId);\r\n                // arr.splice(0, 0, parentCol);\r\n                arr.push(parentCol);\r\n                _getParents(parentCol);\r\n            }\r\n        };\r\n        _getParents(col);\r\n        return arr;\r\n    }\r\n\r\n    static getChildColumns(col: DataColumn, allCols) {\r\n        const arr = [];\r\n        const _getChilds = (c) => {\r\n            if (c && c.parentId) {\r\n                const childs = allCols.filter(n => n.parentId === c.id);\r\n                arr.splice(0, 0, ...childs);\r\n                childs.forEach(child => {\r\n                    _getChilds(child);\r\n                });\r\n            }\r\n        };\r\n        _getChilds(col);\r\n        return arr;\r\n    }\r\n\r\n    // æ£æ¥å¤è¡¨å¤´æ¶ï¼è®¾è®¡å¨ä¸­å°åè®¾ä¸ºéè\r\n    static checkGroupHeaderColumnVisible(allCols) {\r\n        const hiddenFields = allCols.filter(n => n.visible === false).map(n => n.field);\r\n        hiddenFields.forEach(field => {\r\n            const _col = allCols.find(col => col.field === field || col.id === field);\r\n            if (_col) {\r\n                const parents = DatagridColumnsHelper.getParentColumns(_col, allCols);\r\n\r\n                parents.forEach(p => {\r\n                    const _childs = allCols.filter(n => n.parentId === p.id && (n.visible || n.visible === undefined) );\r\n                    p.colspan = _childs.reduce(( r, c ) => {\r\n                        r = r + (c.colspan || 1);\r\n                        return r;\r\n                    }, 0);\r\n                    p.visible = !!p.colspan;\r\n                });\r\n            }\r\n        });\r\n    }\r\n\r\n    // å¤è¡¨å¤´ä¸ä»æä¸åæ¾ç¤º\r\n    static onlyOneColumn() {\r\n\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-20 07:39:45\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n\r\nimport { Injectable, EventEmitter } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { BehaviorSubject, Observable, of, merge, Subject } from 'rxjs';\r\nimport { map, distinctUntilChanged, filter, switchMap, auditTime, debounceTime, debounce } from 'rxjs/operators';\r\nimport { DataColumn, ColumnGroup, CalculationType } from '../types';\r\nimport { FarrisDatagridState, initDataGridState, DataResult, CellInfo, VirtualizedState, SelectedRow,\r\n        RowDataChanges, ROW_INDEX_FIELD, IS_GROUP_ROW_FIELD, GROUP_ROW_FIELD, IS_GROUP_FOOTER_ROW_FIELD, GROUP_VISIBLE_FIELD, GROUP_LEVEL_FIELD } from './state';\r\nimport { VirtualizedLoaderService } from './virtualized-loader.service';\r\nimport { DatagridRow } from '../types/datagrid-row';\r\nimport { cloneDeep, groupBy, sumBy, maxBy, minBy, meanBy, isPlainObject, flatten } from 'lodash-es';\r\nimport { Utils } from '../utils/utils';\r\nimport { DatagridColumnsHelper } from './datagrid-columns.helper';\r\nimport { BigNumber } from 'bignumber.js';\r\n@Injectable()\r\nexport class DatagridFacadeService {\r\n\r\n    localId = 'zh-CHS';\r\n\r\n    protected _state: FarrisDatagridState;\r\n    // public virtualizedService: VirtualizedLoaderService;\r\n\r\n    store = new BehaviorSubject<FarrisDatagridState>(null);\r\n\r\n    virtualRowSubject = new BehaviorSubject<any>(null);\r\n    gridSizeSubject = new Subject<any>();\r\n    errorSubject = new Subject();\r\n    private selectRowSubject = new Subject<any>();\r\n    private unSelectRowSubject = new Subject<any>();\r\n    private columnResizeSubject = new Subject<any>();\r\n    private clearSelectionSubject = new Subject();\r\n    private checkRowSubject = new Subject<any>();\r\n    private unCheckRowSubject = new Subject<any>();\r\n    private clearCheckedsSubject = new Subject<any>();\r\n    private clearAllSubject = new Subject<any>();\r\n    private checkAllSubject = new Subject();\r\n    private unCheckAllSubject =  new Subject();\r\n    private selectAllSubject = new Subject();\r\n    private selectCellSubject = new Subject();\r\n\r\n    error$ = this.errorSubject.asObservable();\r\n    selectRow$ = this.selectRowSubject.asObservable();\r\n    unSelectRow$ =  this.unSelectRowSubject.asObservable();\r\n    columnResize$ = this.columnResizeSubject.asObservable();\r\n    clearSelections$ = this.clearSelectionSubject.asObservable();\r\n    checkRow$ = this.checkRowSubject.asObservable();\r\n    unCheckRow$ = this.unCheckRowSubject.asObservable();\r\n    clearCheckeds$ = this.clearCheckedsSubject.asObservable();\r\n    clearAll$ = this.clearAllSubject.asObservable();\r\n    checkAll$ = this.checkAllSubject.asObservable();\r\n    unCheckAll$ = this.unCheckAllSubject.asObservable();\r\n    selectAll$ = this.selectAllSubject.asObservable();\r\n    currentCell$ = this.selectCellSubject.asObservable();\r\n    editCell$ = new EventEmitter();\r\n    clientSort$ = new EventEmitter();\r\n    rowAppend$ = new EventEmitter();\r\n    rowUpdate$ = new EventEmitter();\r\n    rowDelete$ = new EventEmitter();\r\n\r\n    readonly state$ = this.store.asObservable().pipe(\r\n        filter( (state: any) => state)\r\n    );\r\n\r\n    readonly columnGroup$ = this.gridSizeSubject.asObservable().pipe(\r\n        filter( (state: any) => state),\r\n        map((state: FarrisDatagridState) => state.columnsGroup),\r\n        switchMap((colgroup: any) => {\r\n            return of( colgroup);\r\n        }),\r\n        distinctUntilChanged()\r\n    );\r\n\r\n    gridSize$ = this.gridSizeSubject.asObservable().pipe(\r\n        filter( (state: any) => state),\r\n        map((state: FarrisDatagridState) => {\r\n            const { headerHeight, pagerHeight, width, columnsGroup, height, rowHeight } = {...state};\r\n            return { headerHeight, pagerHeight, width, columnsGroup, height, rowHeight };\r\n        }),\r\n        distinctUntilChanged()\r\n    );\r\n\r\n    readonly data$ = this.virtualRowSubject.pipe(\r\n        filter(vs => vs),\r\n        switchMap((vs: VirtualizedState) => {\r\n            return of({\r\n                index: vs.startIndex || 0,\r\n                rows: vs.virtualRows || [],\r\n                top: vs.topHideHeight,\r\n                bottom: vs.bottomHideHeight,\r\n                scrolling: vs.isScrollChange\r\n            });\r\n        }),\r\n        distinctUntilChanged()\r\n    );\r\n\r\n    difference = (first: any[], second: any[]) => first.filter(item => !second.includes(item));\r\n    differenceBy = (a, b, fn) => {\r\n        const s = new Set(b.map(fn));\r\n        return a.map(fn).filter(el => !s.has(el));\r\n    }\r\n\r\n    constructor(private http: HttpClient) {\r\n        this._state =  cloneDeep(initDataGridState);\r\n    }\r\n\r\n    updateVirthualRows(scrolltop: number, isScrollChange = false) {\r\n        // console.time('è®¡ç®èæå è½½');\r\n        const virtual = this.getVirthualRows(scrolltop);\r\n        virtual.isScrollChange = isScrollChange;\r\n        // console.timeEnd('è®¡ç®èæå è½½');\r\n        this.updateState({virtual}, false);\r\n        this.virtualRowSubject.next(virtual);\r\n    }\r\n\r\n    getVirthualRows(scrolltop): VirtualizedState {\r\n        if (scrolltop === undefined) {\r\n            scrolltop = 0;\r\n        }\r\n\r\n        const data =  this._state.data || [];\r\n        const virtual = {rowIndex: 0, virtualRows: data, topHideHeight: 0, bottomHideHeight: 0 };\r\n\r\n        if (data.length === 0 || (this._state.autoHeight && !this._state.groupRows)) {\r\n            virtual.virtualRows = data;\r\n            return virtual;\r\n        }\r\n\r\n        if (this._state.flatColumns && this._state.flatColumns.length) {\r\n            // data = this._state.data;\r\n\r\n            // if (!this._state.groupRows) {\r\n            //     if (this._state.virtual && this._state.virtualized) {\r\n            //         this.virtualizedService.state = this._state;\r\n            //         const rows = this.virtualizedService.getRows(scrolltop);\r\n            //         virtual = { ...this._state.virtual, ...rows };\r\n            //     } else {\r\n            //         virtual.virtualRows = data;\r\n            //     }\r\n            // } else {\r\n            //     // è¡åç»æ°æ®å¤ç\r\n            //     const groupRows = this.groupRows2(cloneDeep(data));\r\n            //     virtual.virtualRows = groupRows;\r\n            // }\r\n            if (this._state.groupRows) {\r\n                // è¡åç»æ°æ®å¤ç\r\n                const groupRows = this.groupRows2(cloneDeep(data));\r\n                virtual.virtualRows = groupRows;\r\n            }\r\n        }\r\n\r\n        if (this._state.mergeCell && this._state.enableClientSortForMergeCell) {\r\n            virtual.virtualRows = this.sort(virtual.virtualRows);\r\n        }\r\n\r\n        return virtual;\r\n    }\r\n\r\n    // getDeltaTopHeight(scrolTop, firstIndex) {\r\n    //     const {rowsLength: viewRowsCount, top, bottom} = this.virtualizedService.getRowsCount(scrolTop, this._state.pageSize, firstIndex);\r\n    //     const gridContainerRowsCount = this.virtualizedService.displayRowsCount();\r\n    //     let deltaTopHeight = 0;\r\n    //     if (viewRowsCount < gridContainerRowsCount) {\r\n    //         deltaTopHeight = (gridContainerRowsCount - viewRowsCount) * this._state.rowHeight - this._state.headerHeight;\r\n    //     }\r\n\r\n    //     return deltaTopHeight;\r\n    // }\r\n\r\n    getData(original = false) {\r\n        if (original) {\r\n            return this._state.originalData || [];\r\n        }\r\n        return this._state.data || [];\r\n    }\r\n\r\n    getState() {\r\n        return this._state;\r\n    }\r\n\r\n    getVirtualState() {\r\n        return this._state.virtual;\r\n    }\r\n\r\n    getPageInfo() {\r\n        const { pageIndex, pageSize } = {...this._state};\r\n        return { pageIndex, pageSize };\r\n\r\n    }\r\n\r\n    initState(state: Partial<FarrisDatagridState>) {\r\n        this.updateState(state, false);\r\n        this._state.originalData = cloneDeep(this._state.data);\r\n        this.initColumns();\r\n\r\n        this.gridSizeSubject.next(this._state);\r\n        this.updateVirthualRows(0);\r\n    }\r\n\r\n\r\n    /** å è½½æ°æ®\r\n     * @param data: æ°æ®åè¡¨\r\n     * @param updateOriginalData æ¯å¦æ´æ°åå§æ°æ®, é»è®¤ä¸º true\r\n     */\r\n    loadData(data: any, updateOriginalData = true, sortable = false) {\r\n        data = data || [];\r\n        this.updateState({ data }, false);\r\n\r\n        if (updateOriginalData) {\r\n            this._state.originalData = cloneDeep(this._state.data);\r\n        }\r\n        if (sortable && this._state.sortName) {\r\n            const sortedData = this.sort(this._state.data);\r\n            this.updateState({ data: sortedData }, false);\r\n        } else {\r\n            // this.updateState({ data: this._state.originalData }, false);\r\n        }\r\n\r\n        this.updateVirthualRows(this._state.virtual.scrollTop || 0);\r\n    }\r\n\r\n    /** å¤åæå®è¡çæ°æ® */\r\n    resetRow(rowId: any) {\r\n        const origData = this._state.originalData;\r\n        if (origData) {\r\n            const origRowData = origData.find(r => this.primaryId(r) === rowId);\r\n            this.getCurrentRow().data = cloneDeep(origRowData);\r\n            this.updateRow(rowId, origRowData);\r\n        }\r\n    }\r\n\r\n    // loadDataForVirtual(data: any) {\r\n    //     this.updateState({ data }, false);\r\n    //     // this.virtualizedService.state = this._state;\r\n    //     const virtual = { ...this._state.virtual, ...this.virtualizedService.reload() };\r\n    //     // console.log(virtual);\r\n    //     this.virtualRowSubject.next(virtual);\r\n    //     this.updateState({virtual});\r\n    // }\r\n\r\n    fetchData(url: string): Observable<DataResult> {\r\n        return this.http.get(url).pipe(\r\n            map( r => r as DataResult )\r\n        );\r\n    }\r\n\r\n    setTotal(total: number) {\r\n        this.updateState( {total}, false );\r\n    }\r\n\r\n    updateProperty(property: string, value: any) {\r\n        this.updateState({ [property]: value }, false);\r\n    }\r\n\r\n    setPagination(pageIndex: number, pageSize: number, total: number) {\r\n        this.updateState( { pageIndex, pageSize, total }, false);\r\n    }\r\n\r\n    setScrollTop(scrollTop: number) {\r\n        const virtual = { ...this._state.virtual, scrollTop};\r\n        this.updateState({virtual}, false);\r\n    }\r\n\r\n    isMultiSelect() {\r\n        return this._state.multiSelect;\r\n    }\r\n\r\n    private _isRowSelected(id: any) {\r\n        if (!id || !this._state.currentRow) {\r\n            return false;\r\n        } else {\r\n            return this._state.currentRow.id.toString() === id.toString();\r\n        }\r\n    }\r\n\r\n    isRowSelected(id: any, selections = null) {\r\n        const flag = this._isRowSelected(id);\r\n        if (!this.isMultiSelect() || this._state.onlySelectSelf) {\r\n           return flag;\r\n        } else {\r\n            if (!selections) {\r\n                selections = this._state.selections;\r\n            }\r\n\r\n            if (this._canCancelSelectWhenMulti()) {\r\n                return flag;\r\n            }\r\n\r\n            if (!selections || selections.length === 0) {\r\n                return false;\r\n            } else {\r\n                return selections.findIndex(sr => sr.id == id) > -1;\r\n            }\r\n        }\r\n    }\r\n\r\n    isRowChecked(id: any, checkeds = null) {\r\n        if (!checkeds) {\r\n            checkeds = this.getCheckeds();\r\n        }\r\n        if (!id || !checkeds.length) {\r\n            return false;\r\n        }\r\n\r\n        return checkeds.findIndex(sr => sr.id.toString() === id.toString()) > -1;\r\n    }\r\n\r\n    isCheckAll() {\r\n        const allRows = this.getAllRowsForLive().map(r => this.primaryId(r));\r\n        const checkIds = this._state.checkedRows.map(r => r.id);\r\n        if (this.difference(allRows, checkIds).length) {\r\n            return false; // this._state.checkedRows.length === allRows.length;\r\n        } else {\r\n            return true;\r\n        }\r\n    }\r\n\r\n    getCurrentPageCheckeds() {\r\n        const allRows = this.getAllRowsForLive().map(r => this.primaryId(r));\r\n        return this._state.checkedRows.filter(n => allRows.indexOf(n.id) > -1);\r\n    }\r\n\r\n    getCurrentRow() {\r\n        return this._state.currentRow || undefined;\r\n    }\r\n\r\n    getSelections() {\r\n        // å¦ææ°æ®æºåäºï¼éè¦éæ°è®¡ç®\r\n        const data = this._state.data;\r\n        if (this._state.selections && this._state.selections.length) {\r\n            if (!data || !data.length) {\r\n                this._state.selections = [];\r\n            } else {\r\n                const temp: any[] = data.map(n => this.primaryId(n));\r\n                this._state.selections = this._state.selections.filter(n => {\r\n                    return temp.includes(n.id);\r\n                });\r\n            }\r\n        }\r\n        return this._state.selections || [];\r\n    }\r\n\r\n    private getCheckedRowsFromSource() {\r\n        return (this._state.checkedRows || []).map(n => {\r\n            const d = this.findRow(n.id);\r\n            if (d && d.data) {\r\n                n.data = d.data;\r\n            }\r\n            return n;\r\n        });\r\n    }\r\n\r\n    getCheckeds(fromDataSource = false) {\r\n        if (fromDataSource) {\r\n            this._state.checkedRows = this.getCheckedRowsFromSource();\r\n        }\r\n\r\n        return this._state.checkedRows || [];\r\n    }\r\n\r\n    updateCheckedData(rowid: any, rowData: { [key: string]: string }) {\r\n        const checkeds = this.getCheckeds();\r\n        if (checkeds.length) {\r\n            const item = checkeds.find(n => this.primaryId(n) == rowid);\r\n            if (item) {\r\n                Object.keys(rowData).forEach(k => {\r\n                    Utils.setValue(k, rowData[k], item.data);\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    setCheckedRows(ids: string[], checked = true) {\r\n        if (ids && ids.length) {\r\n            let checkeds = this._state.checkedRows || [];\r\n\r\n            ids.forEach(id => {\r\n                const row = this.findRow(id);\r\n                if (checked && row) {\r\n                    if ( !this.isRowChecked(id, checkeds)) {\r\n                        const srow = { id: this.primaryId(row.data), data: row.data, index: row.index };\r\n                        checkeds.push(srow);\r\n                    }\r\n                } else {\r\n                    if (!this._state.enableMorePageSelect || !checked) {\r\n                        checkeds = checkeds.filter(sr => sr.id !== id);\r\n                    }\r\n                }\r\n            });\r\n            this._state.checkedRows = checkeds;\r\n        } else {\r\n            this._clearCheckeds();\r\n        }\r\n    }\r\n\r\n    checkRecord(id: any, checked = true) {\r\n        if (id) {\r\n            const row = this.findRow(id);\r\n            if (row) {\r\n                const {index: rowIndex, data: rowData} = {...row};\r\n                if (checked) {\r\n                    this.checkRow(rowIndex, rowData);\r\n                } else {\r\n                    this.unCheckRow(rowIndex, rowData);\r\n                }\r\n            } else {\r\n                this.errorSubject.next(`æªæ¾å°IDä¸º${id}çæ°æ®ã`);\r\n            }\r\n        } else {\r\n            this.errorSubject.next(`åæ°id ä¸è½ä¸ºç©ºã`);\r\n        }\r\n    }\r\n\r\n    checkRow(rowIndex: number, rowData: any) {\r\n        if (!this._state.multiSelect) {\r\n            this._clearCheckeds();\r\n        }\r\n\r\n        const id = this.primaryId(rowData);\r\n        const checkeds = this._state.checkedRows || [];\r\n        if (id && !this.isRowChecked(id, checkeds)) {\r\n            const srow = { id, data: rowData, index: rowIndex };\r\n            checkeds.push(srow);\r\n            this._state.checkedRows = checkeds;\r\n\r\n            if (this._state.selectOnCheck) {\r\n                this.selectRow(rowIndex, rowData);\r\n            }\r\n\r\n            this.checkRowSubject.next(srow);\r\n        }\r\n    }\r\n\r\n    unCheckRow(rowIndex: number, rowData: any) {\r\n        const id = this.primaryId(rowData);\r\n        let checkeds = this._state.checkedRows || [];\r\n        if (this.isRowChecked(id, checkeds)) {\r\n            const srow = { id, data: rowData, index: rowIndex };\r\n            checkeds = checkeds.filter(sr => '' + sr.id !== '' + id);\r\n            this._state.checkedRows = checkeds;\r\n\r\n            if (this._state.selectOnCheck) {\r\n                this.unSelectRow(rowIndex, rowData);\r\n            }\r\n\r\n            this.unCheckRowSubject.next(srow);\r\n        }\r\n    }\r\n\r\n    setCurrentPageData(data: any) {\r\n        this._state.currentPageData = data;\r\n    }\r\n\r\n    getCurrentPageData() {\r\n        return this._state.currentPageData || [];\r\n    }\r\n\r\n\r\n    /** è·åææå¯ä»¥æä½çè¡ */\r\n    private getAllRowsForLive() {\r\n        let allData = this._state.data || [];\r\n\r\n        if (this._state.pagination && !this._state.pagerOnServer) {\r\n            // è·åå½åé¡µæ°æ®\r\n            allData = this.getCurrentPageData();\r\n        }\r\n\r\n        // æé¤æç¦ç¨çè¡\r\n        if (this._state.disableRow) {\r\n            allData = allData.filter((n, i) => !this._state.disableRow(n, i));\r\n        }\r\n        return allData;\r\n    }\r\n\r\n    checkAll() {\r\n        this._state.checkedRows = this._state.checkedRows || [];\r\n        const allData = this.getAllRowsForLive();\r\n        const allCheckeds = allData.map( (r, i) => {\r\n            return {\r\n                id: this.primaryId(r),\r\n                index: i,\r\n                data: r\r\n            };\r\n        });\r\n\r\n        if (!this._state.checkedRows.length) {\r\n            this._state.checkedRows = allCheckeds;\r\n        } else {\r\n            const _checkeds = [];\r\n            allCheckeds.forEach(element => {\r\n                if (!this._state.checkedRows.find(n => n.id == element.id)) {\r\n                    _checkeds.push(element);\r\n                }\r\n            });\r\n\r\n            this._state.checkedRows = this._state.checkedRows.concat(_checkeds);\r\n        }\r\n\r\n\r\n        if (this._state.selectOnCheck && !this._state.onlySelectSelf) {\r\n            this._state.selections = [];\r\n            this._state.selections = allData.map( (r, i) => {\r\n                return {\r\n                    id: this.primaryId(r),\r\n                    index: i,\r\n                    data: r\r\n                };\r\n            });\r\n        }\r\n\r\n        this.checkAllSubject.next(this._state.checkedRows);\r\n    }\r\n\r\n    selectAll() {\r\n        this._state.selections = [];\r\n\r\n        const allData = this.getAllRowsForLive();\r\n\r\n        this._state.selections = allData.map( (r, i) => {\r\n            return {\r\n                id: this.primaryId(r),\r\n                index: i,\r\n                data: r\r\n            };\r\n        });\r\n\r\n        if (this._state.checkOnSelect) {\r\n            this._state.checkedRows = [];\r\n            this._state.checkedRows = allData.map( (r, i) => {\r\n                return {\r\n                    id: this.primaryId(r),\r\n                    index: i,\r\n                    data: r\r\n                };\r\n            });\r\n        }\r\n\r\n        this.selectAllSubject.next(this._state.selections);\r\n    }\r\n\r\n    findRow(id): {index: number, data: any} {\r\n        if (this._state.data && this._state.data.length) {\r\n            let index = -1;\r\n            const data = this._state.data.find( (n, i) => {\r\n                const r = this.primaryId(n) == id;\r\n                if (r) {\r\n                    index = i;\r\n                }\r\n                return r;\r\n            });\r\n            if (index === -1) {\r\n                return null;\r\n            }\r\n            return {index, data};\r\n        }\r\n        return null;\r\n    }\r\n\r\n    findRowIndex(id) {\r\n        if (this._state.data && this._state.data.length) {\r\n            return this._state.data.findIndex(n => this.primaryId(n) === id);\r\n        }\r\n        return -1;\r\n    }\r\n    /**\r\n     * è®¾ç½®éä¸­è¡ï¼ä¸è§¦ågrid éä¸­äºä»¶ï¼åæ¶éä¸­äºä»¶\r\n     */\r\n    setSelectRow(id: string, select = true) {\r\n        const row = this.findRow(id);\r\n        const {index: rowIndex, data: rowData} = {...row};\r\n        const srow = { id, data: rowData, index: rowIndex };\r\n\r\n        if (this.isMultiSelect()) {\r\n            if (select) {\r\n                this.selectRowForMulti(srow, false);\r\n            } else {\r\n                this.unSelectRowForMulti(srow, false);\r\n            }\r\n        }\r\n\r\n        const _sr = select ? srow : null;\r\n        this.updateState({ currentRow: _sr}, false);\r\n    }\r\n\r\n    selectRecord(id: any, select = true) {\r\n        if (id) {\r\n            const row = this.findRow(id);\r\n            if (row) {\r\n                const {index: rowIndex, data: rowData} = {...row};\r\n                if (select) {\r\n                    this.selectRow(rowIndex, rowData);\r\n                } else {\r\n                    this.unSelectRow(rowIndex, rowData);\r\n                }\r\n            } else {\r\n                this.errorSubject.next(`æªæ¾å°IDä¸º${id}çæ°æ®ã`);\r\n            }\r\n        } else {\r\n            this.errorSubject.next(`åæ°id ä¸è½ä¸ºç©ºã`);\r\n        }\r\n    }\r\n\r\n    selectRow(rowIndex: number, rowData: any) {\r\n        const isMultiSelect = this.isMultiSelect();\r\n        const id = this.primaryId(rowData);\r\n        const srow = { id, data: rowData, index: rowIndex };\r\n\r\n        if (!this.isRowSelected(id) || !this._state.currentRow) {\r\n            if (!isMultiSelect) {\r\n                this.updateState({ currentRow: srow }, false);\r\n                this.selectRowSubject.next(this._state.currentRow);\r\n\r\n                if (this._state.showCheckbox && this._state.checkOnSelect) {\r\n                    this._state.checkedRows = [ srow ];\r\n                    this.checkRowSubject.next(srow);\r\n                }\r\n            } else {\r\n                this.selectRowForMulti(srow);\r\n            }\r\n        }\r\n    }\r\n\r\n    private selectRowForMulti(srow: { id: any, data: any, index: any }, emit = true) {\r\n        if (this._state.onlySelectSelf) {\r\n            this._clearSelections();\r\n            this.updateState({ currentRow: srow, selections: [srow] }, false);\r\n        } else {\r\n            this._state.selections = this._state.selections || [];\r\n            this._state.selections = this._state.selections.filter(sr => sr.id !== srow.id);\r\n            this._state.selections.push(srow);\r\n        }\r\n        if (emit) {\r\n            this.selectRowSubject.next(srow);\r\n        }\r\n\r\n        if (this._state.checkOnSelect) {\r\n            this.checkRow(srow.index, srow.data);\r\n        }\r\n    }\r\n\r\n    private unSelectRowForMulti(srow: { id: any, data: any, index: any }, emit = true) {\r\n        this._state.selections = this._state.selections.filter(sr => sr.id !== srow.id);\r\n\r\n        if (this._canCancelSelectWhenMulti() || (this._state.currentRow && this._state.currentRow.id === srow.id)) {\r\n            this.updateState({ currentRow: null });\r\n        }\r\n\r\n        if (this._state.checkOnSelect) {\r\n            this.unCheckRow(srow.index, srow.data);\r\n        }\r\n\r\n        if (emit) {\r\n            this.unSelectRowSubject.next(srow);\r\n        }\r\n\r\n    }\r\n\r\n    unSelectRow(rowIndex: number, rowData: any) {\r\n        const id = this.primaryId(rowData);\r\n        const isMultiSelect = this.isMultiSelect();\r\n        const srow = {id, index: rowIndex, data: rowData};\r\n        if (!isMultiSelect) {\r\n            if (this._state.currentRow) {\r\n                this.updateState({ currentRow: null });\r\n                this.unSelectRowSubject.next(srow);\r\n                if (this._state.showCheckbox) {\r\n                    this.unCheckRow(srow.index, srow.data);\r\n                }\r\n            }\r\n        } else {\r\n            this.unSelectRowForMulti(srow);\r\n        }\r\n    }\r\n\r\n    private _canCancelSelectWhenMulti() {\r\n        return !this._state.keepSelect && this._state.onlySelectSelf;\r\n    }\r\n\r\n    private _clearSelections(excludeIds?: string[]) {\r\n        this._state.currentRow = null;\r\n\r\n        if (!excludeIds || !excludeIds.length ) {\r\n            this._state.selections = [];\r\n        } else {\r\n            this._state.selections = this._state.selections.filter(n => {\r\n                return excludeIds.findIndex(i => i == n.id) > -1;\r\n            });\r\n        }\r\n    }\r\n\r\n    private _clearCheckeds(rows = []) {\r\n        if (!rows.length) {\r\n            this._state.checkedRows = [];\r\n        } else {\r\n            this._state.checkedRows = this._state.checkedRows.filter(n => rows.findIndex(r => this.primaryId(r) === n.id) == -1);\r\n        }\r\n    }\r\n\r\n    clearSelections(excludeIds?: string[]) {\r\n        const rows = this._state.selections;\r\n        excludeIds = excludeIds || [];\r\n        this._clearSelections(excludeIds);\r\n        const unCheckRows = rows.filter(n => excludeIds.findIndex(i => i == n.id) == -1);\r\n        if (this._state.checkOnSelect || (!this._state.multiSelect && this._state.showCheckbox)) {\r\n            // this._state.checkedRows = [];\r\n            // this.clearCheckedsSubject.next(rows);\r\n            this._state.checkedRows = this._state.checkedRows.filter(n => {\r\n                return !rows.find(t1 => t1.id == n.id && excludeIds.findIndex(i => i == n.id) == -1);\r\n            });\r\n            this.clearCheckedsSubject.next(unCheckRows);\r\n        }\r\n        this.clearSelectionSubject.next(unCheckRows);\r\n    }\r\n\r\n    clearCheckeds(clearAll = true) {\r\n        const rows = this.getAllRowsForLive();\r\n        const _rows = clearAll ? [] : rows;\r\n        this._clearCheckeds(_rows);\r\n        if (this._state.selectOnCheck) {\r\n           this._clearSelections();\r\n        }\r\n        this.clearCheckedsSubject.next(rows);\r\n    }\r\n\r\n    clearAll() {\r\n        this._clearCheckeds();\r\n        this._clearSelections();\r\n        this.clearAllSubject.next();\r\n    }\r\n\r\n    setMultiSelect(flag: boolean) {\r\n        this._state.multiSelect = flag;\r\n    }\r\n\r\n    setCheckOnSelect(flag: boolean) {\r\n        this._state.checkOnSelect = flag;\r\n    }\r\n\r\n    setSelectOnCheck(flag: boolean) {\r\n        this._state.selectOnCheck = flag;\r\n    }\r\n\r\n    setCurrentCell(dr: DatagridRow, field: string, cellElement?: any, cellRef?: any ) {\r\n        const { rowIndex, rowData } = {...dr};\r\n        let currentCell = {...this._state.currentCell, rowIndex, rowData, field, rowId: this.primaryId(rowData), cellElement };\r\n\r\n        if (field !== this._state.ControlPanelFeild) {\r\n            if (cellRef) {\r\n                currentCell.cellRef = cellRef;\r\n            }\r\n\r\n            if (field) {\r\n                currentCell.column = this.getColumn(field);\r\n            }\r\n\r\n            const isLastRow = rowIndex === this.getData().length - 1;\r\n            currentCell['lastRow'] = isLastRow;\r\n        } else {\r\n            currentCell = null;\r\n        }\r\n        this.updateState({currentCell}, false);\r\n        this.selectRow(rowIndex, rowData);\r\n        if (this._state.currentRow) {\r\n            this._state.currentRow.dr = dr;\r\n        }\r\n        this.selectCellSubject.next(currentCell);\r\n    }\r\n\r\n    cancelSelectCell() {\r\n        if (this._state.currentCell) {\r\n            this.updateState({currentCell: null}, false);\r\n            this.selectCellSubject.next(null);\r\n        }\r\n    }\r\n\r\n    primaryId(rowData: any) {\r\n        return rowData[this._state.idField];\r\n    }\r\n\r\n    getCurrentCell() {\r\n        return this._state.currentCell;\r\n    }\r\n\r\n    editCell() {\r\n        if (this._state.currentCell) {\r\n            if (!this._state.currentCell.isEditing) {\r\n                const cei = { ...this._state.currentCell, isEditing: true };\r\n                this.updateState({ currentCell: cei }, false);\r\n                this.selectCellSubject.next(cei);\r\n                // this.editCell$.next(cei);\r\n            }\r\n        }\r\n    }\r\n\r\n    endEditCell() {\r\n        if (this._state.currentCell && this._state.currentCell.isEditing) {\r\n            const cei = { ...this._state.currentCell, isEditing: false };\r\n            this.updateState({ currentCell: cei }, false);\r\n            this.selectCellSubject.next(cei);\r\n            // this.editCell$.next(cei);\r\n        }\r\n    }\r\n\r\n    appendRow(rowData: any) {\r\n        if (rowData && this.primaryId(rowData)) {\r\n            const pid = this.primaryId(rowData);\r\n            if (this.findRowIndex(pid) === -1) {\r\n                this._state.data.push(rowData);\r\n                const newData = [...this._state.data];\r\n                this.updateState({data: newData}, false);\r\n                this._state.originalData = cloneDeep(this._state.data);\r\n                this.refresh();\r\n                this.rowAppend$.emit(rowData);\r\n            } else {\r\n                throw new Error(`ä¸»é®ID å·²å­å¨ï¼ID: ${pid}`);\r\n            }\r\n        } else {\r\n            throw new Error(`ä¸»é®æ è¯å­æ®µä¸è½ä¸ºç©ºã`);\r\n        }\r\n    }\r\n\r\n    updateRow(rowid: any, rowData: any) {\r\n        const row = this.findRow(rowid);\r\n        if (row && row.data) {\r\n            if (rowData) {\r\n                const keys = Object.keys(rowData);\r\n                keys.forEach(field => {\r\n                    Utils.setValue(field, rowData[field], row.data);\r\n                });\r\n                // æ´æ°å·²å¾éçæ°æ®\r\n                this.updateCheckedData(rowid, rowData);\r\n                this.rowUpdate$.emit(row);\r\n            }\r\n        } else {\r\n            console.log('Can not found rowid: ' + rowid);\r\n        }\r\n        // Object.assign(this.findRow(id), row);\r\n    }\r\n\r\n    deleteRow(rowid) {\r\n        const row = this.findRow(rowid);\r\n        if (row) {\r\n            const newData = this.removeRow(this._state.data, rowid);\r\n            this.updateState({data: newData}, false);\r\n            this._state.originalData = cloneDeep(this._state.data);\r\n            this.refresh();\r\n            this.rowDelete$.emit(rowid);\r\n            return row;\r\n        } else {\r\n            console.log('Can not found row by ID:' + rowid);\r\n        }\r\n    }\r\n    /**\r\n     * ä»æ°ç»ä¸­å é¤æå®çID\r\n     * @param data æ°ç»\r\n     * @param rowId è¦å é¤çID\r\n     */\r\n    removeRow(data, rowId) {\r\n        const newData = data.filter(n => {\r\n            const id = this.primaryId(n);\r\n            return rowId !== id;\r\n        });\r\n\r\n        return newData;\r\n    }\r\n\r\n    isCellSelected(cellInfo: CellInfo) {\r\n        const cc = this.getCurrentCell();\r\n        if (!cc) {\r\n            return false;\r\n        } else {\r\n            if ( this._state.currentRow.index === cc.rowIndex) {\r\n                return cc.field === cellInfo.field;\r\n            }\r\n            return false;\r\n        }\r\n    }\r\n\r\n    protected updateState(state: Partial<FarrisDatagridState>, emit = true) {\r\n        const newState = { ...this._state, ...state };\r\n        this._state = newState;\r\n        if (emit) {\r\n            this.store.next(this._state);\r\n        }\r\n    }\r\n\r\n    resize(newSize?: {width: number, height: number, [key: string]: any}) {\r\n        if (newSize) {\r\n            this.updateState(newSize, false);\r\n        }\r\n        this.resetColumnsSize();\r\n        if (!this._state.groupRows) {\r\n            this.updateVirthualRows(this._state.virtual.scrollTop);\r\n        }\r\n    }\r\n\r\n    fitColumns(fit) {\r\n        this.updateState({fitColumns: fit}, false);\r\n        // const r = this.useUserSetColumnSize();\r\n        // this.setFitColumnsWidth(this._state.columnsGroup, true, r);\r\n        // this.gridSizeSubject.next(this._state);\r\n        this.resetColumnsSize();\r\n    }\r\n\r\n    private useUserSetColumnSize() {\r\n        if (this._state.autoFitColumns) {\r\n            const gridWidth = this._state.width;\r\n            const userSetColumnWidth = this._state.columnsGroup.originalTotalWidth;\r\n            return userSetColumnWidth > gridWidth;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private resetColumnsSize() {\r\n        if (this._state.fitColumns) {\r\n            // 20200421\r\n            const r = this.useUserSetColumnSize();\r\n            this.setFitColumnsWidth(this._state.columnsGroup, r, r);\r\n        }\r\n        this.gridSizeSubject.next(this._state);\r\n    }\r\n\r\n    /**\r\n     * æ´æ°åè®¾ç½®\r\n     * @param columns æ°çåéå\r\n     * @param restitute æ¯å¦è¿ååå§å®½åº¦ é»è®¤ä¸º false\r\n     */\r\n    updateColumns(columns, restitute = false, emit = false) {\r\n        this._state.columns = columns;\r\n        this.initColumns(emit, restitute);\r\n        this.resizeColumns(restitute);\r\n    }\r\n\r\n\r\n    initColumns(emit = false, restColumnWidth = false) {\r\n        const columns = this._state.flatColumns;\r\n        let colgroup: any = {\r\n            leftFixed: [],\r\n            rightFixed: [],\r\n            normalColumns: []\r\n        };\r\n        if (columns && columns.length) {\r\n            const leftFixedCols = this.getFixedCols('left');\r\n            const rightFixedCols = this.getFixedCols('right');\r\n            const normalCols = this.getFixedCols();\r\n\r\n            columns.forEach(c => {\r\n                if (!c.originalWidth) {\r\n                    c.originalWidth = c.width;\r\n                }\r\n            });\r\n\r\n            colgroup = {\r\n                leftFixed: leftFixedCols,\r\n                rightFixed: rightFixedCols,\r\n                normalColumns: normalCols\r\n            };\r\n\r\n            this.initColumnsWidth(colgroup, restColumnWidth);\r\n\r\n            if (this._state.fitColumns) {\r\n                this.setFitColumnsWidth(colgroup, true);\r\n            }\r\n\r\n            this.updateState({ columnsGroup: colgroup }, emit);\r\n        } else {\r\n            colgroup.leftFixedWidth = 0;\r\n            colgroup.rightFixedWidth = 0;\r\n            colgroup.normalWidth = 0;\r\n            colgroup.totalWidth = 0;\r\n            this.updateState({ columnsGroup: colgroup }, emit);\r\n        }\r\n    }\r\n\r\n    getColumnIndex(field: string, fixed: 'right'| '' | 'left' = '') {\r\n        const colgroup = this._state.columnsGroup;\r\n        if (!fixed) {\r\n            return colgroup.normalColumns.findIndex(n => n.field === field);\r\n        } else {\r\n            if (fixed === 'left') {\r\n                return colgroup.leftFixed.findIndex(n => n.field === field);\r\n            } else if (fixed === 'right') {\r\n                return colgroup.rightFixed.findIndex(n => n.field === field);\r\n            }\r\n        }\r\n    }\r\n\r\n    columnResizeEnd() {\r\n        // const colgroup = this._state.columnsGroup;\r\n        // this.initColumnsWidth(colgroup, false);\r\n        // this.updateState({ columnsGroup:  {...colgroup} }, false);\r\n        // this.gridSizeSubject.next(this._state);\r\n        this.resizeColumns();\r\n    }\r\n\r\n\r\n    resizeColumns(restitute = false) {\r\n        const colgroup = this._state.columnsGroup;\r\n        this.initColumnsWidth(colgroup, restitute);\r\n        if (this._state.fitColumns) {\r\n            const r = this.useUserSetColumnSize();\r\n            if (r) {\r\n                this.setFitColumnsWidth(colgroup, restitute, r);\r\n            } else {\r\n                this.setFitColumnsWidth(colgroup, restitute);\r\n            }\r\n        }\r\n        this.updateState({ columnsGroup:  {...colgroup} }, false);\r\n        this.gridSizeSubject.next(this._state);\r\n    }\r\n\r\n    getAllFlatColumns() {\r\n        return flatten<DataColumn>(this._state.columns);\r\n    }\r\n\r\n    getColumn(fieldName: string) {\r\n        return this.getAllFlatColumns().find(n => n.field === fieldName);\r\n    }\r\n\r\n    setFitColumnsWidth(colgroup: ColumnGroup, restitute = false, useUserSetColumnSize = false) {\r\n        if (!colgroup) {\r\n            return;\r\n        }\r\n        colgroup.normalWidth = this._state.width - colgroup.leftFixedWidth - colgroup.rightFixedWidth;\r\n\r\n        if (!colgroup.normalWidth || colgroup.normalWidth < 0 ) {\r\n            return;\r\n        }\r\n\r\n\r\n        if (useUserSetColumnSize) {\r\n            colgroup.totalWidth = colgroup.originalTotalWidth;\r\n            if (restitute) {\r\n                colgroup.normalColumns.forEach( col => {\r\n                    col.width = col.originalWidth;\r\n                });\r\n            }\r\n            // æ´æ° normalColumns width\r\n            colgroup.normalWidth = colgroup.normalColumns.reduce((totalWidth, col) => {\r\n                if (!restitute && col.width) {\r\n                    return totalWidth += col.width;\r\n                } else {\r\n                    return totalWidth += col.originalWidth;\r\n                }\r\n            }, 0);\r\n\r\n            colgroup.totalWidth = colgroup.leftFixedWidth + colgroup.rightFixedWidth + colgroup.normalWidth;\r\n        } else {\r\n            const minWidth = colgroup.normalColumns.reduce((totalWidth, col) => {\r\n                if (!restitute) {\r\n                    return totalWidth += col.width;\r\n                } else {\r\n                    return totalWidth += col.originalWidth;\r\n                }\r\n            }, 0);\r\n\r\n            colgroup.normalWidth = colgroup.normalWidth - 2;\r\n\r\n            colgroup.normalColumns.forEach( col => {\r\n                if (!restitute) {\r\n                    // col.width = Math.floor( col.width / minWidth * colgroup.normalWidth );\r\n                    col.width = Number((col.width / minWidth * colgroup.normalWidth ).toFixed(2));\r\n                } else {\r\n                    // col.width = Math.floor( col.originalWidth / minWidth * colgroup.normalWidth );\r\n                    col.width =  Number(( col.originalWidth / minWidth * colgroup.normalWidth ).toFixed(2));\r\n                }\r\n            });\r\n            colgroup.totalWidth = colgroup.leftFixedWidth + colgroup.rightFixedWidth + colgroup.normalWidth;\r\n        }\r\n\r\n    }\r\n\r\n    private getFixedCols(direction: 'left' | 'right' | '' = '') {\r\n        let cols = [];\r\n        if (!direction) {\r\n            cols = this._state.flatColumns.filter(col => !col.fixed);\r\n        } else {\r\n            cols = this._state.flatColumns.filter(col => col.fixed === direction);\r\n        }\r\n\r\n        // å¤è¡¨å¤´ï¼éæ°è®¡ç®åçé¡ºåº\r\n        if (this._state.columns.length > 1 && cols.length) {\r\n            const fields = DatagridColumnsHelper.getFields(this._state.columns);\r\n            const newcols = [];\r\n            fields.forEach(f => {\r\n                const c =  cols.find(col => (col.field || '' ) === f);\r\n                if (c) {\r\n                    newcols.push(c);\r\n                }\r\n            });\r\n            return newcols;\r\n        }\r\n\r\n        return cols;\r\n    }\r\n\r\n    // restitute: è¿ååå§å®½åº¦ï¼é»è®¤ false\r\n    private initColumnsWidth(colgroup: ColumnGroup,  restitute = false) {\r\n        let offset = 0;\r\n        offset = this._state.showLineNumber ? offset + this._state.lineNumberWidth : offset;\r\n        offset = this._state.showCheckbox ? offset + this._state.checkboxColumnWidth : offset;\r\n\r\n        const getColsWidth = (cols, val, reset) => {\r\n            return cols.reduce((r, c) => {\r\n                c.left = r;\r\n                if (!reset) {\r\n                    return r + c.width;\r\n                } else {\r\n                    return r + c.originalWidth;\r\n                }\r\n            }, val);\r\n        };\r\n\r\n        colgroup.leftFixedWidth = offset;\r\n        if (colgroup.leftFixed && colgroup.leftFixed.length) {\r\n            colgroup.leftFixedWidth = getColsWidth(colgroup.leftFixed, offset, restitute);\r\n        }\r\n\r\n        colgroup.rightFixedWidth = 0;\r\n        if (colgroup.rightFixed && colgroup.rightFixed.length) {\r\n            colgroup.rightFixedWidth = getColsWidth(colgroup.rightFixed, 0, restitute);\r\n        }\r\n\r\n        colgroup.normalWidth = 0;\r\n        if (this._state.columns && this._state.columns.length) {\r\n            colgroup.normalWidth = getColsWidth(colgroup.normalColumns, 0, restitute);\r\n            colgroup.originalTotalWidth = getColsWidth(colgroup.normalColumns, 0, true);\r\n        }\r\n\r\n        colgroup.totalWidth = colgroup.leftFixedWidth + colgroup.rightFixedWidth + colgroup.normalWidth;\r\n\r\n    }\r\n\r\n    showCheckbox(isShow = true) {\r\n        const colgroup = this._state.columnsGroup;\r\n        this.updateState({showCheckbox: isShow}, false);\r\n        if (isShow) {\r\n            colgroup.leftFixedWidth = colgroup.leftFixedWidth + this._state.checkboxColumnWidth;\r\n        } else {\r\n            colgroup.leftFixedWidth = colgroup.leftFixedWidth - this._state.checkboxColumnWidth;\r\n        }\r\n\r\n        this.columnResizeSubject.next(colgroup);\r\n    }\r\n\r\n    hideCheckbox() {\r\n        this.showCheckbox(false);\r\n    }\r\n\r\n    showLineNumber(isShow = true) {\r\n        const colgroup = this._state.columnsGroup;\r\n        this.updateState({showLineNumber: isShow}, false);\r\n        if (isShow) {\r\n            colgroup.leftFixedWidth = colgroup.leftFixedWidth + this._state.lineNumberWidth;\r\n        } else {\r\n            colgroup.leftFixedWidth = colgroup.leftFixedWidth - this._state.lineNumberWidth;\r\n        }\r\n\r\n        this.columnResizeSubject.next(colgroup);\r\n    }\r\n\r\n    hideLineNumber() {\r\n        this.showLineNumber(false);\r\n    }\r\n\r\n    setSortInfo(sortName, sortOrder) {\r\n        sortName = sortName || '';\r\n        sortOrder = sortOrder || '';\r\n        const fields = sortName.split(',');\r\n        const orders = sortOrder.split(',');\r\n        // if (!this._state.multiSort) {\r\n        const colgroup = this._state.columnsGroup;\r\n\r\n        const updateFieldOrder = (cols: DataColumn[]) => {\r\n            if (!cols || !cols.length) {\r\n                return;\r\n            }\r\n            cols.forEach( col => {\r\n                col.order = undefined;\r\n                const i = fields.findIndex(f => f === col.field);\r\n                if (i > -1) {\r\n                    col.order = orders[i];\r\n                }\r\n            });\r\n        };\r\n\r\n        updateFieldOrder(colgroup.normalColumns);\r\n        updateFieldOrder(colgroup.leftFixed);\r\n        updateFieldOrder(colgroup.rightFixed);\r\n        // }\r\n\r\n        this.updateState({sortName, sortOrder}, false);\r\n    }\r\n\r\n    orderBy(arr, props: any[], orders: any[]) {\r\n        const colObj = props.reduce((c, n) => {\r\n            c[n] = this.getColumn(n);\r\n            return c;\r\n        }, {});\r\n\r\n        return [...arr].sort((a, b) =>\r\n            props.reduce((acc, prop, i) => {\r\n                if (acc === 0) {\r\n                    let valA = Utils.getValue(prop, a);\r\n                    let valB = Utils.getValue(prop, b);\r\n\r\n                    if (colObj[prop] && colObj[prop]['isMultilingualField']) {\r\n                        valA = Utils.getMultilingualValue(valA, this.localId);\r\n                        valB = Utils.getMultilingualValue(valB, this.localId);\r\n                    }\r\n\r\n                    if (valA === undefined || valA === null) {\r\n                        valA = '';\r\n                    }\r\n                    if (valB === undefined || valB === null) {\r\n                        valB = '';\r\n                    }\r\n\r\n                    const [p1, p2] = orders && orders[i] === 'desc' ? [valB, valA] : [valA, valB];\r\n                    if (typeof p1 === 'string') {\r\n                        acc = p1.localeCompare(p2);\r\n                    } else {\r\n                        acc = p1 > p2 ? 1 : p1 < p2 ? -1 : 0;\r\n                    }\r\n                }\r\n                return acc;\r\n            }, 0)\r\n        );\r\n    }\r\n\r\n    sort(data: any) {\r\n        const orders = this._state.sortOrder.split(',');\r\n        const fields = this._state.sortName.split(',');\r\n\r\n        if (this._state.mergeCell && this._state.mergeFields && this._state.mergeFields.length) {\r\n            const newOrders = [];\r\n            const newFields = [...this._state.mergeFields];\r\n            fields.forEach((f, i) => {\r\n                let k = newFields.indexOf(f);\r\n                if (k == -1) {\r\n                    newFields.push(f);\r\n                    k = newFields.length - 1;\r\n                }\r\n                newOrders[k] = orders[i];\r\n            });\r\n\r\n            return this.orderBy(data, newFields, newOrders);\r\n        }\r\n\r\n        return this.orderBy(data, fields, orders);\r\n    }\r\n\r\n\r\n    clientSort(data?: any) {\r\n        if (this._state.sortName) {\r\n            if (data) {\r\n                this.updateState({ data }, false);\r\n            }\r\n            const sortedData = this.sort(this._state.data);\r\n            this.loadData(sortedData, false);\r\n        } else {\r\n            this.clearSort();\r\n        }\r\n\r\n        this.clientSort$.emit({sortName: this._state.sortName, sortOrder: this._state.sortOrder});\r\n    }\r\n\r\n    clearSort() {\r\n        this.loadData(this._state.originalData, false);\r\n    }\r\n\r\n    loadFilterData(filterData: any[]) {\r\n        this.loadData(filterData, false);\r\n    }\r\n\r\n\r\n    //#region åæ´é\r\n\r\n    private hasRowChanges(rowid: any) {\r\n        const _changes = this._state.changes;\r\n        if (!_changes) {\r\n            return false;\r\n        }\r\n        return _changes[rowid];\r\n    }\r\n\r\n    appendChanges(changes: RowDataChanges) {\r\n        if (!changes) {\r\n            return;\r\n        }\r\n        const id = changes[this._state.idField];\r\n        if (!id) {\r\n            return;\r\n        }\r\n        const _id = '' + id;\r\n        if (!this.hasRowChanges(_id)) {\r\n            this._state.changes = this._state.changes || {};\r\n            this._state.changes[_id] = changes;\r\n        } else {\r\n            this._state.changes[_id] = Object.assign(this._state.changes[_id], changes);\r\n        }\r\n    }\r\n\r\n    acceptChanges() {\r\n        const changes = this._state.changes;\r\n        if (changes) {\r\n            const keys = Object.keys(changes);\r\n            keys.forEach(id => {\r\n                this.updateRow(id, changes[id]);\r\n            });\r\n            this._state.originalData = cloneDeep(this._state.data);\r\n        }\r\n    }\r\n    rejectChanges(rowid = null) {\r\n        const changes = this._state.changes;\r\n        if (changes) {\r\n            if (!rowid) {\r\n                this._state.data = cloneDeep(this._state.originalData);\r\n                this._state.changes = null;\r\n            } else {\r\n                const rowChanges =  this._state.changes['' + rowid];\r\n                if (rowChanges) {\r\n                    const orgiRow = this._state.originalData.find(r => this.primaryId(r) === rowid);\r\n                    this._state.data.forEach(r => {\r\n                        if (this.primaryId(r) === rowid) {\r\n                            r = cloneDeep(orgiRow);\r\n                        }\r\n                    });\r\n                }\r\n            }\r\n\r\n            this.refresh();\r\n        }\r\n    }\r\n\r\n    getChanges() {\r\n        return this._state.changes;\r\n    }\r\n\r\n    refresh() {\r\n        const data = cloneDeep(this._state.data);\r\n        this.loadData(data);\r\n    }\r\n\r\n    //#endregion\r\n\r\n    /**\r\n     * æé åè®¡è¡\r\n     * @param data æ°æ®éå\r\n     */\r\n    getFooterData(data) {\r\n        if (this._state.showFooter) {\r\n            // const columns = this._state.flatColumns;\r\n            const columns = flatten<DataColumn>(this._state.columns).filter((col: DataColumn) => !col.colspan);\r\n            const footerRow = {};\r\n\r\n            columns.forEach(col => {\r\n                if (col.footer && col.footer.options) {\r\n                    const options = col.footer.options;\r\n                    const text = options.text;\r\n                    const typ = options.calculationType as CalculationType;\r\n\r\n                    if (typ !== undefined && typ != -1) {\r\n                        const val = this.calculation(data, typ, col);\r\n                        footerRow[col.field] = val;\r\n                    } else {\r\n                        footerRow[col.field] = text || '';\r\n                    }\r\n                } else {\r\n                    footerRow[col.field] = '';\r\n                }\r\n            });\r\n\r\n            return [footerRow];\r\n        }\r\n        return [];\r\n    }\r\n\r\n    private arrToGroup(items, fields: string[]) {\r\n        if (fields.length) {\r\n            const first = fields.shift();\r\n            const g1 = groupBy(items, (n) => Utils.getValue(first, n));\r\n            this.toGroup(g1, fields);\r\n            return g1;\r\n        }\r\n    }\r\n\r\n    private toGroup(g1, fieldArr) {\r\n        if (fieldArr.length) {\r\n            Object.keys(g1).forEach((k) => {\r\n                const items = g1[k];\r\n                const _nextFields = fieldArr.map((n) => n);\r\n                const _f = _nextFields.shift();\r\n                g1[k] = groupBy(items, (n) => Utils.getValue(_f, n));\r\n                if (_nextFields.length) {\r\n                    this.toGroup(g1[k], _nextFields);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private groupRows2Flat(groupRows, initLevel, parent) {\r\n        let results = [];\r\n        if (initLevel === undefined) {\r\n            initLevel = 0;\r\n        }\r\n        const idfield = this._state.idField;\r\n        const columns = this._state.flatColumns;\r\n        const data = this._state.data;\r\n        const groupFieldArr = this._state.groupField.split(',');\r\n        const pid = parent ? parent[idfield] : null;\r\n        const colspan = this._state.columnsGroup.normalColumns.length;\r\n        Object.keys(groupRows).forEach((k, m) => {\r\n\r\n            const groupItem = { [idfield]: Utils.uuid(),\r\n                                [IS_GROUP_ROW_FIELD]: true, [GROUP_LEVEL_FIELD]: initLevel, data: { }, value: k,\r\n                                [GROUP_VISIBLE_FIELD]: true, expanded: true, field: groupFieldArr[initLevel],\r\n                                colspan, total: 0, rows: [], [GROUP_ROW_FIELD]: pid};\r\n\r\n            // TFS: 356955\r\n            if (parent) {\r\n                groupItem.rows = parent.rows.filter(n => !n[IS_GROUP_ROW_FIELD] &&\r\n                    !n[IS_GROUP_FOOTER_ROW_FIELD] &&  Utils.getValue(groupFieldArr[initLevel], n) === k);\r\n            } else {\r\n                groupItem.rows = data.filter(n => '' + Utils.getValue(groupFieldArr[initLevel], n) === k);\r\n            }\r\n\r\n            if (parent) {\r\n                parent.rows.push(groupItem);\r\n            }\r\n\r\n            groupItem.total = groupItem.rows.filter(n => !n[IS_GROUP_ROW_FIELD] && !n[IS_GROUP_FOOTER_ROW_FIELD]).length;\r\n\r\n            results.push(groupItem);\r\n            const items = groupRows[k];\r\n            if (isPlainObject(items)) {\r\n                const level = initLevel + 1;\r\n                results = results.concat(this.groupRows2Flat(items, level, groupItem));\r\n            } else {\r\n                groupItem.total = items.length;\r\n                items.map(n => {\r\n                    n[GROUP_ROW_FIELD] = groupItem[idfield];\r\n                    n[GROUP_VISIBLE_FIELD] = true;\r\n                    n[GROUP_LEVEL_FIELD] = groupItem[GROUP_LEVEL_FIELD] + 1;\r\n                    return n;\r\n                });\r\n                groupItem.rows = items;\r\n                results = results.concat(items);\r\n            }\r\n\r\n            if (this._state.groupFooter) {\r\n                const footerItem = {\r\n                    [IS_GROUP_FOOTER_ROW_FIELD]: true,\r\n                    [GROUP_ROW_FIELD]: groupItem[idfield],\r\n                    [GROUP_VISIBLE_FIELD]: true,\r\n                    [GROUP_LEVEL_FIELD]: initLevel,\r\n                    data: {}\r\n                };\r\n                groupItem.rows.push(footerItem);\r\n                results.push(footerItem);\r\n            }\r\n        });\r\n        return results;\r\n    }\r\n\r\n    /** æ´æ°åç»åè®¡è¡æ°æ® */\r\n    private updateGroupFooterData(groupFooterRow: any, columns: any, groupRows: any) {\r\n        columns.forEach(col => {\r\n            if (col.groupFooter && col.groupFooter.options) {\r\n                const options = col.groupFooter.options;\r\n                const text = options.text;\r\n                const typ = options.calculationType as CalculationType;\r\n\r\n                if (typ !== undefined && typ != -1) {\r\n                    const val = this.calculation(groupRows, typ, col);\r\n                    groupFooterRow.data[col.field] = val;\r\n                } else {\r\n                    groupFooterRow.data[col.field] = text || '';\r\n                }\r\n            } else {\r\n                groupFooterRow.data[col.field] = '';\r\n            }\r\n        });\r\n    }\r\n\r\n    /** å¤å­æ®µåç»\r\n     * groupField ä»¥éå·åéï¼ä»å·¦å°å³ä¾æ¬¡è¿è¡åç»\r\n     */\r\n    private groupRows2(data: any[]) {\r\n        if (data && data.length) {\r\n            const columns = this._state.flatColumns;\r\n            const groupField = this._state.groupField || '';\r\n\r\n            if (!groupField) {\r\n                return data;\r\n            }\r\n\r\n            const groupData = this.arrToGroup(data, groupField.split(','));\r\n            const result = this.groupRows2Flat(groupData, 0, null);\r\n\r\n            let k = 0;\r\n\r\n            const prow = (pid) => result.find(n => n[this._state.idField] === pid);\r\n\r\n            result.map((n, i) => {\r\n                if (!n[IS_GROUP_ROW_FIELD] && !n[IS_GROUP_FOOTER_ROW_FIELD]) {\r\n                    n[ROW_INDEX_FIELD] = k;\r\n                    k++;\r\n                }\r\n\r\n                // æ´æ°åè®¡è¡æ°æ®\r\n                if (n[IS_GROUP_FOOTER_ROW_FIELD]) {\r\n                    const rows = prow(n[GROUP_ROW_FIELD]).rows.filter((r: any) => !r[IS_GROUP_ROW_FIELD] && !r[IS_GROUP_FOOTER_ROW_FIELD]);\r\n                    this.updateGroupFooterData(n, columns, rows);\r\n                }\r\n\r\n                return n;\r\n            });\r\n            return result;\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    showGroupFooter(groupFooter) {\r\n        this.updateState({groupFooter}, false);\r\n        this.updateVirthualRows(0);\r\n    }\r\n\r\n    updateGroupFooter(groupRowId: string) {\r\n        const groupRow = this._state.virtual.virtualRows.find((n: any) => {\r\n            return n['id'] === groupRowId;\r\n        });\r\n\r\n        if (groupRow) {\r\n            const groupRows = groupRow.rows;\r\n            const groupFooterRows = groupRows.filter((n: any) => n['__group_footer__']);\r\n            const columns = this._state.flatColumns;\r\n\r\n            const rows = groupRows.filter((n: any) => !n['__group_footer__']);\r\n\r\n            groupFooterRows.forEach((n: any) => {\r\n                this.updateGroupFooterData(n, columns, rows);\r\n            });\r\n        }\r\n    }\r\n\r\n    private calculation(data: any, typ: CalculationType, col: any) {\r\n        let val: any = '';\r\n        // TFS: 357000\r\n        // http://10.24.1.11:8080/tfs/GSP/GSPCloud/web/_queries?id=357000&triage=true&fullScreen=false&_a=edit\r\n        if (!data || !data.length) {\r\n            return '';\r\n        }\r\n        const field = col.field;\r\n        const arr = data.map((o) => Utils.getValue(field, o) || 0);\r\n        switch (typ) {\r\n            case CalculationType.sum:\r\n                // val = sumBy(data, (o) => Utils.getValue(field, o));\r\n                val = BigNumber.sum.apply(null, arr).toFixed();\r\n                break;\r\n            case CalculationType.max:\r\n                // const maxObj = maxBy(data, (o) => Utils.getValue(field, o));\r\n                // val = Utils.getValue(field, maxObj);\r\n                val = BigNumber.max.apply(null, arr).toFixed();\r\n                break;\r\n            case CalculationType.min:\r\n                // const minObj = minBy(data, (o) => Utils.getValue(field, o));\r\n                // val = Utils.getValue(field, minObj);\r\n                val = BigNumber.min.apply(null, arr).toFixed();\r\n                break;\r\n            case CalculationType.average:\r\n                // val = meanBy(data, (o) => Utils.getValue(field, o));\r\n                val = BigNumber.sum.apply(null, arr).div(arr.length).toFixed();\r\n                break;\r\n            case CalculationType.count:\r\n                val = data.length;\r\n                break;\r\n        }\r\n        return val;\r\n    }\r\n\r\n    //#region ç»ä»¶åå§å±æ§\r\n\r\n    setinitialOptions(opts: {[key: string]: any}) {\r\n        this._state.initialOptions = {};\r\n        // åç»\r\n        this._state.initialOptions['groupField'] = opts.groupField;\r\n\r\n        // æåº\r\n        this._state.initialOptions['sort'] = {\r\n            sortName: opts.sortName,\r\n            sortOrder: opts.sortOrder\r\n        };\r\n        // åæ¾ç¤ºéèãå¯¹é½æ¹å¼\r\n        if (opts.columns && opts.columns[0]) {\r\n            this._state.initialOptions['columnFields'] = (opts.columns[0] as any).map(n => {\r\n                return {\r\n                    width: n.width || 100,\r\n                    field: n.field,\r\n                    halign: n.halign,\r\n                    align: n.align,\r\n                    visible: n.visible,\r\n                    footer: cloneDeep(n.footer || {}),\r\n                    groupFooter: cloneDeep(n.groupFooter || {})\r\n                };\r\n            });\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n}\r\n","import { Utils } from './../utils/utils';\r\nimport { EventEmitter } from '@angular/core';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-09 20:44:54\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { CellInfo } from './state';\r\nimport { Injectable } from '@angular/core';\r\nimport { Subject, BehaviorSubject } from 'rxjs';\r\nimport { RowEventParam, RowHoverEventParam } from '../types/event-params';\r\nimport { filter, map, debounceTime } from 'rxjs/operators';\r\nimport { CommonUtils, IdService } from '@farris/ui-common';\r\n\r\nexport type ScrollAction =\r\n    | 'psScrollY'\r\n    | 'psScrollX'\r\n    | 'psScrollUp'\r\n    | 'psScrollDown'\r\n    | 'psScrollLeft'\r\n    | 'psScrollRight'\r\n    | 'psYReachEnd'\r\n    | 'psYReachStart'\r\n    | 'psXReachEnd'\r\n    | 'psXReachStart';\r\n\r\nexport class DatagridService {\r\n    private scorllSubject = new Subject();\r\n    private scrollX = new BehaviorSubject(0);\r\n\r\n    private rowHoverSubject = new Subject<RowHoverEventParam>();\r\n    private rowSelectSubject = new Subject<Partial<RowHoverEventParam>>();\r\n\r\n    private dataSourceChangedSubject = new Subject();\r\n    /** ç¼è¾ååæ ¼ */\r\n    private editCellSubject = new Subject();\r\n    /** éä¸­ååæ ¼ */\r\n    private selectCellSubject = new Subject();\r\n    /** ç»æååç¼è¾ */\r\n    private endCellEdit = new Subject();\r\n    private changeCheckedRows = new Subject();\r\n    /** ç»æè¡ç¼è¾ */\r\n    // private endRowEdit = new BehaviorSubject(true);\r\n\r\n    public scorll$ = this.scorllSubject.asObservable();\r\n    public scrollX$ = this.scorll$.pipe(\r\n        filter((p: any) => p.type === 'psScrollX'),\r\n        map(t => t.x),\r\n        debounceTime(50)\r\n    );\r\n    public scrollY$ = this.scorll$.pipe(\r\n        filter((p: any) => p.type === 'psScrollY'),\r\n        map(t => t.x),\r\n        debounceTime(50)\r\n    );\r\n    public rowHover$ = this.rowHoverSubject.asObservable();\r\n    public rowClick$ = this.rowSelectSubject.asObservable();\r\n    public onDataSourceChange = this.dataSourceChangedSubject.asObservable();\r\n    public cellEdit$ = this.editCellSubject.asObservable();\r\n    public endCellEdit$ = this.endCellEdit.asObservable();\r\n    public checkedRowsTotalChanged$ = this.changeCheckedRows.asObservable();\r\n    public updateEmptyStyle$ = new EventEmitter();\r\n\r\n    public showGridHeader = new EventEmitter();\r\n    // åæ¶å¨é\r\n    public uncheckAll = new EventEmitter();\r\n    // å¨é¨éä¸­\r\n    public checkAll = new EventEmitter();\r\n\r\n    public columnResized = new EventEmitter();\r\n\r\n    public rowHeightChanged = new EventEmitter();\r\n\r\n    public loadVirtualData = new EventEmitter();\r\n    /** æ¾ç¤ºåºå®åéå½± */\r\n    public showFixedShadow = new EventEmitter();\r\n    // public endRowEdit$ = this.endRowEdit.asObservable();\r\n\r\n    public setSelecedRow = new EventEmitter();\r\n    public setCheckedRows = new EventEmitter();\r\n\r\n    public scrollToCurrentRow = new EventEmitter();\r\n\r\n    public columnsChanged = new EventEmitter();\r\n\r\n    public cellContentWrapChanged = new EventEmitter();\r\n\r\n    public onFilterChanged = new EventEmitter();\r\n    public clearFilter = new EventEmitter();\r\n    public filterTextChange = new EventEmitter();\r\n    public toggleFilterRow = new EventEmitter();\r\n\r\n    public refreshFooterData = new EventEmitter();\r\n\r\n    public disableHeader = new EventEmitter();\r\n    /** æ´æ°å¨éå¤éæ¡ç¶æ */\r\n    public changeCheckAllStatus = new EventEmitter();\r\n\r\n    public setScrollbarPosition = new EventEmitter();\r\n\r\n    public smartFilterBarExpand = new EventEmitter();\r\n    public smartFilterDataChange = new EventEmitter();\r\n\r\n    public scrollbarUpdate = new EventEmitter();\r\n\r\n\r\n    footerPositionChanged = new EventEmitter();\r\n\r\n    styleElement: HTMLStyleElement = null;\r\n    commonUtils: CommonUtils = null;\r\n\r\n    idService: IdService = null;\r\n\r\n    // ååæ ¼ç¼è¾å¨åå»ºå®æ\r\n    cellEditorCreated = new EventEmitter();\r\n    // ååæ ¼ç¼è¾å¨éæ¯\r\n    cellEditorDestory = new EventEmitter();\r\n    // ç¦ç¹è¡åæ¢\r\n    focusRowChanged = new EventEmitter();\r\n\r\n    constructor() { }\r\n\r\n    onScrollMove(x: number, action: ScrollAction) {\r\n        this.scorllSubject.next({ x, type: action });\r\n    }\r\n\r\n    dataSourceChanged() {\r\n        this.dataSourceChangedSubject.next();\r\n    }\r\n\r\n    onRowHover(rowIndex: number, rowData: any, mouseEnter: boolean) {\r\n        this.rowHoverSubject.next({ index: rowIndex, data: rowData, mouseenter: mouseEnter });\r\n    }\r\n\r\n    onRowClick(rowIndex: number, rowData: any) {\r\n        this.rowSelectSubject.next({ index: rowIndex, data: rowData });\r\n    }\r\n\r\n    onCellEdit(tdElement: any) {\r\n        this.editCellSubject.next(tdElement);\r\n    }\r\n\r\n    onEndCellEdit(cell: CellInfo) {\r\n        this.endCellEdit.next(cell);\r\n    }\r\n\r\n    onSelectCell(cell: CellInfo) {\r\n        this.selectCellSubject.next(cell);\r\n    }\r\n\r\n    onCheckedRowsCountChange() {\r\n        this.changeCheckedRows.next();\r\n    }\r\n\r\n    onRowHeightChange(rowHeight: number) {\r\n        this.rowHeightChanged.emit(rowHeight);\r\n    }\r\n\r\n    onLoadVirtualData(data: any) {\r\n        this.loadVirtualData.emit({ data });\r\n    }\r\n\r\n    onClearFilter() {\r\n        this.clearFilter.emit();\r\n        this.filterTextChange.emit('');\r\n    }\r\n\r\n    onFilterTextChange(txt: string) {\r\n        this.filterTextChange.emit(txt);\r\n    }\r\n\r\n    restoreScrollbarPosition() {\r\n        this.setScrollbarPosition.emit();\r\n    }\r\n\r\n    updateEmptyStyle() {\r\n        this.updateEmptyStyle$.emit();\r\n    }\r\n\r\n    groupBy = (arr, fn) => arr.map(typeof fn === 'function' ? fn : val => Utils.getValue(fn, val)).reduce((acc, val, i) => {\r\n        acc[val] = (acc[val] || []).concat(arr[i]);\r\n        return acc;\r\n    }, {})\r\n\r\n    getMergeCellInfo(data, mergeFields) {\r\n        const result = {};\r\n        let firstVal = null;\r\n        let currVal;\r\n\r\n        mergeFields.forEach((f, i) => {\r\n            if (i === 0) {\r\n                data.forEach((d, j) => {\r\n                    const item = { [f]: { show: true, rowspan: 1 } };\r\n                    if (!result[j]) {\r\n                        result[j] = item;\r\n                    } else {\r\n                        if (!result[j][f]) {\r\n                            result[j] = Object.assign(result[j], item);\r\n                        }\r\n                    }\r\n\r\n                    const _item = result[j];\r\n\r\n                    currVal = d[f];\r\n                    if (firstVal === null || firstVal !== currVal) {\r\n                        firstVal = currVal;\r\n                        _item[f].show = true;\r\n                        _item[f].startIndex = j;\r\n                    } else {\r\n                        const strIndex = result[j - 1][f].startIndex;\r\n                        _item[f].startIndex = strIndex;\r\n                        _item[f].show = false;\r\n                        result[strIndex][f].rowspan++;\r\n                    }\r\n                });\r\n            }\r\n        });\r\n\r\n        return result;\r\n    }\r\n\r\n    getMergeCellInfo0(data, field) {\r\n        const result = {};\r\n        let firstVal;\r\n        let currVal;\r\n        data.forEach((d, j) => {\r\n            const item = { [field]: { show: true, rowspan: 1, value: '' } };\r\n            if (!result[j]) {\r\n                result[j] = item;\r\n            }\r\n\r\n            const _item = result[j];\r\n            currVal = Utils.getValue(field, d);\r\n            _item[field].value = currVal;\r\n            if (firstVal === undefined || firstVal !== currVal) {\r\n                firstVal = currVal;\r\n                _item[field].show = true;\r\n                _item[field].startIndex = j;\r\n            } else {\r\n                const strIndex = result[j - 1][field].startIndex;\r\n                _item[field].startIndex = strIndex;\r\n                _item[field].show = false;\r\n                result[strIndex][field].rowspan++;\r\n            }\r\n        });\r\n        return result;\r\n    }\r\n\r\n    getMergeCellInfo2(data, mergeFields) {\r\n        let result = {};\r\n        let firstVal = null;\r\n        result = this.getMergeCellInfo0(data, mergeFields.splice(0, 1)[0]);\r\n\r\n        // console.log(JSON.stringify(data));\r\n        const groupData = this.groupBy(data, mergeFields[0]);\r\n        const groupKeys = Object.keys(groupData);\r\n        let startRowIndex = 0;\r\n        mergeFields.forEach((f, i) => {\r\n            groupKeys.forEach((k, j) => {\r\n                let currVal;\r\n                groupData[k].forEach((d, n) => {\r\n                    if (result[startRowIndex] && !result[startRowIndex][f]) {\r\n                        result[startRowIndex] = Object.assign(result[startRowIndex], { [f]: { show: true, rowspan: 1, value: '' } });\r\n                    }\r\n\r\n                    const _item = result[startRowIndex];\r\n                    currVal = Utils.getValue(f, d);\r\n                    _item[f].value = currVal;\r\n                    if (firstVal === null || firstVal !== currVal) {\r\n                        firstVal = currVal;\r\n                        _item[f].show = true;\r\n                        _item[f].startIndex = startRowIndex;\r\n                    } else {\r\n                        const strIndex = result[startRowIndex - 1][f].startIndex;\r\n                        _item[f].startIndex = strIndex;\r\n                        _item[f].show = false;\r\n                        result[strIndex][f].rowspan++;\r\n                    }\r\n\r\n                    startRowIndex++;\r\n                });\r\n            });\r\n        });\r\n        return result;\r\n    }\r\n\r\n\r\n    getMergeCellInfo3(data, mergeFields) {\r\n        let result = {};\r\n        const firstField = mergeFields.splice(0, 1)[0];\r\n        result = this.getMergeCellInfo0(data, firstField);\r\n        let prevGroupField = firstField;\r\n        // console.log(JSON.stringify(data));\r\n        // const groupData = this.groupBy(data, firstField);\r\n        // const groupKeys = Object.keys(groupData);\r\n        mergeFields.forEach((f, i) => {\r\n            let startRowIndex = 0;\r\n\r\n            let firstVal;\r\n            let currVal;\r\n\r\n            if (i > 0) {\r\n                prevGroupField = mergeFields[i - 1];\r\n            }\r\n\r\n            data.forEach((d, n) => {\r\n                if (result[startRowIndex] && !result[startRowIndex][f]) {\r\n                    result[startRowIndex] = Object.assign(result[startRowIndex], { [f]: { show: true, rowspan: 1, value: '' } });\r\n                }\r\n\r\n                const _item = result[startRowIndex];\r\n                currVal = Utils.getValue(f, d);\r\n                _item[f].value = currVal;\r\n\r\n                if (startRowIndex > 0) {\r\n                    const prevItem = result[startRowIndex - 1];\r\n                    const _c = Object.keys(_item).map(c => '' + _item[c].value).join(',');\r\n                    const _p = Object.keys(prevItem).map(p => '' + prevItem[p].value).join(',');\r\n\r\n                    if (_c !== _p) {\r\n                        firstVal = undefined;\r\n                    }\r\n                }\r\n\r\n                if ((firstVal === undefined || firstVal !== currVal)) {\r\n                    firstVal = currVal;\r\n                    _item[f].show = true;\r\n                    _item[f].startIndex = startRowIndex;\r\n                } else {\r\n                    const startIndex = result[startRowIndex - 1][f].startIndex;\r\n                    _item[f].startIndex = startIndex;\r\n                    _item[f].show = false;\r\n                    result[startIndex][f].rowspan++;\r\n                }\r\n\r\n                if (data.length - 1 > startRowIndex) {\r\n                    startRowIndex++;\r\n                }\r\n            });\r\n        });\r\n        return result;\r\n    }\r\n\r\n\r\n    getMergeInfo(rowIndex: number, field: string, mergeCellInfo: any) {\r\n        if (field && mergeCellInfo && mergeCellInfo[rowIndex] && mergeCellInfo[rowIndex][field]) {\r\n            return mergeCellInfo[rowIndex][field];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    removeStyleSheet() {\r\n        if (this.styleElement) {\r\n            this.styleElement.remove();\r\n        }\r\n    }\r\n\r\n    createStyleElement(styleSheetId: string) {\r\n        this.styleElement = this._createStyleSheet(styleSheetId);\r\n    }\r\n\r\n    appendCssRules(rules: string[]) {\r\n        this._appendCssRules(rules, this.styleElement.sheet);\r\n    }\r\n\r\n    removeCssRule(ruleName: string | Array<string>) {\r\n        if (this.styleElement) {\r\n            if (typeof ruleName === 'string') {\r\n                this._removeCssRule(ruleName, this.styleElement.sheet);\r\n            } else {\r\n                if (Array.isArray(ruleName)) {\r\n                    ruleName.forEach(n => {\r\n                        this._removeCssRule(n, this.styleElement.sheet);\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private _createStyleSheet(styleSheetId: string): HTMLStyleElement {\r\n        const htmlHead = document.querySelector('head');\r\n\r\n        const styleEleId = styleSheetId;\r\n        let styleElement = null;\r\n        if (document.querySelector('#' + styleEleId)) {\r\n            styleElement = document.querySelector('#' + styleEleId);\r\n            styleElement.innerText = '';\r\n        } else {\r\n            styleElement = document.createElement('style');\r\n            styleElement.id = styleEleId;\r\n            styleElement.type = 'text/css';\r\n            // styleElement.sheet = new CSSStyleSheet();\r\n            htmlHead.appendChild(styleElement);\r\n        }\r\n\r\n        return styleElement;\r\n    }\r\n\r\n    private _appendCssRules(rules: string[], styleSheet) {\r\n        for (const rule of rules) {\r\n            const ruleName = rule.slice(0, rule.indexOf('{')).trim();\r\n            const removedCssRule = this._removeCssRule(ruleName, styleSheet);\r\n            if (styleSheet.addRule) {\r\n                let cssText = '';\r\n                if (removedCssRule) {\r\n                    cssText += removedCssRule.cssText.slice(removedCssRule.cssText.indexOf('{') + 1, removedCssRule.cssText.indexOf('}'));\r\n                }\r\n                cssText += rule.slice(rule.indexOf('{') + 1, rule.indexOf('}')).replace(/\"/g, '').replace(/,/g, ';') + ';';\r\n                styleSheet.addRule(ruleName, cssText, 0);\r\n            } else {\r\n                styleSheet.insertRule(rule, 0);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _removeCssRule(ruleName: string, styleSheet) {\r\n\r\n        if (!styleSheet) {\r\n            return;\r\n        }\r\n\r\n        const cssRules = (styleSheet.cssRules || styleSheet.rules) as any;\r\n        let ii = 0;\r\n        let cssRule: any = false;\r\n\r\n        do {\r\n            cssRule = cssRules[ii];\r\n            if (cssRule) {\r\n                if (cssRule.selectorText.toLowerCase() == ruleName.toLowerCase()) {\r\n                    if (styleSheet.cssRules) {\r\n                        styleSheet.deleteRule(ii);\r\n                    } else {\r\n                        styleSheet.removeRule(ii);\r\n                    }\r\n\r\n                    return cssRule;\r\n                }\r\n            }\r\n            ii++;\r\n        } while (cssRule);\r\n    }\r\n\r\n    createConfigKey(gridID: string) {\r\n        const { host, hash, href, pathname } = location;\r\n        let formCode = '';\r\n        let menuId = '';\r\n        if (hash) {\r\n            const _searchArr = hash.split('?');\r\n            formCode = _searchArr[0];\r\n\r\n            const searchObj: any = {};\r\n            if (_searchArr[1]) {\r\n                _searchArr[1].split('&').map(n => {\r\n                    searchObj[n.split('=')[0]] = n.split('=')[1];\r\n                });\r\n            }\r\n\r\n            const catchFuncIdKEY = `${pathname}`;\r\n            if (searchObj && Object.keys(searchObj).length) {\r\n                menuId = searchObj.funcId || '';\r\n                if (menuId) {\r\n                    localStorage.setItem(catchFuncIdKEY, menuId);\r\n                }\r\n            }\r\n\r\n            if (!menuId) {\r\n                menuId = localStorage.getItem(catchFuncIdKEY);\r\n            }\r\n        }\r\n        const key = formCode + '_' + menuId + '_' + gridID;\r\n\r\n        if (!this.idService) {\r\n            this.idService = new IdService();\r\n        }\r\n\r\n        return this.idService.encrypt(key);\r\n    }\r\n\r\n\r\n    getCustomStyle(styler: any, args: any): { cls?: any, style?: any } {\r\n        if (typeof styler === 'object') {\r\n            return styler;\r\n        } else {\r\n            if (typeof styler === 'function') {\r\n                const p = args || [];\r\n                return styler(...p);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    findNextTr(nextTr, dir) {\r\n        const getNextElement = (target) => {\r\n            if (target && target.className.indexOf('f-datagrid-disable-row') == -1) {\r\n                return target;\r\n            }\r\n            return false;\r\n        };\r\n\r\n        const m = dir === 'down' ? 'nextElementSibling' : 'previousElementSibling';\r\n\r\n        const getEle = (t) => {\r\n            let n = null;\r\n            let next = true;\r\n            while (next) {\r\n                n = getNextElement(t);\r\n                if (n) {\r\n                    next = false;\r\n                } else {\r\n                    if (t && t[m]) {\r\n                        n = getNextElement(t[m]);\r\n                        if (n) {\r\n                            break;\r\n                        }\r\n                    } else {\r\n                        next = false;\r\n                    }\r\n                }\r\n            }\r\n            return n;\r\n        };\r\n\r\n        return getEle(nextTr);\r\n    }\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { DataResult } from './state';\r\nimport { Observable } from 'rxjs';\r\nimport { InjectionToken } from '@angular/core';\r\n\r\nexport const DATAGRID_REST_SERVICEE = new InjectionToken<RestService>('DataGrid Request Data Service.');\r\n\r\nexport abstract class RestService {\r\n    abstract getData(url: string, param?: any): Observable<DataResult>;\r\n}\r\n\r\nexport class DefaultRestService implements RestService {\r\n    constructor(private http: HttpClient) {}\r\n    getData(url: string, param?: any): Observable<DataResult> {\r\n        return this.http.get<DataResult>(url, { params: param });\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-21 10:37:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-08-22 19:15:49\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n\r\nexport type DatagridValidatorType = 'required' | 'min' | 'max' |'minLength' |'maxLength' | 'email' | 'requriedTrue' | 'pattern' | string;\r\n\r\nexport interface DatagridValidator {\r\n    type: DatagridValidatorType;\r\n    value?: any;\r\n    messager?: string;\r\n}\r\n\r\nexport const DefaultDatagridValidatorMessager = {\r\n    required: 'æ­¤å­æ®µä¸è½ä¸ºç©ºã',\r\n    min: 'æå°å¼ä¸è½å°äº${0}',\r\n    max: 'æå¤§å¼ä¸è½å¤§äº${0}',\r\n    minlength: 'è³å°è¾å¥${0}ä¸ªå­ç¬¦',\r\n    maxlength: 'å­ç¬¦é¿åº¦ä¸è½å¤§äº${0}',\r\n    email: 'Email æ ¼å¼ä¸æ­£ç¡®',\r\n    requriedtrue: 'å¡å¿éä¸­',\r\n    pattern: 'è¾å¥çæ ¼å¼ä¸æ­£ç¡®ã'\r\n};\r\n\r\n\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-21 15:44:21\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-08-22 19:19:49\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Injectable } from '@angular/core';\r\nimport { DatagridValidator } from '../types/datagrid-validator';\r\nimport { DefaultDatagridValidatorMessager as ddvm } from '../types/datagrid-validator';\r\n@Injectable()\r\nexport class ValidatorMessagerService {\r\n\r\n    getValidatorErrorMessage(validatorName: string, validators: DatagridValidator[]) {\r\n        validatorName = validatorName.toLowerCase();\r\n        const validator = validators.find(v => v.type.toLowerCase() === validatorName);\r\n        if (validator && validator.messager) {\r\n            return validator.messager;\r\n        } else {\r\n            return ddvm[validatorName] ? ddvm[validatorName] : 'éªè¯ä¸éè¿ï¼';\r\n        }\r\n    }\r\n\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-08-21 15:13:50\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nexport class DomHandler {\r\n    public static hasClass(element: any, className: string): boolean {\r\n        if (element.classList) {\r\n            return Array.from(element.classList).filter(n => n === className).length > 0;\r\n        } else {\r\n            return element.className.indexOf(className) > -1;\r\n        }\r\n    }\r\n\r\n    public static removeClass(element: any, className: string): void {\r\n        if (element.classList) {\r\n            element.classList.remove(className);\r\n        } else {\r\n            element.className = element.className.replace(new RegExp('(^|\\\\b)' + className.split(' ').join('|') + '(\\\\b|$)', 'gi'), ' ');\r\n        }\r\n    }\r\n\r\n    public static findSingle(element: any, selector: string): any {\r\n        if (element) {\r\n            return element.querySelector(selector);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    public static getOffset(el) {\r\n        const rect = el.getBoundingClientRect();\r\n\r\n        return {\r\n            top: rect.top + document.body.scrollTop,\r\n            left: rect.left + document.body.scrollLeft\r\n        };\r\n    }\r\n\r\n    public static getOuterHeight(el, margin?) {\r\n        let height = el.offsetHeight;\r\n\r\n        if (margin) {\r\n            const style = getComputedStyle(el);\r\n            height += parseFloat(style.marginTop) + parseFloat(style.marginBottom);\r\n        }\r\n\r\n        return height;\r\n    }\r\n\r\n    public static getOuterWidth(el, margin?) {\r\n        let width = el.offsetWidth;\r\n\r\n        if (margin) {\r\n            const style = getComputedStyle(el);\r\n            width += parseFloat(style.marginLeft) + parseFloat(style.marginRight);\r\n        }\r\n\r\n        return width;\r\n    }\r\n}\r\n","import { LocaleService } from '@farris/ui-locale';\r\nimport { Injectable, Injector, EventEmitter, Optional } from '@angular/core';\r\nimport { Compare, EntityFilter } from '@farris/ui-common/types';\r\nimport { DatagridFacadeService } from './datagrid-facade.service';\r\nimport { Utils } from './../utils/utils';\r\nimport { DataColumn, ColumnFilterType, ColumnFilter, FilterCondition } from '../types/data-column';\r\nimport { DatagridColumnsHelper } from './datagrid-columns.helper';\r\n\r\n@Injectable()\r\nexport class DatagridFilterService {\r\n    removeField = new EventEmitter<string>();\r\n\r\n    constructor(private dfs: DatagridFacadeService, private localeSer: LocaleService, private inject: Injector) {\r\n    }\r\n\r\n    validateRowData(rowData: any, conditions: { [field: string]: FilterCondition }) {\r\n        if (!conditions || Object.keys(conditions).length === 0) {\r\n            return true;\r\n        }\r\n        return this.checkAllFieldInRowData(rowData, conditions);\r\n    }\r\n\r\n    executeFilter(data: [], conditions: any): any[] {\r\n        if ( this.dfs.getState().enableSmartFilter) {\r\n            return this.executeSmartFilter(data, conditions);\r\n        }\r\n\r\n        if (data && data.length) {\r\n            return data.filter(n => this.validateRowData(n, conditions));\r\n        }\r\n        return data;\r\n    }\r\n\r\n    private getCompareResult(fieldDataValue: any, operator: Compare, targetValue: any) {\r\n        const op = parseInt('' + operator, 10);\r\n        switch (op) {\r\n            case Compare.Equal:\r\n                return fieldDataValue == targetValue;\r\n            case Compare.NotEqual:\r\n                return ('' + fieldDataValue).toLowerCase() !== ('' + targetValue).toLowerCase();\r\n            case Compare.Greater:\r\n                return fieldDataValue > targetValue;\r\n            case Compare.GreaterOrEqual:\r\n                return fieldDataValue >= targetValue;\r\n            case Compare.Less:\r\n                return fieldDataValue < targetValue;\r\n            case Compare.LessOrEqual:\r\n                return fieldDataValue <= targetValue;\r\n            case Compare.Like:\r\n                return ('' + fieldDataValue).toLowerCase().indexOf(targetValue.toLowerCase()) > -1;\r\n            case Compare.NotLike:\r\n                return ('' + fieldDataValue).toLowerCase().indexOf(targetValue.toLowerCase()) === -1;\r\n            case Compare.In:\r\n                targetValue = targetValue || [];\r\n                return targetValue.findIndex( n => n == fieldDataValue) > -1;\r\n            case 1001: // Empty\r\n                return fieldDataValue === '';\r\n            case 1002:  // NotEmpty\r\n                return fieldDataValue !== '';\r\n            case 1003: // Null\r\n                return fieldDataValue === null;\r\n            case 1004: // NotNull\r\n                return fieldDataValue !== null;\r\n        }\r\n    }\r\n\r\n    private getRelationResult(result1: boolean, relation: 'and' | 'or', result2: boolean) {\r\n        const _relation = relation.toLowerCase();\r\n        if (_relation === 'and') {\r\n            return result1 && result2;\r\n        } else {\r\n            return result1 || result2;\r\n        }\r\n    }\r\n\r\n    private checkAllFieldResult(resultObj: { [key: string]: boolean }) {\r\n        if (!resultObj) {\r\n            return true;\r\n        }\r\n\r\n        return Object.values(resultObj).reduce((c, n) => {\r\n            return c && n;\r\n        }, true);\r\n    }\r\n\r\n    private checkAllFieldInRowData(rowData: any, conditions: { [field: string]: FilterCondition }) {\r\n        // this.state = conditions;\r\n        let resultObj = null;\r\n        if (conditions) {\r\n            const fields = Object.keys(conditions);\r\n            resultObj = {};\r\n            fields.forEach(field => {\r\n                let fieldValue = Utils.getValue(field, rowData);\r\n                const columnObj = this.dfs.getColumn(field);\r\n                if (columnObj && columnObj.isMultilingualField) {\r\n                    fieldValue = Utils.getMultilingualValue(fieldValue, this.localeSer.localeId);\r\n                }\r\n\r\n                const where = conditions[field];\r\n                const { value1, operator1, relation, operator2, value2 } = where;\r\n                if (where) {\r\n                    const result = this.getCompareResult(fieldValue, operator1, value1);\r\n                    resultObj[field] = result;\r\n                    if (relation) {\r\n                        const result2 = this.getCompareResult(fieldValue, operator2, value2);\r\n                        resultObj[field] = this.getRelationResult(result, relation, result2);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        return this.checkAllFieldResult(resultObj);\r\n    }\r\n\r\n    removeFilterField(field) {\r\n        this.removeField.emit(field);\r\n    }\r\n\r\n    convertFilterCondition2String(conditions: any) {\r\n        if (!conditions) {\r\n            return '';\r\n        }\r\n        let str = '';\r\n        const andText = this.localeSer.getValue('datagrid.filter.and');\r\n        const orText = this.localeSer.getValue('datagrid.filter.or');\r\n        const and = `<span class='badge badge-success'>${andText}</span>`;\r\n        const and2 = `<span class='badge badge-info'>${andText}</span>`;\r\n        const or = `<span class='badge badge-warning'>${orText}</span>`;\r\n        const lbracket = `<b>ã</b>`;\r\n        const rbracket = `<b>ã</b>`;\r\n        const ellipsis = `[ <span class=\"ellipsis\" title=\"$title$\">  $value$<i class=\"f-icon f-icon-lookup\"></i></span> ]`;\r\n\r\n        str = Object.keys(conditions).reduce((c, r) => {\r\n            const filter = conditions[r];\r\n            const col = this.dfs.getColumn(r);\r\n            const t = `<b>${col.title}</b>`;\r\n\r\n            let s = ` ${t} ${this.getCompareString(filter.operator1)} ${Utils.escapeValue(filter.value1)}  `;\r\n            if (filter.operator1 == Compare.In) {\r\n                let txt = filter.value1;\r\n                let txt2 = txt;\r\n                if (col.filter.type === ColumnFilterType.enum) {\r\n                    const enumOpts = DatagridColumnsHelper.getFilterEnumOptions(col);\r\n                    txt = DatagridColumnsHelper.getEnumText(enumOpts, filter.value1);\r\n                    txt2 = txt.split(',').slice(0, 2).join(',');\r\n                } else {\r\n                    txt2 = txt.slice(0, 2).join(',');\r\n                }\r\n\r\n                s = ` ${t} ${this.getCompareString(filter.operator1)} [ ${txt} ]  `;\r\n                if (filter.value1.length > 2) {\r\n                    s = ` ${t} ${this.getCompareString(filter.operator1)} ${ellipsis.replace('$title$', txt).replace('$value$', txt2)}  `;\r\n                }\r\n            } else {\r\n                if (filter.operator1 == Compare.Equal && Array.isArray(filter.value1)) {\r\n                    if (!filter.value1.length) {\r\n                        s = ` ${t} ${this.getCompareString(filter.operator1)} ''  `;\r\n                    }\r\n                }\r\n            }\r\n            if (filter.relation) {\r\n                const s2 = `${t} ${this.getCompareString(filter.operator2)} ${filter.value2}`;\r\n                s = `${lbracket} ${s} ${filter.relation === 'and' ? and2 : or} ${s2} ${rbracket}`;\r\n            }\r\n            return `${c} <span class=\"filter-field filter-column-${r}\"> ${s} AND </span>`;\r\n        }, '');\r\n        const lastANDidx = str.lastIndexOf('AND');\r\n        let resultStr = str.substr(0, lastANDidx);\r\n        resultStr += str.substr(lastANDidx + 3);\r\n        return resultStr.replace(/AND/g, and).replace(/OR/g, or);\r\n    }\r\n\r\n    private getCompareString(operator: Compare) {\r\n        const op = parseInt('' + operator, 10);\r\n        let code = '';\r\n        switch (op) {\r\n            case Compare.Equal:\r\n            case Compare.NotEqual:\r\n            case Compare.Greater:\r\n            case Compare.GreaterOrEqual:\r\n            case Compare.Less:\r\n            case Compare.LessOrEqual:\r\n            case Compare.Like:\r\n            case Compare.NotLike:\r\n            case Compare.In:\r\n                code = Compare[op];\r\n                code = code[0].toLowerCase() + code.substr(1);\r\n                return this.localeSer.getValue('datagrid.filter.operators.' + code);\r\n            case 1001: // Empty\r\n                return ' ' + this.localeSer.getValue('datagrid.filter.operators.empty');\r\n            case 1002:  // NotEmpty\r\n                return ' ' + this.localeSer.getValue('datagrid.filter.operators.notEmpty');\r\n            case 1003: // Null\r\n                return ' ' + this.localeSer.getValue('datagrid.filter.operators.null');\r\n            case 1004: // NotNull\r\n                return ' ' + this.localeSer.getValue('datagrid.filter.operators.notNull');\r\n        }\r\n    }\r\n\r\n\r\n    convert2FilterArray(condition: { [field: string]: any }): EntityFilter[] {\r\n        const filterArr = [];\r\n        if (condition) {\r\n            const fields = Object.keys(condition);\r\n            if (fields && fields.length) {\r\n                fields.forEach(field => {\r\n                    const obj = { filterField: field, value: '', lbracket: '', rbracket: '', relation: 1, compare: 0 };\r\n                    const conditionVal = condition[field];\r\n                    if (typeof conditionVal === 'object') {\r\n                        obj.compare = conditionVal.operator1;\r\n                        obj.value = conditionVal.value1;\r\n                        filterArr.push(obj);\r\n                        if (conditionVal.value2) {\r\n                            obj.lbracket = '(';\r\n                            obj.relation = conditionVal.relation === 'and' ? 1 : 2;\r\n\r\n                            const obj2 = { filterField: field, value: '', lbracket: '', rbracket: ')', relation: 1, compare: 0 };\r\n                            obj2.compare = conditionVal.operator2;\r\n                            obj2.value = conditionVal.value2;\r\n\r\n                            filterArr.push(obj2);\r\n                        } else {\r\n                            if (conditionVal.operator2) {\r\n                                const op2 = parseInt('' + conditionVal.operator2, 10); //  Empty: 1001, NotEmpty: 1002\r\n                                if (op2 === 1001 || op2 === 1002) {\r\n                                    obj.lbracket = '(';\r\n                                    obj.relation = conditionVal.relation === 'and' ? 1 : 2;\r\n\r\n                                    const obj2 = { filterField: field, value: '', lbracket: '', rbracket: ')', relation: 1, compare: 0 };\r\n                                    obj2.compare = op2 === 1001 ? Compare.Equal : Compare.NotEqual;\r\n                                    obj2.value = '';\r\n\r\n                                    filterArr.push(obj2);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                    return obj;\r\n                });\r\n            }\r\n        }\r\n\r\n        if (filterArr.length) {\r\n            filterArr[filterArr.length - 1].relation = 0;\r\n        }\r\n\r\n        return filterArr;\r\n    }\r\n\r\n    createColumnFilterOptions(col: DataColumn) {\r\n        let filterTypeOptions: ColumnFilter = {\r\n            type: ColumnFilterType.string,\r\n            enableOperator: true\r\n        };\r\n        if (col.editor) {\r\n            switch (col.editor.type) {\r\n                case 'textarea':\r\n                case 'textbox':\r\n                case 'language-textbox':\r\n                    filterTypeOptions = {\r\n                        type: ColumnFilterType.string,\r\n                        enableOperator: true\r\n                    };\r\n                    break;\r\n                case 'checkbox':\r\n                case 'switch':\r\n                    filterTypeOptions = {\r\n                        type: ColumnFilterType.boolean,\r\n                        enableOperator: false\r\n                    };\r\n                    break;\r\n                case 'numberbox':\r\n                    filterTypeOptions = {\r\n                        type: ColumnFilterType.number,\r\n                        enableOperator: true\r\n                    };\r\n                    break;\r\n                case 'combolist':\r\n                case 'select':\r\n                    filterTypeOptions = {\r\n                        type: ColumnFilterType.enum,\r\n                        enableOperator: true,\r\n                        options: col.editor.options\r\n                    };\r\n                    break;\r\n                case 'datepicker':\r\n                    filterTypeOptions = {\r\n                        type: col['dataType'] === 'datetime' ? ColumnFilterType.datetime : ColumnFilterType.date,\r\n                        enableOperator: true,\r\n                        options: {\r\n                            dateFormat: col.editor.options.dateFormat,\r\n                            returnFormat: col.editor.options.returnFormat\r\n                        }\r\n                    };\r\n                    break;\r\n                case 'timepicker':\r\n                    filterTypeOptions = {\r\n                        type: ColumnFilterType.time,\r\n                        enableOperator: true\r\n                    };\r\n                    break;\r\n\r\n            }\r\n        } else if (col.formatter) {\r\n            if (typeof col.formatter === 'object' && Object.keys(col.formatter).length) {\r\n                const options: any = col.formatter['options'];\r\n                switch (col.formatter['type']) {\r\n                    case 'number':\r\n                        filterTypeOptions = {\r\n                            type: ColumnFilterType.number,\r\n                            enableOperator: true\r\n                        };\r\n                        break;\r\n                    case 'enum':\r\n                        filterTypeOptions = {\r\n                            type: ColumnFilterType.enum,\r\n                            enableOperator: true,\r\n                            options\r\n                        };\r\n                        break;\r\n                    case 'boolean':\r\n                        filterTypeOptions = {\r\n                            type: ColumnFilterType.boolean,\r\n                            enableOperator: false\r\n                        };\r\n                        break;\r\n                    case 'datetime':\r\n                        let tye = ColumnFilterType.datetime;\r\n                        let fmt = 'yyyy-MM-dd';\r\n                        let returnFmt = 'yyyy-MM-dd';\r\n                        if (options && options.format) {\r\n                            fmt = options.format;\r\n                            if (fmt.indexOf('HH:') == -1) {\r\n                                tye = ColumnFilterType.date;\r\n                            } else {\r\n                                returnFmt += ' HH:mm';\r\n                                if (fmt.indexOf('ss') > -1) {\r\n                                    returnFmt += ':ss';\r\n                                }\r\n                            }\r\n                        } else {\r\n                            tye = ColumnFilterType.date;\r\n                        }\r\n                        filterTypeOptions = {\r\n                            type: tye,\r\n                            enableOperator: true\r\n                        };\r\n\r\n                        filterTypeOptions.options = { dateFormat: fmt, returnFormat: returnFmt };\r\n                        break;\r\n                    default:\r\n                        filterTypeOptions = {\r\n                            type: ColumnFilterType.string,\r\n                            enableOperator: true\r\n                        };\r\n                }\r\n            }\r\n        } else {\r\n            filterTypeOptions = {\r\n                type: ColumnFilterType.string,\r\n                enableOperator: true\r\n            };\r\n        }\r\n        return filterTypeOptions;\r\n    }\r\n\r\n    //#region  Smart Filter\r\n\r\n    convertSmartFilter2EntityFilter(conditions: any[]) {\r\n        if (conditions && conditions.length) {\r\n            return conditions.map(n => {\r\n                return n;\r\n            });\r\n        }\r\n\r\n        return [];\r\n    }\r\n\r\n    private validateRowData2(rowData: any, conditions: any) {\r\n        if (!conditions || conditions.length === 0) {\r\n            return true;\r\n        }\r\n        return this.checkRowDataWithCondition(rowData, conditions);\r\n    }\r\n\r\n    private checkRowDataWithCondition(rowData: any, conditions) {\r\n        let resultObj = null;\r\n        if (conditions) {\r\n            resultObj = {};\r\n            conditions.forEach(condition => {\r\n                const field = condition.FilterField;\r\n                let fieldValue = Utils.getValue(field, rowData);\r\n                const columnObj = this.dfs.getColumn(field);\r\n                if (columnObj && columnObj.isMultilingualField) {\r\n                    fieldValue = Utils.getMultilingualValue(fieldValue, this.localeSer.localeId);\r\n                }\r\n\r\n                const where = condition;\r\n                const { Value, Relation, Compare: operator1 } = where;\r\n                if (where) {\r\n                    const r = this.getCompareResult(fieldValue, operator1, Value);\r\n                    if (resultObj[field] === undefined) {\r\n                        resultObj[field] = [ r ];\r\n                    } else {\r\n                        resultObj[field].push(r);\r\n                    }\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n        // return this.checkAllFieldResult(resultObj);\r\n        const fields = Object.keys(resultObj);\r\n        const result = [];\r\n        fields.forEach( (f) => {\r\n            const _filters = conditions.filter(n => n.FilterField === f);\r\n            if (resultObj[f].length === 1) {\r\n                result.push(resultObj[f][0]);\r\n            } else {\r\n                if (_filters[0].Relation === 1 && resultObj[f].length === 2) {  // and\r\n                    result.push(resultObj[f][0] && resultObj[f][1]);\r\n                } else {  // or\r\n                    result.push(resultObj[f].indexOf(true) > -1);\r\n                }\r\n            }\r\n        });\r\n\r\n        return result.indexOf(false) === -1;\r\n    }\r\n\r\n    executeSmartFilter(data: [], conditions: any[]) {\r\n        if (data && data.length) {\r\n            return data.filter(n => this.validateRowData2(n, conditions));\r\n        }\r\n        return data;\r\n    }\r\n\r\n    //#endregion\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\n/**\r\n * @deprecated åé¨åç»ä»¶å·²åºå¼ï¼åé¡µç»ä»¶ä½¿ç¨farris-ui ä¸­çå¬å±ç»ä»¶\r\n */\r\n@NgModule({\r\n    declarations: [],\r\n    imports: [ CommonModule ],\r\n    exports: [],\r\n    providers: [\r\n    ],\r\n})\r\nexport class NgxPaginationModule {}\r\n","\r\nexport class PaginationService {}\r\n","import { InjectionToken } from '@angular/core';\r\n\r\nexport const SCROLLBAR_CONFIG = new InjectionToken(\r\n    'PERFECT_SCROLLBAR_CONFIG'\r\n);\r\n\r\nexport class Geometry {\r\n    public x: number;\r\n    public y: number;\r\n\r\n    public w: number;\r\n    public h: number;\r\n\r\n    constructor(x: number, y: number, w: number, h: number) {\r\n        this.x = x;\r\n        this.y = y;\r\n        this.w = w;\r\n        this.h = h;\r\n    }\r\n}\r\n\r\nexport class Position {\r\n    public x: number | 'start' | 'end';\r\n    public y: number | 'start' | 'end';\r\n\r\n    constructor(x: number | 'start' | 'end', y: number | 'start' | 'end') {\r\n        this.x = x;\r\n        this.y = y;\r\n    }\r\n}\r\n\r\nexport type ScrollbarEvent =\r\n    | 'psScrollY'\r\n    | 'psScrollX'\r\n    | 'psScrollUp'\r\n    | 'psScrollDown'\r\n    | 'psScrollLeft'\r\n    | 'psScrollRight'\r\n    | 'psYReachEnd'\r\n    | 'psYReachStart'\r\n    | 'psXReachEnd'\r\n    | 'psXReachStart';\r\n\r\nexport const ScrollbarEvents: ScrollbarEvent[] = [\r\n    'psScrollY',\r\n    'psScrollX',\r\n\r\n    'psScrollUp',\r\n    'psScrollDown',\r\n    'psScrollLeft',\r\n    'psScrollRight',\r\n\r\n    'psYReachEnd',\r\n    'psYReachStart',\r\n    'psXReachEnd',\r\n    'psXReachStart'\r\n];\r\n\r\nexport interface ScrollbarConfigInterface {\r\n    handlers?: string[];\r\n\r\n    wheelSpeed?: number;\r\n    swipeEasing?: boolean;\r\n\r\n    suppressScrollX?: boolean;\r\n    suppressScrollY?: boolean;\r\n\r\n    wheelPropagation?: boolean;\r\n    useBothWheelAxes?: boolean;\r\n\r\n    scrollingThreshold?: number;\r\n\r\n    minScrollbarLength?: number;\r\n    maxScrollbarLength?: number;\r\n\r\n    scrollXMarginOffset?: number;\r\n    scrollYMarginOffset?: number;\r\n}\r\n\r\nexport class ScrollbarConfig implements ScrollbarConfigInterface {\r\n    public handlers?: string[];\r\n\r\n    public wheelSpeed?: number;\r\n    public swipeEasing?: boolean;\r\n\r\n    public suppressScrollX?: boolean;\r\n    public suppressScrollY?: boolean;\r\n\r\n    public wheelPropagation?: boolean;\r\n    public useBothWheelAxes?: boolean;\r\n\r\n    public scrollingThreshold?: number;\r\n\r\n    public minScrollbarLength?: number;\r\n    public maxScrollbarLength?: number;\r\n\r\n    public scrollXMarginOffset?: number;\r\n    public scrollYMarginOffset?: number;\r\n\r\n    constructor(config: ScrollbarConfigInterface = {}) {\r\n        this.assign(config);\r\n    }\r\n\r\n    public assign(config: ScrollbarConfigInterface = {}) {\r\n        for (const key in config) {\r\n            this[key as keyof ScrollbarConfig] = config[key as keyof ScrollbarConfigInterface];\r\n        }\r\n    }\r\n}\r\n","import { AfterViewInit } from '@angular/core';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-07-29 08:14:22\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-10 15:11:09\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { PLATFORM_ID } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\n\r\nimport PerfectScrollbar from 'perfect-scrollbar';\r\n\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\n\r\nimport { Subject, fromEvent, Observable, interval } from 'rxjs';\r\nimport { auditTime, takeUntil, debounceTime, throttle } from 'rxjs/operators';\r\n\r\nimport {\r\n    NgZone, Inject, Optional, ElementRef, Directive,\r\n    OnInit, DoCheck, OnChanges, OnDestroy, Input, Output, EventEmitter,\r\n    SimpleChanges, KeyValueDiffer, KeyValueDiffers\r\n} from '@angular/core';\r\n\r\nimport { Geometry, Position } from './scrollbar.interfaces';\r\n\r\nimport {\r\n    SCROLLBAR_CONFIG, ScrollbarConfig, ScrollbarConfigInterface,\r\n    ScrollbarEvent, ScrollbarEvents\r\n} from './scrollbar.interfaces';\r\n\r\n@Directive({\r\n    selector: '[scrollbar]',\r\n    exportAs: 'ngxScrollbar'\r\n})\r\nexport class ScrollbarDirective implements OnInit, OnDestroy, DoCheck, OnChanges, AfterViewInit {\r\n    instance: PerfectScrollbar | null = null;\r\n\r\n    private ro: ResizeObserver | null = null;\r\n\r\n    private timeout: number | null = null;\r\n    private animation: number | null = null;\r\n\r\n    private configDiff: KeyValueDiffer<string, any> | null = null;\r\n\r\n    private readonly ngDestroy: Subject<void> = new Subject();\r\n\r\n    @Input() disabled = false;\r\n\r\n    @Input('scrollbar') config?: ScrollbarConfigInterface;\r\n\r\n    @Output() psScrollY: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollX: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() psScrollUp: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollDown: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollLeft: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollRight: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() psYReachEnd: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psYReachStart: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psXReachEnd: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psXReachStart: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    constructor(private zone: NgZone, private differs: KeyValueDiffers,\r\n                public elementRef: ElementRef, @Inject(PLATFORM_ID) private platformId: any,\r\n                @Optional() @Inject(SCROLLBAR_CONFIG) private defaults: ScrollbarConfigInterface) { }\r\n\r\n    ngOnInit(): void {\r\n        if (!this.disabled && isPlatformBrowser(this.platformId)) {\r\n            const config = new ScrollbarConfig(this.defaults);\r\n\r\n            config.assign(this.config); // Custom configuration\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                setTimeout(() => {\r\n                    this.instance = new PerfectScrollbar(this.elementRef.nativeElement, config);\r\n                });\r\n            });\r\n\r\n            if (!this.configDiff) {\r\n                this.configDiff = this.differs.find(this.config || {}).create();\r\n\r\n                this.configDiff.diff(this.config || {});\r\n            }\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                this.ro = new ResizeObserver(() => {\r\n                    this.update();\r\n                });\r\n\r\n                if (this.elementRef.nativeElement.children[0]) {\r\n                    this.ro.observe(this.elementRef.nativeElement.children[0]);\r\n                }\r\n\r\n                this.ro.observe(this.elementRef.nativeElement);\r\n            });\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                ScrollbarEvents.forEach((eventName: ScrollbarEvent) => {\r\n                    const eventType = eventName.replace(/([A-Z])/g, (c) => `-${c.toLowerCase()}`);\r\n\r\n                    if (eventName.indexOf('X') > -1 || eventName.indexOf('Left') > -1 || eventName.indexOf('Right') > -1) {\r\n                        fromEvent<Event>(this.elementRef.nativeElement, eventType).subscribe((event: Event) => {\r\n                            this[eventName].emit(event);\r\n                        });\r\n                    } else {\r\n                        fromEvent<Event>(this.elementRef.nativeElement, eventType).pipe(\r\n                            // debounceTime(20),\r\n                            // throttle(ev => interval(20)),\r\n                            auditTime(20),  // auditTime éé»æå®çæ¶é´ï¼å¨æ­¤æ¶é´åå¿½ç¥ææååºçå¼ï¼æ¶é´è¿åï¼ååºææ°çå¼\r\n                            takeUntil(this.ngDestroy)\r\n                        )\r\n                        .subscribe((event: Event) => {\r\n                            this[eventName].emit(event);\r\n                        });\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        // this.zone.runOutsideAngular(() => {\r\n        //     this.instance = new PerfectScrollbar(this.elementRef.nativeElement, this.config);\r\n        // });\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.ngDestroy.next();\r\n            this.ngDestroy.complete();\r\n\r\n            if (this.ro) {\r\n                this.ro.disconnect();\r\n            }\r\n\r\n            if (this.timeout && typeof window !== 'undefined') {\r\n                window.clearTimeout(this.timeout);\r\n            }\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                if (this.instance) {\r\n                    this.instance.destroy();\r\n                }\r\n            });\r\n\r\n            this.instance = null;\r\n        }\r\n    }\r\n\r\n    ngDoCheck(): void {\r\n        if (!this.disabled && this.configDiff && isPlatformBrowser(this.platformId)) {\r\n            const changes = this.configDiff.diff(this.config || {});\r\n\r\n            if (changes) {\r\n                this.ngOnDestroy();\r\n\r\n                this.ngOnInit();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges): void {\r\n        if (changes['disabled'] && !changes['disabled'].isFirstChange() && isPlatformBrowser(this.platformId)) {\r\n            if (changes['disabled'].currentValue !== changes['disabled'].previousValue) {\r\n                if (changes['disabled'].currentValue === true) {\r\n                    this.ngOnDestroy();\r\n                } else if (changes['disabled'].currentValue === false) {\r\n                    this.ngOnInit();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public ps(): PerfectScrollbar | null {\r\n        return this.instance;\r\n    }\r\n\r\n    public update(): void {\r\n        if (typeof window !== 'undefined') {\r\n            if (this.timeout) {\r\n                window.clearTimeout(this.timeout);\r\n            }\r\n\r\n            this.timeout = window.setTimeout(() => {\r\n                if (!this.disabled && this.configDiff) {\r\n                    try {\r\n                        this.zone.runOutsideAngular(() => {\r\n                            if (this.instance) {\r\n                                this.instance.update();\r\n                            }\r\n                        });\r\n                    } catch (error) {\r\n                        // Update can be finished after destroy so catch errors\r\n                    }\r\n                }\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    public geometry(prefix: string = 'scroll'): Geometry {\r\n        return new Geometry(\r\n            this.elementRef.nativeElement[prefix + 'Left'],\r\n            this.elementRef.nativeElement[prefix + 'Top'],\r\n            this.elementRef.nativeElement[prefix + 'Width'],\r\n            this.elementRef.nativeElement[prefix + 'Height']\r\n        );\r\n    }\r\n\r\n    public position(absolute: boolean = false): Position {\r\n        if (!absolute && this.instance) {\r\n            return new Position(\r\n                this.instance.reach.x || 0,\r\n                this.instance.reach.y || 0\r\n            );\r\n        } else {\r\n            return new Position(\r\n                this.elementRef.nativeElement.scrollLeft,\r\n                this.elementRef.nativeElement.scrollTop\r\n            );\r\n        }\r\n    }\r\n\r\n    public scrollable(direction: string = 'any'): boolean {\r\n        const element = this.elementRef.nativeElement;\r\n\r\n        if (direction === 'any') {\r\n            return element.classList.contains('ps--active-x') ||\r\n                element.classList.contains('ps--active-y');\r\n        } else if (direction === 'both') {\r\n            return element.classList.contains('ps--active-x') &&\r\n                element.classList.contains('ps--active-y');\r\n        } else {\r\n            return element.classList.contains('ps--active-' + direction);\r\n        }\r\n    }\r\n\r\n    public scrollTo(x: number, y?: number, speed?: number): void {\r\n        if (!this.disabled) {\r\n            if (y == null && speed == null) {\r\n                this.animateScrolling('scrollTop', x, speed);\r\n            } else {\r\n                if (x != null) {\r\n                    this.animateScrolling('scrollLeft', x, speed);\r\n                }\r\n\r\n                if (y != null) {\r\n                    this.animateScrolling('scrollTop', y, speed);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    public scrollToX(x: number, speed?: number): void {\r\n        this.animateScrolling('scrollLeft', x, speed);\r\n    }\r\n\r\n    public scrollToY(y: number, speed?: number): void {\r\n        this.animateScrolling('scrollTop', y, speed);\r\n    }\r\n\r\n    public scrollToTop(offset?: number, speed?: number): void {\r\n        this.animateScrolling('scrollTop', (offset || 0), speed);\r\n    }\r\n\r\n    public scrollToLeft(offset?: number, speed?: number): void {\r\n        this.animateScrolling('scrollLeft', (offset || 0), speed);\r\n    }\r\n\r\n    public scrollToRight(offset?: number, speed?: number): void {\r\n        const left = this.elementRef.nativeElement.scrollWidth -\r\n            this.elementRef.nativeElement.clientWidth;\r\n\r\n        this.animateScrolling('scrollLeft', left - (offset || 0), speed);\r\n    }\r\n\r\n    public scrollToBottom(offset?: number, speed?: number): void {\r\n        const top = this.elementRef.nativeElement.scrollHeight -\r\n            this.elementRef.nativeElement.clientHeight;\r\n\r\n        this.animateScrolling('scrollTop', top - (offset || 0), speed);\r\n    }\r\n\r\n    public scrollToElement(qs: string, offset?: number, speed?: number): void {\r\n        const element = this.elementRef.nativeElement.querySelector(qs);\r\n\r\n        if (element) {\r\n            const elementPos = element.getBoundingClientRect();\r\n\r\n            const scrollerPos = this.elementRef.nativeElement.getBoundingClientRect();\r\n\r\n            if (this.elementRef.nativeElement.classList.contains('ps--active-x')) {\r\n                const currentPos = this.elementRef.nativeElement['scrollLeft'];\r\n\r\n                const position = elementPos.left - scrollerPos.left + currentPos;\r\n\r\n                this.animateScrolling('scrollLeft', position + (offset || 0), speed);\r\n            }\r\n\r\n            if (this.elementRef.nativeElement.classList.contains('ps--active-y')) {\r\n                const currentPos = this.elementRef.nativeElement['scrollTop'];\r\n\r\n                const position = elementPos.top - scrollerPos.top + currentPos;\r\n\r\n                this.animateScrolling('scrollTop', position + (offset || 0), speed);\r\n            }\r\n        }\r\n    }\r\n\r\n    private animateScrolling(target: string, value: number, speed?: number): void {\r\n        if (this.animation) {\r\n            window.cancelAnimationFrame(this.animation);\r\n\r\n            this.animation = null;\r\n        }\r\n\r\n        if (!speed || typeof window === 'undefined') {\r\n            this.elementRef.nativeElement[target] = value;\r\n        } else if (value !== this.elementRef.nativeElement[target]) {\r\n            let newValue = 0;\r\n            let scrollCount = 0;\r\n\r\n            let oldTimestamp = performance.now();\r\n            let oldValue = this.elementRef.nativeElement[target];\r\n\r\n            const cosParameter = (oldValue - value) / 2;\r\n\r\n            const step = (newTimestamp: number) => {\r\n                scrollCount += Math.PI / (speed / (newTimestamp - oldTimestamp));\r\n\r\n                newValue = Math.round(value + cosParameter + cosParameter * Math.cos(scrollCount));\r\n\r\n                // Only continue animation if scroll position has not changed\r\n                if (this.elementRef.nativeElement[target] === oldValue) {\r\n                    if (scrollCount >= Math.PI) {\r\n                        this.animateScrolling(target, value, 0);\r\n                    } else {\r\n                        this.elementRef.nativeElement[target] = newValue;\r\n\r\n                        // On a zoomed out page the resulting offset may differ\r\n                        oldValue = this.elementRef.nativeElement[target];\r\n\r\n                        oldTimestamp = newTimestamp;\r\n\r\n                        this.animation = window.requestAnimationFrame(step);\r\n                    }\r\n                }\r\n            };\r\n\r\n            window.requestAnimationFrame(step);\r\n        }\r\n    }\r\n}\r\n","import { Subject, merge, fromEvent } from 'rxjs';\r\nimport { mapTo, takeUntil, distinctUntilChanged } from 'rxjs/operators';\r\n\r\nimport { PLATFORM_ID } from '@angular/core';\r\nimport { isPlatformBrowser } from '@angular/common';\r\nimport {\r\n    NgZone, Inject, Component,\r\n    OnInit, OnDestroy, DoCheck, Input, Output, EventEmitter, HostBinding,\r\n    ViewChild, ViewEncapsulation, ChangeDetectorRef\r\n} from '@angular/core';\r\n\r\nimport { ScrollbarDirective } from './scrollbar.directive';\r\n\r\nimport {\r\n    ScrollbarEvent, ScrollbarEvents,\r\n    ScrollbarConfigInterface\r\n} from './scrollbar.interfaces';\r\n\r\n// styleUrls: [\r\n//     './scrollbar.component.css'\r\n// ],\r\n\r\n@Component({\r\n    selector: 'scrollbar',\r\n    exportAs: 'ngxScrollbar',\r\n    templateUrl: './scrollbar.component.html',\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class ScrollbarComponent implements OnInit, OnDestroy, DoCheck {\r\n    public states: any = {};\r\n\r\n    public indicatorX = false;\r\n    public indicatorY = false;\r\n\r\n    public interaction = false;\r\n\r\n    private scrollPositionX = 0;\r\n    private scrollPositionY = 0;\r\n\r\n    private scrollDirectionX = 0;\r\n    private scrollDirectionY = 0;\r\n\r\n    private usePropagationX = false;\r\n    private usePropagationY = false;\r\n\r\n    private allowPropagationX = false;\r\n    private allowPropagationY = false;\r\n\r\n    private stateTimeout: number | null = null;\r\n\r\n    private readonly ngDestroy: Subject<void> = new Subject();\r\n\r\n    private readonly stateUpdate: Subject<string> = new Subject();\r\n\r\n    @Input() disabled = false;\r\n\r\n    @Input() usePSClass = true;\r\n\r\n    @HostBinding('class.ps-show-limits')\r\n    @Input() autoPropagation = false;\r\n\r\n    @HostBinding('class.ps-show-active')\r\n    @Input() scrollIndicators = false;\r\n\r\n    @Input() config?: ScrollbarConfigInterface;\r\n\r\n    @Output() psScrollY: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollX: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() psScrollUp: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollDown: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollLeft: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psScrollRight: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @Output() psYReachEnd: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psYReachStart: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psXReachEnd: EventEmitter<any> = new EventEmitter<any>();\r\n    @Output() psXReachStart: EventEmitter<any> = new EventEmitter<any>();\r\n\r\n    @ViewChild(ScrollbarDirective) directiveRef?: ScrollbarDirective;\r\n\r\n    constructor(private zone: NgZone, private cdRef: ChangeDetectorRef,\r\n                @Inject(PLATFORM_ID) private platformId: any) { }\r\n\r\n    ngOnInit(): void {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.stateUpdate\r\n                .pipe(\r\n                    takeUntil(this.ngDestroy),\r\n                    distinctUntilChanged((a, b) => (a === b && !this.stateTimeout))\r\n                )\r\n                .subscribe((state: string) => {\r\n                    if (this.stateTimeout && typeof window !== 'undefined') {\r\n                        window.clearTimeout(this.stateTimeout);\r\n\r\n                        this.stateTimeout = null;\r\n                    }\r\n\r\n                    if (state === 'x' || state === 'y') {\r\n                        this.interaction = false;\r\n\r\n                        if (state === 'x') {\r\n                            this.indicatorX = false;\r\n\r\n                            this.states.left = false;\r\n                            this.states.right = false;\r\n\r\n                            if (this.autoPropagation && this.usePropagationX) {\r\n                                this.allowPropagationX = false;\r\n                            }\r\n                        } else if (state === 'y') {\r\n                            this.indicatorY = false;\r\n\r\n                            this.states.top = false;\r\n                            this.states.bottom = false;\r\n\r\n                            if (this.autoPropagation && this.usePropagationY) {\r\n                                this.allowPropagationY = false;\r\n                            }\r\n                        }\r\n                    } else {\r\n                        if (state === 'left' || state === 'right') {\r\n                            this.states.left = false;\r\n                            this.states.right = false;\r\n\r\n                            this.states[state] = true;\r\n\r\n                            if (this.autoPropagation && this.usePropagationX) {\r\n                                this.indicatorX = true;\r\n                            }\r\n                        } else if (state === 'top' || state === 'bottom') {\r\n                            this.states.top = false;\r\n                            this.states.bottom = false;\r\n\r\n                            this.states[state] = true;\r\n\r\n                            if (this.autoPropagation && this.usePropagationY) {\r\n                                this.indicatorY = true;\r\n                            }\r\n                        }\r\n\r\n                        if (this.autoPropagation && typeof window !== 'undefined') {\r\n                            this.stateTimeout = window.setTimeout(() => {\r\n                                this.indicatorX = false;\r\n                                this.indicatorY = false;\r\n\r\n                                this.stateTimeout = null;\r\n\r\n                                if (this.interaction && (this.states.left || this.states.right)) {\r\n                                    this.allowPropagationX = true;\r\n                                }\r\n\r\n                                if (this.interaction && (this.states.top || this.states.bottom)) {\r\n                                    this.allowPropagationY = true;\r\n                                }\r\n\r\n                                this.cdRef.markForCheck();\r\n                            }, 500);\r\n                        }\r\n                    }\r\n\r\n                    this.cdRef.markForCheck();\r\n                    this.cdRef.detectChanges();\r\n                });\r\n\r\n            this.zone.runOutsideAngular(() => {\r\n                if (this.directiveRef) {\r\n                    const element = this.directiveRef.elementRef.nativeElement;\r\n\r\n                    fromEvent<WheelEvent>(element, 'wheel')\r\n                        .pipe(\r\n                            takeUntil(this.ngDestroy)\r\n                        )\r\n                        .subscribe((event: WheelEvent) => {\r\n                            if (!this.disabled && this.autoPropagation) {\r\n                                const scrollDeltaX = event.deltaX;\r\n                                const scrollDeltaY = event.deltaY;\r\n\r\n                                this.checkPropagation(event, scrollDeltaX, scrollDeltaY);\r\n                            }\r\n                        });\r\n\r\n                    fromEvent<TouchEvent>(element, 'touchmove')\r\n                        .pipe(\r\n                            takeUntil(this.ngDestroy)\r\n                        )\r\n                        .subscribe((event: TouchEvent) => {\r\n                            if (!this.disabled && this.autoPropagation) {\r\n                                const scrollPositionX = event.touches[0].clientX;\r\n                                const scrollPositionY = event.touches[0].clientY;\r\n\r\n                                const scrollDeltaX = scrollPositionX - this.scrollPositionX;\r\n                                const scrollDeltaY = scrollPositionY - this.scrollPositionY;\r\n\r\n                                this.checkPropagation(event, scrollDeltaX, scrollDeltaY);\r\n\r\n                                this.scrollPositionX = scrollPositionX;\r\n                                this.scrollPositionY = scrollPositionY;\r\n                            }\r\n                        });\r\n\r\n                    merge(\r\n                        fromEvent(element, 'ps-scroll-x')\r\n                            .pipe(mapTo('x')),\r\n                        fromEvent(element, 'ps-scroll-y')\r\n                            .pipe(mapTo('y')),\r\n                        fromEvent(element, 'ps-x-reach-end')\r\n                            .pipe(mapTo('right')),\r\n                        fromEvent(element, 'ps-y-reach-end')\r\n                            .pipe(mapTo('bottom')),\r\n                        fromEvent(element, 'ps-x-reach-start')\r\n                            .pipe(mapTo('left')),\r\n                        fromEvent(element, 'ps-y-reach-start')\r\n                            .pipe(mapTo('top')),\r\n                    )\r\n                        .pipe(\r\n                            takeUntil(this.ngDestroy)\r\n                        )\r\n                        .subscribe((state: string) => {\r\n                            if (!this.disabled && (this.autoPropagation || this.scrollIndicators)) {\r\n                                this.stateUpdate.next(state);\r\n                            }\r\n                        });\r\n                }\r\n            });\r\n\r\n            window.setTimeout(() => {\r\n                ScrollbarEvents.forEach((eventName: ScrollbarEvent) => {\r\n                    if (this.directiveRef) {\r\n                        this.directiveRef[eventName] = this[eventName];\r\n                    }\r\n                });\r\n            }, 0);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy(): void {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            this.ngDestroy.next();\r\n            this.ngDestroy.unsubscribe();\r\n\r\n            if (this.stateTimeout && typeof window !== 'undefined') {\r\n                window.clearTimeout(this.stateTimeout);\r\n            }\r\n        }\r\n    }\r\n\r\n    ngDoCheck(): void {\r\n        if (isPlatformBrowser(this.platformId)) {\r\n            if (!this.disabled && this.autoPropagation && this.directiveRef) {\r\n                const element = this.directiveRef.elementRef.nativeElement;\r\n\r\n                this.usePropagationX = element.classList.contains('ps--active-x');\r\n\r\n                this.usePropagationY = element.classList.contains('ps--active-y');\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkPropagation(event: any, deltaX: number, deltaY: number): void {\r\n        this.interaction = true;\r\n\r\n        const scrollDirectionX = (deltaX < 0) ? -1 : 1;\r\n        const scrollDirectionY = (deltaY < 0) ? -1 : 1;\r\n\r\n        if ((this.usePropagationX && this.usePropagationY) ||\r\n            (this.usePropagationX && (!this.allowPropagationX ||\r\n                (this.scrollDirectionX !== scrollDirectionX))) ||\r\n            (this.usePropagationY && (!this.allowPropagationY ||\r\n                (this.scrollDirectionY !== scrollDirectionY)))) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n        }\r\n\r\n        if (!!deltaX) {\r\n            this.scrollDirectionX = scrollDirectionX;\r\n        }\r\n\r\n        if (!!deltaY) {\r\n            this.scrollDirectionY = scrollDirectionY;\r\n        }\r\n\r\n        this.stateUpdate.next('interaction');\r\n\r\n        this.cdRef.detectChanges();\r\n    }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { ScrollbarComponent } from './scrollbar.component';\r\nimport { ScrollbarDirective } from './scrollbar.directive';\r\n\r\n@NgModule({\r\n    imports: [CommonModule],\r\n    declarations: [ScrollbarComponent, ScrollbarDirective],\r\n    exports: [CommonModule, ScrollbarComponent, ScrollbarDirective]\r\n})\r\nexport class ScrollbarModule {\r\n}\r\n","import { Directive, TemplateRef } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[grid-cell-editor]',\r\n})\r\nexport class DatagridCellEditorDirective {\r\n    constructor(public template: TemplateRef<any>) {}\r\n}\r\n","import { OnInit, Directive, Input, ContentChild, AfterContentInit } from '@angular/core';\r\nimport { DatagridCellEditorDirective } from './column-cell-edit.directive';\r\n\r\n@Directive({\r\n    selector: 'farris-grid-column',\r\n})\r\nexport class DatagridColumnDirective implements OnInit, AfterContentInit {\r\n\r\n    @Input() field: string;\r\n    @Input() title: string;\r\n    @Input() width: number;\r\n    @Input() halign: 'left' | 'center' |'right' = 'left';\r\n    @Input() align: 'left' | 'center' |'right' = 'left';\r\n    @Input() formatter: (value, rowData, rowIndex) => any;\r\n    @Input() readonly = true;\r\n    @Input() editable = false;\r\n\r\n    @ContentChild(DatagridCellEditorDirective) editor: any;\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void { }\r\n\r\n    ngAfterContentInit() {\r\n        console.log(this.editor);\r\n    }\r\n}\r\n","import { Component, EventEmitter, Input, OnInit, Output, ElementRef, Renderer2, Injector, OnChanges, SimpleChanges, ViewChild, Optional } from '@angular/core';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\n\r\n@Component({\r\n    selector: 'smart-filter-toolbar',\r\n    templateUrl: './smart-filter-toolbar.component.html',\r\n})\r\nexport class SmartFilterToolbarComponent implements OnInit, OnChanges {\r\n    @Input() padding = '';\r\n    @Input() height = 40;\r\n    @Input() filterData = [];\r\n    @Output() clearFilters = new EventEmitter();\r\n    @Output() removeFilter = new EventEmitter();\r\n    @Output() filterChange = new EventEmitter();\r\n\r\n    @Output() resize = new EventEmitter();\r\n\r\n    @ViewChild('farrisFilter') filtebar: any;\r\n    sk = '';\r\n    dg: DatagridComponent;\r\n    constructor(private el: ElementRef, private render: Renderer2, private inject: Injector) { }\r\n\r\n    ngOnInit(): void {\r\n        this.dg = this.inject.get<DatagridComponent>(DatagridComponent);\r\n        this.sk =  'smartfilter_' + this.dg.dgs.createConfigKey(this.dg.id);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.filterData && !changes.filterData.isFirstChange()) {\r\n            // console.log('filterDataChanged.');\r\n        }\r\n    }\r\n\r\n    /** æ¡ä»¶ååäºä»¶ */\r\n    onQuery($event) {\r\n        const { data, filterItem } = $event;\r\n        if (data && data.length) {\r\n            const conditions = JSON.parse(data);\r\n            if (conditions && conditions.length)  {\r\n                this.filterChange.emit({conditions, filterItem});\r\n            }\r\n        }\r\n    }\r\n\r\n    /** æ¸é¤æææ¡ä»¶ */\r\n    onResetFilter($event) {\r\n        this.clearFilters.emit($event);\r\n    }\r\n\r\n    /** ç§»é¤åä¸ªæ¡ä»¶ */\r\n    onRemoveFilter($event) {\r\n        this.removeFilter.emit($event);\r\n    }\r\n\r\n    /** å±å¼æå äºä»¶ */\r\n    onResize($event) {\r\n        setTimeout(() => {\r\n            const smartFilterWrapper = this.el.nativeElement.querySelector('.f-filter-wrapper');\r\n            if (smartFilterWrapper) {\r\n                const h = smartFilterWrapper.offsetHeight;\r\n                if (h) {\r\n                    this.resize.emit(h + 6);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n}\r\n","export function TextFilterControl(col: any) {\r\n    return {\r\n        controltype: 'text'\r\n    };\r\n}\r\n\r\nexport function BooleanFilterControl(col: any) {\r\n    return {\r\n        controltype: 'bool-check',\r\n        // enumValues: [\r\n        //     {value: true, name: 'true'},\r\n        //     {value: false, name: 'false'}\r\n        // ]\r\n    };\r\n}\r\n\r\nexport function EnumFilterControl(col: any, enumopts: any) {\r\n    const valueField = enumopts.valueField || enumopts.idField;\r\n    const data = enumopts.data.map(n => {\r\n        return {\r\n            value:  n[valueField],\r\n            name: n[enumopts.textField]\r\n        };\r\n    });\r\n\r\n    return {\r\n        controltype: 'checkboxgroup',\r\n        enumValues: data,\r\n    };\r\n}\r\n\r\nexport function DateFilterControl(col, options: any) {\r\n    let tye = 'datetime';\r\n    let fmt = 'yyyy-MM-dd';\r\n    let returnFmt = 'yyyy-MM-dd';\r\n    if (options && options.format) {\r\n        fmt = options.format;\r\n        if (fmt.indexOf('HH:') == -1) {\r\n            tye = 'date';\r\n        } else {\r\n            returnFmt += ' HH:mm';\r\n            if (fmt.indexOf('ss') > -1) {\r\n                returnFmt += ':ss';\r\n            }\r\n        }\r\n    } else {\r\n        tye = 'date';\r\n    }\r\n\r\n    // all = 1, å¹´ææ¥\r\n    // noDate = 2,  å¹´æ\r\n    // noDateAndMonth = 3,  å¹´\r\n\r\n    return {\r\n        controltype: 'flexibleDate',\r\n        dateFormat: fmt,\r\n        single: false,\r\n        showType: 1,\r\n        showTime: tye === 'datetime'\r\n    };\r\n}\r\n\r\nexport function NumberFilterControl(col) {\r\n    return  {\r\n        controltype: 'flexibleNumber',\r\n        single: false\r\n    };\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\nimport { ColumnFilterType } from '../types/data-column';\r\n\r\nimport { BooleanFilterControl, DateFilterControl, EnumFilterControl,\r\n        NumberFilterControl, TextFilterControl } from '../plugins/smart-filter/controlData/filter-control.options';\r\n\r\n@Injectable()\r\nexport class DatagridSmartFilterService {\r\n    private conditions: any[] = [];\r\n    private controlData: any = [];\r\n\r\n    filterChanged = new Subject();\r\n\r\n    removeFilter = new Subject();\r\n    clearAllFilter = new Subject();\r\n\r\n    constructor() { }\r\n\r\n\r\n    getColumnFilterData(col: any) {\r\n        let filterControlData: any = {\r\n            controltype: 'text',\r\n        };\r\n        if (col.filter !== undefined) {\r\n            if (typeof col.filter === 'boolean') {\r\n                if (col.formatter) {\r\n                    if (typeof col.formatter === 'object' && Object.keys(col.formatter).length) {\r\n                        const options: any = col.formatter['options'];\r\n                        switch (col.formatter['type']) {\r\n                            case 'number':\r\n                                return NumberFilterControl(col);\r\n                            case 'enum':\r\n                                return EnumFilterControl(col, options);\r\n                            case 'boolean':\r\n                                return BooleanFilterControl(col);\r\n                            case 'datetime':\r\n                                let tye = 'datetime';\r\n                                let fmt = 'yyyy-MM-dd';\r\n                                let returnFmt = 'yyyy-MM-dd';\r\n                                if (options && options.format) {\r\n                                    fmt = options.format;\r\n                                    if (fmt.indexOf('HH:') == -1) {\r\n                                        tye = 'date';\r\n                                    } else {\r\n                                        returnFmt += ' HH:mm';\r\n                                        if (fmt.indexOf('ss') > -1) {\r\n                                            returnFmt += ':ss';\r\n                                        }\r\n                                    }\r\n                                } else {\r\n                                    tye = 'date';\r\n                                }\r\n                                filterControlData = {\r\n                                    controltype: 'flexibleDate',\r\n                                    dateFormat: fmt,\r\n                                    single: false,\r\n                                    showType: 3,\r\n                                    showTime: tye === 'datetime'\r\n                                };\r\n                                break;\r\n                            default:\r\n                                return TextFilterControl(col);\r\n                        }\r\n                    }\r\n                }\r\n                return filterControlData;\r\n            } else {\r\n                switch (col.filter.type) {\r\n                    case ColumnFilterType.enum:\r\n                        return EnumFilterControl(col, col.filter.options);\r\n                    case ColumnFilterType.date:\r\n                    case ColumnFilterType.datetime:\r\n                        return DateFilterControl(col, col.filter.options);\r\n                    case ColumnFilterType.number:\r\n                        return NumberFilterControl(col);\r\n                    case ColumnFilterType.boolean:\r\n                        return BooleanFilterControl(col);\r\n                }\r\n            }\r\n        }\r\n\r\n        return filterControlData;\r\n    }\r\n\r\n\r\n\r\n    filterConditionChanged(e: {conditions: any[], controlData: any}) {\r\n        const items = e.conditions;\r\n\r\n        if (!this.conditions || !this.conditions.length) {\r\n            this.conditions.push(...items);\r\n            this.controlData.push({...e.controlData});\r\n        } else {\r\n            /// TODO, CONTROLDATA çç´¢å¼ä¸conditions çç´¢å¼å¾å¯è½ä¸æ¯1ä¸ª\r\n\r\n            this.conditions = this.conditions.filter(n => n.FilterField !== items[0].FilterField);\r\n            if (items.length === 1) {\r\n                this.conditions.push({ ...items[0] });\r\n            } else {\r\n                this.conditions.push(...items);\r\n            }\r\n\r\n            if (e.controlData) {\r\n                const ctrlIdx = this.controlData.findIndex(n => n.labelCode === e.controlData.labelCode);\r\n                if (ctrlIdx > -1) {\r\n                    this.controlData[ctrlIdx] = {...e.controlData};\r\n                } else {\r\n                    this.controlData.push({...e.controlData});\r\n                }\r\n            }\r\n        }\r\n\r\n        this.filterChanged.next({conditions: [...this.conditions], controlData: [...this.controlData] });\r\n    }\r\n\r\n    removeCondition(e, emitRemove = false) {\r\n        if (this.conditions && this.conditions.length) {\r\n            this.conditions = this.conditions.filter(n => n.FilterField !== e.labelCode);\r\n            this.controlData = this.controlData.filter(n => n.labelCode !== e.labelCode);\r\n        }\r\n        this.filterChanged.next({conditions: [...this.conditions], controlData: [...this.controlData] });\r\n        if (emitRemove) {\r\n            this.removeFilter.next(e);\r\n        }\r\n    }\r\n\r\n    clearAll() {\r\n        this.conditions = [];\r\n        this.controlData = [];\r\n        this.clearAllFilter.next(null);\r\n    }\r\n}\r\n","import { DatagridComponent } from './../datagrid.component';\r\nimport { Injectable } from '@angular/core';\r\nimport { delay } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class SelectionModeService {\r\n    dgRef: DatagridComponent = null;\r\n    private oldSettings: any = null;\r\n    private selectStartEvent: any = null;\r\n    private events = null;\r\n    constructor(grid: DatagridComponent) {\r\n        this.dgRef = grid;\r\n        if (this.dgRef.selectionMode === 'default') {\r\n            grid.zone.runOutsideAngular(() => {\r\n                this.events = this.registerStopSelectionEvent();\r\n            });\r\n        }\r\n    }\r\n\r\n    removeEvents() {\r\n        if (this.events && this.events.length) {\r\n            this.events.forEach(e => {\r\n                e();\r\n            });\r\n\r\n            this.events = null;\r\n        }\r\n    }\r\n\r\n    public toggleMode() {\r\n        if (this.dgRef) {\r\n            if (this.dgRef.selectionMode === 'default') {\r\n                this.enableWindowsSelectionMode();\r\n            } else {\r\n                this.restoreSettings();\r\n            }\r\n        }\r\n    }\r\n\r\n    public enableWindowsSelectionMode() {\r\n        if (this.dgRef) {\r\n            this.oldSettings = {\r\n                showCheckbox: this.dgRef.showCheckbox,\r\n                keepSelect: this.dgRef.keepSelect,\r\n                onlySelectSelf: this.dgRef.onlySelectSelf,\r\n                selectOnCheck: this.dgRef.selectOnCheck,\r\n                checkOnSelect: this.dgRef.checkOnSelect\r\n            };\r\n\r\n            this.dgRef.showCheckbox = true;\r\n            this.dgRef.keepSelect = true;\r\n            this.dgRef.onlySelectSelf = false;\r\n            this.dgRef.selectOnCheck = true;\r\n            this.dgRef.checkOnSelect = true;\r\n\r\n            this.dgRef.dfs.updateProperty('keepSelect', true);\r\n            this.dgRef.dfs.updateProperty('onlySelectSelf', false);\r\n            this.dgRef.dfs.updateProperty('selectOnCheck', true);\r\n            this.dgRef.dfs.updateProperty('checkOnSelect', true);\r\n        }\r\n    }\r\n\r\n    public restoreSettings() {\r\n        if (this.dgRef && this.oldSettings) {\r\n            this.dgRef.showCheckbox = this.oldSettings.showCheckbox;\r\n            this.dgRef.keepSelect = this.oldSettings.keepSelect;\r\n            this.dgRef.onlySelectSelf = this.oldSettings.onlySelectSelf;\r\n            this.dgRef.selectOnCheck = this.oldSettings.selectOnCheck;\r\n            this.dgRef.checkOnSelect = this.oldSettings.checkOnSelect;\r\n\r\n\r\n            this.dgRef.dfs.updateProperty('keepSelect', this.oldSettings.keepSelect);\r\n            this.dgRef.dfs.updateProperty('onlySelectSelf', this.oldSettings.onlySelectSelf);\r\n            this.dgRef.dfs.updateProperty('selectOnCheck', this.oldSettings.selectOnCheck);\r\n            this.dgRef.dfs.updateProperty('checkOnSelect', this.oldSettings.checkOnSelect);\r\n        }\r\n    }\r\n\r\n\r\n    private registerStopSelectionEvent() {\r\n        const kd = this.dgRef.render2.listen(document, 'keydown', (event: any) => {\r\n            if (event.ctrlKey || event.shiftKey) {\r\n                this.unselectable();\r\n            }\r\n        });\r\n\r\n        const ku = this.dgRef.render2.listen(document, 'keyup', (event: any) => {\r\n            if (event.ctrlKey || event.shiftKey || event.keyCode === 17 || event.keyCode === 16) {\r\n                this.enableSelectable();\r\n            }\r\n        });\r\n\r\n        return [ kd, ku];\r\n    }\r\n\r\n    private unselectable() {\r\n        this.dgRef.render2.setAttribute(this.dgRef.dgContainer.nativeElement, 'unselectable', 'on');\r\n        this.dgRef.render2.setAttribute(this.dgRef.dgContainer.nativeElement, 'onselectstart', 'return false');\r\n        this.dgRef.render2.setStyle(this.dgRef.dgContainer.nativeElement, '-moz-user-select', 'none');\r\n    }\r\n\r\n    private enableSelectable() {\r\n        this.dgRef.render2.removeAttribute(this.dgRef.dgContainer.nativeElement, 'unselectable');\r\n        this.dgRef.render2.removeAttribute(this.dgRef.dgContainer.nativeElement, 'onselectstart');\r\n        this.dgRef.render2.removeStyle(this.dgRef.dgContainer.nativeElement, '-moz-user-select');\r\n    }\r\n\r\n    beforRowClick(param: any) {\r\n        if (this.dgRef && this.dgRef.selectionMode === 'default') {\r\n            const isSelected = this.dgRef.dfs.isRowSelected(param.id);\r\n            const isCtrlKey = param.e.ctrlKey;\r\n            const isShiftKey = param.e.shiftKey;\r\n\r\n            this.dgRef.endEditing();\r\n\r\n            if (!isCtrlKey && !isShiftKey) {\r\n                if (!isSelected) {\r\n                    this.dgRef.clearCheckeds();\r\n                } else {\r\n                    // å¦ææå¤æ¡éï¼ç§»é¤å¶ä»éä¸­è¡\r\n                    const currentPagerIds = this.dgRef.getRows().map(n => n.id);\r\n                    const unCheckIDs = this.dgRef.checkValues.filter(i => currentPagerIds.includes(i) && i != param.id);\r\n                    const unSelectIds = this.dgRef.checkValues.filter(n => !currentPagerIds.includes(n));\r\n                    // const unCheckIDs = this.dgRef.checkValues.filter(n => n != param.id);\r\n                    if (unCheckIDs && unCheckIDs.length) {\r\n                        this.dgRef.unCheckRows(unCheckIDs, true);\r\n                        this.dgRef.clearSelections([param.id, ...unSelectIds]);\r\n                    }\r\n                }\r\n            } else {\r\n                if (isShiftKey) {\r\n                    let focusIndex = this.dgRef.focusRowIndex;\r\n                    if (focusIndex === -1) {\r\n                        focusIndex = 0;\r\n                    }\r\n\r\n                    const endIndex = param.rowIndex;\r\n                    let start = focusIndex;\r\n                    let end = endIndex;\r\n                    if (focusIndex > endIndex) {\r\n                        start = endIndex;\r\n                        end = focusIndex;\r\n                    }\r\n\r\n                    const data = this.dgRef.getRows();\r\n                    const checkedItems = [...data].splice(start, end - start + 1);\r\n                    const willCheckIds = checkedItems.map(n => {\r\n                        return this.dgRef.dfs.primaryId(n);\r\n                    });\r\n\r\n                    if (!isCtrlKey) {\r\n                        this.dgRef.clearCheckeds(false, false);\r\n                    }\r\n                    // this.dgRef.selectValues = willCheckIds;\r\n                    this.dgRef.checkRows(willCheckIds, true);\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            if (isSelected && isCtrlKey) {\r\n                param.e.stopPropagation();\r\n                // æ§è¡åæ¶éæ©\r\n                this.dgRef.unCheckRow(param.id);\r\n                return true;\r\n            }\r\n            this.dgRef.beforeSelect(param).pipe(\r\n                delay(100)\r\n            ).subscribe((canSelect: boolean) => {\r\n                if (canSelect) {\r\n                    this.dgRef.dfs.selectRow(param.rowIndex, param.rowData);\r\n                    if (this.dgRef.selectedRow) {\r\n                        this.dgRef.selectedRow.dr = param.dr;\r\n                    }\r\n                }\r\n                this.dgRef.rowClick.emit({ data: param.rowData, grid: this.dgRef, dblclick: false });\r\n                this.dgRef.dgs.setSelecedRow.emit({ selected: true, id: this.dgRef.dfs.primaryId(param.rowData) });\r\n            });\r\n\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    endRowClick() {\r\n        if (this.dgRef && this.dgRef.selectionMode === 'default') {\r\n            this.dgRef.checkOnSelect = false;\r\n        }\r\n    }\r\n}\r\n\r\n","\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-30 16:42:51\r\n * @QQ: 1055818239\r\n * @Version: v0.8.0\r\n * - 2021/04/07 å¢å  enableHighlightCell å±æ§ï¼æ¯æéä¸­ååæ ¼é«äº®\r\n */\r\n\r\nimport {\r\n    Component, OnInit, Input, ViewEncapsulation,\r\n    ContentChildren, QueryList, Output, EventEmitter, Renderer2, OnDestroy, OnChanges,\r\n    SimpleChanges, ChangeDetectionStrategy, ChangeDetectorRef, Injector, HostBinding,\r\n    AfterContentInit, NgZone, ElementRef, ViewChild, AfterViewInit, ApplicationRef, TemplateRef, HostListener, DoCheck\r\n} from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { FormGroup, ValidatorFn } from '@angular/forms';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport { of, Subscription, Observable, from, BehaviorSubject } from 'rxjs';\r\nimport { DataColumn, CustomStyle, MoveDirection, ColumnGroup, ColumnFilterType } from './types/data-column';\r\nimport { DatagridFacadeService } from './services/datagrid-facade.service';\r\nimport { DatagridColumnDirective } from './components/columns/datagrid-column.directive';\r\nimport { CellInfo, SelectedRow } from './services/state';\r\nimport { RestService, DATAGRID_REST_SERVICEE } from './services/rest.service';\r\nimport { DatagridService } from './services/datagrid.service';\r\nimport { GRID_EDITORS, CELL_SELECTED_CLS, GRID_VALIDATORS, SIZE_TYPE, GRID_SETTINGS_SERVICE, GRID_SETTINGS_HTTP, CELL_EDITING_CLS, TR_PREFIX } from './types/constant';\r\nimport { DomHandler } from './services/domhandler';\r\nimport { Utils } from './utils/utils';\r\nimport { CommonUtils, FarrisComponentInstanceService } from '@farris/ui-common';\r\nimport { ColumnFormatService } from '@farris/ui-common/column';\r\nimport { flatten, cloneDeep } from 'lodash-es';\r\nimport { ScrollbarDirective } from './scrollbar/scrollbar.directive';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { BeforEventParam, RowEditParam } from './types/event-params';\r\nimport { DatagridColumnsHelper } from './services/datagrid-columns.helper';\r\nimport { DatagridFilterService } from './services/datagrid-filter.service';\r\nimport { debounceTime } from 'rxjs/operators';\r\n\r\nimport { SmartFilterToolbarComponent } from './components/filter-toolbar/smart-filter-toolbar.component';\r\nimport { DatagridSmartFilterService } from './services/datagrid-smart-filter.service';\r\nimport { IdService } from '@farris/ui-common';\r\nimport { SelectionModeService } from './services/selection-mode.service';\r\nimport { ContextMenuItem } from '@farris/ui-context-menu';\r\n@Component({\r\n    selector: 'farris-datagrid',\r\n    templateUrl: './datagrid.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    changeDetection: ChangeDetectionStrategy.OnPush,\r\n    providers: [\r\n        DatagridFacadeService,\r\n        DatagridService,\r\n        DatagridSmartFilterService\r\n    ],\r\n    exportAs: 'datagrid'\r\n})\r\nexport class DatagridComponent implements OnInit, OnDestroy, OnChanges, AfterContentInit, AfterViewInit, DoCheck {\r\n    private auther = `Lucas Huang - QQ:1055818239`;\r\n    private version = '0.8.x';\r\n    __component_type__ = 'DatagridComponent';\r\n\r\n    @HostBinding('style.position') pos = 'relative';\r\n    @HostBinding('class.f-datagrid-full') hostCls = false;\r\n    @HostBinding('class.f-datagrid-auto-height') get autoHeightCls() {\r\n        return this.autoHeight;\r\n    }\r\n    /** ä½¿ç¨ä¸»é¢ */\r\n    @Input() useThemes = true;\r\n    // ç¨äºå­å¨ç¨æ·ä¸ªæ§åè®¾ç½®\r\n    @Input() id = '';\r\n    /** èªå¨é«åº¦ - å¯ç¨æ­¤å±æ§åï¼å°±æ¯ä¸ä¸ªæ®æ®ééç table , ä¸è½ç¼è¾ï¼ä¸è½æåºï¼ä¸è½åé¡µï¼ä¸è½... å°±æ¯ä¸å¡è */\r\n    @Input() useHtmlTable = false;\r\n    /** èªå¨é«åº¦ */\r\n    @Input() autoHeight = false;\r\n    /** æ¾ç¤ºè¾¹æ¡ */\r\n    @Input() showBorder = false;\r\n    /** å¯ç¨æé©¬çº¿  */\r\n    @Input() striped = true;\r\n    /** å®½åº¦ */\r\n    @Input() width = 800;\r\n    /** é«åº¦ */\r\n    @Input() height = 300;\r\n\r\n    /** æ¾ç¤ºè¡¨å¤´ */\r\n    @Input() showHeader = true;\r\n    /** è¡¨å¤´-åè¡é«åº¦ */\r\n    @Input() headerHeight = 35;\r\n    /** è¡¨å¤´æè¡ */\r\n    @Input() headerWrap = false;\r\n    /** æ¾ç¤ºé¡µè */\r\n    @Input() showFooter = false;\r\n    /** é¡µèé»è®¤è¡é« */\r\n    @Input() footerHeight = 29;\r\n    /** é¡µèæ°æ®æ¥æº */\r\n    @Input() footerDataFrom: 'server' | 'client' = 'client';\r\n    /** é¡µèåè®¡è¡æ¨¡æ¿ */\r\n    @Input() footerTemplate: TemplateRef<any>;\r\n    /** åè®¡è¡æ¾ç¤ºä½ç½®ï¼é»è®¤ä¸ºåºé¨ */\r\n    @Input() footerPosition: 'top' | 'bottom' | 'both' = 'bottom';\r\n    /** é¡µèè¡èªå®ä¹æ ·å¼ */\r\n    @Input() footerStyler: () => { cls?: string, style?: any };\r\n    /** è¡é« */\r\n    @Input() rowHeight = 29;\r\n\r\n    /**\r\n     * è®¾ç½®grid è¡é«å°ºå¯¸\r\n     * sm: å°ï¼md: æ­£å¸¸ï¼ lg: å¤§ï¼xl: è¶å¤§\r\n     */\r\n    private _sizeType: 'sm' | 'md' | 'lg' | 'xl' = 'sm';\r\n    get sizeType() {\r\n        return this._sizeType;\r\n    }\r\n    @Input() set sizeType(val) {\r\n        this._sizeType = val;\r\n    }\r\n\r\n    /** å¡«åå®¹å¨ */\r\n    private _fit = false;\r\n    @Input() get fit() {\r\n        return this._fit;\r\n    }\r\n    set fit(val: boolean) {\r\n        this._fit = val;\r\n        this.hostCls = val;\r\n    }\r\n    /** å¦æä¸ºçï¼åèªå¨å±å¼/æ¶ç¼©åçå¤§å°ä»¥éåç½æ ¼å®½åº¦å¹¶é²æ­¢æ°´å¹³æ»å¨ã */\r\n    private _fitColumns = false;\r\n    @Input() get fitColumns() {\r\n        return this._fitColumns;\r\n    }\r\n    set fitColumns(val: boolean) {\r\n        this._fitColumns = val;\r\n        this.setFitColumns(val);\r\n    }\r\n    /** æ ¹æ®gridçå®½åº¦èªå¨è°æ´åå®½åº¦ */\r\n    private _autoFitColumns = false;\r\n    @Input() get autoFitColumns() {\r\n        return this._autoFitColumns;\r\n    }\r\n    set autoFitColumns(val) {\r\n        this._autoFitColumns = val;\r\n        this.dfs.updateProperty('autoFitColumns', val);\r\n    }\r\n\r\n    /** ç¦ç¨ */\r\n    @Input() disabled = false;\r\n    /**\r\n     * æ»å¨æ¡æ¾ç¤ºæ¨¡å¼ï¼é»è®¤ä¸º auto\r\n     */\r\n    @Input() scrollBarShowMode: 'auto' | 'allways' = 'auto';\r\n    @Input() scrollBarOptions = {\r\n        width: 18,\r\n        height: 18\r\n    };\r\n\r\n    /** å¯æå¨åè®¾ç½®åå®½ */\r\n    @Input() resizeColumn = true;\r\n    /** æ¾ç¤ºè¡å· */\r\n    @Input() showLineNumber = false;\r\n    /** è¡å·è¡¨å¤´å­ç¬¦ */\r\n    @Input() lineNumberTitle = 'åºå·';\r\n    /** è¡å·å®½åº¦ */\r\n    @Input() lineNumberWidth = 36;\r\n    /** é¼ æ æ»è¿ææå¼å³ï¼é»è®¤å¼å¯ */\r\n    @Input() rowHover = true;\r\n    /** åè®¸ç¼è¾æ¶ï¼åå»è¿å¥ç¼è¾ç¶æ; falseä¸ºåå»è¿å¥ç¼è¾ */\r\n    @Input() clickToEdit = true;\r\n\r\n    private _lockPagination = false;\r\n    /** éå®åé¡µæ¡ï¼éå®åé¡µç ç¹å»æ æ */\r\n    @Input() get lockPagination() {\r\n        return this._lockPagination;\r\n    }\r\n    set lockPagination(val: boolean) {\r\n        this._lockPagination = val;\r\n        if (this.dgPager) {\r\n            this.dgPager[val ? 'lock' : 'unlock']();\r\n        }\r\n    }\r\n\r\n    /** åé¡µä¿¡æ¯ */\r\n    private __pagination = true;\r\n    @Input() set pagination(val) {\r\n        if (this.__pagination !== val) {\r\n            this.__pagination = val;\r\n            this.dfs.updateProperty('pagination', val);\r\n            this.dgs.showGridHeader.emit();\r\n        }\r\n    }\r\n    get pagination() {\r\n        return this.__pagination;\r\n    }\r\n\r\n\r\n\r\n    /** åé¡µæ¡æ¾ç¤ºæ¨¡å¼ï¼ default, simple */\r\n    @Input() pagerViewMode = 'default';\r\n    /** å¯ç¨æå¡å¨ç«¯åé¡µ */\r\n    @Input() pagerOnServer = true;\r\n    /** æ¯é¡µè®°å½æ° */\r\n    @Input() pageList = [10, 20, 30, 50, 100];\r\n    /** å½åé¡µç  */\r\n    @Input() pageIndex = 1;\r\n    /** æ¯é¡µè®°å½æ° */\r\n    @Input() pageSize = 20;\r\n    /** åé¡µåºé«åº¦ */\r\n    @Input() pagerHeight = 56;\r\n    /** æ¾ç¤ºæ¯é¡µè®°å½æ° */\r\n    @Input() showPageList = false;\r\n    /** æ¾ç¤ºåé¡µä¿¡æ¯ */\r\n    @Input() showPageInfo = true;\r\n    /** æ¾ç¤ºé¡µç  */\r\n    @Input() showPageNumber = true;\r\n    /** æ¾ç¤ºé¡µç æå¤§æ°é */\r\n    @Input() pagerLabelSize = 7;\r\n    /** æ¾ç¤ºè½¬è³æå®é¡µç è¾å¥æ¡ */\r\n    @Input() showGotoInput = false;\r\n    /** å¯ç¨è·¨é¡µå¤é */\r\n    @Input() enableMorePageSelect = false;\r\n    /** æ¾ç¤ºéä¸­åè¡¨ */\r\n    @Input() showSelectedList = false;\r\n    /** éä¸­åè¡¨ä¸­ï¼æ¯æ¡è®°å½æ¾ç¤ºçåå®¹ */\r\n    @Input() selectedItemFormatter: (data) => string;\r\n    /** ååæ ¼ä¿¡æ¯æç¤ºå»¶æ¶ï¼é»è®¤ 1000ms */\r\n    @Input() cellTipTimer = 1000;\r\n    /** grid åé¨å¤çåé¡µç¶æ */\r\n    @Input() controlPaginationState = true;\r\n    /** æ»è®°å½æ° */\r\n    private _total = 0;\r\n    get total() {\r\n        return this._total;\r\n    }\r\n\r\n    @Input() set total(val: number) {\r\n        this._total = val;\r\n        this.pagerOpts.totalItems = val;\r\n        if (!this.pagination) {\r\n            this.pagerOpts.itemsPerPage = val;\r\n        }\r\n        this.dfs.setTotal(val);\r\n    }\r\n    /** å¯ç¨éä¸­è¡ */\r\n    @Input() enableSelectRow = true;\r\n    /** å¯ç¨å¤é */\r\n    @Input() multiSelect = false;\r\n    /** å¯ç¨å¤éæ¶ï¼æ¯å¦æ¾ç¤ºcheckbox */\r\n    @Input() showCheckbox = false;\r\n    /** æ¾ç¤ºå¨écheckbox */\r\n    @Input() showAllCheckbox = false;\r\n    /** å½å¯ç¨å¤éæ¶ï¼ç¹å»è¡éä¸­ï¼åªåè®¸ä¸åªæä¸è¡è¢«éä¸­ã, é»è®¤ä¸º true */\r\n    @Input() onlySelectSelf = true;\r\n    /** å¯ç¨å¤éä¸æ¾ç¤ºcheckbox, éä¸­è¡åæ¶é©é, é»è®¤ä¸º false */\r\n    @Input() checkOnSelect = false;\r\n    /** å¯ç¨å¤éä¸æ¾ç¤ºcheckbox, é©éåéä¸­è¡, é»è®¤ä¸º false */\r\n    @Input() selectOnCheck = false;\r\n    /**\r\n     * è¡éä¸­æ¨¡å¼ï¼custom: èªå®ä¹ï¼ default: é»è®¤ ä»¿Windowsèµæºç®¡çå¨éä¸­\r\n     * æ³¨æï¼ æ­¤å±æ§ä»å¤éï¼æ¾ç¤ºå¤éæ¡ææ\r\n     * addTime: 2021-12-14 by LUCAS HUANG\r\n     */\r\n    @Input() selectionMode: 'custom' | 'default' = 'custom';\r\n    /**\r\n     * åå»è¡éä¸­åï¼å¨æ¬¡ç¹å»ä¸ä¼è¢«åæ¶éä¸­ç¶æ;\r\n     */\r\n    @Input() keepSelect = true;\r\n\r\n    /** æ°æ®ä¸ºç©ºæ¶çé«åº¦ */\r\n    @Input() emptyDataHeight = 240;\r\n    /** ç©ºæ°æ®æ¶ï¼æ¾ç¤ºçæç¤ºææ¬ */\r\n    @Input() emptyMessage = 'ææ æ°æ®';\r\n    /** æ æ°æ®æ¶çæ¨¡æ¿ */\r\n    @Input() emptyTemplate: TemplateRef<any> = null;\r\n\r\n    /** ä¸»é®å­æ®µ */\r\n    @Input() idField = 'id';\r\n    /** è¯·æ±æ°æ®æºçURL */\r\n    @Input() url: string;\r\n    /** æ°æ®æº */\r\n    @Input() data: any[];\r\n\r\n    /** é¡µèæ°æ® */\r\n    private _footerData: Observable<any[]> = of([]);\r\n    @Input() get footerData() {\r\n        return this._footerData;\r\n    }\r\n    set footerData(rows) {\r\n        if (rows) {\r\n            if (Array.isArray(rows)) {\r\n                this._footerData = of(rows);\r\n            } else {\r\n                this._footerData = rows;\r\n            }\r\n        }\r\n        if (rows) {\r\n            this.setFooterHeight();\r\n        }\r\n    }\r\n\r\n    /** éªè¯ä¸éè¿æ¶å¯ä»¥ç»æç¼è¾ */\r\n    @Input() endEditByInvalid = true;\r\n\r\n    /** åéå */\r\n    private _columns = [];\r\n    @Input()\r\n    get columns() {\r\n        return this._columns;\r\n    }\r\n    set columns(values) {\r\n        this._columns = this.correctColumns(values);\r\n        this.dfs.updateProperty('columns', this._columns);\r\n    }\r\n\r\n    private _fields = [];\r\n    get fields() {\r\n        return this._fields;\r\n    }\r\n\r\n    @Input() set fields(cols) {\r\n        this._fields = cols;\r\n        this.columns = cols;\r\n        if (this.data) {\r\n            this.columnsChanged(false, true);\r\n        }\r\n    }\r\n    /** æ°æ®æè¡ï¼é»è®¤å¼ï¼true,å³å¨ä¸è¡æ¾ç¤ºï¼ä¸æè¡ã */\r\n    @Input() nowrap = true;\r\n    /** èæå è½½ */\r\n    @Input() virtualized = false;\r\n    /** æ¯å¦å¯ç¨å¼æ­¥å è½½æ°æ® */\r\n    @Input() virtualizedAsyncLoad = false;\r\n    /** è¡æ ·å¼ */\r\n    @Input() rowStyler: (rowData, rowIndex?: number) => { cls?: string, style?: any };\r\n    /** ç¼è¾æ¹å¼ï¼ row(æ´è¡ç¼è¾)ãcell(ååæ ¼ç¼è¾)ï¼é»è®¤ä¸º row */\r\n    @Input() editMode: 'row' | 'cell' = 'row';\r\n    /** ç¼è¾ç¶æ */\r\n    private _editable = false;\r\n    get editable() {\r\n        return this._editable;\r\n    }\r\n    @Input() set editable(v) {\r\n        if (this._editable !== v) {\r\n            this._editable = v;\r\n            this.cd.detectChanges();\r\n            this.dgs.updateEmptyStyle();\r\n        }\r\n    }\r\n    /** å¯ç¨å¯ç¼è¾ååæ ¼æ ·å¼ã */\r\n    @Input() enableEditCellStyle = false;\r\n\r\n    /** è¿å¥ç¼è¾ç¶ææ¶éæ¯å¦éä¸­ææ¬ï¼é»è®¤ä¸º false\r\n     * ä»ææ¬æ¡æ¯ææ­¤ç¹æ§\r\n     */\r\n    @Input() selectOnEditing = false;\r\n\r\n    /** ç¼è¾å¨é«åº¦ */\r\n    @Input() editorHeight = 30;\r\n    /** å¯ç¨è¿ç«¯æåº */\r\n    @Input() remoteSort = false;\r\n    /** æåºå­æ®µ */\r\n    @Input() sortName: string;\r\n    /** æåºæ¹å¼ asc | desc */\r\n    @Input() sortOrder: string;\r\n    /** åè®¸å¤åæåº */\r\n    @Input() multiSort: boolean;\r\n\r\n    @Input() hoverRowCls = 'f-datagrid-row-hover';\r\n\r\n    /** åè®¸ææ½åé¡ºåº */\r\n    @Input() enableDragColumn = false;\r\n\r\n    /** è¡åç»é¢æ¿é«åº¦ï¼é»è®¤ 50PX */\r\n    @Input() rowGroupPanelHeight = 50;\r\n    /** å¯ç¨åç»è¡ */\r\n    @Input() groupRows = false;\r\n    /** å¯ç¨è¡åç»åè®¡è¡ */\r\n    @Input() groupFooter = false;\r\n    /**\r\n     * åç»åè®¡è¡èªå®ä¹æ ·å¼ï¼\r\n     * åè®¸çå¼ä¸º\r\n     * - { cls: 'cssclassname, ', style: { color: 'red', border: 1px solid } }\r\n     * - (groupFooterRowData): { cls: 'cssclassname, ', style: { color: 'red', border: 1px solid } } => {}\r\n     */\r\n    @Input() groupFooterStyler: any;\r\n    /** åè®¡æ°æ®æ¾ç¤ºä½ç½®\r\n     * inGroupRow: ä¸åç»å¨åä¸è¡ï¼åå«ç¸å³åè®¡å­æ®µå¯¹é½\r\n     * groupFooterRow: å¨åç»æ°æ®æåå¢å ä¸è¡\r\n     * é»è®¤ä¸º groupFooterRow\r\n     */\r\n    @Input() groupSummaryPosition: 'inGroupRow' | 'groupFooterRow' = 'groupFooterRow';\r\n    /** åç»ä¿¡æ¯åå¹¶åæ°\r\n     * é»è®¤ä¸º 1\r\n     */\r\n    @Input() groupCellColSpan = 1;\r\n\r\n    /** åç»å­æ®µåç§°, å¤å­æ®µåç»ä»¥è±æéå·åé */\r\n    private _groupField = '';\r\n    groupFields$ = new BehaviorSubject([]);\r\n    get groupField() {\r\n        return this._groupField;\r\n    }\r\n    @Input() set groupField(val) {\r\n        this._groupField = val || '';\r\n        if (this.groupField) {\r\n            this.groupFields$.next(this.groupField.split(','));\r\n        } else {\r\n            this.groupFields$.next([]);\r\n        }\r\n        this.dfs.updateProperty('groupField', this._groupField);\r\n    }\r\n    /** æ¾ç¤ºåç»å */\r\n    @Input() showGroupColumn = true;\r\n    /** åç»æ ¼å¼å */\r\n    @Input() groupFormatter: (groupRow: any) => any;\r\n    /** åç»è¡æ ·å¼ */\r\n    @Input() groupStyler: (groupRow: any) => { cls?: string, style?: any };\r\n\r\n    /** æ¾ç¤ºåç»åé¢æ¿ãé»è®¤ä¸º false */\r\n    private _showRowGroupPanel = false;\r\n    @Input() set showRowGroupPanel(val) {\r\n        this._showRowGroupPanel = val;\r\n    }\r\n    get showRowGroupPanel() {\r\n        return this.groupRows && this._showRowGroupPanel;\r\n    }\r\n\r\n    /** åå»è¡¨å¤´éåºåå®¹å®½åº¦ */\r\n    @Input() AutoColumnWidthUseDblclick = true;\r\n    /** è¡é©éåéä¸­ç¦ç¨è¡¨è¾¾å¼ */\r\n    @Input() disableRow: (row, index?: any) => boolean;\r\n    /** ä½¿ç¨åé¨è¿æ»¤å¨; é»è®¤ä¸º false */\r\n    @Input() useDefaultFilter = false;\r\n    /** è¿æ»¤å¾æ ä¸æåºå¾æ åå¹¶ï¼æ­¤å±æ§ä¸ enableFilterRow äºæ¥ */\r\n    @Input() enableSmartFilter = false;\r\n    /** æ¾ç¤ºè¿æ»¤è¡ */\r\n    @Input() enableFilterRow = false;\r\n    /** æå¡å¨ç«¯è¿æ»¤ */\r\n    @Input() remoteFilter = false;\r\n    /** å¯ç¨è¿æ»¤æ¡ä»¶æ¾ç¤ºæ¡ */\r\n    @Input() showFilterBar = false;\r\n    /** è¿æ»¤æ¡ä»¶æ±æ»æ¡é«åº¦ï¼é»è®¤ 32px  */\r\n    @Input() filterBarHeight = 32;\r\n    @Input() filterRowHeight = 40;\r\n    @Input() conditions: any = {};\r\n\r\n    @Input() selectValue = null;\r\n    @Input() checkValues = [];\r\n    @Input() selectValues = [];\r\n\r\n    /** åå¹¶ååæ ¼ï¼åæ¯æçºµååå¹¶ */\r\n    @Input() mergeCell = false;\r\n    @Input() mergeFields = [];\r\n    /** åå¹¶ååæ ¼æ°æ®å¯ç¨å®¢æ·ç«¯æåº */\r\n    @Input() enableClientSortForMergeCell = false;\r\n    /** ä½¿ç¨é«çº§æ§å¶é¢æ¿ */\r\n    @Input() useControlPanel = false;\r\n    /** å¯ç¨ç®æ´æ§å¶é¢æ¿æ¨¡å¼ãé»è®¤ä¸º false */\r\n    @Input() enableSimpleMode = false;\r\n    /** ç¹å»åè®¾ç½®å¾æ ï¼é»è®¤æå¼çæ§å¶é¢æ¿ */\r\n    @Input() controlPanelMode: 'advanced' | 'simple' = 'advanced';\r\n    /** é»æ­¢click äºä»¶åæ³¡ */\r\n    @Input() stopPropagation = true;\r\n    /**\r\n     * (202105 å¼ç¨)\r\n     * ç¹å»ååæ ¼è¿è¡ç¼è¾ç¶ææ¶ï¼å³é­å¶ä»Gridçç¼è¾å¨ãé»è®¤ falseï¼\r\n     * å¤ä¸ªåè¡¨å­æ¶ï¼ä»æä¸ä¸ªåè¡¨ä¸­æç¼è¾ç¶æï¼å¶ä»åè¡¨ç»æç¼è¾\r\n     */\r\n    @Input() closeOtherGridEditor = false;\r\n    /** å½æ°æ®æºä¸ºç©ºæ¶ï¼æ¸ç©ºå·²éè®°å½ */\r\n    @Input() clearSelectionsWhenDataIsEmpty = true;\r\n    /** å¯ç¨å³é®èåï¼é»è®¤ä¸º false */\r\n    @Input() enableContextMenu = false;\r\n    /** å³é®èåæ°æ® */\r\n    @Input() contextMenus: ContextMenuItem[] = null;\r\n\r\n    @Output() selectValueChange = new EventEmitter();\r\n    @Output() checkValuesChange = new EventEmitter();\r\n    @Output() selectValuesChange = new EventEmitter();\r\n\r\n    @Input() beforeEdit: (param: RowEditParam) => Observable<boolean>;\r\n    @Output() beginEdit = new EventEmitter<RowEditParam>();\r\n    @Input() afterEdit: (rowIndex: number, rowData: any, column?: DataColumn, editor?: any) => Observable<boolean>;\r\n    @Output() endEdit = new EventEmitter<{ rowIndex: number, rowData: any, column?: DataColumn, value?: any }>();\r\n    @Output() cancelEdited = new EventEmitter<string>();\r\n\r\n    @Output() scrollY = new EventEmitter();\r\n\r\n    @Output() pageSizeChanged = new EventEmitter();\r\n    @Output() pageChanged = new EventEmitter();\r\n\r\n    @Output() loadSuccess = new EventEmitter();\r\n\r\n    @Output() filterChanged = new EventEmitter();\r\n\r\n    @Input() beforeSelect: (params: BeforEventParam) => Observable<boolean>;\r\n    @Input() beforeUnselect: (params: BeforEventParam) => Observable<boolean>;\r\n    @Input() beforeCheck: (params: BeforEventParam) => Observable<boolean>;\r\n    @Input() beforeUncheck: (params: BeforEventParam) => Observable<boolean>;\r\n    @Input() beforeSortColumn: (field: string, order: string, instance: DatagridComponent) => Observable<boolean>;\r\n    /** å¯ç¨éä¸­ååæ ¼é«äº®æ¾ç¤º */\r\n    @Input() enableHighlightCell = false;\r\n    /**  éä¸­çæ°æ®å§ç»ä»æ°æ®æºä¸­è·å. é»è®¤ä¸º false */\r\n    @Input() checkedRowsDataFromSource = false;\r\n    /** å½åååæ ¼ä¸ºåªè¯»æ¶ï¼ä½¿ç¨tab é®è·³å°ä¸ä¸ªååæ ¼æ¶ï¼æ¯å¦åè®¸è¿å¥ç¼è¾ç¶æï¼é»è®¤ä¸º false;\r\n     * é»è®¤æåµä¸ï¼å½åååæ ¼åªè¯»ï¼æTABè·³å°ä¸ä¸ªCELL æ¶ï¼éä¸­CELL ï¼åè½¦è¿å¥ç¼è¾ã\r\n     * å¼å¯åï¼ä¸ä¸ªååæ ¼èªå¨è¿å¥ç¼è¾ç¶æã\r\n     */\r\n    @Input() editcellWhenTabKeydwon = false;\r\n\r\n    /** ååæ ¼ç¹å»åäºä»¶ */\r\n    @Output() beforeClickCell = new EventEmitter<RowEditParam>();\r\n\r\n    @Output() dblclickRow = new EventEmitter();\r\n    @Output() selectChanged = new EventEmitter<SelectedRow>();\r\n    @Output() unSelect = new EventEmitter<SelectedRow>();\r\n    @Output() selectAll = new EventEmitter<SelectedRow[]>();\r\n    @Output() unSelectAll = new EventEmitter();\r\n    /** å¼æ­¥è¯·æ±èæå è½½ */\r\n    @Output() scrollYLoad = new EventEmitter<{ pager: number, pageSize: number }>();\r\n\r\n    @Output() checked = new EventEmitter<SelectedRow>();\r\n    @Output() unChecked = new EventEmitter<SelectedRow>();\r\n    @Output() checkAll = new EventEmitter<SelectedRow[]>();\r\n    @Output() unCheckAll = new EventEmitter<SelectedRow[]>();\r\n    @Output() checkedChange = new EventEmitter<SelectedRow[]>();\r\n\r\n    @Output() columnSorted = new EventEmitter<any>();\r\n\r\n    @Output() rowClick = new EventEmitter();\r\n    @Output() rowAppended = new EventEmitter();\r\n    @Output() rowDeleted = new EventEmitter();\r\n    @Output() rowUpdated = new EventEmitter();\r\n\r\n    @Output() dataChange = new EventEmitter();\r\n\r\n    /** æåä¸è¡çæåååæ ¼åè½¦å¤çäºä»¶ */\r\n    @Output() lastCellEnterHandle = new EventEmitter();\r\n\r\n    /** åç»å­æ®µååå */\r\n    @Output() groupFieldChange = new EventEmitter();\r\n    /** æå¨åæ¹ååæ¾ç¤ºä½ç½®åè§¦å */\r\n    @Output() columnMoved = new EventEmitter();\r\n    /** ååæ ¼ç¹å»äºä»¶ */\r\n    @Output() cellClick = new EventEmitter();\r\n\r\n    @ContentChildren(DatagridColumnDirective) dgColumns?: QueryList<DatagridColumnDirective>;\r\n    @ViewChild('dgPager') dgPager: any;\r\n    @ViewChild('resizeProxy') resizeProxy: ElementRef;\r\n    @ViewChild('resizeProxyBg') resizeProxyBg: ElementRef;\r\n    @ViewChild('datagridContainer') dgContainer: ElementRef;\r\n    @ViewChild('longTextArea') longTextArea: ElementRef;\r\n    @ViewChild('smartfiltertoolbar') smartFilterToolbar: SmartFilterToolbarComponent;\r\n    colGroup: ColumnGroup;\r\n\r\n    private _loading = false;\r\n    get loading() {\r\n        return this._loading;\r\n    }\r\n    set loading(val: boolean) {\r\n        this._loading = val;\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    get selections(): SelectedRow[] {\r\n        return this.dfs.getSelections();\r\n    }\r\n\r\n    get checkeds() {\r\n        return this.checkedRows;\r\n    }\r\n\r\n    get checkedRows() {\r\n        const chkeds = this.dfs.getCheckeds();\r\n        if (this.enableMorePageSelect) {\r\n            if (chkeds && chkeds.length) {\r\n                if (!this.checkedRowsDataFromSource) {\r\n                    return [...chkeds];\r\n                }\r\n                // ä»æ°æ®æºä¸­è·åææ°æ°æ®\r\n                return chkeds.map(n => {\r\n                    const d = this.dfs.findRow(n.id);\r\n                    if (d) {\r\n                        n.data = d.data;\r\n                    }\r\n                    return n;\r\n                });\r\n            }\r\n        } else {\r\n            if (this.data && this.data.length) {\r\n                const temp = this.data.map(n => n[this.idField]);\r\n                if (!this.checkedRowsDataFromSource) {\r\n                    return chkeds.filter(n => temp.includes(n.id));\r\n                }\r\n                // ä»æ°æ®æºä¸­è·åææ°æ°æ®\r\n                return chkeds.filter(n => temp.includes(n.id)).map(n => {\r\n                    const d = this.dfs.findRow(n.id);\r\n                    if (d) {\r\n                        n.data = d.data;\r\n                    }\r\n                    return n;\r\n                });\r\n            }\r\n        }\r\n        return [];\r\n    }\r\n\r\n    set checkedRows(rows: any[]) {\r\n        if (rows && rows.length) {\r\n            rows = rows.map(r => {\r\n                if (r.data) {\r\n                    return r;\r\n                }\r\n                return {\r\n                    id: r[this.idField],\r\n                    data: r\r\n                };\r\n            });\r\n        }\r\n\r\n        this.dfs.updateProperty('checkedRows', rows || []);\r\n        this.initSelectOrChecked();\r\n        this.cd.markForCheck();\r\n    }\r\n\r\n    private _selectedRow = null;\r\n    get selectedRow(): SelectedRow {\r\n        return this._selectedRow;\r\n    }\r\n    set selectedRow(row) {\r\n        if (row) {\r\n            if (this.selectValue != row.id) {\r\n                this._selectedRow = row;\r\n                this.selectValue = row.id;\r\n                this.selectValueChange.emit(row.id);\r\n                this.selectChanged.emit(row);\r\n            }\r\n        } else {\r\n            this.unSelect.emit(this._selectedRow);\r\n            this.selectValue = null;\r\n            this.selectValueChange.emit('');\r\n            this._selectedRow = null;\r\n        }\r\n        // this.cd.detectChanges();\r\n    }\r\n\r\n    ds = {\r\n        index: 0,\r\n        rows: [],\r\n        top: 0,\r\n        bottom: 0,\r\n        scrolling: false // æ¯å¦ç±æ»å¨æ¡è§¦å\r\n    };\r\n\r\n    pagerOpts: any = {};\r\n    restService: RestService;\r\n    editors: { [key: string]: any } = {};\r\n\r\n    validators: { name: string, value: ValidatorFn }[] = [];\r\n\r\n    currentCell: CellInfo;\r\n    flatColumns: DataColumn[];\r\n    footerWidth = 0;\r\n\r\n    clickDelay = 150;\r\n    private resizeColumnInfo = {\r\n        proxyLineEdge: 0,\r\n        startWidth: 0,\r\n        startX: 0,\r\n        left: 0\r\n    };\r\n\r\n    private ro: ResizeObserver | null = null;\r\n    subscriptions: Subscription[] = [];\r\n    realHeaderHeight = 0;\r\n    isSingleClick: boolean;\r\n\r\n    docuemntCellClickEvents: any;\r\n    documentCellClickHandler: any;\r\n    documentCellKeydownEvents: any;\r\n    documentCellKeydownHandler: any;\r\n\r\n    // å¼¹çªä¸­ä½¿ç¨æ¶ï¼çªå£ç¹å»äºä»¶å¤ç\r\n    private modalClickEvent = null;\r\n\r\n    // è¡éä¸­é®çäºä»¶\r\n    documentRowKeydownHandler: any;\r\n    // è¡ç¼è¾å¿«æ·é®\r\n    documentRowEditKeydownHanlder: any;\r\n    // document åå»æ¶ç»æè¡ç¼è¾\r\n    documentClickEndRowEditHandler: any;\r\n\r\n    pending = false;\r\n    public colFormatSer: ColumnFormatService;\r\n    scrollInstance: ScrollbarDirective = null;\r\n    // æ¬å°åæå¡\r\n    localeService: LocaleService;\r\n    // åå¹¶ååè¾å©ä¿¡æ¯\r\n    mergeCellInfo = {};\r\n    ignoreTarget = ['INPUT', 'SELECT', 'TEXTAREA'];\r\n    clientFilterService: DatagridFilterService = null;\r\n\r\n    settingService: any; // DatagridSettingsService;\r\n\r\n    /* æ§å¶åå­æ®µåç§°: _datagrid-setting-control_ */\r\n    ControlPanelFeild = '_datagrid-setting-control_';\r\n\r\n    private _isResized = false;\r\n\r\n    gridSize = { width: this.width + 'px', height: this.height + 'px' };\r\n    // å®¢æ·ç«¯è¿æ»¤æ¶ï¼æ¯å¦è¿æ»¤è¡åçåå\r\n    clientFilterChanged = false;\r\n    // style's ID\r\n    styleSheetId = '';\r\n\r\n    groupRowPanelPlaceholder = '';\r\n    commonUtils: CommonUtils = null;\r\n    smartFilterService: DatagridSmartFilterService = null;\r\n    smartFilterResult = { controlData: [], conditions: [] };\r\n    smartFilterBarHeight = 32;\r\n    private idService: IdService;\r\n    private _active_datagrid_cls = 'datagrid-active';\r\n    private _blured_datagrid_cls = 'datagrid-blurred';\r\n\r\n    // èªå®ä¹gridæ ·å¼ï¼åè¡¨åå§åï¼ä¼æ·»å ä¸ä¸ªèªå®ä¹åç§°çæ ·å¼\r\n    _custom_datagrid_cls = 'datagrid';\r\n    // å¤éä»¿ windows éæ©æ¨¡å¼\r\n    sms: SelectionModeService;\r\n    // ç¦ç¹è¡ç´¢å¼ï¼æ¯æ¬¡è¡ç¹å»åæ´æ°\r\n    focusRowIndex = -1;\r\n\r\n    private documentBodyMouseDown = null;\r\n    private farrisInstances: FarrisComponentInstanceService = null;\r\n    private currentPagerData = [];\r\n    constructor(\r\n        public cd: ChangeDetectorRef,\r\n        public el: ElementRef,\r\n        public inject: Injector, public zone: NgZone,\r\n        public dfs: DatagridFacadeService,\r\n        public dgs: DatagridService,\r\n        private app: ApplicationRef,\r\n        protected domSanitizer: DomSanitizer,\r\n        public render2: Renderer2) {\r\n\r\n        this.styleSheetId = 'DATAGRID-' + Utils.uuid();\r\n\r\n        this.localeService = this.inject.get(LocaleService);\r\n        this.restService = this.inject.get<RestService>(DATAGRID_REST_SERVICEE, null);\r\n        this.colFormatSer = this.inject.get(ColumnFormatService);\r\n        this.commonUtils = this.inject.get(CommonUtils, null);\r\n        this.clientFilterService = new DatagridFilterService(dfs, this.localeService, inject);\r\n        this.farrisInstances = this.inject.get(FarrisComponentInstanceService, null);\r\n\r\n        this.smartFilterService = this.inject.get(DatagridSmartFilterService, null);\r\n        this.idService = this.inject.get(IdService, null);\r\n        this.dfs.localId = this.localeService.localeId;\r\n\r\n        this.settingService = this.inject.get(GRID_SETTINGS_SERVICE, null);\r\n        if (this.settingService) {\r\n            const settingsHttp = this.inject.get(GRID_SETTINGS_HTTP, null);\r\n            this.settingService.httpRestService = settingsHttp;\r\n        }\r\n\r\n        const dataSubscription = this.dfs.data$.subscribe((dataSource: any) => {\r\n            this.cleanDom();\r\n            const ds = { ...dataSource };\r\n\r\n            if (this.conditions && Object.keys(this.conditions).length && !this.remoteFilter && this.useDefaultFilter) {\r\n                ds.rows = this.clientFilterService.executeFilter(ds.rows, this.conditions);\r\n            }\r\n\r\n            this.ds = ds;\r\n\r\n            if (this.ds.rows && this.ds.rows.length) {\r\n                this.data = this.dfs.getData();\r\n\r\n                if (this.mergeCell && this.mergeFields && this.mergeFields.length) {\r\n                    this.mergeCellInfo = this.dgs.getMergeCellInfo3(this.ds.rows, [...this.mergeFields]);\r\n                }\r\n\r\n                this.setPagerTotal();\r\n                this.loadSuccess.emit(this.ds.rows);\r\n            } else {\r\n                this.data = [];\r\n                if (this.clearSelectionsWhenDataIsEmpty) {\r\n                    this.clearAll();\r\n                }\r\n            }\r\n\r\n            if (!this.ds.scrolling) {\r\n                this.updateFooterData();\r\n            }\r\n            // æ§è½ä¼å\r\n            this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(dataSubscription);\r\n\r\n        const columnGroupSubscription = this.dfs.columnGroup$.pipe(\r\n            debounceTime(60)\r\n        ).subscribe(cg => {\r\n            if (cg) {\r\n                this.colGroup = cg;\r\n                this.footerWidth = cg.totalWidth;\r\n\r\n                this.cd.detectChanges();\r\n            }\r\n        });\r\n        this.subscriptions.push(columnGroupSubscription);\r\n\r\n        this.subscriptions.push(\r\n            this.dfs.gridSize$.subscribe((cg: any) => {\r\n                if (cg && cg.columnsGroup) {\r\n                    this.colGroup = cg.columnsGroup;\r\n                    this.cd.detectChanges();\r\n                }\r\n            })\r\n        );\r\n\r\n        this.initEditorAndValidator();\r\n\r\n        const currentCellSubscription = this.dfs.currentCell$.subscribe((cell: any) => {\r\n            this.currentCell = cell;\r\n            if (cell && cell.cellRef) {\r\n                cell.cellRef.isEditing = cell.isEditing;\r\n            }\r\n            this.unbindMoveSelectRowEvent();\r\n            this.bindDocumentEditListener();\r\n        });\r\n\r\n\r\n        this.dfs.selectRow$.subscribe((sr: SelectedRow) => {\r\n            if (!this.currentCell) {\r\n                this.bindDocumentMoveSelectRowEvent();\r\n            }\r\n            this.selectedRow = sr;\r\n            // this.cd.detectChanges();\r\n            // this.selectChanged.emit(sr);\r\n        });\r\n\r\n        this.subscriptions.push(currentCellSubscription);\r\n\r\n        DatagridColumnsHelper.gridInstance = this;\r\n\r\n        const filterChangedSubscription = this.dgs.onFilterChanged.subscribe((conditions: any) => {\r\n            // æ´æ°ç¼å­è¿æ»¤æ¡ä»¶\r\n            this.conditions = conditions;\r\n            this.clientFilterChanged = true;\r\n            this.filterData(conditions);\r\n        });\r\n        this.subscriptions.push(filterChangedSubscription);\r\n        // this.initPaginationOptions();\r\n\r\n        const footerDataSubscription = this.dgs.refreshFooterData.subscribe(() => {\r\n            this.updateFooterData();\r\n            // this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(footerDataSubscription);\r\n        this.dgs.commonUtils = this.commonUtils;\r\n\r\n        this.sms = new SelectionModeService(this);\r\n\r\n        this.dgs.focusRowChanged.subscribe((e: any) => {\r\n            if (e) {\r\n                this.focusRowIndex = e.rowIndex;\r\n            }\r\n        });\r\n    }\r\n\r\n    setCurrentPagerData($data) {\r\n        this.currentPagerData = $data;\r\n    }\r\n\r\n    private updateFooterData() {\r\n        if (this.showFooter && this.footerDataFrom === 'client') {\r\n            this.footerData = of(this.dfs.getFooterData(this.data));\r\n        }\r\n    }\r\n\r\n    //#region Ng Event\r\n\r\n    ngDoCheck() {\r\n        // if (!this.checkValues) {\r\n        //     this.checkValues = [];\r\n        // }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.checkFilterStyle();\r\n\r\n        if (this.useThemes) {\r\n            this._checkSize();\r\n        }\r\n        this.checkOptions();\r\n        this.groupRowPanelPlaceholder = this.localeService.getValue('datagrid.groupRow.tips');\r\n        // this._flatColumns();\r\n        // this.setHeaderHeight();\r\n\r\n        if (this.smartFilterService) {\r\n\r\n            if (this.enableSmartFilter && this.showFilterBar) {\r\n                if (this.smartFilterResult && this.smartFilterResult.controlData && this.smartFilterResult.controlData.length) {\r\n                    this.filterBarHeight = this.smartFilterBarHeight;\r\n                } else {\r\n                    this.filterBarHeight = 0;\r\n                }\r\n            }\r\n\r\n            this.smartFilterService.filterChanged.subscribe((e: any) => {\r\n                // æ´æ°ç¼å­è¿æ»¤æ¡ä»¶\r\n                // console.log(this.smartFilterToolbar);\r\n\r\n                if (!this.smartFilterResult && !e) {\r\n                    return;\r\n                }\r\n\r\n                if (JSON.stringify(this.smartFilterResult) !== JSON.stringify(e)) {\r\n                    this.smartFilterResult = e;\r\n                    this.clientFilterChanged = true;\r\n                    this.filterData(e.conditions);\r\n                    if (!this.smartFilterResult || (this.smartFilterResult.controlData && !this.smartFilterResult.controlData.length)) {\r\n                        this.onFilterBarResize(0);\r\n                    } else {\r\n                        if (!this.filterBarHeight) {\r\n                            this.onFilterBarResize(this.smartFilterBarHeight);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n\r\n        // åå»ºèªå®ä¹style å®¹å¨\r\n        this.render2.addClass(this.dgContainer.nativeElement, this._custom_datagrid_cls);\r\n\r\n        this.setHeaderHeight();\r\n        this.setPagerHeight();\r\n        this.initBeforeEvents();\r\n        if (this.fit) {\r\n            this.setGridNewSizeWhenFit();\r\n        }\r\n\r\n        this.initState();\r\n        if (this.el && this.farrisInstances) {\r\n            this.farrisInstances.add(this.el.nativeElement, this);\r\n        }\r\n        if (!this.data || !this.data.length) {\r\n            this.fetchData(1, this.pageSize).subscribe(res => {\r\n                if (!res) {\r\n                    return;\r\n                }\r\n                this.total = res.total;\r\n\r\n                if (res.footer) {\r\n                    this.footerData = res.footer;\r\n                }\r\n\r\n                this.loadData(res.items);\r\n            });\r\n        }\r\n\r\n        this.zone.runOutsideAngular(() => {\r\n            this.ro = new ResizeObserver((e) => {\r\n                const target = e[0].target as any;\r\n                if (target.style.display === 'none') {\r\n                    return;\r\n                }\r\n\r\n                const _w = e[0].contentRect.width;\r\n                if (!_w) {\r\n                    return;\r\n                }\r\n                const _h = e[0].contentRect.height;\r\n                const _floowW = Math.floor(_w);\r\n                const _roundW = Math.floor(_w);\r\n                const _floorH = Math.floor(_h);\r\n                const _roundH = Math.round(_h);\r\n\r\n                if ((this.width === _floowW || this.width === _roundW) && (this.height === _floorH || this.height === _roundH)) {\r\n                    this.dgs.restoreScrollbarPosition();\r\n                    return;\r\n                }\r\n\r\n                setTimeout(() => {\r\n                    this.calculateGridSize(this.fit);\r\n                }, 100);\r\n            });\r\n\r\n            this.ro.observe(this.el.nativeElement.parentElement);\r\n\r\n\r\n            document.body.removeEventListener('mousedown', this.documentBodyMouseDown);\r\n            document.body.addEventListener('mousedown', this.documentBodyMouseDown = (e) => {\r\n                const target = e.target as any;\r\n                if (target.closest('td.f-datagrid-cell') ||\r\n                    target.closest('.date-overlay-container') ||\r\n                    target.closest('.time-picker-overlay') ||\r\n                    target.closest('.language-textbox-panel') ||\r\n                    target.closest('.comboPanel')) {\r\n                    return;\r\n                }\r\n                this.onDocumentMouseDown(e);\r\n            }, true);\r\n\r\n        });\r\n\r\n        if (this.showFooter) {\r\n            if (this.footerTemplate) {\r\n                const footerDom = this.el.nativeElement.querySelector('.f-datagrid-footer');\r\n                if (footerDom) {\r\n                    this.footerHeight = this.el.nativeElement.querySelector('.f-datagrid-footer').offsetHeight;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.fit) {\r\n            if (this.el.nativeElement.parentElement) {\r\n                this.el.nativeElement.parentElement.style.position = 'relative';\r\n            }\r\n            this.calculateGridSize(this.fit);\r\n        }\r\n\r\n\r\n        // æ£æ¥æ¯å¦å¯ç¨ä»¿windowsèµæºç®¡çå¨ä¸­çå¤éæ¨¡å¼\r\n        if (this.selectionMode && this.selectionMode === 'default' && this.multiSelect) {\r\n            this.sms.enableWindowsSelectionMode();\r\n        }\r\n    }\r\n\r\n    ngAfterContentInit() {\r\n        if (this.dgColumns && this.dgColumns.length) {\r\n            this.columns = this.dgColumns.map(dgc => {\r\n                return { ...dgc };\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.data && !changes.data.isFirstChange()) {\r\n            this.dfs.loadData(changes.data.currentValue);\r\n            this.dgs.dataSourceChanged();\r\n        }\r\n\r\n        if (changes.showCheckbox !== undefined && !changes.showCheckbox.isFirstChange()) {\r\n            this.dfs.showCheckbox(changes.showCheckbox.currentValue);\r\n        }\r\n\r\n        if (changes.showLineNumber !== undefined && !changes.showLineNumber.isFirstChange()) {\r\n            this.dfs.showLineNumber(changes.showLineNumber.currentValue);\r\n        }\r\n\r\n        if (changes.multiSelect !== undefined && !changes.multiSelect.isFirstChange()) {\r\n            this.dfs.setMultiSelect(changes.multiSelect.currentValue);\r\n        }\r\n\r\n        if (changes.checkOnSelect !== undefined && !changes.checkOnSelect.isFirstChange()) {\r\n            this.dfs.setCheckOnSelect(changes.checkOnSelect.currentValue);\r\n        }\r\n\r\n        if (changes.selectOnCheck !== undefined && !changes.selectOnCheck.isFirstChange()) {\r\n            this.dfs.setSelectOnCheck(changes.selectOnCheck.currentValue);\r\n        }\r\n\r\n        if (changes.onlySelectSelf !== undefined && !changes.onlySelectSelf.isFirstChange()) {\r\n            this.dfs.updateProperty('onlySelectSelf', changes.onlySelectSelf.currentValue);\r\n        }\r\n\r\n        if (changes.keepSelect !== undefined && !changes.keepSelect.isFirstChange()) {\r\n            this.dfs.updateProperty('keepSelect', changes.keepSelect.currentValue);\r\n        }\r\n\r\n        if (changes.headerWrap !== undefined && !changes.headerWrap.isFirstChange()) {\r\n            setTimeout(() => {\r\n                this.setHeaderHeight();\r\n                this.cd.detectChanges();\r\n                this.dfs.columnResizeEnd();\r\n            });\r\n        }\r\n\r\n        if (changes.nowrap !== undefined && !changes.nowrap.isFirstChange()) {\r\n            this.checkNowrap();\r\n            this.setRowHeight(false);\r\n            this.dgs.cellContentWrapChanged.emit();\r\n            this.dfs.updateProperty('nowrap', changes.nowrap.currentValue);\r\n        }\r\n\r\n        if (changes.multiSort !== undefined && !changes.multiSort.isFirstChange()) {\r\n            this.dfs.updateProperty('multiSort', changes.multiSort.currentValue);\r\n        }\r\n\r\n        if (changes.editable !== undefined && !changes.editable.isFirstChange()) {\r\n            this.dfs.updateProperty('editable', changes.editable.currentValue);\r\n            if (!changes.editable.currentValue) {\r\n                this.endCellEdit();\r\n            }\r\n            this.isSingleClick = null;\r\n\r\n            // if (this.editable) {\r\n            //     this.keepSelect = false;\r\n            // } else {\r\n            //     this.keepSelect = this.dfs._state.keepSelect;\r\n            // }\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n        if (changes.showHeader !== undefined && !changes.showHeader.isFirstChange()) {\r\n            this.dfs.updateProperty('showHeader', changes.showHeader.currentValue);\r\n            this.headerHeightChange();\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n        if (changes.showFilterBar !== undefined && !changes.showFilterBar.isFirstChange()) {\r\n            this.dfs.updateProperty('showFilterBar', changes.showFilterBar.currentValue);\r\n            this.dgs.showGridHeader.emit(this.realHeaderHeight);\r\n            // this.dgs.smartFilterBarExpand.emit();\r\n            let fh = 0;\r\n            if (this.conditions && this.conditions.length) {\r\n                fh = 32;\r\n            }\r\n            this.onFilterBarResize(fh);\r\n        }\r\n\r\n\r\n        if (changes.showFooter !== undefined && !changes.showFooter.isFirstChange()) {\r\n            this.dfs.updateProperty('showFooter', changes.showFooter.currentValue);\r\n            // this.cd.detectChanges();\r\n            this.calculateGridSize(this.fit);\r\n        }\r\n\r\n        if (changes.pagerOnServer !== undefined && !changes.pagerOnServer.isFirstChange()) {\r\n            this.dfs.updateProperty('pagerOnServer', changes.pagerOnServer.currentValue);\r\n            this.pagerOpts = Object.assign(this.pagerOpts, {\r\n                remote: this.pagerOnServer\r\n            });\r\n        }\r\n\r\n        if (changes.pageIndex !== undefined && !changes.pageIndex.isFirstChange()) {\r\n            this.dfs.updateProperty('pageIndex', changes.pageIndex.currentValue);\r\n            this.pagerOpts = Object.assign(this.pagerOpts, {\r\n                currentPage: this.pageIndex\r\n            });\r\n        }\r\n\r\n        if (changes.pageSize !== undefined && !changes.pageSize.isFirstChange()) {\r\n            this.dfs.updateProperty('pageSize', changes.pageSize.currentValue);\r\n            this.pagerOpts = Object.assign(this.pagerOpts, {\r\n                itemsPerPage: this.pageSize\r\n            });\r\n        }\r\n\r\n        if (changes.pageList !== undefined && !changes.pageList.isFirstChange()) {\r\n            this.dfs.updateProperty('pageList', changes.pageList.currentValue);\r\n            this.pagerOpts = Object.assign(this.pagerOpts, {\r\n                pageList: this.pageList\r\n            });\r\n        }\r\n\r\n        if (changes.columns !== undefined && !changes.columns.isFirstChange()) {\r\n            this.columnsChanged();\r\n        }\r\n\r\n        if (changes.sizeType !== undefined && !changes.sizeType.isFirstChange()) {\r\n            this._sizeType = changes.sizeType.currentValue;\r\n            this.setRowHeight(true);\r\n            this.dfs.updateProperty('rowHeight', this.rowHeight);\r\n            this.setFooterHeight();\r\n            this.refresh();\r\n            this.dgs.onRowHeightChange(this.rowHeight);\r\n        }\r\n\r\n        if (changes.rowHeight && !changes.rowHeight.isFirstChange()) {\r\n            this.setRowHeight(false);\r\n        }\r\n\r\n        if (changes.selectValue && !changes.selectValue.isFirstChange()) {\r\n            this.selectRow(this.selectValue, false);\r\n        }\r\n\r\n        if (changes.checkValues && !changes.checkValues.isFirstChange()) {\r\n            const checkIds = this.dfs.differenceBy(changes.checkValues.currentValue || [], changes.checkValues.previousValue || [], (v) => v);\r\n            if (checkIds && checkIds.length) {\r\n                this.checkRows(checkIds, false);\r\n            }\r\n\r\n            const uncheckIds = this.dfs.differenceBy(changes.checkValues.previousValue || [], changes.checkValues.currentValue || [], (v) => v);\r\n            if (uncheckIds && uncheckIds.length) {\r\n                this.unCheckRows(uncheckIds, false);\r\n            }\r\n\r\n            setTimeout(() => {\r\n                this.checkValues = this.checkeds.map(r => r.id);\r\n                this.checkValuesChange.emit(this.checkValues);\r\n                this.checkedChange.emit(this.checkeds);\r\n\r\n                this.updateAllCheckboxStatus();\r\n            }, 10);\r\n        }\r\n\r\n        if (changes.showGroupColumn && !changes.showGroupColumn.isFirstChange()) {\r\n            this.toggleVisibleColumn(this.groupField.split(','), changes.showGroupColumn.currentValue);\r\n            this.columnsChanged();\r\n        }\r\n\r\n        if (changes.autoFitColumns && !changes.autoFitColumns.isFirstChange()) {\r\n            this.dfs.updateProperty('autoFitColumns', changes.autoFitColumns.currentValue);\r\n        }\r\n\r\n        if (changes.groupRows && !changes.groupRows.isFirstChange()) {\r\n            this.dfs.updateProperty('groupRows', changes.groupRows.currentValue);\r\n            this.refresh();\r\n        }\r\n\r\n        if (changes.mergeCell && !changes.mergeCell.isFirstChange()) {\r\n            this.refresh();\r\n        }\r\n\r\n        if (changes.mergeFields && !changes.mergeFields.isFirstChange()) {\r\n            this.refresh();\r\n        }\r\n\r\n        if (changes.enableFilterRow && !changes.enableFilterRow.isFirstChange()) {\r\n            this.dfs.updateProperty('enableFilterRow', changes.enableFilterRow.currentValue);\r\n            if (this.showHeader) {\r\n                this.setHeaderHeight();\r\n                this.filterBarHeight = 32;\r\n                this.dgs.toggleFilterRow.emit(this.enableFilterRow);\r\n                this.dgs.showGridHeader.emit(this.realHeaderHeight);\r\n                this.cd.detectChanges();\r\n            }\r\n        }\r\n\r\n        if (changes.enableSmartFilter && !changes.enableSmartFilter.isFirstChange()) {\r\n            this.dfs.updateProperty('enableSmartFilter', changes.enableSmartFilter.currentValue);\r\n        }\r\n\r\n        if (changes.enableDragColumn && !changes.enableDragColumn.isFirstChange()) {\r\n            this.checkDragColumns();\r\n        }\r\n\r\n        if (changes.showRowGroupPanel && !changes.showRowGroupPanel.isFirstChange()) {\r\n            this.dgs.smartFilterBarExpand.emit();\r\n            this.dgs.showGridHeader.emit(this.realHeaderHeight);\r\n        }\r\n\r\n        if (changes.selectionMode && !changes.selectionMode.isFirstChange()) {\r\n            this.sms.toggleMode();\r\n        }\r\n    }\r\n\r\n    private checkFilterStyle() {\r\n        // è¿æ»¤è¡ä¸æºè½è¿æ»¤ åæ¶å¯ç¨æ¶ï¼å°è¿æ»¤è¡ç¦ç¨\r\n        if (this.enableFilterRow && this.enableSmartFilter) {\r\n            this.enableFilterRow = false;\r\n        }\r\n    }\r\n\r\n    private _checkSize() {\r\n        const themesKey = localStorage.getItem('gsp_rtf_themSKey');\r\n        let st: any = 'sm';\r\n        switch (themesKey) {\r\n            case 'default':\r\n                st = 'sm';\r\n                break;\r\n            case 'loose':\r\n                st = 'md';\r\n                break;\r\n        }\r\n\r\n        this.sizeType = st;\r\n    }\r\n\r\n    private checkDragColumns() {\r\n        if (this.isMultiHeader()) {\r\n            this.enableDragColumn = false;\r\n            // this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    private checkOptions() {\r\n\r\n        this.gridSize = { width: this.width + 'px', height: this.height + 'px' };\r\n\r\n        if (!this.id) {\r\n            this.id = 'FarrisDataGrid' + Utils.uuid().replace(/-/g, '').substr(0, 10);\r\n            if (this.useControlPanel) {\r\n                this.useControlPanel = false;\r\n                console.warn('å¯ç¨åéç½®å±æ§ï¼æªè®¾ç½®IDï¼æ­¤åè½å°ç¦ç¨ã');\r\n            }\r\n            this._custom_datagrid_cls = this.id;\r\n        } else {\r\n            this.styleSheetId = this.id + '_' + Utils.uuid().replace(/-/g, '').substr(0, 10);\r\n            this._custom_datagrid_cls = this.styleSheetId;\r\n        }\r\n        if (this.settingService && this.useControlPanel) {\r\n            this.settingService.registerGridInstance(this);\r\n        }\r\n\r\n        this.dgs.createStyleElement(this.styleSheetId);\r\n\r\n        if (!this.idField) {\r\n            throw new Error('The Datagrid\\'s idField can\\'t be Null. ');\r\n        }\r\n        this.checkNowrap();\r\n        this.checkSortInfo();\r\n        this.checkMergeCell();\r\n        this.setCheckboxBehavior();\r\n        this.initPaginationOptions();\r\n        if (!this.columns) {\r\n            this.columns = this.fields;\r\n        }\r\n\r\n        this.checkGroupHeaderColumns();\r\n\r\n        // TFS: 356956\r\n        this.checkGroupRowSetting();\r\n        this.checkColumnsType();\r\n\r\n        this.checkDragColumns();\r\n\r\n        const _defaultSetting = () => {\r\n            this._flatColumns();\r\n            // this.setHeaderHeight();\r\n            this.setRowHeight();\r\n        };\r\n\r\n\r\n        this.dfs.setinitialOptions({\r\n            columns: this.columns,\r\n            groupField: this.groupField,\r\n            sortName: this.sortName,\r\n            sortOrder: this.sortOrder\r\n        });\r\n\r\n        // å è½½ç¨æ·ä¸ªæ§åè®¾ç½® --ã åæ¾ç¤ºä¸åæåº\r\n        if (this.settingService && this.useControlPanel) {\r\n            const settings$ = this.settingService.getSettings(this.id);\r\n            if (!settings$) {\r\n                _defaultSetting();\r\n                return;\r\n            }\r\n            settings$.subscribe((sets) => {\r\n                if (sets) {\r\n                    this.userProfileSetting(sets);\r\n                    this.setRowHeight(false);\r\n                }\r\n\r\n                if (this.data && this.data.length) {\r\n                    this.dfs.updateProperty('data', this.data);\r\n                }\r\n\r\n                this.columnsChanged(this.groupRows && (this.data && !!this.data.length));\r\n            }, (err) => {\r\n                _defaultSetting();\r\n                console.error(err);\r\n            });\r\n        } else {\r\n            _defaultSetting();\r\n        }\r\n    }\r\n\r\n\r\n    refreshSelectedData() {\r\n        if (this.selectedRow && this.selectedRow.id) {\r\n            if (this.data && this.data.length) {\r\n                const rd = this.data.find(d => d[this.idField] === this.selectedRow.id);\r\n                this.selectedRow.data = rd;\r\n            } else {\r\n                this.selectedRow = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.unsubscribes();\r\n\r\n        if (this.ro) {\r\n            this.ro.disconnect();\r\n        }\r\n\r\n        if (this.documentRowKeydownHandler) {\r\n            this.documentRowKeydownHandler();\r\n        }\r\n\r\n        this.currentCell = null;\r\n        this.clientFilterService = null;\r\n\r\n        this.cleanDom();\r\n\r\n        // ç§»é¤å¨æçstyle\r\n        this.dgs.removeStyleSheet();\r\n\r\n        if (this.settingService && this.settingService.destroy) {\r\n            this.settingService.destroy(this.id);\r\n        }\r\n\r\n        if (this.sms) {\r\n            this.sms.removeEvents();\r\n        }\r\n    }\r\n\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick(event: MouseEvent): void {\r\n        if (this.showSelectedList && this.dgPager) {\r\n            this.dgPager.closeSelectedList();\r\n        }\r\n\r\n        if (this.pending) {\r\n            return;\r\n        }\r\n\r\n        const target = event.target as any;\r\n        if (target.nodeName === 'TEXTAREA' || target.nodeName === 'INPUT') {\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n        if (this.currentCell && this.currentCell.editor && this.currentCell.editor._editorClickEvent) {\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n\r\n        this.endCellEdit(event);\r\n        this.dfs.cancelSelectCell();\r\n        if (this.stopPropagation) {\r\n            event.stopPropagation();\r\n            return;\r\n        }\r\n    }\r\n\r\n    private initPaginationOptions() {\r\n        this.pagerOpts = {\r\n            id: this.id ? this.id + '-pager_' + Utils.uuid() : 'farris-datagrid-pager_' + Utils.uuid(),\r\n            itemsPerPage: this.pagination ? this.pageSize : this.total,\r\n            currentPage: this.pageIndex,\r\n            totalItems: this.total,\r\n            pageList: this.pageList,\r\n            remote: this.pagerOnServer\r\n        };\r\n    }\r\n\r\n    private updatePagerOptions() {\r\n        this.pagerOpts = Object.assign(this.pagerOpts, {\r\n            itemsPerPage: this.pageSize,\r\n            currentPage: this.pageIndex,\r\n            totalItems: this.total\r\n        });\r\n    }\r\n\r\n    private setPagerTotal() {\r\n        const _total = this.data.length;\r\n        if (this.pagination && this.total === 0 && this.virtualized) {\r\n            this.pagerOpts.totalItems = _total;\r\n        } else {\r\n            if (!this.pagination) {\r\n                this.pagerOpts.itemsPerPage = _total;\r\n            }\r\n        }\r\n    }\r\n\r\n    private setFooterHeight() {\r\n        if (this.showFooter && !this.footerTemplate) {\r\n            this._footerData.subscribe(rows => {\r\n                this.footerHeight = rows.length * this.rowHeight;\r\n                // this.cd.detectChanges();\r\n            });\r\n        }\r\n    }\r\n\r\n    customStyleKey() {\r\n        return `.${this._custom_datagrid_cls}`;\r\n    }\r\n\r\n    private setRowHeight(useSizeType = false) {\r\n        const _rowHeight = SIZE_TYPE[this._sizeType].row;\r\n        const _rh = 29;\r\n        if (useSizeType) {\r\n            this.rowHeight = _rowHeight;\r\n        } else {\r\n            this.rowHeight = _rowHeight > this.rowHeight ? _rowHeight : this.rowHeight;\r\n        }\r\n\r\n        const key1 = `${this.customStyleKey()}.f-datagrid-body-row, ${this.customStyleKey()} .f-datagrid-cell`;\r\n        const key2 = `${this.customStyleKey()} .f-datagrid-cell-content`;\r\n\r\n        this.dgs.removeCssRule(key1);\r\n        this.dgs.removeCssRule(key2);\r\n\r\n        if (this.rowHeight !== _rh && this.nowrap) {\r\n            const rowHeightCSS = [\r\n                `${key1} { height: ${this.rowHeight}px }`,\r\n                `${key2} { height: ${this.rowHeight}px; line-height: ${this.rowHeight}px }`\r\n            ];\r\n\r\n            this.dgs.appendCssRules(rowHeightCSS);\r\n        }\r\n    }\r\n\r\n    initSelectOrChecked() {\r\n        const _data = this.dfs.getCurrentPageData();\r\n        if (!this.enableMorePageSelect && this.multiSelect) {\r\n            // this.clearAll();\r\n            if (this.checkeds && this.checkeds.length) {\r\n                this.checkeds.forEach(r => {\r\n                    if (!_data.find(n => n[this.idField] == r.id)) {\r\n                        this.unCheckRow(r.id, false);\r\n                    }\r\n                });\r\n            } else {\r\n                this.clearCheckeds();\r\n            }\r\n        }\r\n\r\n        if (this.selectValue) {\r\n            if (_data.find(n => n[this.idField] == this.selectValue)) {\r\n                this.selectRow(this.selectValue, false);\r\n                this.refreshSelectedData();\r\n            }\r\n        }\r\n\r\n        if (this.multiSelect) {\r\n            if (this.checkValues && this.checkValues.length) {\r\n                const chkids = this.checkeds.map(r => r.id);\r\n                const diffIds = this.dfs.difference(chkids, this.checkValues);\r\n\r\n                if (diffIds.length) {\r\n                    this.checkRows(diffIds, false);\r\n                } else {\r\n                    this.checkValues = [];\r\n                }\r\n            } else {\r\n                this.checkValues = [];\r\n            }\r\n\r\n            this.checkValues = this.checkeds.map(r => r.id);\r\n\r\n            if (!this._isResized || this.virtualized) {\r\n                this.checkValuesChange.emit(this.checkValues);\r\n                this.checkedChange.emit(this.checkeds);\r\n            }\r\n            this.updateAllCheckboxStatus(_data);\r\n        }\r\n    }\r\n\r\n    private updateAllCheckboxStatus(_data?: any) {\r\n        if (!_data) {\r\n            _data = this.dfs.getCurrentPageData();\r\n        }\r\n\r\n        let checkAllStatus = 0;\r\n        if (this.showAllCheckbox) {\r\n            const allDataIDs = _data.map(r => r[this.idField]);\r\n            const newCheckValues = allDataIDs.filter(n => this.checkValues.includes(n));\r\n\r\n            if (newCheckValues && newCheckValues.length) {\r\n                const isSame = !this.dfs.difference(allDataIDs, this.checkValues).length;\r\n                if (!this.checkValues || !this.checkValues.length) {\r\n                    // æ²¡æéä¸­çæ°æ®\r\n                    checkAllStatus = 0;\r\n\r\n                } else if (isSame) { // this.checkValues.length === this.data.length ||\r\n                    // å¨é¨éä¸­\r\n                    checkAllStatus = 1;\r\n                } else if (!isSame) { // this.checkValues.length !== this.data.length &&\r\n                    // æéä¸­çæ°æ®ï¼ä½ä¸æ¯å¨é¨éä¸­\r\n                    checkAllStatus = 2;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.dgs.changeCheckAllStatus.emit(checkAllStatus);\r\n    }\r\n\r\n    // å½åéå¹¶æ¾ç¤ºå¤éæ¡æ¶ï¼é»è®¤å° checkOnSelect, selectOnCheck è®¾ç½®ä¸º true;\r\n    private setCheckboxBehavior() {\r\n        if (!this.multiSelect && this.showCheckbox) {\r\n            // TFS: 380899\r\n            // this.checkOnSelect = true;\r\n            // this.selectOnCheck = true;\r\n        }\r\n    }\r\n\r\n    private _flatColumns() {\r\n        this.flatColumns = flatten<DataColumn>(this.columns).filter((col: DataColumn) => !col.colspan && this.columnIsVisible(col));\r\n    }\r\n\r\n    columnIsVisible(col: DataColumn) {\r\n        return DatagridColumnsHelper.columnIsVisible(col, this);\r\n    }\r\n\r\n    // æ·»å åè®¾ç½®\r\n    private addControlCol() {\r\n        if (this.useControlPanel) {\r\n            const controlCol = this.columns[0].find(n => n.field === this.ControlPanelFeild);\r\n            if (!controlCol) {\r\n                const cp = { field: this.ControlPanelFeild, width: 24, rowspan: this.columns.length, fixed: 'right', visible: true };\r\n\r\n                // 2021-05-24 å¯ç¨è¿æ»¤è¡ååºé\r\n                // if (this.enableFilterRow) {\r\n                //     cp.rowspan += 1;\r\n                // }\r\n\r\n                this.columns[0].push(cp);\r\n            } else {\r\n                controlCol.visible = true;\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkGroupHeaderColumns() {\r\n        if (this.isMultiHeader()) {\r\n            const allCols = flatten<DataColumn>(this.columns);\r\n            DatagridColumnsHelper.checkGroupHeaderColumnVisible(allCols);\r\n        }\r\n    }\r\n\r\n    // æ£æ¥åéå: [] -> [[]]\r\n\r\n    private correctColumns(values) {\r\n        if (values && values.length && !Array.isArray(values[0])) {\r\n            return [values];\r\n        } else {\r\n            return values || [];\r\n        }\r\n    }\r\n\r\n    private checkColumnsType() {\r\n        if (this.columns && this.columns.length) {\r\n            // if (!Array.isArray(this.columns[0])) {\r\n            //     this.columns = [ this.columns ];\r\n            // }\r\n\r\n            this.addControlCol();\r\n\r\n            this.columns.forEach((cols, columnsIndex) => {\r\n                cols.forEach((col: DataColumn, index) => {\r\n                    if (!col.field) {\r\n                        col.field = `farris-datagrid-column_${columnsIndex}_${index}`;\r\n                    }\r\n\r\n                    if (!col.valign) {\r\n                        col.valign = 'middle';\r\n                    }\r\n\r\n                    if (col.width === undefined || col.width === null) {\r\n                        col.width = 100;\r\n                    } else {\r\n                        if (typeof col.width === 'string') {\r\n                            col.width = parseInt(col.width, 10);\r\n                        }\r\n                    }\r\n\r\n                    // è®°å½åå§å®½åº¦\r\n                    if (!col.originalWidth) {\r\n                        col.originalWidth = col.width;\r\n                    }\r\n\r\n                    if (col.formatter && typeof col.formatter !== 'function' && Object.keys(col.formatter).length === 0) {\r\n                        col.formatter = null;\r\n                    }\r\n\r\n                    if (!this.showGroupColumn && this.groupRows) {\r\n                        this.toggleVisibleColumn(this.groupField.split(','), false);\r\n                    }\r\n                    // è¿æ»¤è¡æ£æ¥\r\n                    if (col.filter) {\r\n                        if (typeof col.filter === 'boolean') {\r\n                            if (col.field) {\r\n                                col.filter = this.clientFilterService.createColumnFilterOptions(col);\r\n                            } else {\r\n                                col.filter = false;\r\n                            }\r\n                        } else {\r\n                            if (!col.filter.options || !Object.keys(col.filter.options).length) {\r\n                                switch (col.filter.type) {\r\n                                    case ColumnFilterType.enum:\r\n                                        col.filter.options = col.formatter['options'];\r\n                                        break;\r\n                                    case ColumnFilterType.date:\r\n                                        col.filter.options = { dateFormat: 'yyyy-MM-dd', returnFormat: 'yyyy-MM-dd' };\r\n                                        break;\r\n                                    case ColumnFilterType.datetime:\r\n                                        col.filter.options = { dateFormat: 'yyyy-MM-dd HH:mm:ss', returnFormat: 'yyyy-MM-dd HH:mm:ss' };\r\n                                        break;\r\n                                }\r\n                            }\r\n\r\n                        }\r\n                    }\r\n\r\n                    // å¼å®¹ hidden 2021-05-31\r\n                    if (col['hidden'] !== undefined && col.visible === undefined) {\r\n                        if (typeof col['hidden'] === 'boolean') {\r\n                            col.visible = !col['hidden'];\r\n                        } else {\r\n                            if (typeof col['hidden'] === 'function') {\r\n                                col.visible = () => {\r\n                                    const r = col['hidden'].bind(this);\r\n                                    return !r;\r\n                                };\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    private checkGroupRowSetting() {\r\n        // å¦æå¯ç¨åç»è¡ï¼ä½æªè®¾ç½®åç»å­æ®µæ¶ï¼å°å³é­åç»è¡åè½\r\n        // if (this.groupRows) {\r\n        //     if (!this.groupField) {\r\n        //         this.groupRows = false;\r\n        //     }\r\n        // }\r\n    }\r\n\r\n    private checkMergeCell() {\r\n        if (this.mergeCell) {\r\n            if (!this.mergeFields || !this.mergeFields.length) {\r\n                this.mergeCell = false;\r\n            } else {\r\n                this.virtualized = false;\r\n                this.virtualizedAsyncLoad = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkSortInfo() {\r\n        if (this.sortName) {\r\n            if (!this.sortOrder) {\r\n                this.sortOrder = this.sortName.split(',').map(() => 'asc').join(',');\r\n            }\r\n        }\r\n    }\r\n\r\n    private checkNowrap() {\r\n        // å¯ç¨æè¡åï¼èæå è½½ç¹æ§å¤±æ\r\n        if (!this.nowrap) {\r\n            this.virtualized = false;\r\n        }\r\n    }\r\n\r\n    setHeaderHeight() {\r\n        this.realHeaderHeight = 0;\r\n        if (this.showHeader) {\r\n            if (!this.headerWrap) {\r\n                this.realHeaderHeight = this.columns.length * this.headerHeight;\r\n            } else {\r\n                const gridHeaderEl = this.el.nativeElement.querySelector('.f-datagrid-header');\r\n                if (gridHeaderEl) {\r\n                    // const tables = gridHeaderEl.querySelectorAll('table');\r\n                    const trs = gridHeaderEl.querySelectorAll('table tr:not(.f-datagrid-filter-row)');\r\n                    trs.forEach(n => {\r\n                        n.style.height = 'auto';\r\n                        Array.from(n.children).forEach((a: any) => a.style.height = 'auto');\r\n                    });\r\n\r\n                    const h = Math.max(...Array.from(trs).map((n: any) => n.clientHeight));\r\n                    this.realHeaderHeight = h;\r\n                }\r\n            }\r\n\r\n            if (this.enableFilterRow) {\r\n                this.realHeaderHeight += this.filterRowHeight;\r\n            }\r\n        }\r\n        return this.realHeaderHeight;\r\n    }\r\n\r\n    // åéååå\r\n    columnsChanged(reloadData = true, useColumnSettingWidth = null) {\r\n        const _useColumnSettingWidth = useColumnSettingWidth === null ? this.fitColumns : useColumnSettingWidth;\r\n        this.checkColumnsType();\r\n\r\n        this._flatColumns();\r\n        this.headerHeightChange();\r\n        this.dfs.updateProperty('flatColumns', this.flatColumns);\r\n        this.dfs.updateColumns(this.columns, _useColumnSettingWidth, true);\r\n        // this.colGroup = this.dfs.getState().columnsGroup;\r\n        // å¨æååè®¡è¡\r\n        this.updateFooterData();\r\n        if (reloadData) {\r\n            this.refresh();\r\n        }\r\n        this.dgs.columnsChanged.emit({ scrollToLeft: reloadData });\r\n    }\r\n\r\n    // åå¤´åå\r\n    private headerHeightChange() {\r\n        this.setHeaderHeight();\r\n        this.dgs.showGridHeader.emit(this.realHeaderHeight);\r\n    }\r\n\r\n    /** å¤æ­æ¯å¦å¨å¼¹åºççªå£ä¸­ï¼è¿åundefind è¯´ææ²¡æå¨å¼¹åºççªå£ï¼å¦åè§ä¸ºå½ååè¡¨å¨å¼¹åºçªå£ä½¿ç¨ */\r\n    inDialog() {\r\n        return this.el.nativeElement.closest('.modal-body');\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Init\r\n    /** åå§ç¼è¾å¨ä¸éªè¯å¨ */\r\n    private initEditorAndValidator() {\r\n        const Editors = this.inject.get<any[]>(GRID_EDITORS, []);\r\n\r\n        if (Editors.length) {\r\n            Editors.forEach(ed => {\r\n                this.editors[ed.name] = ed.value;\r\n            });\r\n        }\r\n        const _validators = this.inject.get<any[]>(GRID_VALIDATORS, []);\r\n        if (_validators && _validators.length) {\r\n            // _validators.forEach(vr => {\r\n            //     this.validators[vr.name] = vr.value;\r\n            // });\r\n            this.validators = _validators;\r\n        }\r\n    }\r\n\r\n    setPagerHeight() {\r\n        if (!this.useHtmlTable) {\r\n            if (!this.pagination) {\r\n                this.pagerHeight = 0;\r\n            } else {\r\n                this.pagerHeight = this.dgPager && this.dgPager.outerHeight || 40;\r\n            }\r\n        }\r\n    }\r\n\r\n    private initState() {\r\n        this.data = this.data || [];\r\n        this.dfs.initState({ ...this, fitColumns: this.fitColumns, fit: this.fit, groupField: this._groupField });\r\n    }\r\n\r\n    private setFitColumns(fitColumns = true) {\r\n        if (this.columns) {\r\n            this.dfs.fitColumns(fitColumns);\r\n        }\r\n    }\r\n\r\n    private setGridNewSizeWhenFit() {\r\n        const parent = this.el.nativeElement.parentElement;\r\n        if (parent) {\r\n            const cmpRect = parent.getBoundingClientRect();\r\n\r\n            const padding = this.getElementPadding(parent);\r\n            const border = this.getElementBorderWidth(parent);\r\n\r\n            this.width = Math.floor(cmpRect.width - border.left - border.right - padding.left - padding.right);\r\n            this.height = Math.floor(cmpRect.height - border.top - border.bottom - padding.top - padding.bottom);\r\n\r\n            if (!this.height) {\r\n                this.height = this.dfs.getState().height || 300;\r\n            }\r\n\r\n            if (!this.width) {\r\n                this.width = this.dfs.getState().width || 800;\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n    calculateGridSize(fit = true) {\r\n        if (this.useHtmlTable) {\r\n            return;\r\n        }\r\n        if (fit) {\r\n            this.setGridNewSizeWhenFit();\r\n            if (this.width && this.height) {\r\n                this._isResized = true;\r\n                this.gridSize = { width: this.width + 'px', height: this.height + 'px' };\r\n                this.dfs.resize({ width: this.width, height: this.height });\r\n                this._isResized = false;\r\n                this.cd.detectChanges();\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private initBeforeEvents() {\r\n        if (!this.beforeSelect) {\r\n            this.beforeSelect = () => of(true);\r\n        }\r\n        if (!this.beforeUnselect) {\r\n            this.beforeUnselect = () => of(true);\r\n        }\r\n\r\n        if (!this.beforeCheck) {\r\n            this.beforeCheck = () => of(true);\r\n        }\r\n\r\n        if (!this.beforeUncheck) {\r\n            this.beforeUncheck = () => of(true);\r\n        }\r\n\r\n        if (!this.beforeSortColumn) {\r\n            this.beforeSortColumn = () => of(true);\r\n        }\r\n\r\n        if (!this.beforeEdit) {\r\n            this.beforeEdit = () => of(true);\r\n        }\r\n\r\n        if (!this.afterEdit) {\r\n            this.afterEdit = () => of(true);\r\n        }\r\n    }\r\n\r\n    trackByRows = (index: number, row: any) => {\r\n        if (row) {\r\n            return row[this.idField] || index;\r\n        }\r\n        return index;\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region å¿«æ·é®\r\n\r\n    private unbindMoveSelectRowEvent() {\r\n        if (this.documentRowKeydownHandler) {\r\n            this.documentRowKeydownHandler();\r\n            this.documentRowKeydownHandler = null;\r\n        }\r\n    }\r\n\r\n\r\n    private bindDocumentMoveSelectRowEvent() {\r\n        this.unbindMoveSelectRowEvent();\r\n        this.unbindDocumentEditListener();\r\n        this.documentRowKeydownHandler = this.render2.listen(document, 'keydown', (e: KeyboardEvent) => {\r\n            // e.preventDefault();\r\n            if (!this.isActived()) {\r\n                return;\r\n            }\r\n\r\n            // has loading\r\n            if (document.querySelectorAll('farris-loading').length) {\r\n                return;\r\n            }\r\n\r\n            if (e.target) {\r\n                const targetName = (e.target as any).nodeName;\r\n                if (this.ignoreTarget.indexOf(targetName) > -1) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (e.keyCode === 40 || e.keyCode === 38) {\r\n                e.preventDefault();\r\n            }\r\n\r\n            switch (e.keyCode) {\r\n                case 40:\r\n                    this.selectNextRow();\r\n                    break;\r\n                case 38:\r\n                    this.selectPrevRow();\r\n                    break;\r\n            }\r\n        });\r\n    }\r\n\r\n    private bindEditListenerInModal() {\r\n        // å¼¹çªä¸­äºä»¶å¤ç\r\n        if (Utils.hasDialogOpen()) {\r\n            const modalElement = this.inDialog();\r\n            if (modalElement) {\r\n                const _fmodal = modalElement.closest('.farris-modal');\r\n                if (_fmodal) {\r\n                    this.modalClickEvent = this.render2.listen(_fmodal, 'click', () => {\r\n                        this.endEditing();\r\n                        this.currentCell = null;\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    onDocumentMouseDown = (event) => {\r\n        if (this.pending) {\r\n            return false;\r\n        }\r\n\r\n\r\n        if (!event.target.closest('.f-datagrid')) {\r\n            this.activeDataGrid(false);\r\n        }\r\n\r\n        // if (this.editMode === 'row') {\r\n        //     this.endEditing();\r\n        // }\r\n\r\n        if (this.currentCell) {\r\n            if (Utils.hasDialogOpen()) {\r\n                const indlg = this.inDialog();\r\n                const currentTargetInDialog = event.target.closest('.modal-body');\r\n                if (indlg && currentTargetInDialog) {\r\n                    if (indlg != currentTargetInDialog) {\r\n                        return;\r\n                    }\r\n                } else {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (this.currentCell.isEditing) {\r\n                // this.dfs.endEditCell();\r\n                this.currentCell.cellElement.closeEdit().subscribe(f => {\r\n                    if (f) {\r\n                        if (this.currentCell && this.currentCell.cellElement) {\r\n                            DomHandler.removeClass(this.currentCell.cellElement, CELL_SELECTED_CLS);\r\n                            DomHandler.removeClass(this.currentCell.cellElement, CELL_EDITING_CLS);\r\n                        }\r\n                        this.dfs.cancelSelectCell();\r\n                        this.unbindDocumentEditListener();\r\n                        this.currentCell = null;\r\n                    }\r\n                });\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    private bindDocumentEditListener() {\r\n        this.unbindDocumentEditListener();\r\n\r\n        if (!this.documentCellClickHandler) {\r\n            this.bindEditListenerInModal();\r\n            this.documentCellClickHandler = (event) => {\r\n                if (this.pending) {\r\n                    return false;\r\n                }\r\n                if (this.currentCell) {\r\n                    if (Utils.hasDialogOpen()) {\r\n                        const indlg = this.inDialog();\r\n                        const currentTargetInDialog = event.target.closest('.modal-body');\r\n                        if (indlg && currentTargetInDialog) {\r\n                            if (indlg != currentTargetInDialog) {\r\n                                return;\r\n                            }\r\n                        } else {\r\n                            return;\r\n                        }\r\n                    }\r\n                    // DomHandler.removeClass(this.currentCell.cellElement, CELL_SELECTED_CLS);\r\n\r\n                    // if (this.currentCell.isEditing) {\r\n                    //     // this.dfs.endEditCell();\r\n                    //     this.currentCell.cellElement.closeEdit();\r\n                    // }\r\n                    // this.dfs.cancelSelectCell();\r\n                    // this.unbindDocumentEditListener();\r\n\r\n                    if (this.currentCell.isEditing) {\r\n                        // this.dfs.endEditCell();\r\n                        this.currentCell.cellElement.closeEdit().subscribe(f => {\r\n                            if (f) {\r\n                                DomHandler.removeClass(this.currentCell.cellElement, CELL_SELECTED_CLS);\r\n                                DomHandler.removeClass(this.currentCell.cellElement, CELL_EDITING_CLS);\r\n                                this.dfs.cancelSelectCell();\r\n                                this.unbindDocumentEditListener();\r\n                                this.currentCell = null;\r\n                            }\r\n                        });\r\n                    }\r\n                }\r\n            };\r\n            this.docuemntCellClickEvents = this.render2.listen(document, 'click', this.documentCellClickHandler);\r\n        }\r\n\r\n        if (!this.documentCellKeydownHandler) {\r\n            this.documentCellKeydownHandler = (event) => {\r\n                if (this.isActived()) {\r\n                    this.onKeyDownEvent(event);\r\n                }\r\n            };\r\n\r\n            this.documentCellKeydownEvents = this.render2.listen(document, 'keydown', this.documentCellKeydownHandler);\r\n        }\r\n    }\r\n\r\n    private unbindDocumentEditListener() {\r\n        if (this.documentCellClickHandler) {\r\n            this.docuemntCellClickEvents();\r\n            this.documentCellClickHandler = null;\r\n        }\r\n\r\n        if (this.documentCellKeydownHandler) {\r\n            this.documentCellKeydownEvents();\r\n            this.documentCellKeydownHandler = null;\r\n        }\r\n\r\n        if (this.modalClickEvent) {\r\n            this.modalClickEvent();\r\n            this.modalClickEvent = null;\r\n        }\r\n    }\r\n\r\n    private onKeyDownEvent(e: any) {\r\n        // if (e.ctrlKey || e.shiftKey || !this.editable) {\r\n        //     return;\r\n        // }\r\n\r\n        // if (!e.target.closest('.f-datagrid')) {\r\n        //     return;\r\n        // }\r\n\r\n        const keyCode = e.keyCode;\r\n\r\n        if (this.currentCell && !this.currentCell.isEditing) {\r\n            if ([13, 40, 37, 38, 39, 9].indexOf(keyCode) > -1) {\r\n                e.preventDefault();\r\n            }\r\n            switch (keyCode) {\r\n                case 32: // ç©ºæ ¼\r\n                    if (this.currentCell && this.currentCell.column.onSpaceHandler) {\r\n                        e.stopPropagation();\r\n                        this.currentCell.column.onSpaceHandler({ grid: this, cell: this.currentCell, event: e });\r\n                    }\r\n                    break;\r\n                case 13: // Enter\r\n                    if (this.currentCell) {\r\n                        const fn = this.currentCell.cellElement['editCell'];\r\n                        if (fn) {\r\n                            fn.apply(this.currentCell.cellElement);\r\n                        } else {\r\n                            if (this.currentCell.column.onEnterHandler) {\r\n                                e.stopPropagation();\r\n                                this.currentCell.column.onEnterHandler({ grid: this, cell: this.currentCell, event: e });\r\n                            }\r\n                        }\r\n                    }\r\n                    break;\r\n                case 40: // â\r\n                    this.selectNextCell('down', e);\r\n                    break;\r\n                case 38: // â\r\n                    this.selectNextCell('up', e);\r\n                    break;\r\n                case 39: // â\r\n                    this.selectNextCell('right', e);\r\n                    break;\r\n                case 37: // â\r\n                    this.selectNextCell('left', e);\r\n                    break;\r\n                case 9: // Tab\r\n                    if (e.shiftKey) {\r\n                        this.selectNextCell('left', e);\r\n                    } else {\r\n                        this.selectNextCell('right', e);\r\n                    }\r\n                    break;\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private unsubscribes() {\r\n        this.subscriptions.forEach(ss => {\r\n            if (ss) {\r\n                ss.unsubscribe();\r\n                ss = null;\r\n            }\r\n        });\r\n\r\n        this.subscriptions = [];\r\n\r\n        if (this.docuemntCellClickEvents) {\r\n            this.docuemntCellClickEvents();\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Editing\r\n\r\n    isRowEditing() {\r\n        if (!this.selectedRow || this.selectedRow.index === -1) {\r\n            return false;\r\n        } else {\r\n            if (this.editMode === 'row') {\r\n                return this.selectedRow.editors && this.selectedRow.editors.length;\r\n            } else {\r\n                return false;\r\n            }\r\n        }\r\n    }\r\n\r\n    isCellEditing() {\r\n        if (this.currentCell && this.editMode === 'cell') {\r\n            if (!this.currentCell.editor && !this.currentCell.column.editorTemplate) {\r\n                this.currentCell.isEditing = false;\r\n            }\r\n            return this.currentCell.isEditing;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    isEditing() {\r\n        if (this.editMode === 'row') {\r\n            return this.isRowEditing();\r\n        } else {\r\n            return this.isCellEditing();\r\n        }\r\n    }\r\n\r\n    endEditing() {\r\n        if (this.editMode === 'row') {\r\n            this.endRowEdit();\r\n        } else if (this.editMode === 'cell') {\r\n            this.endCellEdit();\r\n        }\r\n    }\r\n\r\n    getEditors() {\r\n        return this.selectedRow.editors;\r\n    }\r\n\r\n    editCell(rowId: any, field: string) {\r\n        this.activeDataGrid();\r\n\r\n        const rowIndex = this.dfs.findRowIndex(rowId);\r\n        if (rowIndex > -1) {\r\n            this.endCellEdit();\r\n            const trId = TR_PREFIX + rowId;\r\n            const trDom = this.el.nativeElement.querySelector('#' + trId);\r\n\r\n            let tdDom = null;\r\n            if (trDom) {\r\n                tdDom = trDom.querySelector(`[field=\"${field}\"]`);\r\n            }\r\n            const col = this.getColumn(field);\r\n            if (!tdDom && col.fixed) {\r\n                if (col.fixed === 'left') {\r\n                    const trDomL = this.el.nativeElement.querySelector('#' + trId + '_fixedleft');\r\n                    tdDom = trDomL && trDomL.querySelector(`[field=\"${field}\"]`);\r\n                } else if (col.fixed === 'right') {\r\n                    const trDomR = this.el.nativeElement.querySelector('#' + trId + '_fixedright');\r\n                    tdDom = trDomR && trDomR.querySelector(`[field=\"${field}\"]`);\r\n                }\r\n            }\r\n\r\n            if (tdDom && tdDom['editCell']) {\r\n                this.currentCell = null;\r\n                tdDom.editCell();\r\n            }\r\n        }\r\n    }\r\n\r\n    endCellEdit(event?: any) {\r\n        // document.body.click();\r\n        if (this.currentCell) {\r\n            DomHandler.removeClass(this.currentCell.cellElement, CELL_SELECTED_CLS);\r\n            if (this.currentCell.isEditing) {\r\n                // this.dfs.endEditCell();\r\n                if (this.currentCell.cellEditorRef) {\r\n                    this.currentCell.cellEditorRef.hideCover();\r\n                }\r\n\r\n                const stopEdit = this.currentCell.cellElement.closeEdit();\r\n                if (stopEdit) {\r\n                    stopEdit.subscribe();\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    editRow(rowId?: any) {\r\n        if (!this.editable || this.editMode !== 'row') { return false; }\r\n\r\n        if (rowId) {\r\n            this.selectRow(rowId);\r\n        }\r\n\r\n\r\n        if (!this.selectedRow || this.selectedRow.index === -1) {\r\n            console.warn('Please select a row.');\r\n            return false;\r\n        }\r\n\r\n        const { index: rowIndex, data: rowData } = { ...this.selectedRow };\r\n\r\n        const beforeEditEvent = this.beforeEdit({ rowIndex, rowData, gridInstance: this });\r\n        if (!beforeEditEvent || !beforeEditEvent.subscribe) {\r\n            console.warn('please return an Observable Type.');\r\n            return;\r\n        }\r\n\r\n        const trId = TR_PREFIX + rowId;\r\n        const trDom = this.el.nativeElement.querySelector('#' + trId);\r\n\r\n        if (!this.selectedRow.dr) {\r\n            trDom.click();\r\n        }\r\n\r\n        beforeEditEvent.subscribe((flag: boolean) => {\r\n            if (flag) {\r\n                if (this.selectedRow.dr) {\r\n                    const cells = this.selectedRow.dr.cells.toArray();\r\n                    if (!cells || !cells.length) {\r\n                        return;\r\n                    }\r\n\r\n                    cells.forEach(cell => {\r\n                        if (cell.column.editor) {\r\n                            cell.isEditing = true;\r\n                        }\r\n                    });\r\n                    this.selectedRow.dr.cd.detectChanges();\r\n                    setTimeout(() => {\r\n                        const editors = cells.map(cell => {\r\n                            if (cell.cellEditor) {\r\n                                return cell.cellEditor.componentRef;\r\n                            }\r\n                        }).filter(editor => editor);\r\n                        this.selectedRow.editors = editors;\r\n\r\n                        if (editors && editors.length) {\r\n                            if (editors[0].instance.inputElement) {\r\n                                editors[0].instance.inputElement.focus();\r\n                            }\r\n                        }\r\n\r\n                        // ç»å®é®çäºä»¶\r\n                        this.bindRowEditorKeydownEvent();\r\n                        if (!this.cd['destroyed']) {\r\n                            this.cd.detectChanges();\r\n                        }\r\n                        this.beginEdit.emit({ rowIndex, rowData, gridInstance: this, editor: editors });\r\n                    });\r\n                }\r\n            }\r\n        });\r\n\r\n    }\r\n\r\n    endRowEdit() {\r\n        if (!this.isRowEditing()) {\r\n            return { canEnd: true };\r\n        }\r\n\r\n        if (!this.selectedRow || this.selectedRow.index === -1) {\r\n            console.warn('Please select a row.');\r\n            return;\r\n        }\r\n        const { index: rowIndex, data: rowData, dr } = { ...this.selectedRow };\r\n        const { editor: currentEditor, column } = { ...this.currentCell };\r\n        // blur\r\n        document.body.click();\r\n\r\n        if (this.pending) {\r\n            return { canEnd: false };\r\n        }\r\n\r\n        const rowForm = dr.form as FormGroup;\r\n        rowForm.markAsTouched();\r\n        if (rowForm.invalid && !this.endEditByInvalid) {\r\n            return { canEnd: false };\r\n        }\r\n\r\n        // afterEdit è¦ä¼ éç¸å³åæ°ï¼å¨ç¼è¾ç¶ææ¶ï¼ç§»å¨æ»å¨æ¡ä¼åºäº\r\n        const afterEditEvent = this.afterEdit(rowIndex, rowData, column, currentEditor);\r\n        if (!afterEditEvent || !afterEditEvent.subscribe) {\r\n            console.warn('please return an Observable Type.');\r\n            return { canEnd: false };\r\n        }\r\n\r\n        afterEditEvent.subscribe((flag: boolean) => {\r\n            if (flag) {\r\n                this.closeAllCellEditor();\r\n\r\n                if (this.selectedRow.dr.form) {\r\n                    this.selectedRow.dr.rowData = Object.assign(this.selectedRow.dr.rowData, this.selectedRow.dr.form.value);\r\n                    this.dfs.updateRow(this.selectedRow.id, this.selectedRow.dr.rowData);\r\n                    this.cd.detectChanges();\r\n                }\r\n\r\n                let val = '';\r\n                if (currentEditor && currentEditor.formControl) {\r\n                    val = currentEditor.formControl.value;\r\n                }\r\n\r\n                this.endEdit.emit({ rowIndex, rowData, column, value: val });\r\n\r\n                this.dgs.refreshFooterData.emit();\r\n            }\r\n        });\r\n    }\r\n\r\n    cancelEdit(rowId: any, emit = true) {\r\n\r\n        if (!this.isEditing()) {\r\n            return;\r\n        }\r\n\r\n        this.closeAllCellEditor();\r\n        if (rowId) {\r\n            this.dfs.rejectChanges(rowId);\r\n        }\r\n\r\n        this.cd.detectChanges();\r\n        if (emit) {\r\n            this.cancelEdited.emit();\r\n        }\r\n    }\r\n\r\n    closeAllCellEditor() {\r\n        if (this.selectedRow && this.selectedRow.dr) {\r\n            const cells = this.selectedRow.dr.cells;\r\n            if (cells) {\r\n                cells.forEach(cell => cell.isEditing = false);\r\n                if (this.currentCell) {\r\n                    this.currentCell.isEditing = false;\r\n                }\r\n            }\r\n            this.selectedRow.editors = null;\r\n        }\r\n\r\n        // åæ¶é®çäºä»¶\r\n        this.unbindRowEditorKeydownEvent();\r\n    }\r\n\r\n    private rowEditTabKeydwonEvent(e: any) {\r\n        const keyCode = e.which || e.keyCode;\r\n\r\n        if (keyCode === 9) {  // tab\r\n            const td = e.target.closest('td');\r\n            const tr = e.target.closest('tr');\r\n            const nextTd = td.nextElementSibling;\r\n\r\n            const hasNoEditor = (_td: any) => {\r\n                return !_td.querySelector('input') && !_td.querySelector('textarea') && !_td.querySelector('select');\r\n            };\r\n\r\n            const editNextRow = () => {\r\n                const nextTr = tr.nextElementSibling;\r\n                if (nextTr) {\r\n                    nextTr.click();\r\n                    const nextRowid = nextTr.getAttribute('id').replace(TR_PREFIX, '');\r\n                    if (nextRowid) {\r\n                        this.editRow(nextRowid);\r\n                    }\r\n                }\r\n            };\r\n\r\n            if (nextTd) {\r\n                if (hasNoEditor(nextTd)) {\r\n                    const tds = tr.querySelectorAll('td');\r\n                    let tdIdx = -1;\r\n                    tds.forEach((t, i) => {\r\n                        if (t === nextTd) {\r\n                            tdIdx = i;\r\n                        }\r\n                    });\r\n                    let nextTrEdit = true;\r\n                    while (tdIdx < tds.length) {\r\n                        const _ntd = tds[tdIdx];\r\n                        if (hasNoEditor(_ntd)) {\r\n                            tdIdx++;\r\n                        } else {\r\n                            nextTrEdit = false;\r\n                            break;\r\n                        }\r\n                    }\r\n\r\n                    if (nextTrEdit) {\r\n                        editNextRow();\r\n                    }\r\n                }\r\n            } else {\r\n                editNextRow();\r\n            }\r\n        }\r\n\r\n        e.stopPropagation();\r\n    }\r\n\r\n    private bindRowEditorKeydownEvent() {\r\n        if (!this.documentRowEditKeydownHanlder) {\r\n            this.documentRowEditKeydownHanlder = this.render2.listen(document, 'keydown', this.rowEditTabKeydwonEvent.bind(this));\r\n        }\r\n        this.documentClickEndRowEditHandler = this.render2.listen(document, 'click', (e: any) => {\r\n            if (this.pending) {\r\n                return false;\r\n            }\r\n            if (Utils.hasDialogOpen()) {\r\n                return;\r\n            }\r\n\r\n            if (this.isRowEditing()) {\r\n\r\n                // this.endRowEdit();\r\n            }\r\n        });\r\n    }\r\n\r\n    private unbindRowEditorKeydownEvent() {\r\n        // åæ¶é®çäºä»¶\r\n        if (this.documentRowEditKeydownHanlder) {\r\n            this.documentRowEditKeydownHanlder();\r\n            this.documentRowEditKeydownHanlder = null;\r\n        }\r\n\r\n        if (this.documentClickEndRowEditHandler) {\r\n            this.documentClickEndRowEditHandler();\r\n            this.documentClickEndRowEditHandler = null;\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Load Data\r\n\r\n\r\n    private _clientFilter(conditions: any, excuteLocaleFilter = false) {\r\n        // å®¢æ·ç«¯è¿æ»¤\r\n        if (excuteLocaleFilter) {\r\n            const allClientData = this.dfs.getData(true);\r\n            if (conditions && Object.keys(conditions).length) {\r\n                const _data = this.clientFilterService.executeFilter(allClientData, conditions);\r\n                this.dfs.loadFilterData(_data);\r\n            } else {\r\n                this.loadData(allClientData, false, true);\r\n            }\r\n        }\r\n\r\n        if (!this.virtualized) {\r\n            this.scrollToTop();\r\n        }\r\n\r\n        this.filterChanged.emit(conditions);\r\n    }\r\n\r\n    private smartFilterData(conditions: any) {\r\n        if (this.remoteFilter) { // æå¡å¨ç«¯è¿æ»¤\r\n            const entityFilters = this.clientFilterService.convertSmartFilter2EntityFilter(conditions);\r\n            this.filterChanged.emit(entityFilters);\r\n        } else {\r\n            // å®¢æ·ç«¯è¿æ»¤\r\n            this._clientFilter(conditions, this.useDefaultFilter);\r\n        }\r\n\r\n    }\r\n\r\n    // smart fitler æ¸ç©ºæ¥è¯¢æ¡ä»¶\r\n    onClearSmartFilters($event) {\r\n        this.smartFilterResult = { conditions: [], controlData: [] };\r\n        this.conditions = [];\r\n        this.smartFilterData([]);\r\n        this.smartFilterService.clearAll();\r\n        setTimeout(() => {\r\n            this.onFilterBarResize(0);\r\n        });\r\n    }\r\n\r\n    onRemoveSmartFilterItem($event) {\r\n        // console.log($event);\r\n        if ($event) {\r\n            const e = { ...$event };\r\n            e['labelCode'] = $event.fieldCode;\r\n            this.smartFilterService.removeCondition(e, true);\r\n        }\r\n    }\r\n\r\n    onFilterBarResize($event) {\r\n        this.filterBarHeight = $event;\r\n\r\n        const smartFilterEl = this.el.nativeElement.querySelector('.f-datagrid-column-drop-panel');\r\n        if (smartFilterEl && !$event) {\r\n            smartFilterEl.style.top = '0px';\r\n        }\r\n        this.dgs.showGridHeader.emit(this.realHeaderHeight);\r\n        this.dgs.smartFilterBarExpand.emit();\r\n    }\r\n\r\n    onSmartFilterChange($event) {\r\n        const { conditions, filterItem } = $event;\r\n\r\n        this.smartFilterService.filterConditionChanged({ conditions, controlData: filterItem });\r\n\r\n        // this.smartFilterData(conditions);\r\n        // console.log(this.smartFilterResult, filterItem);\r\n        this.dgs.smartFilterDataChange.emit(filterItem);\r\n    }\r\n\r\n    filterData(conditions?: any) {\r\n        if (!conditions) {\r\n            conditions = this.conditions;\r\n        } else {\r\n            this.conditions = conditions;\r\n        }\r\n\r\n        this.scrollToTop();\r\n\r\n        if (this.enableSmartFilter) {\r\n            this.smartFilterData(conditions);\r\n            return;\r\n        }\r\n\r\n        if (this.remoteFilter) {\r\n            const entityFilters = this.clientFilterService.convert2FilterArray(conditions);\r\n            this.filterChanged.emit(entityFilters);\r\n        } else {\r\n            // å®¢æ·ç«¯è¿æ»¤\r\n            this._clientFilter(conditions, true);\r\n        }\r\n    }\r\n    /** æ¸ç©ºè¿æ»¤æ¡ä»¶ */\r\n    clearCondition() {\r\n        this.dgs.onClearFilter();\r\n    }\r\n\r\n    loadData(data?: any, keepSortState = false, keepScrollPosition = true) {\r\n        if (this.loading) {\r\n            this.closeLoading(!this.pagination);\r\n        }\r\n        data = data || [];\r\n\r\n        if (keepScrollPosition && this.scrollInstance && this.scrollInstance.instance) {\r\n            const lst = this.scrollInstance.instance.lastScrollTop;\r\n            const lsl = this.scrollInstance.instance.lastScrollLeft;\r\n            this.dfs.updateProperty('scrollInfo', { y: lst, x: lsl });\r\n        } else {\r\n            this.dfs.updateProperty('scrollInfo', { y: 0, x: 0 });\r\n        }\r\n\r\n        if (this.pagination) {\r\n            this.dfs.setPagination(this.pageIndex, this.pageSize, this.total);\r\n            this.updatePagerOptions();\r\n\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n        // éæ°å è½½æ°æ®æ¶ï¼ç§»é¤ææç¼è¾å\r\n        // this.closeAllCellEditor();\r\n\r\n        this.data = data;\r\n        if (keepSortState) {\r\n            if (this.remoteSort) {\r\n                this.dfs.loadData(data);\r\n            } else {\r\n                this.dfs.loadData(data, true, true);\r\n            }\r\n        } else {\r\n            this.dfs.loadData(data);\r\n        }\r\n\r\n        this.setPagerHeight();\r\n        this.dgs.dataSourceChanged();\r\n    }\r\n\r\n    loadVirtualData(data: any) {\r\n        if (this.groupRows) {\r\n            console.warn('if you using GROUPROWS, please set [virtualized]=\"false\" [virtualizedAsyncLoad]=\"false\"');\r\n            return;\r\n        }\r\n        if (this.virtualizedAsyncLoad) {\r\n            this.dgs.onLoadVirtualData(data);\r\n        }\r\n    }\r\n\r\n    fetchData(pageIndex, pageSize) {\r\n        if (this.restService) {\r\n            this.showLoading();\r\n            const params = { pageIndex, pageSize };\r\n            if (this.sortName) {\r\n                params['sortName'] = this.sortName;\r\n            }\r\n            if (this.sortOrder) {\r\n                params['sortOrder'] = this.sortOrder;\r\n            }\r\n\r\n            return this.restService.getData(this.url, params);\r\n        }\r\n        return of(undefined);\r\n    }\r\n\r\n    refresh() {\r\n        this.dfs.refresh();\r\n    }\r\n\r\n    reload() {\r\n        this.fetchData(1, this.pageSize).subscribe(res => {\r\n            if (res) {\r\n                this.pageIndex = 1;\r\n                this.total = res.total;\r\n                this.loadData(res.items);\r\n            }\r\n        });\r\n    }\r\n\r\n    /** è·åå½åé¡µæ°æ® */\r\n    getRows() {\r\n        if (this.groupRows || this.virtualized) {\r\n            if (this.pagerOnServer) {\r\n                return this.ds.rows;\r\n            } else {\r\n                return this.currentPagerData;\r\n            }\r\n        } else {\r\n            if (this.pagerOnServer) {\r\n                return this.data;\r\n            } else {\r\n                return this.currentPagerData;\r\n            }\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Pagination\r\n\r\n    setPageIndex(pageIndex: number, detectChanges = true) {\r\n        this.pageIndex = pageIndex;\r\n        this.pagerOpts.currentPage = pageIndex;\r\n\r\n        if (detectChanges) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    // æ´æ°æ¯é¡µ\r\n    setPageList(pageList: number[], detectChanges = true) {\r\n        this.pageList = pageList;\r\n        this.pagerOpts.pageList = pageList;\r\n        if (detectChanges) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    onPageChange(pageIndex: number) {\r\n        if (this.lockPagination) {\r\n            return;\r\n        }\r\n\r\n        if (this.controlPaginationState) {\r\n            this.setPageIndex(pageIndex, false);\r\n        }\r\n\r\n\r\n        this.fetchData(pageIndex, this.pageSize).subscribe(res => {\r\n            if (res) {\r\n                this.loadData(res.items);\r\n            }\r\n        });\r\n        this.focusRowIndex = -1;\r\n        this.scrollToTop();\r\n        this.pageChanged.emit({ pageIndex, pageSize: this.pageSize });\r\n    }\r\n\r\n    onPageSizeChange(pageSize: number) {\r\n        if (this.lockPagination) {\r\n            return;\r\n        }\r\n        this.focusRowIndex = -1;\r\n        this.scrollToTop();\r\n        this.pageSize = pageSize;\r\n        this.pagerOpts.itemsPerPage = pageSize;\r\n\r\n        this.fetchData(1, pageSize).subscribe(res => {\r\n            if (res) {\r\n                this.pageIndex = 1;\r\n                this.loadData(res.items);\r\n            }\r\n        });\r\n        this.pageSizeChanged.emit({ pageSize, pageIndex: this.pageIndex });\r\n    }\r\n\r\n    onRemoveSelectedItem(id: any) {\r\n        if (this.dfs.findRowIndex(id) > -1) {\r\n            this.unCheckRow(id);\r\n            this.cd.detectChanges();\r\n        } else {\r\n            this.unCheckRow(id, false);\r\n            this.checkValues = this.checkeds.map(r => r.id);\r\n        }\r\n    }\r\n\r\n    onClearSelectedItem($event) {\r\n        // this.clearAll();\r\n        if (this.selectOnCheck) {\r\n            this.selectValue = '';\r\n        }\r\n        this.clearCheckeds(true);\r\n    }\r\n    //#endregion\r\n\r\n    //#region Loading\r\n    showLoading() {\r\n        this.loading = true;\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    closeLoading(detectChanges = true) {\r\n        this.loading = false;\r\n        if (detectChanges) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n    //#endregion\r\n\r\n    //#region Dom\r\n\r\n    private replacePX2Empty(strNum: string) {\r\n        if (strNum) {\r\n            return Number.parseInt(strNum.replace('px', ''), 10);\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    renderCustomCls(cls: any, dom: any) {\r\n        if (cls) {\r\n            if (cls[0] === '!') {\r\n                const _cls = cls.slice(1).split(' ').filter(c => c);\r\n                _cls.forEach(c => {\r\n                    if (c) {\r\n                        this.render2.removeClass(dom, c);\r\n                    }\r\n                });\r\n            } else {\r\n                cls.split(' ').filter(c => c).forEach(c => {\r\n                    if (c) {\r\n                        this.render2.addClass(dom, c);\r\n                    }\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    renderCustomStyle(cs: CustomStyle, dom: any, cssRuleText = null) {\r\n        if (!cs) {\r\n            return;\r\n        }\r\n        if (cs.cls) {\r\n            this.renderCustomCls(cs.cls, dom);\r\n        }\r\n\r\n        if (cs.style) {\r\n            if (!cssRuleText) {\r\n                cssRuleText = `${this.customStyleKey()} #${dom.id} ${JSON.stringify(cs.style)}`;\r\n            }\r\n\r\n            this.dgs.appendCssRules([cssRuleText]);\r\n        }\r\n    }\r\n\r\n    getBoundingClientRect(el: ElementRef) {\r\n        return el.nativeElement.getBoundingClientRect();\r\n    }\r\n\r\n    getElementPadding(el: HTMLElement) {\r\n        const style = getComputedStyle(el);\r\n        return {\r\n            top: this.replacePX2Empty(style.paddingTop),\r\n            left: this.replacePX2Empty(style.paddingLeft),\r\n            bottom: this.replacePX2Empty(style.paddingBottom),\r\n            right: this.replacePX2Empty(style.paddingRight)\r\n        };\r\n    }\r\n\r\n    getElementBorderWidth(el: HTMLElement) {\r\n        const style = getComputedStyle(el);\r\n        return {\r\n            top: this.replacePX2Empty(style.borderTopWidth),\r\n            bottom: this.replacePX2Empty(style.borderBottomWidth),\r\n            right: this.replacePX2Empty(style.borderRightWidth),\r\n            left: this.replacePX2Empty(style.borderLeftWidth)\r\n        };\r\n    }\r\n\r\n    formatData(field: any, data: any, formatter: any) {\r\n        const value = this.getFieldValue(field, data);\r\n        return this.colFormatSer.format(value, data, formatter);\r\n    }\r\n\r\n    getFieldValue(field, rowData) {\r\n        return Utils.getValue(field, rowData);\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Select\r\n    private canOperateCheckbox() {\r\n        return this.multiSelect && this.showCheckbox;\r\n    }\r\n\r\n\r\n\r\n    private findNextCell(field: string, dir: MoveDirection) {\r\n        let td = null;\r\n        if (this.currentCell && this.currentCell.cellElement) {\r\n            const fixed = this.dfs.getColumn(field).fixed || '';\r\n            let cellIndex = this.dfs.getColumnIndex(field, fixed);\r\n\r\n            if (fixed === 'left') {\r\n                if (this.showCheckbox) {\r\n                    cellIndex += 1;\r\n                }\r\n\r\n                if (this.showLineNumber) {\r\n                    cellIndex += 1;\r\n                }\r\n            }\r\n\r\n            const currCellEl = this.currentCell.cellElement;\r\n            if (dir === 'up') {\r\n                const prevTr = this.dgs.findNextTr(currCellEl.parentElement.previousElementSibling, 'up');\r\n                if (prevTr) {\r\n                    td = prevTr.children[cellIndex];\r\n                }\r\n            } else if (dir === 'down') {\r\n                const nextTr = this.dgs.findNextTr(currCellEl.parentElement.nextElementSibling, 'down');\r\n                if (nextTr) {\r\n                    td = nextTr.children[cellIndex];\r\n                }\r\n            } else if (dir === 'left') {\r\n                td = currCellEl.previousElementSibling;\r\n            } else if (dir === 'right') {\r\n                td = currCellEl.nextElementSibling;\r\n            }\r\n        }\r\n        return td;\r\n    }\r\n\r\n    selectNextCell(dir: MoveDirection, event: Event) {\r\n        const nextTd = this.findNextCell(this.currentCell.field, dir);\r\n\r\n        if (dir === 'up' && !nextTd) {\r\n            return;\r\n        }\r\n\r\n        if (nextTd) {\r\n            if (event['code'] === 'Tab' && this.editable && this.editcellWhenTabKeydwon) {\r\n                nextTd['click'].apply(nextTd, [event]);\r\n            } else {\r\n                nextTd['selectCell'](event, nextTd);\r\n            }\r\n            // nextTd['selectCell'](event, nextTd);\r\n            return nextTd;\r\n        } else {\r\n            const tr = this.currentCell.cellElement.parentElement;\r\n            let _next = tr.nextElementSibling;\r\n            if (dir === 'left') {\r\n                _next = tr.previousElementSibling;\r\n            }\r\n\r\n            const nextTr = this.dgs.findNextTr(_next, dir === 'left' ? 'up' : 'down');\r\n            if (nextTr && nextTr.tagName === 'TR') {\r\n                // nextTr.children.find(td => td.editCell).editCell();\r\n                let firstEditor = false;\r\n                let i = 0;\r\n                // while (!firstEditor) {\r\n                //     firstEditor = !!nextTr.children[i].editCell;\r\n                //     if (!firstEditor) {\r\n                //         i++;\r\n                //     }\r\n                // }\r\n                nextTr.children[i].selectCell(event, nextTr.children[i]);\r\n            }\r\n        }\r\n    }\r\n\r\n    selectNextRow() {\r\n        if (this.selectedRow) {\r\n            const tr = this.selectedRow.dr.el.nativeElement;\r\n            if (tr.nextElementSibling) {\r\n                tr.nextElementSibling.click();\r\n            }\r\n        }\r\n    }\r\n    selectPrevRow() {\r\n        if (this.selectedRow) {\r\n            const tr = this.selectedRow.dr.el.nativeElement;\r\n            if (tr.previousElementSibling) {\r\n                tr.previousElementSibling.click();\r\n            }\r\n        }\r\n    }\r\n\r\n    removeCellSelectedCls() {\r\n        const selectedCell = this.el.nativeElement.querySelectorAll('.' + CELL_SELECTED_CLS);\r\n        if (selectedCell.length) {\r\n            selectedCell.forEach(n => {\r\n                this.render2.removeClass(n, CELL_SELECTED_CLS);\r\n            });\r\n        }\r\n    }\r\n\r\n    /**\r\n     * éä¸­è¡\r\n     * @param id éä¸­è¡ID\r\n     * @param emit è§¦åselect äºä»¶\r\n     * @param toCurrentPosition æ»å¨æ¡å®ä½å°å½åéæ©ä¸­è¡\r\n     */\r\n    selectRow(id: any, emit = true, toCurrentPosition = false) {\r\n\r\n        this.removeCellSelectedCls();\r\n\r\n        if (!this.multiSelect && this.showCheckbox) {\r\n            this.clearCheckeds(false, false);\r\n        }\r\n\r\n        if (this.selectionMode === 'default') {\r\n            this.clearAll();\r\n        }\r\n\r\n        if (id && (!this.selectedRow || this.selectedRow.id != id)) {\r\n\r\n            const row = this.dfs.findRow(id);\r\n            if (row && this.disableRow) {\r\n                if (this.disableRow(row.data, row.index)) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n\r\n            if (emit) {\r\n                this.dfs.selectRecord(id);\r\n            } else {\r\n                this.dfs.setSelectRow(id);\r\n                this.selectedRow = this.dfs.getCurrentRow();\r\n                if (this.checkOnSelect) {\r\n                    this.checkRows([id]);\r\n                }\r\n                this.dgs.setSelecedRow.emit({ id, selected: true });\r\n            }\r\n        } else {\r\n            if (this.checkOnSelect) {\r\n                this.checkRows([id]);\r\n            }\r\n        }\r\n\r\n        if (toCurrentPosition) {\r\n            this.scrollToCurrentRow();\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ»å¨æ¡æ»å¨å°å½åè¡çä½ç½®\r\n     */\r\n    scrollToCurrentRow() {\r\n        this.dgs.scrollToCurrentRow.next();\r\n    }\r\n\r\n    unSelectRow(id: any, emit = true) {\r\n        if (id) {\r\n            this.closeAllCellEditor();\r\n\r\n            if (this.currentCell && this.currentCell.rowId == id) {\r\n                this.cancelSelectCell();\r\n            }\r\n\r\n            if (emit) {\r\n                this.dfs.selectRecord(id, false);\r\n            } else {\r\n                this.dfs.setSelectRow(id, false);\r\n                this.selectedRow = null;\r\n                this.dgs.setSelecedRow.emit({ id, selected: false });\r\n            }\r\n        }\r\n    }\r\n\r\n    selectAllRows() {\r\n        if (this.multiSelect) {\r\n            this.dfs.selectAll();\r\n        }\r\n    }\r\n\r\n    cancelSelectCell() {\r\n        if (this.currentCell) {\r\n            this.currentCell.cellElement.cancelSelected();\r\n            if (!this.currentCell.isEditing) {\r\n                this.currentCell = null;\r\n                this.dfs.cancelSelectCell();\r\n            }\r\n        }\r\n    }\r\n\r\n    clearSelections(excludeIds?: string[]) {\r\n        this.dfs.clearSelections(excludeIds);\r\n        this.selectedRow = null;\r\n        this.cancelSelectCell();\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    checkRow(id: any, emit = true) {\r\n        if (this.canOperateCheckbox()) {\r\n            if (emit) {\r\n                this.dfs.checkRecord(id);\r\n            } else {\r\n                this.checkRows([id]);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** é©éè¡ï¼ä¸è§¦åéä¸­äºä»¶ */\r\n    checkRows(ids: any[], emit = false) {\r\n        if (ids && ids.length) {\r\n            this.dfs.setCheckedRows(ids, true);\r\n            this.dgs.setCheckedRows.next({ ids, checked: true });\r\n\r\n            if (this.selectionMode === 'default') {\r\n                this.dfs.updateProperty('selections', this.checkeds);\r\n            }\r\n\r\n            // this.cd.detectChanges();\r\n            if (emit) {\r\n                this.checkValues = this.checkeds.map(r => r.id);\r\n                this.checkValuesChange.emit(this.checkValues);\r\n                this.checkedChange.emit(this.checkeds);\r\n            }\r\n        }\r\n    }\r\n\r\n    /** åæ¶é©éï¼ä¸è§¦åéä¸­äºä»¶ */\r\n    unCheckRows(ids: any[], emit = false) {\r\n        if (ids && ids.length) {\r\n            this.dfs.setCheckedRows(ids, false);\r\n            this.dgs.setCheckedRows.next({ ids, checked: false });\r\n            // this.cd.detectChanges();\r\n            if (emit) {\r\n                this.checkValues = this.checkeds.map(r => r.id);\r\n                this.checkValuesChange.emit(this.checkValues);\r\n                this.checkedChange.emit(this.checkeds);\r\n            }\r\n        }\r\n    }\r\n\r\n    checkAllRows(emit = true) {\r\n        if (this.canOperateCheckbox()) {\r\n            this.dfs.checkAll();\r\n            this.dgs.checkAll.emit();\r\n            if (emit) {\r\n                this.checkAll.emit();\r\n            }\r\n        }\r\n    }\r\n\r\n    unCheckRow(id: any, emit = true) {\r\n        if (this.canOperateCheckbox()) {\r\n            if (this.currentCell && this.currentCell.rowId == id) {\r\n                this.cancelSelectCell();\r\n            }\r\n\r\n            if (emit) {\r\n                this.dfs.checkRecord(id, false);\r\n            } else {\r\n                this.unCheckRows([id]);\r\n            }\r\n        }\r\n    }\r\n    /** æ¸ç©ºé©éè¡ï¼é»è®¤åªæ¸ç©ºå½åé¡µçé©é\r\n     * clearAll: æ¸ç©ºææ é»è®¤ä¸º false; å¦åä»æ¸ç©ºå½åé¡µçé©éæ°æ®ã\r\n     */\r\n    clearCheckeds(clearAll = false, emitUnCheckAll = true) {\r\n        this.dfs.clearCheckeds(clearAll);\r\n        this.checkValues = [];\r\n        this.cancelSelectCell();\r\n        if (emitUnCheckAll) {\r\n            this.dgs.uncheckAll.emit();\r\n        }\r\n    }\r\n\r\n    clearAll() {\r\n        this.dfs.clearAll();\r\n        this.checkValues = [];\r\n        this.dgs.uncheckAll.emit();\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Resize Column\r\n\r\n    private getResizeProxyPosLeft(e: MouseEvent) {\r\n        const target = e.target as any;\r\n        const dgRect = this.getBoundingClientRect(this.dgContainer);\r\n        const td = target.parentElement;\r\n        const tdLeft = td.getBoundingClientRect().left;\r\n        const deltaEdge = td.offsetWidth - (e.pageX - tdLeft);\r\n        this.resizeColumnInfo.proxyLineEdge = deltaEdge;\r\n        this.resizeColumnInfo.startWidth = td.offsetWidth;\r\n        this.resizeColumnInfo.startX = e.pageX;\r\n        this.resizeColumnInfo.left = tdLeft - dgRect.left - 1 + deltaEdge;\r\n        return e.pageX - dgRect.left - 1 + deltaEdge;\r\n    }\r\n\r\n    private toggleResizeProxy(show = true) {\r\n        let display = 'block';\r\n        if (!show) {\r\n            display = 'none';\r\n        }\r\n        this.render2.setStyle(this.resizeProxyBg.nativeElement, 'display', display);\r\n        this.render2.setStyle(this.resizeProxy.nativeElement, 'display', display);\r\n    }\r\n\r\n    onColumnResizeBegin(e: MouseEvent) {\r\n        if (this.resizeProxy) {\r\n            this.render2.setStyle(document.body, 'cursor', 'e-resize');\r\n            const proxy = this.resizeProxy.nativeElement;\r\n            const proxyPosLeft = this.getResizeProxyPosLeft(e);\r\n            this.render2.setStyle(proxy, 'left', proxyPosLeft + 'px');\r\n\r\n            let top = 0;\r\n            if ((this.enableFilterRow || this.enableSmartFilter) && this.showFilterBar) {\r\n                top += this.filterBarHeight;\r\n            }\r\n\r\n            if (this.showRowGroupPanel) {\r\n                top += this.rowGroupPanelHeight;\r\n            }\r\n\r\n            this.render2.setStyle(proxy, 'top', `${top}px`);\r\n\r\n            if (!this.autoHeight) {\r\n                this.render2.setStyle(proxy, 'height', (this.height - this.pagerHeight) + 'px');\r\n            } else {\r\n                let bottomH = 0;\r\n                if (this.pagination) {\r\n                    bottomH += this.pagerHeight;\r\n                }\r\n                if (this.showFooter) {\r\n                    bottomH += this.footerHeight;\r\n                }\r\n                this.render2.setStyle(proxy, 'height', `calc(100% - ${bottomH}px)`);\r\n            }\r\n            this.toggleResizeProxy();\r\n        }\r\n    }\r\n\r\n    onColumnResize(e: MouseEvent) {\r\n        const proxy = this.resizeProxy.nativeElement;\r\n        const dgRect = this.getBoundingClientRect(this.dgContainer);\r\n        const proxyPosLeft = e.pageX - dgRect.left - 1 + this.resizeColumnInfo.proxyLineEdge;\r\n        if (proxyPosLeft - this.resizeColumnInfo.left > 20) {\r\n            this.render2.setStyle(proxy, 'left', proxyPosLeft + 'px');\r\n        } else {\r\n            this.render2.setStyle(proxy, 'left', (this.resizeColumnInfo.left + 20) + 'px');\r\n        }\r\n        e.stopPropagation();\r\n        e.preventDefault();\r\n    }\r\n\r\n    onColumnResizeEnd(e: MouseEvent, col: DataColumn) {\r\n        this.render2.removeStyle(document.body, 'cursor');\r\n        this.toggleResizeProxy(false);\r\n        this.resizeColumnInfo.proxyLineEdge = 0;\r\n\r\n        let newColWidth = this.resizeColumnInfo.startWidth + e.pageX - this.resizeColumnInfo.startX;\r\n\r\n        if (newColWidth < 20) {\r\n            newColWidth = 20;\r\n        }\r\n\r\n        if (col.width > newColWidth) {\r\n            const t = col.width - newColWidth;\r\n            if (!this.fitColumns && this.scrollInstance.elementRef.nativeElement.scrollLeft) {\r\n                const moveLeft = this.scrollInstance.elementRef.nativeElement.scrollLeft - t;\r\n                this.scrollInstance.scrollToX(moveLeft);\r\n            }\r\n        }\r\n        col.width = newColWidth;\r\n\r\n        if (this.useControlPanel && this.settingService) {\r\n            this.settingService.saveUserConfig(this.id).subscribe(() => {\r\n                this.dfs.columnResizeEnd();\r\n                this.dgs.columnResized.emit();\r\n            });\r\n\r\n            return;\r\n        }\r\n\r\n        this.dfs.columnResizeEnd();\r\n        this.dgs.columnResized.emit();\r\n    }\r\n\r\n    /** è¿ååå®½ */\r\n    restituteColumnsSize() {\r\n        this.dfs.resizeColumns(true);\r\n        this.dgs.columnResized.emit();\r\n    }\r\n\r\n    /** ååæ ¼åå®¹èªéåºåå®½ */\r\n    sizeToContent(col: DataColumn, th: ElementRef) {\r\n        if (!this.AutoColumnWidthUseDblclick) {\r\n            return false;\r\n        }\r\n        let longestText = '';\r\n        const items = this.data;\r\n\r\n        for (let i = items.length - 1; i >= 0; i--) {\r\n            // TFS: 356964 20200203\r\n            let value = Utils.getValue(col.field, items[i]);\r\n            if (value !== 0) {\r\n                value = value || '';\r\n            }\r\n            let text = '' + value;\r\n            if (col.formatter && value !== undefined) {\r\n                text = this.colFormatSer.format(value, items[i], col.formatter);\r\n            }\r\n\r\n            if (Utils.getBLen(text) > Utils.getBLen(longestText)) {\r\n                longestText = text;\r\n            } else {\r\n                this.longTextArea.nativeElement.innerHTML = text;\r\n                const w1 = this.longTextArea.nativeElement.offsetWidth;\r\n                this.longTextArea.nativeElement.innerHTML = longestText;\r\n                const w2 = this.longTextArea.nativeElement.offsetWidth;\r\n\r\n                if (w1 > w2) {\r\n                    longestText = text;\r\n                }\r\n            }\r\n        }\r\n\r\n        this.longTextArea.nativeElement.innerHTML = longestText;\r\n        const maxWidth = this.longTextArea.nativeElement.offsetWidth + 26;\r\n\r\n        this.longTextArea.nativeElement.innerHTML = th.nativeElement.innerText;\r\n        let thMinWidth = this.longTextArea.nativeElement.offsetWidth + 26;\r\n\r\n        if (col.sortable) {\r\n            thMinWidth += 24;\r\n        }\r\n\r\n        col.width = (maxWidth > thMinWidth ? maxWidth : thMinWidth);\r\n\r\n        const colIndex = this.flatColumns.findIndex(c => c.field === col.field);\r\n        if (colIndex === this.flatColumns.length - 1) {\r\n            col.width += 6;\r\n        }\r\n        this.dfs.resizeColumns();\r\n        this.dgs.columnResized.emit();\r\n    }\r\n\r\n    //#endregion\r\n\r\n    //#region Changes\r\n    getChanges() {\r\n        return this.dfs.getChanges();\r\n    }\r\n\r\n    acceptChanges() {\r\n        this.dfs.acceptChanges();\r\n    }\r\n\r\n    rejectChanges() {\r\n        this.dfs.rejectChanges();\r\n    }\r\n    //#endregion\r\n\r\n    //#region CRUD\r\n\r\n    appendRow(row: any) {\r\n        this.cancelEdit(null);\r\n        this.dfs.appendRow(row);\r\n        this.dataChange.emit(this.dfs.getData());\r\n        this.rowAppended.emit();\r\n    }\r\n\r\n    updateRow(rowId, newData: { [key: string]: any }) {\r\n        this.dfs.updateRow(rowId, newData);\r\n        this.dataChange.emit(this.dfs.getData());\r\n        this.rowUpdated.emit();\r\n    }\r\n\r\n    refreshRow(rowId) {\r\n        const row = this.dfs.findRow(rowId);\r\n        if (row && row.data) {\r\n            this.dfs.rowUpdate$.emit(row);\r\n        } else {\r\n            console.warn('Can not found row by id. id: ' + rowId);\r\n        }\r\n    }\r\n\r\n\r\n    deleteRow(rowId?: any) {\r\n        this.cancelEdit(rowId, false);\r\n        if (!rowId) {\r\n            if (this.selectValue) {\r\n                rowId = this.selectValue;\r\n            } else {\r\n                throw new Error(`å é¤è¡æ¶ä¸»é®æ è¯ID ä¸è½ä¸ºç©ºã`);\r\n            }\r\n        }\r\n        const deleteRow = this.dfs.deleteRow(rowId);\r\n        this.dataChange.emit(this.dfs.getData());\r\n        this.currentCell = null;\r\n        this.dfs.updateProperty('currentCell', null);\r\n        this.cd.detectChanges();\r\n        this.rowDeleted.emit(deleteRow);\r\n    }\r\n\r\n    validateRow() { }\r\n\r\n    insertRow() { }\r\n\r\n    //#endregion\r\n\r\n    //#region Scrolling\r\n\r\n    scrollToLeft() {\r\n        if (this.scrollInstance) {\r\n            this.scrollInstance.scrollToLeft(0, 200);\r\n        }\r\n    }\r\n\r\n    scrollToRight() {\r\n        if (this.scrollInstance) {\r\n            this.scrollInstance.scrollToRight(0, 200);\r\n        }\r\n    }\r\n\r\n    scrollToTop() {\r\n        if (this.scrollInstance) {\r\n            this.scrollInstance.scrollToTop(0, 100);\r\n            this.dfs.updateProperty('scrollInfo', { y: 0, x: 0 });\r\n        }\r\n    }\r\n\r\n    scrollToBottom() {\r\n        if (this.scrollInstance) {\r\n            this.scrollInstance.scrollToBottom(0, 100);\r\n        }\r\n    }\r\n\r\n    //#endregion\r\n\r\n    private _setColumnReadonly(cols: DataColumn[], field: string, readonly = true) {\r\n        if (cols && cols.length && field) {\r\n            const col = cols.find(n => n.field === field);\r\n            if (col) {\r\n                col.readonly = readonly;\r\n            }\r\n        }\r\n    }\r\n\r\n    setColumnReadonly(field: string, readonly = true) {\r\n        this._setColumnReadonly(this.colGroup.leftFixed, field, readonly);\r\n        this._setColumnReadonly(this.colGroup.rightFixed, field, readonly);\r\n        this._setColumnReadonly(this.colGroup.normalColumns, field, readonly);\r\n    }\r\n\r\n    // æ¯å¦ä¸ºå¤è¡¨å¤´\r\n    isMultiHeader() {\r\n        return this.columns && this.columns.length > 1 && Array.isArray(this.columns[1]);\r\n    }\r\n\r\n    toggleVisibleColumn(fields: string[], visible = true) {\r\n        if (!this.isMultiHeader()) {\r\n            this.columns.forEach((cols: DataColumn[]) => {\r\n                fields.forEach(field => {\r\n                    const col = cols.find(c => c.field === field || c.id === field);\r\n                    if (col) {\r\n                        col.visible = visible;\r\n                    }\r\n                });\r\n            });\r\n        } else {\r\n            // å¤è¡¨å¤´\r\n            const allCols = flatten<DataColumn>(this.columns);\r\n\r\n            allCols.forEach(p => {\r\n                if (p.origianlColSpan === undefined) {\r\n                    p.origianlColSpan = p.colspan;\r\n                }\r\n            });\r\n\r\n            fields.forEach(field => {\r\n                const _col = allCols.find(col => col.field === field || col.id === field);\r\n                if (_col) {\r\n\r\n                    if (_col.visible === visible) {\r\n                        return;\r\n                    }\r\n\r\n                    _col.visible = visible;\r\n                    const parents = DatagridColumnsHelper.getParentColumns(_col, allCols);\r\n                    const childs = DatagridColumnsHelper.getChildColumns(_col, allCols);\r\n                    childs.forEach(c => {\r\n                        c.visible = visible;\r\n                    });\r\n                    if (visible && childs.length) {\r\n                        _col.colspan = _col.origianlColSpan;\r\n                    }\r\n\r\n                    const _colspan = _col.colspan || 1;\r\n                    parents.forEach(p => {\r\n                        if (!visible) {\r\n                            p.colspan = p.colspan - _colspan;\r\n                        } else {\r\n                            const _childs = allCols.filter(n => n.parentId === p.id && n.visible);\r\n                            p.colspan = _childs.reduce((r, c) => {\r\n                                r = r + (c.colspan || 1);\r\n                                return r;\r\n                            }, 0);\r\n                        }\r\n\r\n                        p.visible = !!p.colspan;\r\n                    });\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    getColumn(field: string) {\r\n        const allCols = flatten<DataColumn>(this.columns);\r\n        return allCols.find(n => n.field === field || n.id === field);\r\n    }\r\n\r\n    showColumn(field: string | string[]) {\r\n        if (typeof field === 'string') {\r\n            this.toggleVisibleColumn([field], true);\r\n        } else {\r\n            this.toggleVisibleColumn(field, true);\r\n        }\r\n        this.columnsChanged();\r\n    }\r\n\r\n    hideColumn(field: string | string[]) {\r\n        if (typeof field === 'string') {\r\n            this.toggleVisibleColumn([field], false);\r\n        } else {\r\n            this.toggleVisibleColumn(field, false);\r\n        }\r\n        this.columnsChanged();\r\n    }\r\n\r\n    updateColumn(field: string, columnObject: { [key: string]: any }, detectChange = true) {\r\n        this.columns.forEach((cols: DataColumn[]) => {\r\n            let column = cols.find(col => col.field === field);\r\n            if (column) {\r\n                column = Object.assign(column, columnObject);\r\n            }\r\n        });\r\n\r\n        if (detectChange) {\r\n            this.columnsChanged();\r\n        }\r\n    }\r\n\r\n    setColumnFormatter(field: string, formatter: any) {\r\n        this.columns.forEach((cols: DataColumn[]) => {\r\n            const column = cols.find(col => col.field === field);\r\n            if (column) {\r\n                column.formatter = formatter;\r\n            }\r\n        });\r\n\r\n        this.columnsChanged();\r\n    }\r\n\r\n    updateColumnFormatterOptions(field: string, formatterOptions: any) {\r\n        this.columns.forEach((cols: DataColumn[]) => {\r\n            const column = cols.find(col => col.field === field);\r\n            if (column && column.formatter) {\r\n                const colFormatter = column.formatter as any;\r\n                colFormatter.options = colFormatter.options || {};\r\n                colFormatter.options = Object.assign(colFormatter.options, formatterOptions || {});\r\n            }\r\n        });\r\n\r\n        this.columnsChanged();\r\n    }\r\n\r\n    setColumnTitle(field: string, title: string) {\r\n        this.columns.forEach((cols: DataColumn[]) => {\r\n            const column = cols.find(col => col.field === field);\r\n            if (column) {\r\n                column.title = title;\r\n            }\r\n        });\r\n\r\n        this.columnsChanged();\r\n    }\r\n\r\n    /**\r\n     * æåº\r\n     * @param sortName æåºå­æ®µï¼å¦ï¼ 'name,age'\r\n     * @param sortOrder æåºæ¹å¼ï¼å¦ï¼'desc, asc'\r\n     */\r\n    sort(sortName?: string, sortOrder?: string) {\r\n        if (sortName === null || sortName === '' || sortOrder === null || sortOrder === '') {\r\n            this.clearSort();\r\n        } else {\r\n            if (sortName && sortOrder) {\r\n                // this.updateSortInfo(sortName, sortOrder);\r\n                this.sortName = sortName;\r\n                this.sortOrder = sortOrder;\r\n                this.dfs.setSortInfo(this.sortName, this.sortOrder);\r\n            }\r\n\r\n            if (!this.remoteSort) {\r\n                this.dfs.clientSort();\r\n            }\r\n            this.onColumnSorted();\r\n        }\r\n    }\r\n\r\n    clearSort() {\r\n        this.sortName = '';\r\n        this.sortOrder = '';\r\n        this.dfs.setSortInfo('', '');\r\n        if (!this.remoteSort) {\r\n            if (this.data && this.data.length) {\r\n                this.dfs.clearSort();\r\n            }\r\n        }\r\n        this.onColumnSorted();\r\n    }\r\n\r\n    onColumnSorted() {\r\n        let params = null;\r\n        if (this.sortName && this.sortOrder) {\r\n            const orders = this.sortOrder.split(',');\r\n            params = this.sortName.split(',').reduce((r, n, i) => {\r\n                r[n] = orders[i] || 'asc';\r\n                return r;\r\n            }, {});\r\n        }\r\n\r\n        if (!this.remoteSort) {\r\n            this.dfs.clientSort();\r\n        }\r\n\r\n        this.columnSorted.emit(params);\r\n    }\r\n\r\n    updateSortInfo(newSortName, newSortOrder) {\r\n        const sortName = this.sortName;\r\n        const sortOrder = this.sortOrder;\r\n        let sortFields = [];\r\n        let sortOrders = [];\r\n        if (sortName) {\r\n            sortFields = sortName.split(',');\r\n            sortOrders = sortOrder.split(',');\r\n        }\r\n\r\n        const _sortFields = newSortName.split(',');\r\n        const _sortOrders = newSortOrder.split(',');\r\n\r\n\r\n        _sortFields.forEach((nField, nIndex) => {\r\n            const colOrder = _sortOrders[nIndex] || 'asc';\r\n            let newOrder = colOrder;\r\n            const i = sortFields.findIndex(n => n === nField);\r\n            if (i >= 0) {\r\n                const _order = sortOrders[i] === 'asc' ? 'desc' : 'asc';\r\n                newOrder = _order;\r\n                if (this.multiSort && newOrder === 'asc') {\r\n                    newOrder = undefined;\r\n                    sortFields.splice(i, 1);\r\n                    sortOrders.splice(i, 1);\r\n                } else {\r\n                    sortOrders[i] = _order;\r\n                }\r\n\r\n            } else {\r\n                if (this.multiSort) {\r\n                    sortFields.push(nField);\r\n                    sortOrders.push(colOrder);\r\n                } else {\r\n                    sortFields = [nField];\r\n                    sortOrders = [colOrder];\r\n                }\r\n            }\r\n        });\r\n\r\n        this.sortName = sortFields.join(',');\r\n        this.sortOrder = sortOrders.join(',');\r\n    }\r\n    /** åè®¾ç½® */\r\n    showControlPanel($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        const self = this;\r\n        if (this.useControlPanel && this.settingService) {\r\n            if (!this.settingService.httpRestService) {\r\n                const settingsHttp = this.inject.get(GRID_SETTINGS_HTTP, null);\r\n                this.settingService.httpRestService = settingsHttp;\r\n            }\r\n            this.settingService.show(self);\r\n        }\r\n    }\r\n\r\n    disableHeader(flag = true) {\r\n        this.dgs.disableHeader.emit(flag);\r\n    }\r\n\r\n    /** è·åç¨æ·ä¸ªæ§åè®¾ç½® */\r\n    private userProfileSetting(settings) {\r\n\r\n        const { sortInfo, viewColumns, groupField, columnFormat } = settings;\r\n        const { sortName, sortOrder } = sortInfo;\r\n        if (sortInfo) {\r\n            if (sortName && sortName.length) {\r\n                this.sortName = sortName.join(',');\r\n                if (sortOrder) {\r\n                    this.sortOrder = sortOrder.join(',');\r\n                }\r\n            }\r\n\r\n            this['__sortInfo'] = sortInfo;\r\n        }\r\n\r\n        if (viewColumns && viewColumns.length) {\r\n            this.columns = this.columns.map(cols => {\r\n                this.settingService.updateColumnFormat(cols, columnFormat, this);\r\n                return this.settingService.newVisibleOrderColumns(cols, viewColumns, columnFormat);\r\n            });\r\n\r\n            this.addControlCol();\r\n\r\n            this.columns.forEach(cols => {\r\n                cols.forEach(col => {\r\n                    if (sortName && sortName.length) {\r\n                        const i = sortName.indexOf(col.field);\r\n                        if (i > -1) {\r\n                            col.order = sortOrder[i];\r\n                        }\r\n                    }\r\n                });\r\n            });\r\n        }\r\n\r\n        if (this.groupRows && groupField) {\r\n            this.groupField = groupField;\r\n        }\r\n    }\r\n\r\n    // æ¯å¦ä¸ºå½åæ´»å¨çè¡¨æ ¼\r\n    private isActived() {\r\n        return DomHandler.hasClass(this.dgContainer.nativeElement, this._active_datagrid_cls);\r\n    }\r\n\r\n    // æ¸çæ æçDOM\r\n    private cleanDom() {\r\n        // æ¸ç TOOL-TIP\r\n        const tips = document.querySelectorAll('.datagrid-cell-tooltip');\r\n        if (tips && tips.length) {\r\n            tips.forEach(n => {\r\n                n.remove();\r\n            });\r\n        }\r\n    }\r\n\r\n    cellIsReadOnly(col: DataColumn, rowData) {\r\n        let readOnly = false;\r\n        if (this.disableRow) {\r\n            readOnly = this.disableRow(rowData);\r\n        }\r\n\r\n        if (!readOnly) {\r\n            if (col.readonly !== undefined) {\r\n                if (typeof col.readonly === 'boolean') {\r\n                    readOnly = col.readonly;\r\n                } else if (typeof col.readonly === 'function') {\r\n                    readOnly = col.readonly(rowData);\r\n                }\r\n            }\r\n        }\r\n        return readOnly;\r\n    }\r\n\r\n    private groupFieldChanged() {\r\n        this.columnsChanged();\r\n\r\n        if (this.settingService) {\r\n            this.settingService.saveUserConfig(this.id).subscribe();\r\n        }\r\n\r\n        this.groupFieldChange.emit({ newGroupField: this.groupField, grid: this });\r\n    }\r\n\r\n    removeGroupField(field: string) {\r\n        const fields = this.groupField.split(',');\r\n        const delIdx = fields.indexOf(field);\r\n        if (delIdx > -1) {\r\n            fields.splice(delIdx, 1).join(',');\r\n        }\r\n        this.groupField = fields.join(',');\r\n        this.toggleVisibleColumn([field], true);\r\n        this.groupFieldChanged();\r\n    }\r\n\r\n    clearAllGrouppingField($event) {\r\n        this.showLoading();\r\n        setTimeout(() => {\r\n            const fields = this.groupField.split(',');\r\n            this.groupField = '';\r\n            this.toggleVisibleColumn(fields, true);\r\n            this.groupFieldChanged();\r\n            this.closeLoading();\r\n        });\r\n    }\r\n\r\n    setGroupFields(groupFields) {\r\n        this.groupField = groupFields;\r\n        this.columnsChanged();\r\n    }\r\n\r\n    activeDataGrid(active = true) {\r\n        const grids = document.querySelectorAll('.f-datagrid.datagrid-active');\r\n        if (grids.length) {\r\n            grids.forEach(n => {\r\n                this.render2.removeClass(n, this._active_datagrid_cls);\r\n            });\r\n        }\r\n        if (active) {\r\n            this.render2.addClass(this.dgContainer.nativeElement, this._active_datagrid_cls);\r\n        }\r\n    }\r\n\r\n\r\n    onDatagridContainerFocus($event) {\r\n        if (!this.disabled) {\r\n            this.activeDataGrid();\r\n        }\r\n    }\r\n\r\n}\r\n","import { cloneDeep } from 'lodash-es';\r\nimport { IdService } from '@farris/ui-common';\r\nimport {\r\n    Component, OnInit, ViewChild, TemplateRef, Renderer2, ElementRef,\r\n    NgZone, Injector, Input, OnDestroy, HostListener, Optional\r\n} from '@angular/core';\r\nimport { FilterPanelService, FilterPanelComponent } from '@farris/ui-filter-panel';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridSmartFilterService } from '../../services/datagrid-smart-filter.service';\r\n\r\n@Component({\r\n    selector: 'datagrid-smart-filter, [datagrid-smart-filter]',\r\n    templateUrl: 'datagrid-smart-filter.component.html',\r\n    providers: [\r\n        FilterPanelService\r\n    ]\r\n})\r\nexport class DatagridSmartFilterComponent implements OnInit, OnDestroy {\r\n    @Input() column;\r\n    @Input() filterData = null;\r\n    @Input() disabled = false;\r\n\r\n    @ViewChild('sort') sortTmp: TemplateRef<any>;\r\n\r\n    filterPanelRef: FilterPanelComponent;\r\n    private idService: IdService;\r\n    private smartFilterDataChanged$ = null;\r\n    private removeFilter$ = null;\r\n    private clearAllFilter$ = null;\r\n    private smartFilterEvents = [];\r\n    constructor(\r\n        private render: Renderer2, private el: ElementRef,\r\n        private zone: NgZone, private inject: Injector,\r\n        private filterPanelService: FilterPanelService,\r\n        private smartFilterSer: DatagridSmartFilterService,\r\n        @Optional() private dg: DatagridComponent\r\n        ) {\r\n            this.idService = this.inject.get(IdService, null);\r\n        }\r\n\r\n    ngOnInit() {\r\n\r\n        if (!this.removeFilter$) {\r\n            this.removeFilter$ = this.smartFilterSer.removeFilter.subscribe((e: any) => {\r\n                if (e && e.labelCode  === this.column.field) {\r\n                    this.filterData = null;\r\n                    this.render.removeClass(this.el.nativeElement, 'active');\r\n                }\r\n            });\r\n\r\n            this.smartFilterEvents.push(this.removeFilter$);\r\n        }\r\n\r\n        if (!this.clearAllFilter$) {\r\n            this.clearAllFilter$ = this.smartFilterSer.clearAllFilter.subscribe( () => {\r\n                this.filterData = null;\r\n                this.render.removeClass(this.el.nativeElement, 'active');\r\n            });\r\n\r\n            this.smartFilterEvents.push(this.clearAllFilter$);\r\n        }\r\n        if (this.dg && !this.smartFilterDataChanged$) {\r\n            this.smartFilterDataChanged$ = this.dg.dgs['smartFilterDataChange'].subscribe((e: any) => {\r\n                if (e && this.column.field === e.fieldCode) {\r\n                    this.filterData.value = e.value;\r\n                    this.filterData.control.single = e.control.single;\r\n                }\r\n            });\r\n            this.smartFilterEvents.push(this.smartFilterDataChanged$);\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.filterPanelRef) {\r\n            this.filterPanelService.hidePanel();\r\n            this.filterPanelRef = null;\r\n        }\r\n\r\n        if (this.smartFilterEvents && this.smartFilterEvents.length) {\r\n            this.smartFilterEvents.forEach(n => {\r\n                n.unsubscribe();\r\n                n = null;\r\n            });\r\n\r\n            this.smartFilterEvents = [];\r\n        }\r\n    }\r\n\r\n\r\n\r\n    private getFilterData() {\r\n        const { field, title } = this.column;\r\n        if (!this.filterData) {\r\n            this.filterData = {\r\n                id: field,\r\n                labelCode: field,\r\n                code: field,\r\n                name: title,\r\n                control: this.smartFilterSer.getColumnFilterData(this.column),\r\n                placeHolder: '',\r\n                value: {\r\n                    value: ''\r\n                }\r\n            };\r\n        }\r\n\r\n        return cloneDeep(this.filterData);\r\n    }\r\n\r\n\r\n    private getPanelPosition($event) {\r\n        let x = $event.pageX - 33;\r\n        const y = $event.pageY +  9;\r\n        const targetRect = $event.target.getBoundingClientRect();\r\n        let moveArrow = 0;\r\n        if (window.innerWidth - x < 380) {\r\n            const i = 380 - (window.innerWidth - x);\r\n            x = x - i - 20;\r\n            moveArrow = targetRect.left - x;\r\n        }\r\n\r\n        return { x, y, moveArrow};\r\n    }\r\n\r\n    private hideFilterPanel() {\r\n        if (this.filterPanelRef) {\r\n            this.filterPanelService.hidePanel();\r\n            this.filterPanelRef = null;\r\n            if (!this.filterData || !this.filterData.valueText) {\r\n                this.render.removeClass(this.el.nativeElement, 'active');\r\n            }\r\n        }\r\n    }\r\n\r\n    private clearColumnFilter(e) {\r\n        this.hideFilterPanel();\r\n        this.filterData = null;\r\n        this.smartFilterSer.removeCondition(e);\r\n    }\r\n\r\n    showFilterPanel($event) {\r\n        $event.stopPropagation();\r\n\r\n        this.render.addClass(this.el.nativeElement, 'active');\r\n        const { x, y, moveArrow } = this.getPanelPosition($event);\r\n        this.filterPanelRef = this.filterPanelService.showPanel({\r\n            left: x,\r\n            top: y,\r\n            item: this.getFilterData(),\r\n            panelExtendTemplate: this.column.sortable ? this.sortTmp : null,\r\n            localStorageKey: 'smartfilter_' + this.dg.dgs.createConfigKey(this.dg.id),\r\n            target: $event.target\r\n        });\r\n\r\n        if (moveArrow) {\r\n            const arrowEl = this.filterPanelRef['el'].querySelector('.f-filter-panel-arrow');\r\n            if (arrowEl) {\r\n                this.render.setStyle(arrowEl, 'left', `${moveArrow}px`);\r\n            }\r\n        }\r\n\r\n        this.filterPanelRef.hidePanel.subscribe(e => {\r\n            this.hideFilterPanel();\r\n        });\r\n\r\n        this.filterPanelRef.filterSubmit.subscribe(e => {\r\n            // console.log('æäº¤', e);\r\n            if (e.filter && e.filter.length) {\r\n                this.filterData = e.item || null;\r\n                this.hideFilterPanel();\r\n                this.smartFilterSer.filterConditionChanged({ conditions: e.filter, controlData: e.item });\r\n            } else {\r\n                this.clearColumnFilter(e.item);\r\n            }\r\n        });\r\n\r\n        this.filterPanelRef.clearFilter.subscribe((e: any) => {\r\n            this.clearColumnFilter(e);\r\n        });\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onClick($event) {\r\n        $event.stopPropagation();\r\n        if (this.disabled) {\r\n            return;\r\n        }\r\n        this.showFilterPanel($event);\r\n        return false;\r\n    }\r\n\r\n    onSort($event, order) {\r\n        $event.stopPropagation();\r\n\r\n        if (this.column.order === order) {\r\n            this.column.order = '';\r\n        } else {\r\n            this.column.order = order;\r\n        }\r\n\r\n        const sortName = this.dg.sortName;\r\n        const sortOrder = this.dg.sortOrder;\r\n        let sortFields = [];\r\n        let sortOrders = [];\r\n        if (sortName) {\r\n            sortFields = sortName.split(',');\r\n            sortOrders = sortOrder.split(',');\r\n        }\r\n\r\n        let newOrder =  this.column.order;\r\n        const i = sortFields.findIndex(n => n === this.column.field);\r\n        if (i >= 0) {\r\n            if (newOrder === '') {\r\n                newOrder = undefined;\r\n                sortFields.splice(i, 1);\r\n                sortOrders.splice(i, 1);\r\n            } else {\r\n                sortOrders[i] = newOrder;\r\n            }\r\n        } else {\r\n            if (this.dg.multiSort) {\r\n                sortFields.push(this.column.field);\r\n                sortOrders.push(newOrder);\r\n            } else {\r\n                sortFields = [this.column.field];\r\n                sortOrders = [newOrder];\r\n            }\r\n        }\r\n\r\n        this.dg.sortName = sortFields.join(',');\r\n        this.dg.sortOrder = sortOrders.join(',');\r\n        this.dg.dfs.setSortInfo(this.dg.sortName, this.dg.sortOrder);\r\n\r\n        this.dg.beforeSortColumn(this.dg.sortName, this.dg.sortOrder, this.dg).subscribe(() => {\r\n            this.dg.onColumnSorted();\r\n        });\r\n    }\r\n}\r\n","import { LocaleModule } from '@farris/ui-locale';\r\nimport { NgModule } from '@angular/core';\r\nimport { FilterPanelModule, FilterPanelComponent } from '@farris/ui-filter-panel';\r\nimport { DatagridSmartFilterComponent } from './datagrid-smart-filter.component';\r\n\r\n@NgModule({\r\n    declarations: [\r\n        DatagridSmartFilterComponent\r\n    ],\r\n    imports: [\r\n        FilterPanelModule,\r\n        LocaleModule.forRoot(),\r\n    ],\r\n    exports: [\r\n        DatagridSmartFilterComponent\r\n    ]\r\n})\r\nexport class DatagridSmartFilterModule { }\r\n","import { DatagridComponent } from './../datagrid.component';\r\nimport { LocaleService } from '@farris/ui-locale';\r\nimport { Pipe, PipeTransform, Injector, Optional, ElementRef, LOCALE_ID } from '@angular/core';\r\nimport { Utils } from './utils';\r\nimport { ColumnFormatService } from '@farris/ui-common/column';\r\nimport { DataColumn } from '../types/data-column';\r\n\r\n@Pipe({name: 'formatCellData', pure: false})\r\nexport class FormatCellDataPipe implements PipeTransform {\r\n\r\n    private localeService: LocaleService;\r\n    private dataGrid: DatagridComponent;\r\n    private elRef: ElementRef;\r\n    private localeId = 'ZH-CHS';\r\n    constructor(private cfs: ColumnFormatService, @Optional() private injector?: Injector) {\r\n        this.localeId = this.injector.get(LOCALE_ID);\r\n    }\r\n\r\n    transform(col: any, rowData: any, groupFooter = false, footer = false): any {\r\n        if (rowData && col && col.field) {\r\n            const value = Utils.getValue(col.field, rowData);\r\n            if (col.editor && col.editor.options && col.editor.options.isPassword && !col.formatter) {\r\n                return  value ? '******' : '';\r\n            }\r\n\r\n            let formatterFn = col.formatter;\r\n            if (groupFooter) {\r\n                formatterFn = col.groupFooter ? col.groupFooter.formatter : undefined;\r\n            } else if (footer) {\r\n                formatterFn = col.footer ? col.footer.formatter : undefined;\r\n                if (typeof formatterFn === 'object') {\r\n                    if (!formatterFn.options) {\r\n                        const opts = { type: formatterFn.type, options: formatterFn };\r\n                        formatterFn = opts;\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (!formatterFn) {\r\n                let resoultStr = value;\r\n                if (col.isMultilingualField) {\r\n                    resoultStr = this.getMultilingualValue(value);\r\n                } else {\r\n                    if (value !== null && value !== undefined && value !== '0' && typeof value === 'string') {\r\n                        if (value.indexOf('\\n') > -1) {\r\n                            // return value.replace(/\\n/g, '<br>');\r\n                            this.getDatagridInstance();\r\n                            if (this.dataGrid && this.dataGrid.nowrap) {\r\n                                resoultStr = value.replace(/\\n/g, ' ');\r\n                            }\r\n                        }\r\n                    }\r\n                    // value.replace(/ /g, '&ensp;');\r\n                }\r\n                return this.setPlaceHolderWhenEnableEditCellStyle(col, resoultStr, rowData, groupFooter || footer);\r\n            } else {\r\n                if (formatterFn) {\r\n                    if ( formatterFn.type === 'number') {\r\n                        if (!formatterFn.options || !Object.keys(formatterFn.options).length ) {\r\n                            formatterFn.options = {\r\n                                thousand: ',',\r\n                                precision: 2\r\n                            };\r\n                        }\r\n                    }\r\n                    if ( formatterFn.type === 'datetime') {\r\n                        if (formatterFn.options) {\r\n                            if (col.editor && col.editor.options) {\r\n                                const { dateRange, dateRangeDatesDelimiter } = col.editor.options;\r\n                                formatterFn.options = Object.assign({ dateRange, dateRangeDatesDelimiter }, formatterFn.options);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n\r\n\r\n                this.getDatagridInstance();\r\n                if (this.dataGrid) {\r\n                    const r = this.cfs.format(value, rowData, formatterFn, { utils: this.dataGrid.commonUtils });\r\n                    return this.setPlaceHolderWhenEnableEditCellStyle(col, r, rowData, groupFooter || footer);\r\n                } else {\r\n                    return value;\r\n                }\r\n            }\r\n        }\r\n\r\n        return '';\r\n    }\r\n\r\n    // è·åå¤è¯­æ°æ®\r\n    private getMultilingualValue(valObj) {\r\n        if (valObj && typeof valObj === 'object' && Object.keys(valObj).length > 0) {\r\n            if (this.injector) {\r\n                this.localeService = this.injector.get(LocaleService);\r\n            }\r\n            if (this.localeService) {\r\n                const localeId = this.localeService.localeId;\r\n                return Utils.getMultilingualValue(valObj, localeId);\r\n            } else {\r\n                console.log('please install @farris/ui-datagrid@latest.');\r\n                return valObj['zh-CHS'];\r\n            }\r\n        } else {\r\n            return '';\r\n        }\r\n    }\r\n\r\n    // å¯ç¨æ è¯å¯ç¼è¾ååæ ¼æ¶ï¼åå®¹ä¸ºç©ºæ¶è®¾ç½®æç¤ºè¯­\r\n    private setPlaceHolderWhenEnableEditCellStyle(col, val, rowData, isFooter) {\r\n        this.getDatagridInstance();\r\n        if (this.dataGrid) {\r\n            if (!this.dataGrid.editable || (val !== null && val !== undefined && val !== '') || isFooter || this.cellIsReadOnly(col, rowData)) {\r\n                if (this.elRef) {\r\n                    const span = this.elRef.nativeElement.querySelector('.cell-text-box');\r\n                    if (span && span.className.indexOf('cell-empty') > -1) {\r\n                        span.className = span.className.replace('cell-empty', ' ');\r\n                    }\r\n                }\r\n\r\n                return val;\r\n            }\r\n\r\n            if (this.dataGrid.enableEditCellStyle ) {\r\n                if (this.elRef) {\r\n                    const span = this.elRef.nativeElement.querySelector('.cell-text-box');\r\n                    if (span && span.className.indexOf('cell-empty') === -1) {\r\n                        span.className = span.className + ' cell-empty';\r\n                    }\r\n                }\r\n                return Utils.getWhenEmptyText(col, this.localeId);\r\n            }\r\n        }\r\n\r\n        return val;\r\n    }\r\n\r\n    private getDatagridInstance() {\r\n        if (!this.dataGrid) {\r\n            this.dataGrid = this.injector.get(DatagridComponent, null);\r\n        }\r\n\r\n        if (!this.elRef) {\r\n            this.elRef = this.injector.get(ElementRef, null);\r\n        }\r\n    }\r\n\r\n    cellIsReadOnly(col: DataColumn, rowData) {\r\n        return this.dataGrid.cellIsReadOnly(col, rowData);\r\n    }\r\n}\r\n","\r\nimport { first, switchMap, delay, debounceTime, tap } from 'rxjs/operators';\r\nimport { Subscription, interval, of } from 'rxjs';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-12 07:47:12\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-26 10:21:25\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport {\r\n    Component, OnInit, Input, ViewChild, Renderer2,\r\n    ElementRef, OnDestroy, ChangeDetectorRef, AfterViewInit, AfterViewChecked,\r\n    OnChanges, SimpleChanges, ChangeDetectionStrategy, NgZone, Injector, forwardRef, Inject, Optional, ApplicationRef, HostListener, Output, EventEmitter\r\n} from '@angular/core';\r\n\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\nimport { ScrollbarDirective } from '../../scrollbar/scrollbar.directive';\r\nimport { ColumnGroup } from '../../types';\r\nimport { SelectedRow, DataResult, ROW_INDEX_FIELD, IS_GROUP_ROW_FIELD, GROUP_ROW_FIELD, IS_GROUP_FOOTER_ROW_FIELD } from '../../services/state';\r\nimport { SCROLL_X_ACTION, SCROLL_Y_ACTION, SCROLL_X_REACH_START_ACTION, SCROLL_X_REACH_END_ACTION, TR_PREFIX } from '../../types/constant';\r\nimport { DatagridService } from '../../services/datagrid.service';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { FormatCellDataPipe } from '../../utils/format-cell-data.pipe';\r\nimport { ColumnFormatService } from '@farris/ui-common/column';\r\nimport { ContextMenuItem } from '@farris/ui-context-menu';\r\n@Component({\r\n    selector: 'datagrid-body',\r\n    templateUrl: './body.component.html',\r\n    changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DatagridBodyComponent implements OnInit, OnDestroy, OnChanges, AfterViewInit, AfterViewChecked {\r\n    // èªå¨é«åº¦æ¶ï¼ç¦ç¨çºµåæ»å¨æ¡\r\n    psConfig = { swipeEasing: false, minScrollbarLength: 15, handlers: ['click-rail', 'drag-thumb', 'wheel', 'touch'], suppressScrollY: this.dg.autoHeight };\r\n\r\n    top: number;\r\n    height: number;\r\n    width: number;\r\n    colsWidth: number;\r\n    totalWidth: number;\r\n    leftFixedWidth: number;\r\n    rightFixedWidth: number;\r\n    rowHeight: number;\r\n    bodyStyle: any;\r\n    scrollTop = 0;\r\n    scrollLeft = 0;\r\n    deltaTopHeight = 0;\r\n    // wheelHeight = 0;\r\n    wheelWidth = 0;\r\n    private _fixedRightScrollLeft = 0;\r\n    get fixedRightScrollLeft() {\r\n        return this._fixedRightScrollLeft;\r\n    }\r\n    set fixedRightScrollLeft(val) {\r\n        // this._fixedRightScrollLeft = this.dg.scrollBarShowMode === 'allways' ?  val - 18 : val;\r\n        this._fixedRightScrollLeft = val;\r\n    }\r\n\r\n    maxScrollLeft = 0;\r\n    showRightShadow = false;\r\n    @Input() footerHeight = 0;\r\n    @Input() canvasWidth;\r\n    @Input() columnsGroup: ColumnGroup;\r\n    // èæå è½½\r\n    @Input() topHideHeight = 0;\r\n    @Input() bottomHideHeight = 0;\r\n\r\n    @Input() startRowIndex = 0;\r\n    @Input() data: any;\r\n\r\n    @Output() dataChange = new EventEmitter();\r\n\r\n    @Input() scrollBarMode = 'auto';\r\n    @Input() contextMenuItems: ContextMenuItem[];\r\n\r\n    @Input() checkedRows = [];\r\n    @ViewChild('ps') ps?: ScrollbarDirective;\r\n    @ViewChild('mainRows') tableRowsCmp: any;\r\n    @ViewChild('rightRows') rightRowsCmp: any;\r\n    @ViewChild('fixedLeft') fixedLeftEl: ElementRef;\r\n    @ViewChild('fixedRight') fixedRightEl: ElementRef;\r\n    @ViewChild('main') mainArea: ElementRef;\r\n    @ViewChild('viewScrollContainer') viewScrollContainer: ElementRef;\r\n\r\n\r\n    visibleContextMenus = [];\r\n\r\n    currentRowId = undefined;\r\n\r\n    private _hoverRowIndex = -1;\r\n    get hoverRowIndex(): number {\r\n        return this._hoverRowIndex;\r\n    }\r\n    set hoverRowIndex(rowIdx: number) {\r\n        this._hoverRowIndex = rowIdx;\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    get selectedRows() {\r\n        return this.dg.selections;\r\n    }\r\n\r\n    private gridSizeSubscribe: Subscription;\r\n    private columnResizeSubscribe: Subscription;\r\n    private onDataSourceChangeSubscribe: Subscription;\r\n    private selectRowSubscribe: Subscription;\r\n    private unselectRowSubscribe: Subscription;\r\n    private selectAllSubscribe: Subscription;\r\n    private checkRowSubscribe: Subscription;\r\n    private clearSelectionsSubscribe: Subscription;\r\n    private checkAllSubscribe: Subscription;\r\n    private uncheckRowSubscribe: Subscription;\r\n    private clearCheckedsSubscribe: Subscription;\r\n\r\n    private subscriptions = [];\r\n\r\n    public dfs: DatagridFacadeService;\r\n    public dgs: DatagridService;\r\n    public ngZone: NgZone;\r\n    public render: Renderer2;\r\n\r\n    ///////////////////////////////////////////////////////////////////////////\r\n    private viewportH;\r\n    viewportW;\r\n    canvasHeight;\r\n    private minRowBuffer = 3;\r\n    private vScrollDir = 1;\r\n    private rowsCache = {};\r\n    private lastRenderedScrollTop = 0;\r\n    private lastRenderedScrollLeft = 0;\r\n    prevScrollTop = 0;\r\n    prevScrollLeft = 0;\r\n    rows = [];\r\n    blankTopHeight = 0;\r\n    blankBottomHeight = 0;\r\n    //////////////////////////////////////////////////////////////////////////\r\n\r\n    get scrollbarXHeight() {\r\n        if (this.dg && this.ps && this.ps.instance) {\r\n            const h = this.dg.scrollBarShowMode === 'allways' && this.ps.instance['scrollbarXActive'] ? 22 : 0;\r\n            if (this.ps.instance['scrollbarYActive'] && h) {\r\n                return h + 18;\r\n            }\r\n        }\r\n    }\r\n    get scrollbarYWidth() {\r\n        if (this.dg && this.ps && this.ps.instance) {\r\n            return this.dg.scrollBarShowMode === 'allways' && this.ps.instance['scrollbarYActive'] && this.showRightShadow ? 18 : 0;\r\n        }\r\n    }\r\n\r\n    cellContentFormatter: FormatCellDataPipe = null;\r\n\r\n    // å½å¯ç¨å¤éä¸åè®¸å¤éä¸­ï¼åè¡¨ä¸è½ç¼è¾æ¶ï¼åéä¸­åç¦æ­¢è§¦åbody çclick äºä»¶\r\n    private __triggerBodyClickEvent = true;\r\n\r\n    constructor(\r\n        private injector: Injector,\r\n        private app: ApplicationRef,\r\n        @Optional() public dg: DatagridComponent,\r\n        private cd: ChangeDetectorRef, private el: ElementRef\r\n    ) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dgs = this.injector.get(DatagridService);\r\n        this.ngZone = this.injector.get(NgZone);\r\n        this.render = this.injector.get(Renderer2);\r\n\r\n        const columnFormatService = this.injector.get(ColumnFormatService);\r\n        this.cellContentFormatter = new FormatCellDataPipe(columnFormatService, this.injector);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n\r\n        this.listenSubjects();\r\n        this.dg.scrollInstance = this.ps;\r\n        const s1 = this.dgs.showGridHeader.subscribe(headerHeight => {\r\n            this.updateContainerSize(headerHeight);\r\n        });\r\n        this.subscriptions.push(s1);\r\n\r\n        const s10 = this.dgs.footerPositionChanged.subscribe(() => {\r\n            this.updateContainerSize();\r\n        });\r\n        this.subscriptions.push(s10);\r\n\r\n        const s2 = this.dgs.rowHeightChanged.subscribe(() => {\r\n            this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(s2);\r\n\r\n        const s3 = this.dfs.clientSort$.subscribe(() => {\r\n            this.checkScrollbarPosition(true);\r\n            this.cd.detectChanges();\r\n            // this.dg.columnSorted.emit();\r\n        });\r\n        this.subscriptions.push(s3);\r\n\r\n        const s5 = this.dg.dgs.columnsChanged.pipe(\r\n            delay(100)\r\n        ).subscribe((e: any) => {\r\n            if (e && e.scrollToLeft) {\r\n                this.ps.elementRef.nativeElement.scrollTo(0, 0);\r\n                this.ps.scrollToLeft(0, 100);\r\n            }\r\n        });\r\n        this.subscriptions.push(s5);\r\n        this.viewScrollContainer.nativeElement.addEventListener('click', this.onMouseClick.bind(this));\r\n    }\r\n\r\n    private updateContainerSize(headerHeight?: any) {\r\n        const hh = headerHeight || this.dg.realHeaderHeight;\r\n        this.setPositionTop(hh);\r\n        this.height = this.dg.height - this.top;\r\n        this.bodyStyle = this.getBodyStyle();\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.data && !changes.data.isFirstChange()) {\r\n            this.bodyStyle = this.getBodyStyle();\r\n            this.dfs.setCurrentPageData(changes.data.currentValue);\r\n            this.onDataChanged();\r\n        }\r\n\r\n        if (changes.footerHeight !== undefined && !changes.footerHeight.isFirstChange()) {\r\n            this.bodyStyle = this.getBodyStyle();\r\n        }\r\n\r\n        if (changes.scrollBarMode !== undefined && !changes.scrollBarMode.isFirstChange()) {\r\n            if (this.ps && this.ps.instance && this.scrollBarMode === 'allways' && this.ps.instance.scrollbarYActive) {\r\n                this.rightFixedWidth += this.showRightShadow ? 18 : 0;\r\n            } else {\r\n                this.rightFixedWidth = this.columnsGroup.rightFixedWidth;\r\n            }\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.destroySubscriptions();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n    ngAfterViewChecked() {\r\n    }\r\n\r\n    private setPositionTop(headerHeight: number) {\r\n        this.top = headerHeight;\r\n        if ((this.dg.enableFilterRow || this.dg.enableSmartFilter) && this.dg.showFilterBar) {\r\n            this.top += this.dg.filterBarHeight;\r\n        }\r\n\r\n        if (this.dg.showRowGroupPanel) {\r\n            this.top += this.dg.rowGroupPanelHeight;\r\n        }\r\n\r\n        if (this.dg.showFooter && (this.dg.footerPosition === 'top' || this.dg.footerPosition === 'both')) {\r\n            this.top += this.dg.footerHeight;\r\n        }\r\n    }\r\n\r\n    private checkScrollbarPosition(toTop = false) {\r\n        if (!this.dg.data || !this.dg.data.length) {\r\n            return;\r\n        }\r\n        const scrollBar: any = this.ps.instance;\r\n        const scrollElRef = this.ps.elementRef.nativeElement;\r\n        // scrollBar.update();\r\n        const lastScrollLeft = scrollBar ? scrollBar.lastScrollLeft : 0;\r\n        const lastScrollTop = scrollBar ? scrollBar.lastScrollTop : 0;\r\n\r\n        // const lastScrollLeft = this.scrollLeft;\r\n        // const lastScrollTop = this.scrollTop;\r\n\r\n        const scrollTop = scrollElRef.scrollTop;\r\n        const scrollLeft = scrollElRef.scrollLeft;\r\n\r\n        if (!toTop) {\r\n            if (scrollTop != lastScrollTop) {\r\n                this.ps.scrollToTop(lastScrollTop);\r\n                this.dgs.onScrollMove(lastScrollTop, SCROLL_Y_ACTION);\r\n            }\r\n        } else {\r\n            this.ps.scrollToTop();\r\n            this.dgs.onScrollMove(lastScrollTop, SCROLL_Y_ACTION);\r\n        }\r\n\r\n        this.scrollLeft = lastScrollLeft;\r\n        if (scrollLeft != lastScrollLeft) {\r\n            this.ps.scrollToX(lastScrollLeft);\r\n            this.dgs.onScrollMove(lastScrollLeft, SCROLL_X_ACTION);\r\n        } else {\r\n            if (lastScrollLeft) {\r\n                this.dgs.onScrollMove(lastScrollLeft, SCROLL_X_ACTION);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * æ°æ®åçååï¼éæ°å è½½æ°æ®æ¶æ§è¡\r\n     * éç½®æ»å¨æ¡ä½ç½®\r\n     */\r\n    private onDataChanged() {\r\n        this.dg.setPagerHeight();\r\n        this.viewportH = this.getViewPortHeight();\r\n        this.bodyStyle = this.getBodyStyle();\r\n\r\n        /**\r\n         * update:\r\n         * node_modules\\perfect-scrollbar\\types\\perfect-scrollbar.d.ts\r\n         * lastScrollTop: number\r\n         */\r\n        if (this.ps && this.ps.instance && !this.dg.isEditing() && !this.dg.clientFilterChanged && !this.dg.autoHeight) {\r\n            this.scrollTop = 0;\r\n            this.lastRenderedScrollTop = 0;\r\n            this.ps.scrollToTop();\r\n            this.scrollLeft = 0;\r\n            this.ps.scrollToLeft();\r\n        }\r\n\r\n        this.rowsCache = {};\r\n        const keepscrollPos = () => {\r\n            const scrollInfo = this.dg.dfs.getState().scrollInfo;\r\n            if (scrollInfo) {\r\n                if (scrollInfo.y) {\r\n                    this.scrollTop = scrollInfo.y;\r\n                    this.dg.scrollInstance.scrollToY(scrollInfo.y);\r\n                    this.dgs.onScrollMove(scrollInfo.y, SCROLL_Y_ACTION);\r\n                }\r\n\r\n                if (scrollInfo.x) {\r\n                    this.scrollLeft = scrollInfo.x;\r\n                    this.dg.scrollInstance.scrollToX(scrollInfo.x);\r\n                    this.dg.dgs.onScrollMove(scrollInfo.x, SCROLL_X_ACTION);\r\n                }\r\n            }\r\n        };\r\n\r\n        if (!this.dg.nowrap || this.dg.autoHeight) {\r\n            this.renderData(false);\r\n            setTimeout(() => {\r\n                this.updateRowHeight();\r\n            }, 100);\r\n        } else {\r\n            keepscrollPos();\r\n            this.renderData(false);\r\n            this.ps.update();\r\n        }\r\n        this.dg.initSelectOrChecked();\r\n        this.dg.clientFilterChanged = false;\r\n        this.dataChange.emit(this.data);\r\n    }\r\n\r\n    private destroySubscriptions() {\r\n        if (this.subscriptions && this.subscriptions.length) {\r\n            this.subscriptions.forEach((sub: Subscription) => {\r\n                if (sub) {\r\n                    sub.unsubscribe();\r\n                    sub = null;\r\n                }\r\n            });\r\n\r\n            this.subscriptions = [];\r\n        }\r\n    }\r\n\r\n    private listenSubjects() {\r\n        this.destroySubscriptions();\r\n\r\n        this.gridSizeSubscribe = this.dfs.gridSize$.pipe(\r\n            debounceTime(50)\r\n        ).subscribe(state => {\r\n            if (state) {\r\n                this.dg.setPagerHeight();\r\n                const hh = this.dg.setHeaderHeight();\r\n                this.setPositionTop(hh);\r\n\r\n                this.height = state.height - this.top;\r\n                this.width = Math.floor(state.width);\r\n                this.rowHeight = state.rowHeight;\r\n\r\n                if (this.dg.showBorder) {\r\n                    this.width -= 2;\r\n                }\r\n\r\n                this.viewportW = this.width;\r\n                this.viewportH = this.getViewPortHeight();\r\n                this.canvasHeight = this.getCanvasHeight();\r\n\r\n                this.ngZone.runOutsideAngular(() => {\r\n\r\n                    this.checkScrollbarPosition();\r\n\r\n                    this.updateColumnSize(state.columnsGroup);\r\n                    this.cd.detectChanges();\r\n\r\n                    this.scrollLeft = this.ps.elementRef.nativeElement.scrollLeft;\r\n\r\n                    this.maxScrollLeft = this.colsWidth + this.leftFixedWidth;\r\n                    // grid å®¹å¨å®½åº¦\r\n                    const dgContainerWidth = this.dg.dgContainer.nativeElement.offsetWidth;\r\n                    // ææåå®½ä¹å\r\n                    const allColsWidth = Math.floor(this.columnsGroup.totalWidth);\r\n                    // å³ä¾§åºå®åçä½ç½®\r\n                    this.fixedRightScrollLeft = this.width - this.rightFixedWidth + this.scrollLeft;\r\n\r\n                    this.bodyStyle = this.getBodyStyle();\r\n                    if (dgContainerWidth > allColsWidth || dgContainerWidth === allColsWidth) {\r\n                        this.showRightShadow = false;\r\n                        this.fixedRightScrollLeft = this.maxScrollLeft;\r\n                    } else {\r\n                        this.showRightShadow = true;\r\n                    }\r\n\r\n                    this.renderData(false);\r\n                    if (!this.dg.nowrap || this.dg.autoHeight) {\r\n                        let _timer = null;\r\n                        if (_timer) {\r\n                            _timer.clearTimeout();\r\n                        }\r\n\r\n                        _timer = setTimeout(() => {\r\n                            this.updateRowHeight();\r\n                            this.ps.update();\r\n                        }, 100);\r\n                    } else {\r\n                        if (!this.cd['destroyed']) {\r\n                            this.ps.update();\r\n                            this.cd.detectChanges();\r\n                        }\r\n                    }\r\n                    // this.ps.update();\r\n                    this.dgs.showFixedShadow.emit({ showRightShadow: this.showRightShadow, x: this.fixedRightScrollLeft });\r\n                });\r\n\r\n                if (this.scrollBarMode === 'allways') {\r\n                    setTimeout(() => {\r\n                        this.updateColumnSize(this.columnsGroup);\r\n                        this.dgs.scrollbarUpdate.emit({ scrollbarRef: this.ps.instance });\r\n                    }, 50);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.subscriptions.push(this.gridSizeSubscribe);\r\n\r\n        this.columnResizeSubscribe = this.dfs.columnResize$.subscribe((cg: ColumnGroup) => {\r\n            this.updateColumnSize(cg);\r\n            this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.columnResizeSubscribe);\r\n\r\n        this.dgs.setSelecedRow.subscribe((r: any) => {\r\n            if (r && r.selected) {\r\n                this.currentRowId = r.id;\r\n            } else {\r\n                this.currentRowId = undefined;\r\n            }\r\n        });\r\n        this.selectRowSubscribe = this.dfs.selectRow$.subscribe((row: SelectedRow) => {\r\n            if (row) {\r\n                this.currentRowId = row.id;\r\n                // 20210817 æ¹åé®ç§»å¨åå·æ°è§å¾ç¶æ\r\n                this.cd.detectChanges();\r\n            }\r\n        });\r\n        this.subscriptions.push(this.selectRowSubscribe);\r\n\r\n        this.unselectRowSubscribe = this.dfs.unSelectRow$.subscribe((prevRow: SelectedRow) => {\r\n            if (prevRow && prevRow.id === this.currentRowId) {\r\n                this.currentRowId = undefined;\r\n                this.dg.selectedRow = null;\r\n            }\r\n\r\n            if (!this.dg.editable && this.dg.multiSelect) {\r\n                this.__triggerBodyClickEvent = this.dg.selectionMode === 'default';\r\n            }\r\n\r\n            this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.unselectRowSubscribe);\r\n\r\n        this.selectAllSubscribe = this.dfs.selectAll$.subscribe((rows: SelectedRow[]) => {\r\n            this.dg.selectAll.emit(rows);\r\n            this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.selectAllSubscribe);\r\n\r\n        this.checkRowSubscribe = this.dfs.checkRow$.subscribe((row: SelectedRow) => {\r\n            this.dg.checked.emit(row);\r\n            this.checkedRowsChanged();\r\n            // this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.checkRowSubscribe);\r\n\r\n        this.clearSelectionsSubscribe = this.dfs.clearSelections$.subscribe(() => {\r\n            this.currentRowId = undefined;\r\n            if (this.dg.checkOnSelect) {\r\n                this.checkedRowsChanged();\r\n            }\r\n            this.dg.unSelectAll.emit();\r\n        });\r\n        this.subscriptions.push(this.clearSelectionsSubscribe);\r\n\r\n        this.uncheckRowSubscribe = this.dfs.unCheckRow$.subscribe((prevRow: SelectedRow) => {\r\n            this.dg.unChecked.emit(prevRow);\r\n            this.checkedRowsChanged();\r\n            // this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.uncheckRowSubscribe);\r\n\r\n        this.checkAllSubscribe = this.dfs.checkAll$.subscribe((rows: SelectedRow[]) => {\r\n            this.dg.checkAll.emit(rows);\r\n            this.checkedRowsChanged();\r\n            // this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.checkAllSubscribe);\r\n\r\n        this.clearCheckedsSubscribe = this.dfs.clearCheckeds$.subscribe((rows: SelectedRow[]) => {\r\n            if (this.dg.selectOnCheck) {\r\n                this.currentRowId = undefined;\r\n            }\r\n            this.dg.unCheckAll.emit(rows);\r\n            this.checkedRowsChanged();\r\n            this.cd.detectChanges();\r\n        });\r\n        this.subscriptions.push(this.clearCheckedsSubscribe);\r\n\r\n        this.subscriptions.push(this.dgs.setScrollbarPosition.subscribe(() => {\r\n            this.checkScrollbarPosition();\r\n            this.updateScrollPosition(this.scrollLeft);\r\n        }));\r\n\r\n        this.dgs.columnResized.pipe(\r\n            delay(100)\r\n        ).subscribe((e: any) => {\r\n            if (!this.dg.nowrap ||\r\n                (this.dg.currentCell && this.dg.currentCell.isEditing && this.dg.currentCell.column &&\r\n                    this.dg.currentCell.column.editor && this.dg.currentCell.column.editor.type === 'textarea')) {\r\n                const trdoms = this.dg.dgContainer.nativeElement.querySelectorAll('.f-datagrid-body-row:not(f-datagrid-footer-row)');\r\n                trdoms.forEach(n => n.style.height = 'auto');\r\n\r\n                let trID = '';\r\n                if (e) {\r\n                    const rowId = e.id;\r\n                    trID = TR_PREFIX + rowId;\r\n                }\r\n\r\n                this.updateRowHeight(trID);\r\n                // trdoms.forEach(n => n.style.height = '');\r\n            }\r\n\r\n            if (this.dg.headerWrap) {\r\n                this.dg.setHeaderHeight();\r\n                this.dfs.columnResizeEnd();\r\n            }\r\n\r\n        });\r\n\r\n        this.dgs.cellContentWrapChanged.pipe(\r\n            delay(100)\r\n        ).subscribe(() => {\r\n            this.updateRowHeight();\r\n        });\r\n\r\n\r\n        this.dg.dfs.rowUpdate$.subscribe((row: { index: number, data: any }) => {\r\n            if (row && row.data) {\r\n                this.buildCustomCellStyle(row);\r\n            }\r\n        });\r\n    }\r\n\r\n    private buildCustomCellStyle(row: { index: number, data: any }) {\r\n\r\n        let rightTrs = [];\r\n        let leftTrs = [];\r\n        if (this.fixedRightEl) {\r\n            rightTrs = this.fixedRightEl.nativeElement.querySelectorAll('tr');\r\n        }\r\n\r\n        if (this.fixedLeftEl) {\r\n            leftTrs = this.fixedLeftEl.nativeElement.querySelectorAll('.fixed-left-row');\r\n        }\r\n\r\n        const trs = this.mainArea.nativeElement.querySelectorAll('tr.f-datagrid-body-row');\r\n\r\n        const updateCellStyle = (arr, col, style) => {\r\n            if (arr.length) {\r\n                const td = arr[row.index].querySelector(`[field=\"${col.field}\"]`);\r\n                if (td) {\r\n                    this.dg.renderCustomStyle(style, td);\r\n                }\r\n            }\r\n        };\r\n\r\n        this.dg.flatColumns.forEach(col => {\r\n            if (col.styler) {\r\n                const _rd = row.data;\r\n                const cs = col.styler(_rd[col.field], _rd, row.index);\r\n                if (cs && Object.keys(cs).length) {\r\n                    updateCellStyle(leftTrs, col, cs);\r\n                    updateCellStyle(rightTrs, col, cs);\r\n                    updateCellStyle(trs, col, cs);\r\n                }\r\n            }\r\n        });\r\n    }\r\n\r\n    private checkedRowsChanged() {\r\n        this.dgs.onCheckedRowsCountChange();\r\n        const checkedRows = this.dg.checkeds;\r\n        this.dg.checkValues = checkedRows.map(r => r.id);\r\n        this.dg.checkValuesChange.emit(this.dg.checkValues);\r\n        this.dg.checkedChange.emit(checkedRows);\r\n    }\r\n\r\n    private getTrDomHeight() {\r\n        const list = [];\r\n        let rightTrs = [];\r\n        let leftTrs = [];\r\n        let trdoms = [];\r\n        if (this.fixedRightEl) {\r\n            rightTrs = this.fixedRightEl.nativeElement.querySelectorAll('tr');\r\n        }\r\n\r\n        if (this.fixedLeftEl) {\r\n            leftTrs = this.fixedLeftEl.nativeElement.querySelectorAll('.fixed-left-row');\r\n        }\r\n\r\n        if (this.mainArea) {\r\n            trdoms = this.mainArea.nativeElement.querySelectorAll('tr.f-datagrid-body-row');\r\n        }\r\n        trdoms.forEach((tr, i) => {\r\n            let t1 = 0;\r\n            const t2 = Math.ceil(tr.offsetHeight);\r\n            let t3 = 0;\r\n            if (leftTrs && leftTrs.length) {\r\n                t1 = Math.ceil(leftTrs[i].offsetHeight);\r\n            }\r\n\r\n            if (rightTrs && rightTrs.length) {\r\n                t3 = Math.ceil(rightTrs[i].offsetHeight);\r\n            }\r\n\r\n            const _h = Math.max(t1, t2, t3, this.dg.rowHeight);\r\n            list.push(_h);\r\n        });\r\n        return list;\r\n    }\r\n    /** åè®¸æ°æ®æè¡æ¶ï¼è®¡ç®è¡å·çè¡é« */\r\n    updateRowHeight(trDomId = null) {\r\n        if (!this.mainArea) {\r\n            return;\r\n        }\r\n\r\n        const dgBody = this.el.nativeElement.querySelector('div.f-datagrid-body');\r\n        if (dgBody) {\r\n            if (!this.dg.nowrap || this.dg.autoHeight) {\r\n                this.render.addClass(dgBody, 'data-wrap');\r\n            } else {\r\n                this.render.removeClass(dgBody, 'data-wrap');\r\n            }\r\n        }\r\n\r\n        let cssTextArr = [];\r\n\r\n        if (!trDomId) {\r\n            this.rows.forEach((r, i) => {\r\n                const rowId = this.dfs.primaryId(r);\r\n                const trID = TR_PREFIX + rowId;\r\n                const leftTrId = trID + '_fixedleft';\r\n                const rightTrId = trID + '_fixedright';\r\n\r\n                if (!this.dg.nowrap || this.dg.autoHeight) {\r\n                    const list = this.getTrDomHeight();\r\n                    const h = list[i];\r\n\r\n                    cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body.data-wrap #${leftTrId}{ height: ${h}px }`);\r\n                    cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body.data-wrap #${trID}{ height: ${h}px }`);\r\n                    cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body.data-wrap #${rightTrId}{ height: ${h}px }`);\r\n                } else {\r\n                    // cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body #${leftTrId}{ height: ${list[i]}px }`);\r\n                    // cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body #${trID}{ height: ${list[i]}px }`);\r\n                    // cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body #${rightTrId}{ height: ${list[i]}px }`);\r\n                    const key1 = `${this.dg.customStyleKey()} .f-datagrid-body #${leftTrId}`;\r\n                    const key2 = `${this.dg.customStyleKey()} .f-datagrid-body #${trID}`;\r\n                    const key3 = `${this.dg.customStyleKey()} .f-datagrid-body #${rightTrId}`;\r\n\r\n                    this.dgs.removeCssRule(key1);\r\n                    this.dgs.removeCssRule(key2);\r\n                    this.dgs.removeCssRule(key3);\r\n\r\n                }\r\n            });\r\n\r\n            this.dgs.appendCssRules(cssTextArr);\r\n        } else {\r\n            cssTextArr = [];\r\n            const domSel = '#' + trDomId;\r\n            const _arr = [];\r\n            if (this.fixedRightEl) {\r\n                const rtr = this.fixedRightEl.nativeElement.querySelector(domSel);\r\n                if (rtr) {\r\n                    _arr.push(Math.ceil(rtr.offsetHeight));\r\n                }\r\n            }\r\n\r\n            if (this.fixedLeftEl) {\r\n                const ltr = this.fixedLeftEl.nativeElement.querySelector(domSel);\r\n                if (ltr) {\r\n                    _arr.push(Math.ceil(ltr.offsetHeight));\r\n                }\r\n            }\r\n\r\n            if (this.mainArea) {\r\n                const tr = this.mainArea.nativeElement.querySelector(domSel);\r\n                if (tr) {\r\n                    _arr.push(Math.ceil(tr.offsetHeight));\r\n                }\r\n            }\r\n\r\n            const _h = Math.max(..._arr);\r\n\r\n            const leftTrId = trDomId + '_fixedleft';\r\n            const rightTrId = trDomId + '_fixedright';\r\n            if (!this.dg.nowrap || this.dg.autoHeight) {\r\n                cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body.data-wrap #${leftTrId}{ height: ${_h}px;}`);\r\n                cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body.data-wrap #${trDomId}{ height: ${_h}px;}`);\r\n                cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body.data-wrap #${rightTrId}{ height: ${_h}px;}`);\r\n            } else {\r\n                cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body #${leftTrId}{ height: ${_h}px }`);\r\n                cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body #${trDomId}{ height: ${_h}px }`);\r\n                cssTextArr.push(`${this.dg.customStyleKey()} .f-datagrid-body #${rightTrId}{ height: ${_h}px }`);\r\n            }\r\n\r\n            this.dgs.appendCssRules(cssTextArr);\r\n        }\r\n\r\n        this.updateCanvasHeight();\r\n\r\n        // ç§»é¤height: auto\r\n        const trdoms = this.dg.dgContainer.nativeElement.querySelectorAll('.f-datagrid-body-row:not(f-datagrid-footer-row)');\r\n        trdoms.forEach(n => n.style.height = '');\r\n\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n    }\r\n\r\n    private updateColumnSize(cg: ColumnGroup) {\r\n        if (cg) {\r\n            this.columnsGroup = cg;\r\n            this.leftFixedWidth = this.columnsGroup.leftFixedWidth;\r\n            this.rightFixedWidth = this.columnsGroup.rightFixedWidth;\r\n\r\n            if (this.ps && this.ps.instance && this.dg.scrollBarShowMode === 'allways' && this.ps.instance.scrollbarYActive) {\r\n                this.rightFixedWidth += this.showRightShadow ? 18 : 0;\r\n            }\r\n\r\n            this.colsWidth = this.columnsGroup.normalWidth; // + (this.showRightShadow ? 18 : 0);\r\n\r\n            this.totalWidth = this.columnsGroup.totalWidth;\r\n            if (this.scrollBarMode === 'allways' && !this.rightRowsCmp && !this.dg.useControlPanel) {\r\n                this.totalWidth += 18;\r\n            }\r\n        }\r\n    }\r\n\r\n    private getBodyStyle() {\r\n        let h = this.getViewPortHeight();\r\n        if (!this.data.length) {\r\n            if (this.dg.autoHeight) {\r\n                h = this.dg.emptyDataHeight;\r\n            }\r\n\r\n            if (this.dg.footerData && this.dg.showFooter) {\r\n                let fd = this.dg.footerData;\r\n                if (this.dg.footerData.subscribe) {\r\n                    fd = this.dg.footerData['value'];\r\n                }\r\n\r\n                if (fd && Array.isArray(fd) && fd.length) {\r\n                    h = h - this.dg.footerHeight;\r\n                }\r\n            }\r\n        } else {\r\n            if (this.dg.showFooter && this.dg.footerPosition === 'both') {\r\n                h = h - this.dg.footerHeight;\r\n            }\r\n        }\r\n        return {\r\n            height: `${Math.floor(h)}px`\r\n        };\r\n    }\r\n\r\n    private updateScrollPosition(scrollLeft: any) {\r\n        this.scrollLeft = scrollLeft;\r\n\r\n        this.fixedRightScrollLeft = this.scrollLeft + this.width - this.rightFixedWidth;\r\n        if (this.fixedRightScrollLeft === this.maxScrollLeft || this.fixedRightScrollLeft > this.maxScrollLeft) {\r\n            this.fixedRightScrollLeft = this.maxScrollLeft;\r\n            this.showRightShadow = false;\r\n        } else {\r\n            this.showRightShadow = true;\r\n        }\r\n\r\n        if (this.fixedLeftEl) {\r\n            this.render.setStyle(this.fixedLeftEl.nativeElement, 'transform', `translate3d(${this.scrollLeft}px, 0px, 0px)`);\r\n        }\r\n\r\n        if (this.fixedRightEl) {\r\n            this.render.setStyle(this.fixedRightEl.nativeElement, 'transform', `translate3d(${this.fixedRightScrollLeft}px, 0px, 0px)`);\r\n        }\r\n    }\r\n\r\n    onScrollToX($event: any) {\r\n        const x = $event.target.scrollLeft;\r\n        this.updateScrollPosition(x);\r\n        // this.cd.detectChanges();\r\n        this.dgs.onScrollMove(x, SCROLL_X_ACTION);\r\n        this.dgs.showFixedShadow.emit({ showRightShadow: this.showRightShadow, x: this.fixedRightScrollLeft });\r\n    }\r\n\r\n    onScrollToY($event: any) {\r\n        const y = $event.target.scrollTop;\r\n\r\n        if (this.dg.virtualized) {\r\n            this.handleScroll();\r\n        }\r\n\r\n        this.scrollTop = y;\r\n\r\n        this.dg.scrollY.emit(y);\r\n        this.dgs.onScrollMove(y, SCROLL_Y_ACTION);\r\n    }\r\n\r\n    onPsXReachStart($event: any) {\r\n        const x = $event.target.scrollLeft;\r\n        this.updateScrollPosition(x);\r\n        this.dgs.onScrollMove(x, SCROLL_X_REACH_START_ACTION);\r\n    }\r\n\r\n    onPsXReachEnd($event: any) {\r\n        this.showRightShadow = false;\r\n        // const x = $event.target.scrollLeft;\r\n        // this.updateScrollPosition(x);\r\n        // this.cd.detectChanges();\r\n        // // this.dgs.onShowFixedShadow(this.showRightShadow);\r\n        // this.dgs.onScrollMove(x, SCROLL_X_REACH_END_ACTION);\r\n    }\r\n\r\n    isChecked(rowData: any) {\r\n        if (rowData) {\r\n            return this.dfs.isRowChecked(rowData[this.dg.idField]);\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    isSelected(rowData: any) {\r\n        if (rowData) {\r\n            return this.dfs.isRowSelected(rowData[this.dg.idField]);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    toggleGroupRow(row, open = true) {\r\n        row.expanded = open;\r\n        this.ps.update();\r\n    }\r\n\r\n\r\n\r\n    /** =================================== å ====== é ====== çº¿ =================================== */\r\n\r\n    /** è·åå¯è§åºåé«åº¦ */\r\n    private getViewPortHeight() {\r\n        let viewPortHeight = this.dg.height;\r\n        if (this.dg.showHeader) {\r\n            viewPortHeight = viewPortHeight - this.dg.realHeaderHeight;\r\n        }\r\n\r\n        if ((this.dg.enableFilterRow || this.dg.enableSmartFilter) && this.dg.showFilterBar) {\r\n            viewPortHeight -= this.dg.filterBarHeight;\r\n        }\r\n\r\n        if (this.dg.showRowGroupPanel) {\r\n            viewPortHeight -= this.dg.rowGroupPanelHeight;\r\n        }\r\n\r\n        if (this.dg.showFooter && this.data.length) {\r\n            viewPortHeight = viewPortHeight - this.dg.footerHeight;\r\n        }\r\n\r\n        if (this.dg.pagination) {\r\n            viewPortHeight = viewPortHeight - this.dg.pagerHeight - 2;\r\n        }\r\n\r\n        if (this.dg.showBorder) {\r\n            viewPortHeight -= 2;\r\n        }\r\n\r\n        this.viewportH = viewPortHeight;\r\n        return viewPortHeight;\r\n    }\r\n\r\n    // ä¸æè¡æ¶ï¼æææ°æ®çé«åº¦\r\n    private allRowsHeight() {\r\n        const rowHeightpatch = 1;  // this.dg.autoHeight ? 2 : 1;\r\n        const rowHeight = this.dg.rowHeight + rowHeightpatch;\r\n\r\n        let itemsCount = 0;\r\n        if (this.dg.groupSummaryPosition === 'inGroupRow') {\r\n            itemsCount = this.data.filter(n => !n['__group_footer__']).length;\r\n        } else {\r\n            itemsCount = this.data.length;\r\n        }\r\n\r\n        let h = itemsCount * rowHeight;\r\n\r\n        if (this.dg.autoHeight) {\r\n            h += itemsCount;\r\n        } else {\r\n            h += 2;\r\n        }\r\n\r\n        return h;\r\n    }\r\n\r\n    private getCanvasHeight() {\r\n        let canvasHeight = 0;\r\n\r\n        if (!this.data || !this.data.length) {\r\n            this.canvasHeight = 0;\r\n            return 0;\r\n        }\r\n\r\n        if (this.dg.nowrap) {\r\n            canvasHeight = this.allRowsHeight();\r\n        } else {\r\n            canvasHeight = this.getTrDomHeight().reduce((r, c) => r + c, 0);\r\n        }\r\n\r\n        if (!canvasHeight) {\r\n            canvasHeight = this.viewportH;\r\n        }\r\n\r\n        this.canvasHeight = canvasHeight;\r\n        return canvasHeight;\r\n    }\r\n\r\n    updateCanvasHeight() {\r\n        this.canvasHeight = this.getCanvasHeight();\r\n    }\r\n\r\n\r\n    private getRowFromPosition(y) {\r\n        return Math.floor(y / (this.dg.rowHeight + 1));\r\n    }\r\n\r\n    getVisibleRange(viewportTop?: number, viewportLeft?: number) {\r\n        if (viewportTop == null) {\r\n            viewportTop = this.scrollTop;\r\n        }\r\n        if (viewportLeft == null) {\r\n            viewportLeft = this.scrollLeft;\r\n        }\r\n\r\n        return {\r\n            top: this.getRowFromPosition(viewportTop),\r\n            bottom: this.getRowFromPosition(viewportTop + this.viewportH) + 1,\r\n            leftPx: viewportLeft,\r\n            rightPx: viewportLeft + this.viewportW\r\n        };\r\n    }\r\n\r\n    private getRenderedRange(viewportTop?: number, viewportLeft?: number) {\r\n        const range = this.getVisibleRange(viewportTop, viewportLeft);\r\n        const buffer = Math.round(this.viewportH / (this.dg.rowHeight + 1));\r\n        const minBuffer = this.minRowBuffer;\r\n\r\n        if (this.vScrollDir == -1) {\r\n            range.top -= buffer;\r\n            range.bottom += minBuffer;\r\n        } else if (this.vScrollDir == 1) {\r\n            range.top -= minBuffer;\r\n            range.bottom += buffer;\r\n        } else {\r\n            range.top -= minBuffer;\r\n            range.bottom += minBuffer;\r\n        }\r\n\r\n        range.top = Math.max(0, range.top);\r\n        range.bottom = Math.min(this.data.length - 1, range.bottom);\r\n\r\n        range.leftPx -= this.viewportW;\r\n        range.rightPx += this.viewportW;\r\n\r\n        range.leftPx = Math.max(0, range.leftPx);\r\n        range.rightPx = Math.min(this.canvasWidth, range.rightPx);\r\n\r\n        return range;\r\n    }\r\n\r\n    private renderRows(range) {\r\n        const rows = [];\r\n        const dataLength = this.data.length;\r\n\r\n        for (let i = range.top; i <= range.bottom; i++) {\r\n            if (this.rowsCache[i] || (i == dataLength)) {\r\n                continue;\r\n            }\r\n            rows.push(i);\r\n\r\n            // Create an entry right away so that appendRowHtml() can\r\n            // start populatating it.\r\n            this.rowsCache[i] = {\r\n                rowNode: null,\r\n\r\n                // ColSpans of rendered cells (by column idx).\r\n                // Can also be used for checking whether a cell has been rendered.\r\n                cellColSpans: [],\r\n\r\n                // Cell nodes (by column idx).  Lazy-populated by ensureCellNodesInRowsCache().\r\n                cellNodesByColumnIdx: [],\r\n\r\n                // Column indices of cell nodes that have been rendered, but not yet indexed in\r\n                // cellNodesByColumnIdx.  These are in the same order as cell nodes added at the\r\n                // end of the row.\r\n                cellRenderQueue: []\r\n            };\r\n        }\r\n\r\n        for (let i = 0, ii = rows.length; i < ii; i++) {\r\n            this.rowsCache[rows[i]].rowNode = this.data[rows[i]];\r\n        }\r\n\r\n        return Object.keys(this.rowsCache).map(n => this.rowsCache[n].rowNode);\r\n    }\r\n\r\n\r\n    private removeRowFromCache(row) {\r\n        const cacheEntry = this.rowsCache[row];\r\n        if (!cacheEntry) {\r\n            return;\r\n        }\r\n\r\n        delete this.rowsCache[row];\r\n    }\r\n\r\n    private cleanupRows(rangeToKeep) {\r\n        for (const i in this.rowsCache) {\r\n            if (i < rangeToKeep.top || i > rangeToKeep.bottom) {\r\n                this.removeRowFromCache(i);\r\n            }\r\n        }\r\n    }\r\n\r\n    private renderData(detectchanges = true) {\r\n        this.canvasHeight = this.getCanvasHeight();\r\n        if (!this.dg.virtualized || this.dg.autoHeight) {\r\n            this.rows = this.data;\r\n        } else {\r\n            const visible = this.getVisibleRange();\r\n            const rendered = this.getRenderedRange();\r\n\r\n            // remove rows no longer in the viewport\r\n            this.cleanupRows(rendered);\r\n\r\n            // render missing rows\r\n            this.rows = this.renderRows(rendered);\r\n            this.startRowIndex = rendered.top;\r\n            this.blankTopHeight = this.startRowIndex * (this.dg.rowHeight + 1);\r\n            this.blankBottomHeight = this.canvasHeight - this.blankTopHeight - (this.rows.length * (this.dg.rowHeight + 1));\r\n            this.lastRenderedScrollTop = this.scrollTop;\r\n            this.lastRenderedScrollLeft = this.scrollLeft;\r\n            if (detectchanges) {\r\n                this.cd.detectChanges();\r\n            }\r\n        }\r\n    }\r\n\r\n    private handleScroll() {\r\n        this.scrollTop = this.ps.elementRef.nativeElement.scrollTop;\r\n        this.scrollLeft = this.ps.elementRef.nativeElement.scrollLeft;\r\n        return this._handleScroll();\r\n    }\r\n\r\n    private _handleScroll() {\r\n        const viewportContainer = this.viewScrollContainer.nativeElement;\r\n        let maxScrollDistanceY = viewportContainer.scrollHeight - viewportContainer.clientHeight;\r\n        let maxScrollDistanceX = viewportContainer.scrollWidth - viewportContainer.clientWidth;\r\n\r\n        // Protect against erroneous clientHeight/Width greater than scrollHeight/Width.\r\n        // Sometimes seen in Chrome.\r\n        maxScrollDistanceY = Math.max(0, maxScrollDistanceY);\r\n        maxScrollDistanceX = Math.max(0, maxScrollDistanceX);\r\n\r\n        // Ceiling the max scroll values\r\n        if (this.scrollTop > maxScrollDistanceY) {\r\n            this.scrollTop = maxScrollDistanceY;\r\n        }\r\n        if (this.scrollLeft > maxScrollDistanceX) {\r\n            this.scrollLeft = maxScrollDistanceX;\r\n        }\r\n\r\n        const vScrollDist = Math.abs(this.scrollTop - this.prevScrollTop);\r\n        const hScrollDist = Math.abs(this.scrollLeft - this.prevScrollLeft);\r\n\r\n        if (hScrollDist) {\r\n            this.prevScrollLeft = this.scrollLeft;\r\n\r\n            // $viewportScrollContainerX[0].scrollLeft = scrollLeft;\r\n            // if (hasFrozenColumns()) {\r\n            //     if (hasFrozenRows) {\r\n            //         $viewportTopR[0].scrollLeft = scrollLeft;\r\n            //     }\r\n            // } else {\r\n            //     if (hasFrozenRows) {\r\n            //         $viewportTopL[0].scrollLeft = scrollLeft;\r\n            //     }\r\n            // }\r\n        }\r\n\r\n        if (vScrollDist) {\r\n            this.vScrollDir = this.prevScrollTop < this.scrollTop ? 1 : -1;\r\n            this.prevScrollTop = this.scrollTop;\r\n\r\n            // if (hasFrozenColumns()) {\r\n            //     if (hasFrozenRows && !options.frozenBottom) {\r\n            //         $viewportBottomL[0].scrollTop = scrollTop;\r\n            //     } else {\r\n            //         $viewportTopL[0].scrollTop = scrollTop;\r\n            //     }\r\n            // }\r\n\r\n            // switch virtual pages if needed\r\n            if (vScrollDist < this.viewportH) {\r\n                this._scrollTo(this.scrollTop);\r\n            }\r\n        }\r\n\r\n        if (hScrollDist || vScrollDist) {\r\n            const dx = Math.abs(this.lastRenderedScrollLeft - this.scrollLeft);\r\n            const dy = Math.abs(this.lastRenderedScrollTop - this.scrollTop);\r\n            if (dx > 20 || dy > 20) {\r\n                // if rendering is forced or scrolling is small enough to be \"easy\", just render\r\n                if (dy < this.viewportH && dx < this.viewportW) {\r\n                    this.renderData();\r\n                } else {\r\n                    this.renderData();\r\n                }\r\n            }\r\n        }\r\n\r\n        if (hScrollDist || vScrollDist) {\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private _scrollTo(y) {\r\n        const $viewportScrollContainerY = this.viewScrollContainer.nativeElement;\r\n        y = Math.max(y, 0);\r\n        y = Math.min(y, this.canvasHeight - this.viewportH);\r\n\r\n        const newScrollTop = y;\r\n\r\n        if (this.prevScrollTop != newScrollTop) {\r\n            this.vScrollDir = (this.prevScrollTop < newScrollTop) ? 1 : -1;\r\n            this.lastRenderedScrollTop = (this.scrollTop = this.prevScrollTop = newScrollTop);\r\n\r\n            // if (hasFrozenColumns()) {\r\n            //     $viewportTopL[0].scrollTop = newScrollTop;\r\n            // }\r\n\r\n            // if (hasFrozenRows) {\r\n            //     $viewportBottomL[0].scrollTop = $viewportBottomR[0].scrollTop = newScrollTop;\r\n            // }\r\n\r\n            // $viewportScrollContainerY.scrollTop = newScrollTop;\r\n        }\r\n    }\r\n\r\n    onMouseClick($event: MouseEvent) {\r\n        // document.body.click();\r\n        const target = $event.target as any;\r\n\r\n        if (target.nodeName === 'TEXTAREA' || target.nodeName === 'INPUT' ) {\r\n            return;\r\n        }\r\n\r\n\r\n        let td = target;\r\n        if (target.nodeName !== 'TD') {\r\n            td = target.closest('TD');\r\n        }\r\n\r\n        if (!this.dg.editable && this.__triggerBodyClickEvent) {\r\n            // è§£å³è¶é¾ç¹å»äºä»¶ï¼è¦åæ§è¡éä¸­è¡\r\n            if (td && td.selectCell ) {\r\n                $event.stopPropagation();\r\n                td.selectCell($event, td);  // æçè¯´å¯ä»¥å é¤çï¼ä½ä¸æ¢å¨å¦o(â§å£â¦)o\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (this.dg.editMode === 'row') {\r\n            return;\r\n        }\r\n\r\n\r\n        if (td) {\r\n            // è¡ç¦ç¨æ¶\r\n            if (this.dg.disableRow && td.gridCellData) {\r\n                const { rowData, rowIndex } = td.gridCellData;\r\n                if (this.dg.disableRow(rowData, rowIndex)) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (this.dg.editable && this.dg.editMode === 'cell' && td.edit) {\r\n                td.edit($event);\r\n            } else {\r\n                if (td.selectCell) {\r\n                    $event.stopPropagation();\r\n                    td.closeEdit();\r\n                    td.selectCell($event, td);\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    onBeforeShowContextMenu = (e: any) => {\r\n        // row_1_fixedleft  row_1  row_1_fixedright\r\n        const { contextMenuDom, event } = e;\r\n\r\n        if (event.target.closest('.datagrid-editor')) {\r\n            return of({show: false});\r\n        }\r\n\r\n\r\n        let rowID = event.target.id;\r\n\r\n        if (contextMenuDom) {\r\n            // æé¤åç»è¡ãåç»åè®¡è¡\r\n            if (contextMenuDom.className.indexOf('f-datagrid-group-row') === -1 && contextMenuDom.className.indexOf('f-datagrid-group-footer') === -1) {\r\n                rowID = contextMenuDom.id.replace('row_', '').replace('_fixedleft', '').replace('_fixedright', '');\r\n                const rowData = this.dfs.findRow(rowID);\r\n                const focusTargetWidth = this.viewportW > this.totalWidth ? this.totalWidth : this.viewportW;\r\n                return of({ show: true, data: { data: rowData.data, grid: this.dg}, focusTargetWidth });\r\n            }\r\n        }\r\n        return of({ show: false });\r\n    }\r\n}\r\n","\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-09-26 17:17:32\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Directive, Input, NgZone, OnInit, Renderer2, ElementRef, OnDestroy, Inject, forwardRef, ChangeDetectorRef, HostListener } from '@angular/core';\r\nimport { DatagridBodyComponent } from './datagrid-body.component';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport { Utils } from './../../utils/utils';\r\n@Directive({\r\n    selector: '[row-hover]',\r\n    exportAs: 'rowHover'\r\n})\r\nexport class DatagridRowHoverDirective implements OnInit, OnDestroy {\r\n\r\n    @Input() rowIndex: number;\r\n    @Input('row-hover') rowData: any;\r\n\r\n    private _mouseenter = null;\r\n    private _mouseleave = null;\r\n\r\n    constructor(\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent,\r\n        @Inject(forwardRef(() => DatagridBodyComponent)) public dgb: DatagridBodyComponent,\r\n        private cd: ChangeDetectorRef,\r\n        private el: ElementRef, private zone: NgZone, private render: Renderer2) {\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.dg.rowHover) {\r\n            this.zone.runOutsideAngular( () => {\r\n                this._mouseenter = Utils.on(this.el.nativeElement, 'mouseenter', this.onmouseenter.bind(this), { target: '.f-datagrid-body-row', options: { capture: true }});\r\n                this._mouseleave = Utils.on(this.el.nativeElement, 'mouseleave', this.onmouseleave.bind(this), { target: '.f-datagrid-body-row', options: { capture: true }});\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this._mouseenter) {\r\n            this._mouseenter();\r\n        }\r\n\r\n        if (this._mouseleave) {\r\n            this._mouseleave();\r\n        }\r\n    }\r\n\r\n    // @HostListener('mouseenter')\r\n    onmouseenter(event) {\r\n        this.setRowHoverCls(event);\r\n    }\r\n\r\n    // @HostListener('mouseleave')\r\n    onmouseleave(event) {\r\n        this.setRowHoverCls(event, false);\r\n    }\r\n\r\n    setRowHoverCls(event, hover = true) {\r\n        if (!this.dg.rowHover) {\r\n            return;\r\n        }\r\n\r\n        if (!event.target.matches('.f-datagrid-body-row')) {\r\n            return;\r\n        }\r\n\r\n        this.rowIndex = event.target.getAttribute('index');\r\n\r\n        const leftTableCls = 'f-datagrid-body-fixed-left';\r\n        const rightTableCls = 'f-datagrid-body-fixed-right';\r\n        const centerTableCls = 'f-datagrid-body-center';\r\n\r\n        const body = this.dg.el.nativeElement.querySelector('.f-datagrid-body');\r\n\r\n        if (!body) {\r\n            return;\r\n        }\r\n\r\n        const leftTableDom = body.querySelector(`.${leftTableCls}`);\r\n        const rightTableDom = body.querySelector(`.${rightTableCls}`);\r\n        const centerTableDom = body.querySelector(`.${centerTableCls}`);\r\n\r\n        const method = hover ? 'addClass' : 'removeClass';\r\n        const trSelector = `tr[index=\"${this.rowIndex}\"]`;\r\n        const dom = this.el.nativeElement.closest('div');\r\n        if (dom && dom.className) {\r\n            const trDom = centerTableDom.querySelector(trSelector);\r\n\r\n            if (!trDom) {\r\n                return;\r\n            }\r\n\r\n            if (trDom.className.indexOf('f-datagrid-disable-row') > -1) {\r\n                return;\r\n            }\r\n            let ltr = null;\r\n            let rtr = null;\r\n            if (rightTableDom) {\r\n                rtr = rightTableDom.querySelector(trSelector);\r\n            }\r\n            if (leftTableDom) {\r\n                ltr = leftTableDom.querySelector(trSelector);\r\n            }\r\n\r\n            if (leftTableDom && ltr) {\r\n                this.render[method](ltr, this.dg.hoverRowCls);\r\n            }\r\n            if (rightTableDom && rtr) {\r\n                this.render[method](rtr, this.dg.hoverRowCls);\r\n            }\r\n\r\n            this.render[method](trDom, this.dg.hoverRowCls);\r\n\r\n        }\r\n    }\r\n\r\n}\r\n","import { delay, filter } from 'rxjs/operators';\r\n\r\n/*\r\n* @Author: ç¯çç§æ(Lucas Huang)\r\n* @Date: 2019-08-12 07:47:12\r\n* @LastEditors: ç¯çç§æ(Lucas Huang)\r\n* @LastEditTime: 2019-11-27 13:31:43\r\n* @QQ: 1055818239\r\n* @Version: v0.0.1\r\n*/\r\nimport { Renderer2, Self, NgZone, SimpleChanges, OnChanges, ChangeDetectorRef, OnDestroy, Optional, ContentChildren, QueryList } from '@angular/core';\r\nimport { Validators, FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Subscription } from 'rxjs';\r\nimport {\r\n    Directive, Input, Output, EventEmitter, HostListener,\r\n    OnInit, ElementRef, AfterViewInit, Injector, Inject, forwardRef\r\n} from '@angular/core';\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridCellComponent } from './datagrid-cell.component';\r\nimport { DatagridRow } from '../../types/datagrid-row';\r\nimport { DatagridValidator } from '../../types/datagrid-validator';\r\nimport { DatagridRowHoverDirective } from './datagrid-row-hover.directive';\r\nimport { Utils } from '../../utils/utils';\r\nimport { DatagridBodyComponent } from './datagrid-body.component';\r\nimport { FormatCellDataPipe } from '../../utils/format-cell-data.pipe';\r\nimport { ALLOW_EDIT_CELL_HIGHLIGHT_CLS } from '../../types/constant';\r\n\r\n@Directive({\r\n    selector: '[grid-row]',\r\n    exportAs: 'gridRow'\r\n})\r\nexport class DatagridRowDirective implements OnInit, AfterViewInit, DatagridRow, OnChanges, OnDestroy {\r\n    @Input() editable = false;\r\n    @Input('grid-row') rowData: any;\r\n    @Input() rowIndex: number;\r\n    @Output() clickHandler = new EventEmitter();\r\n    // ç¨äºæ´è¡ç¼è¾ï¼å¿å¨ï¼ï¼ï¼\r\n    @ContentChildren(forwardRef(() => DatagridCellComponent), { descendants: true }) cells: QueryList<DatagridCellComponent>;\r\n\r\n    get rowId() {\r\n        if (this.rowData) {\r\n            return this.dfs.primaryId(this.rowData);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    get disabled() {\r\n        if (this.dg.disableRow) {\r\n            return this.dg.disableRow(this.rowData, this.rowIndex);\r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    form: FormGroup = new FormGroup({});\r\n    private dfs: DatagridFacadeService;\r\n    private documentRowDblclickEvent: any = null;\r\n    private ngZone: NgZone;\r\n    private dgb: DatagridBodyComponent;\r\n    cd: ChangeDetectorRef;\r\n\r\n    columnsChangedSubscription: Subscription = null;\r\n    datasourceChangedSubscription: Subscription = null;\r\n    subscriptions: Subscription[] = [];\r\n    constructor(\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent,\r\n        private injector: Injector, private fb: FormBuilder, public el: ElementRef,\r\n        private render: Renderer2, @Optional() @Self() public drHover: DatagridRowHoverDirective) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.ngZone = this.injector.get(NgZone);\r\n        this.cd = this.injector.get(ChangeDetectorRef);\r\n        this.dgb = this.injector.get(DatagridBodyComponent);\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.datasourceChangedSubscription = this.dg.dgs.onDataSourceChange.subscribe(() => {\r\n            this.renderCustomStyle();\r\n        });\r\n\r\n        this.columnsChangedSubscription = this.dg.dgs.columnsChanged.subscribe(() => {\r\n            this.createControl();\r\n        });\r\n\r\n        const s$ = this.dg.dfs.rowUpdate$.subscribe((row: { index: number, data: any }) => {\r\n            if (row && row.data) {\r\n                // this.rowData = cloneDeep(row.data);\r\n                if (this.dfs.primaryId(row.data) === this.rowId) {\r\n                    this.renderCustomStyle(row.data);\r\n                }\r\n                // this.cd.detectChanges();\r\n            }\r\n        });\r\n        this.subscriptions.push(s$);\r\n\r\n        const s1$ = this.dg.dgs.updateEmptyStyle$.subscribe(() => {\r\n            this.updateCellEmptyStyle();\r\n        });\r\n        this.subscriptions.push(s1$);\r\n\r\n        const s2$ = this.dg.dfs.selectRow$.pipe(\r\n            filter((r: any) => {\r\n                return r.id === this.rowId;\r\n            })\r\n        ).subscribe(() => {\r\n            if (this.dg.selectedRow && !this.dg.selectedRow.dr) {\r\n                const p = this.getRowPosition();\r\n                if (p === 'left') {\r\n                    this.dg.selectedRow.drl = this;\r\n                } else if (p === 'right') {\r\n                    this.dg.selectedRow.drr = this;\r\n                } else {\r\n                    this.dg.selectedRow.dr = this;\r\n                }\r\n            }\r\n        });\r\n\r\n        this.subscriptions.push(s2$);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.columnsChangedSubscription) {\r\n            this.columnsChangedSubscription.unsubscribe();\r\n            this.columnsChangedSubscription = null;\r\n        }\r\n\r\n        if (this.datasourceChangedSubscription) {\r\n            this.datasourceChangedSubscription.unsubscribe();\r\n            this.datasourceChangedSubscription = null;\r\n        }\r\n\r\n        if (this.subscriptions && this.subscriptions.length) {\r\n            this.subscriptions.forEach(n => n.unsubscribe());\r\n            this.subscriptions = [];\r\n        }\r\n\r\n        if (this.form) {\r\n            this.form = null;\r\n        }\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.rowData && !changes.rowData.isFirstChange()) {\r\n            this.updateCellEmptyStyle();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.renderCustomStyle();\r\n        this.updateCellEmptyStyle();\r\n    }\r\n\r\n    private getRowPosition() {\r\n        const id = this.el.nativeElement.id;\r\n        if (id.indexOf('fixedleft') > -1) {\r\n            return 'left';\r\n        } else if (id.indexOf('fixedright') > -1) {\r\n            return 'right';\r\n        } else {\r\n            return 'center';\r\n        }\r\n    }\r\n\r\n\r\n    renderCustomStyle(rowData = null) {\r\n        if (this.dg.rowStyler) {\r\n            const _rd = rowData || this.rowData;\r\n            const trStyle = this.dg.rowStyler(_rd, this.rowIndex);\r\n            if (trStyle && Object.keys(trStyle).length) {\r\n                this.dg.renderCustomStyle(trStyle, this.el.nativeElement);\r\n            } else {\r\n                this.dg.dgs.removeCssRule(`#${this.dg.id} #${this.el.nativeElement.id}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    @HostListener('click', ['$event'])\r\n    onRowClick(event: MouseEvent) {\r\n\r\n        if (event.target['className'] && event.target['className'].indexOf('checkbox-column') > -1) {\r\n            return;\r\n        }\r\n\r\n        if (!this.dg.enableSelectRow) {\r\n            return;\r\n        }\r\n\r\n        if (this.dg.disabled) {\r\n            return;\r\n        }\r\n\r\n        if (this.dg.disableRow) {\r\n            if (this.dg.disableRow(this.rowData, this.rowIndex)) {\r\n                event.stopPropagation();\r\n                return false;\r\n            }\r\n        }\r\n\r\n        // if (!this.dg.editable) {\r\n        //     event.stopPropagation();\r\n        // }\r\n\r\n        const rowId = this.dfs.primaryId(this.rowData);\r\n\r\n        if (!rowId) {\r\n            console.warn(`å¨ç¬¬ ${this.rowIndex + 1} è¡ï¼ä¸»é®å­æ®µ[${this.dg.idField}]çå¼ä¸º ç©ºï¼è¯·æ£æ¥ç¸å³æ°æ®ã`);\r\n        }\r\n\r\n        const beforEventParam = {\r\n            rowIndex: this.rowIndex,\r\n            rowData: this.rowData,\r\n            gridInstance: this.dg\r\n        };\r\n\r\n        if (!event.shiftKey) {\r\n            this.dg.dgs.focusRowChanged.emit({\r\n                rowIndex: this.rowIndex,\r\n                rowData: this.rowData\r\n            });\r\n        }\r\n        const useNewSelectionMode = this.dg.sms.beforRowClick({ ...beforEventParam, e: event, id: rowId, dr: this });\r\n        if (useNewSelectionMode) {\r\n            return;\r\n        }\r\n\r\n        if (!this.dfs.isRowSelected(rowId)) {\r\n            const canendedit = this.dg.endRowEdit();\r\n\r\n            if (!canendedit || canendedit.canEnd) {\r\n                this.dg.beforeSelect(beforEventParam).pipe(\r\n                    delay(100)\r\n                ).subscribe((canSelect: boolean) => {\r\n                    if (canSelect) {\r\n                        this.dfs.selectRow(this.rowIndex, this.rowData);\r\n                        if (this.dg.selectedRow) {\r\n                            this.dg.selectedRow.dr = this;\r\n                        }\r\n                        const trCLS = this.el.nativeElement.className;\r\n                        if (trCLS.indexOf('f-datagrid-row-selected') === -1) {\r\n                            this.el.nativeElement.className = trCLS + ' f-datagrid-row-selected';\r\n                        }\r\n                        // this.drHover.setRowHoverCls(false);\r\n                        // this.dg.selectChanged.emit(this.dg.selectedRow);\r\n                        this.clickHandler.emit();\r\n                    }\r\n                    this.dg.rowClick.emit({ data: this.rowData, grid: this.dg, dblclick: false });\r\n                    this.dg.dgs.setSelecedRow.emit({ selected: true, id: this.dfs.primaryId(this.rowData) });\r\n                });\r\n            }\r\n        } else {\r\n            if (this.dg.selectedRow && !this.dg.selectedRow.dr) {\r\n                this.dg.selectedRow.dr = this;\r\n            }\r\n\r\n            if (!this.dg.keepSelect) {\r\n                this.dg.beforeUnselect(beforEventParam).subscribe((canUnselect: boolean) => {\r\n                    if (canUnselect) {\r\n                        // this.dg.unSelect.emit(this.dg.selectedRow);\r\n                        this.dfs.unSelectRow(this.rowIndex, this.rowData);\r\n\r\n                        const trCLS = this.el.nativeElement.className;\r\n                        if (trCLS.indexOf('f-datagrid-row-selected') > -1) {\r\n                            this.el.nativeElement.className = trCLS.replace('f-datagrid-row-selected', '');\r\n                        }\r\n                    }\r\n                    this.dg.rowClick.emit({ data: this.rowData, grid: this.dg, dblclick: false });\r\n                    this.dg.dgs.setSelecedRow.emit();\r\n                });\r\n            } else {\r\n                this.dg.rowClick.emit({ data: this.rowData, grid: this.dg, dblclick: false });\r\n            }\r\n        }\r\n    }\r\n\r\n    initFormControl() {\r\n        this.form = this.fb.group({});\r\n        this.createControl();\r\n        this.form['bindingData'] = this.rowData;\r\n    }\r\n\r\n    createControl() {\r\n        if (this.dg && this.dg.flatColumns) {\r\n            this.dg.flatColumns.forEach(col => {\r\n                if (!col.editor && !col.editorTemplate) { return; }\r\n                if (!this.form.controls[col.field]) {\r\n                    const control = this.createFormControl(col);\r\n                    this.form.addControl(col.field, control);\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    private createFormControl(col) {\r\n        return this.fb.control(\r\n            Utils.getValue(col.field, this.rowData),\r\n            {\r\n                validators: col.editor ? this.bindValidations(col.editor.validators) : null\r\n            }\r\n        );\r\n    }\r\n\r\n    private bindValidations(validators: DatagridValidator[]) {\r\n        const validations = [];\r\n        if (validators && validators.length) {\r\n\r\n            validators.forEach((v: DatagridValidator) => {\r\n                let validation = null;\r\n                switch (v.type) {\r\n                    case 'required':\r\n                        validation = Validators.required;\r\n                        break;\r\n                    case 'min':\r\n                        validation = Validators.min(v.value);\r\n                        break;\r\n                    case 'max':\r\n                        validation = Validators.max(v.value);\r\n                        break;\r\n                    case 'minLength':\r\n                        validation = Validators.minLength(v.value);\r\n                        break;\r\n                    case 'maxLength':\r\n                        validation = Validators.maxLength(v.value);\r\n                        break;\r\n                    case 'email':\r\n                        validation = Validators.email;\r\n                        break;\r\n                    case 'requiredTrue':\r\n                        validation = Validators.requiredTrue;\r\n                        break;\r\n                    case 'pattern':\r\n                        validation = Validators.pattern(v.value);\r\n                        break;\r\n                }\r\n                if (validation) {\r\n                    validations.push(validation);\r\n                } else {\r\n                    if (this.dg.validators && this.dg.validators.length) {\r\n                        const vfn = this.dg.validators.find(vr => vr.name === v.type);\r\n                        if (vfn) {\r\n                            validation = vfn.value(this.rowData);\r\n                            validations.push(validation);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n        }\r\n        return validations;\r\n    }\r\n\r\n\r\n    refresh() {\r\n        this.updateRowHeight();\r\n        this.updateCellEmptyStyle();\r\n    }\r\n\r\n    updateRowHeight() {\r\n        if (!this.dg.nowrap) {\r\n            const centerTr = this.dgb.mainArea.nativeElement.querySelector('tr[index=\"' + this.rowIndex + '\"]');\r\n            centerTr.style.height = 'auto';\r\n            const trHeight = centerTr.offsetHeight;\r\n            let leftTrDom = null;\r\n            let rightTrDom = null;\r\n            const heightSizeList = [trHeight];\r\n            if (this.dgb) {\r\n                if (this.dgb.fixedLeftEl) {\r\n                    leftTrDom = this.dgb.fixedLeftEl.nativeElement.querySelector('tr[index=\"' + this.rowIndex + '\"]');\r\n                    if (leftTrDom) {\r\n                        leftTrDom.style.height = 'auto';\r\n                        heightSizeList.push(leftTrDom.offsetHeight);\r\n                    }\r\n                }\r\n                if (this.dgb.fixedRightEl) {\r\n                    rightTrDom = this.dgb.fixedRightEl.nativeElement.querySelector('tr[index=\"' + this.rowIndex + '\"]');\r\n                    if (rightTrDom) {\r\n                        rightTrDom.style.height = 'auto';\r\n                        heightSizeList.push(rightTrDom.offsetHeight);\r\n                    }\r\n                }\r\n\r\n                const maxHeight = Math.max(...heightSizeList);\r\n\r\n                centerTr.style.height = `${maxHeight}px`;\r\n                if (leftTrDom) {\r\n                    leftTrDom.style.height = `${maxHeight}px`;\r\n                }\r\n\r\n                if (rightTrDom) {\r\n                    rightTrDom.style.height = `${maxHeight}px`;\r\n                }\r\n\r\n                this.cd.markForCheck();\r\n                this.dgb.updateCanvasHeight();\r\n            }\r\n        }\r\n    }\r\n\r\n    private updateCellEmptyStyle() {\r\n\r\n        if (!this.dg.enableEditCellStyle) {\r\n            return;\r\n        }\r\n\r\n        let rowIsDisabled = false;\r\n        if (this.dg.disableRow) {\r\n            rowIsDisabled = this.dg.disableRow(this.rowData, this.rowIndex);\r\n        }\r\n\r\n        const updateCellEmptyText = (cells) => {\r\n            if (cells.length) {\r\n\r\n                for (let k = 0; k < cells.length; k++) {\r\n                    const field = cells[k].getAttribute('field');\r\n                    if (field) {\r\n                        const col = this.dfs.getColumn(field);\r\n                        if (col) {\r\n\r\n                            if (!col.editor) {\r\n                                continue;\r\n                            }\r\n                            const cls = col.align === 'right' ? 'allow-edit-cell-left' : 'allow-edit-cell';\r\n                            const emptyicon_cls = ALLOW_EDIT_CELL_HIGHLIGHT_CLS[col.editor.type];\r\n                            const span = cells[k].querySelector('.cell-text-box');\r\n                            const colVal = Utils.getValue(field, this.rowData);\r\n                            const fmtVal = this.dg.colFormatSer.format(colVal, this.rowData, col.formatter);\r\n                            if (!this.dg.editable || rowIsDisabled || this.dg.cellIsReadOnly(col, this.rowData)) {\r\n                                cells[k].className = cells[k].className.replace(cls, '');\r\n                                cells[k].className = cells[k].className.replace(emptyicon_cls, '');\r\n                                if (span) {\r\n                                    if (span.className.indexOf('cell-empty') > -1) {\r\n                                        span.className = span.className.replace('cell-empty', '');\r\n                                    }\r\n\r\n                                    if (colVal === '' || colVal === null || colVal === undefined) {\r\n                                        span.innerHTML = '';\r\n                                    } else {\r\n                                        span.innerHTML = fmtVal;\r\n                                    }\r\n                                }\r\n                            } else {\r\n                                if (span) {\r\n                                    if (colVal === '' || colVal === null || colVal === undefined) {\r\n                                        if (span.className.indexOf('cell-empty') === -1) {\r\n                                            span.className = span.className + ' cell-empty';\r\n                                        }\r\n\r\n                                        span.innerHTML = Utils.getWhenEmptyText(col, this.dg.localeService.localeId);\r\n                                    } else {\r\n                                        span.innerHTML = fmtVal;\r\n                                    }\r\n                                }\r\n\r\n                                if (cells[k].className.indexOf('cell-readonly') > -1) {\r\n                                    cells[k].className = cells[k].className.replace('cell-readonly', '');\r\n                                }\r\n\r\n                                if (cells[k].className.indexOf(cls) === -1) {\r\n                                    this.render.addClass(cells[k], cls);\r\n                                }\r\n\r\n                                if (cells[k].className.indexOf(emptyicon_cls) === -1) {\r\n                                    this.render.addClass(cells[k], emptyicon_cls);\r\n                                }\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        };\r\n\r\n\r\n        // if (this.dgb.fixedLeftEl) {\r\n        //     const leftTrDom = this.dgb.fixedLeftEl.nativeElement.querySelector('tr[index=\"' + this.rowIndex + '\"]');\r\n        //     if (leftTrDom) {\r\n        //         updateCellEmptyText(leftTrDom.querySelectorAll('td[field]'));\r\n        //     }\r\n        // }\r\n\r\n        const cells = this.el.nativeElement.querySelectorAll('td[field]:not([field=\"_datagrid-setting-control_\"])');\r\n        updateCellEmptyText(cells);\r\n    }\r\n}\r\n","import { ColumnFormatService } from '@farris/ui-common/column';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-07-29 08:14:22\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-11 11:38:58\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport {\r\n    ComponentFactoryResolver,\r\n    ComponentRef,\r\n    Directive,\r\n    Input,\r\n    OnInit,\r\n    ViewContainerRef,\r\n    Injector,\r\n    OnDestroy,\r\n    Inject,\r\n    forwardRef,\r\n    ApplicationRef\r\n} from '@angular/core';\r\nimport { FormGroup, FormBuilder } from '@angular/forms';\r\nimport { DataColumn } from '../../types';\r\n\r\n@Directive({\r\n    selector: '[cell-editor]',\r\n})\r\nexport class GridCellEditorDirective implements OnInit, OnDestroy {\r\n    @Input() column: DataColumn;\r\n    @Input() group: FormGroup;\r\n    @Input() rowData: any;\r\n    @Input() value: any;\r\n    @Input() height: any;\r\n    componentRef: ComponentRef<any>;\r\n    private cfs: ColumnFormatService = null;\r\n\r\n    constructor(\r\n        private resolver: ComponentFactoryResolver,\r\n        private container: ViewContainerRef,\r\n        private app: ApplicationRef,\r\n        private fb: FormBuilder,\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent\r\n    ) {\r\n        this.cfs = this.dg.inject.get(ColumnFormatService);\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.column.editor) {\r\n            this.createCellEditor();\r\n\r\n            this.dg.dgs.cellEditorCreated.emit({ editorRef: this.componentRef, column: this.column, cellEditorRef: this});\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n       this.dg.dgs.cellEditorDestory.emit({ editorRef: this.componentRef, column: this.column, cellEditorRef: this});\r\n    }\r\n\r\n    private createCellEditor() {\r\n\r\n        const editorType = this.column.editor.type;\r\n\r\n        if (!this.dg.editors[editorType]) {\r\n            console.error(`æ¾ä¸å°åç§°ä¸º ${editorType} å¯¹åºçç±»ã`);\r\n            return;\r\n        }\r\n\r\n        const factory = this.resolver.resolveComponentFactory(\r\n            this.dg.editors[editorType]\r\n        );\r\n        this.componentRef = this.container.createComponent(factory);\r\n        // this.app.attachView(this.componentRef.hostView);\r\n        this.componentRef.instance.column = this.column;\r\n        this.componentRef.instance.group = this.group;\r\n        this.componentRef.instance.height = this.height;\r\n        this.componentRef.instance.controlId = (this.dg.id || 'DATAGRID_EDITOR') + '_' + this.column.field;\r\n\r\n        this.updateControlValue();\r\n        this.componentRef.changeDetectorRef.markForCheck();\r\n        this.componentRef.changeDetectorRef.detectChanges();\r\n        // this.app.tick();\r\n        setTimeout(() => {\r\n            if (this.componentRef.instance.instance) {\r\n                if (editorType === 'lookup') {\r\n                    if (!this.componentRef.instance.instance.changeDetector.destroyed) {\r\n                        this.componentRef.instance.instance.changeDetector.detectChanges();\r\n                    }\r\n                    // this.componentRef.instance['bindingData'] = this.rowData;\r\n                }\r\n                // if (editorType === 'textarea') {\r\n                //     const textareaEl = this.componentRef.instance.inputElement;\r\n                //     textareaEl.style.height = textareaEl.closest('tr').style.height;\r\n                // }\r\n            }\r\n        });\r\n    }\r\n\r\n    private updateControlValue() {\r\n        if (this.group) {\r\n            this.group['bindingData'] = this.rowData;\r\n            if (this.group.controls[this.column.field]) {\r\n                // if (this.column.editor.type === 'datepicker') {\r\n                //     const dateRef = this.componentRef.instance.instance;\r\n                //     if (dateRef) {\r\n                //         setTimeout(() => {\r\n                //             const { dateFormat } = dateRef.dateOpts;\r\n                //             const val = this.cfs.format(this.value, this.rowData, {type: 'datetime', options: { format: dateFormat}});\r\n                //             this.group.controls[this.column.field].setValue(val, { emitEvent: true });\r\n                //         });\r\n                //     }\r\n                // } else {\r\n                //     this.group.controls[this.column.field].setValue(this.value, { emitEvent: true });\r\n                // }\r\n\r\n                this.group.controls[this.column.field].setValue(this.value, { emitEvent: true });\r\n            }\r\n        }\r\n    }\r\n\r\n    hideCover() {\r\n        if (this.column.editor && (this.column.editor.type === 'combolist' || this.column.editor.type === 'combo-lookup')) {\r\n            this.componentRef.instance.hide(!1);\r\n        }\r\n    }\r\n}\r\n","/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-12 10:11:59\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-08-12 10:12:05\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml, SafeStyle, SafeScript, SafeUrl, SafeResourceUrl } from '@angular/platform-browser';\r\n\r\n@Pipe({\r\n    name: 'safe'\r\n})\r\nexport class SafePipe implements PipeTransform {\r\n\r\n    private dangerWords = ['<script', 'onerror', 'alert('];\r\n\r\n    constructor(protected sanitizer: DomSanitizer) { }\r\n\r\n    public transform(value: any, type: string): SafeHtml | SafeStyle | SafeScript | SafeUrl | SafeResourceUrl {\r\n        switch (type) {\r\n            case 'html': {\r\n                if (value === '' || value === null || value === undefined) {\r\n                    return value;\r\n                }\r\n                // if (!this.hasDanger(value)) {\r\n                //     return value;\r\n                // }\r\n                return this.sanitizer.bypassSecurityTrustHtml(value);\r\n            }\r\n            case 'style': return this.sanitizer.bypassSecurityTrustStyle(value);\r\n            case 'script': return this.sanitizer.bypassSecurityTrustScript(value);\r\n            case 'url': return this.sanitizer.bypassSecurityTrustUrl(value);\r\n            case 'resourceUrl': return this.sanitizer.bypassSecurityTrustResourceUrl(value);\r\n            default: throw new Error(`Invalid safe type specified: ${type}`);\r\n        }\r\n    }\r\n\r\n    private hasDanger(value) {\r\n        if (typeof value  === 'number' || typeof value === 'boolean') {\r\n            return false;\r\n        }\r\n\r\n        let r = 0;\r\n\r\n        this.dangerWords.forEach(n => {\r\n            if (value.indexOf(n) > -1) {\r\n                r++;\r\n            }\r\n        });\r\n\r\n        return r !== 0;\r\n    }\r\n\r\n}\r\n","import { FormGroup } from '@angular/forms';\r\n\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-31 09:11:02\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, Output, EventEmitter, OnChanges,\r\n    ViewChild, ElementRef, ChangeDetectionStrategy, ChangeDetectorRef, ViewContainerRef,\r\n    OnDestroy, Injector, Inject, forwardRef, AfterViewInit, SimpleChanges, Renderer2} from '@angular/core';\r\nimport { DomSanitizer } from '@angular/platform-browser';\r\nimport { Subject, Subscription } from 'rxjs';\r\nimport { filter } from 'rxjs/operators';\r\nimport { ColumnFormatService } from '@farris/ui-common/column';\r\nimport { DataColumn } from '../../types/data-column';\r\nimport { Utils } from '../../utils/utils';\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridRowDirective } from './datagrid-row.directive';\r\nimport { CellInfo } from '../../services/state';\r\nimport { GridCellEditorDirective } from '../editors/cell-editor.directive';\r\nimport { DatagridService } from '../../services/datagrid.service';\r\nimport { SafePipe } from './../../utils/safe.pipe';\r\nimport { TR_PREFIX } from '../../types/constant';\r\n\r\n\r\n     // <ng-container *ngIf=\"!isEditing && !column.template\">\r\n        //     <ng-container *ngIf=\"column.formatter\">\r\n        //         <span *ngIf=\"cellFormatterIsFn\" [innerHtml]=\" column | formatCellData: rowData | safe: 'html'\"></span>\r\n        //         <span *ngIf=\"!cellFormatterIsFn\">{{  column | formatCellData: rowData }}</span>\r\n        //     </ng-container>\r\n        //     <span *ngIf=\"!column.formatter\" [class.grid-cell-nowrap]=\"dg.nowrap\" [class.grid-cell-wrap]=\"!dg.nowrap\">{{  column | formatCellData: rowData }}</span>\r\n        // </ng-container>\r\n        // <span *ngIf=\"!isEditing && !column.template\" cell-content [class.grid-cell-nowrap]=\"dg.nowrap\" [class.grid-cell-wrap]=\"!dg.nowrap\"\r\n        //     [rowData]=\"rowData\" [column]=\"column\" [nowrap]=\"dg.nowrap\"></span>\r\n@Component({\r\n    selector: 'grid-body-cell',\r\n    template: `\r\n    <div\r\n     [attr.cell-tooltip]=\"column.showTips && !isEditing\" [attr.tipMode]=\" column.tipMode || 'auto'\"\r\n     [attr.message]=\"column | tipmsg: rowData\"  [attr.position]=\" column?.tipOptions?.position || 'top-left'\"\r\n     [attr.tipWidth]=\"column?.tipOptions?.width\" [attr.tipHeight]=\"column?.tipOptions?.height\"\r\n     class=\"f-datagrid-cell-content\" #cellContainer\r\n     [ngStyle]=\"cellStyle\"\r\n    >\r\n        <ng-container *ngIf=\"!isEditing && !column.template\">\r\n            <ng-container *ngIf=\"column.formatter\">\r\n                <span class=\"cell-text-box\" *ngIf=\"cellFormatterIsFn\" [innerHtml]=\" column | formatCellData: rowData | safe: 'html'\"></span>\r\n                <span class=\"cell-text-box\" *ngIf=\"!cellFormatterIsFn\">{{  column | formatCellData: rowData }}</span>\r\n            </ng-container>\r\n            <span *ngIf=\"!column.formatter\" class=\"cell-text-box\" [class.grid-cell-nowrap]=\"dg.nowrap\" [class.grid-cell-wrap]=\"!dg.nowrap\">{{  column | formatCellData: rowData }}</span>\r\n        </ng-container>\r\n\r\n        <ng-container #cellTemplate *ngIf=\"!isEditing && column.template\" [ngTemplateOutlet]=\"column.template\" [ngTemplateOutletContext]=\"{$implicit: cellContext}\"></ng-container>\r\n        <ng-container #cellEditorTemplate *ngIf=\"isEditing && column.editorTemplate\" [ngTemplateOutlet]=\"column.editorTemplate\" [ngTemplateOutletContext]=\"{$implicit: cellContext}\"></ng-container>\r\n        <ng-container #editorTemplate *ngIf=\"isEditing && !column.editorTemplate\" cell-editor [height]=\"controlHeight\" [rowData]=\"rowData\" [value]=\"value\" [column]=\"column\" [group]=\"dr.form\"></ng-container>\r\n    </div>\r\n    `,\r\n    changeDetection: ChangeDetectionStrategy.Default\r\n})\r\nexport class DatagridCellComponent implements OnInit, OnDestroy, AfterViewInit, OnChanges {\r\n    @Input() width: number;\r\n    @Input() height: number;\r\n    @Input() cls = '';\r\n    @Input() column: DataColumn;\r\n    @Input() rowData: any;\r\n    @Input() rowIndex: number;\r\n    @Input() lastColumn = false;\r\n    // @ViewChild('celltip') celltip: DatagridCellTooltipDirective;\r\n\r\n    private _isEditing = false;\r\n    controlHeight = 'auto';\r\n    get isEditing() {\r\n        return this._isEditing;\r\n    }\r\n    @Input() set isEditing(v) {\r\n        if (this._isEditing === v) {\r\n            return;\r\n        }\r\n        this._isEditing = v;\r\n\r\n        if (v) {\r\n            if (!this.dr.form || !Object.keys(this.dr.form.controls).length ) {\r\n                this.dr.initFormControl();\r\n            }\r\n\r\n            if (this.column.editorTemplate && this.column.editorTemplate.elementRef) {\r\n                this.cellContext.formGroup = this.dr.form;\r\n\r\n                setTimeout(() => {\r\n\r\n                    if (this.el) {\r\n                        const input = this.el.nativeElement.querySelector('input,textarea');\r\n                        if (input) {\r\n                            input.focus();\r\n                        }\r\n                    }\r\n                }, 10);\r\n            }\r\n        }\r\n        if (this.column.editor && this.column.editor.type === 'textarea') {\r\n            if (!this.dg.nowrap) {\r\n                this.controlHeight = this.dr.el.nativeElement.offsetHeight;\r\n            }\r\n        }\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    @Input() isSelected = false;\r\n\r\n    @ViewChild('cellContainer') cellContainer: ElementRef;\r\n    @ViewChild('cellTemplate', {read: ViewContainerRef }) cellTemplateVcr: ViewContainerRef;\r\n\r\n\r\n    private _cellEditorTemplate = null;\r\n    @ViewChild('cellEditorTemplate', {read: ViewContainerRef })\r\n    get cellEditorTemplate(): ViewContainerRef {\r\n        return this._cellEditorTemplate;\r\n    }\r\n    set cellEditorTemplate(v) {\r\n        this._cellEditorTemplate = v;\r\n        if (v) {\r\n            this.dg.dgs.cellEditorCreated.emit({ editorRef: null, column: this.column, cellEditorRef: null, templateRef: v});\r\n        }\r\n    }\r\n\r\n    @ViewChild(GridCellEditorDirective) cellEditor;\r\n\r\n\r\n    @Output() cellClick = new EventEmitter();\r\n    @Output() cellDblClick = new EventEmitter();\r\n\r\n    cellContext: any = {};\r\n    get value() {\r\n        if (this.rowData && this.column && this.column.field) {\r\n            return Utils.getValue(this.column.field, this.rowData);\r\n        }\r\n        return '';\r\n    }\r\n\r\n    get formControl() {\r\n        if (this.cellEditor) {\r\n            return this.cellEditor.componentRef.instance.formControl;\r\n        } else if (this.column.editorTemplate) {\r\n            return this.dr.form.get(this.column.field);\r\n        }\r\n        return null;\r\n    }\r\n\r\n    get verticalAlign() {\r\n        let va = 'center';\r\n        switch (this.column.valign) {\r\n            case 'top':\r\n                va = 'flex-start';\r\n                break;\r\n            case 'bottom':\r\n                va = 'flex-end';\r\n                break;\r\n            default:\r\n                va = 'center';\r\n                break;\r\n        }\r\n\r\n        return va;\r\n    }\r\n\r\n    get horizontalAlign() {\r\n        let ha = 'flex-start';\r\n        if (this.column.align === 'right') {\r\n            ha = 'flex-end';\r\n        } else if (this.column.align === 'center') {\r\n            ha = 'center';\r\n        }\r\n        return ha;\r\n    }\r\n\r\n    get cellStyle() {\r\n        const h = this.dg.nowrap ? '' : '100%';\r\n        const w = this.lastColumn ? (this.column.width - 6) + 'px' : '100%';\r\n        const style = {\r\n            // height: h,\r\n            width: w\r\n        };\r\n        if (!this.isEditing) {\r\n            return Object.assign(style, {\r\n                'align-items': this.verticalAlign,\r\n                'justify-content': this.horizontalAlign\r\n            });\r\n        } else {\r\n            return Object.assign(style, {\r\n                'justify-content': this.horizontalAlign\r\n            });\r\n        }\r\n    }\r\n\r\n    get cellFormatterIsFn() {\r\n        return typeof this.column.formatter === 'function' || this.column.formatter.type === 'boolean';\r\n    }\r\n\r\n    cellStyler: any = {};\r\n\r\n    private dfs: DatagridFacadeService;\r\n    private dgs: DatagridService;\r\n    private cellSubscription: Subscription;\r\n    private rowUpdateSubscription: Subscription;\r\n    private safePipe: SafePipe = null;\r\n    private render: Renderer2;\r\n    private ro: ResizeObserver = null;\r\n    canEdit = () => this.dg.editable && this.dg.editMode === 'cell' && this.column.editor;\r\n    constructor(\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent,\r\n        @Inject(forwardRef(() => DatagridRowDirective)) public dr: DatagridRowDirective,\r\n        public el: ElementRef, public cd: ChangeDetectorRef, private injector: Injector,\r\n        public colFormatSer: ColumnFormatService,\r\n        private domSanitizer: DomSanitizer\r\n    ) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dgs = this.injector.get(DatagridService);\r\n        this.safePipe = new SafePipe(this.domSanitizer);\r\n        this.render = this.injector.get(Renderer2);\r\n\r\n        // this.cellSubscription = this.dfs.currentCell$.pipe(\r\n        //     filter((cell: CellInfo) => {\r\n        //         return cell && this.column.editor && cell.rowIndex === this.rowIndex && cell.field === this.column.field;\r\n        //     })\r\n        // ).subscribe((cell: CellInfo) => {\r\n        //     if (cell && this.column.editor) {\r\n        //         this.isEditing = cell.isEditing;\r\n        //         cell.cellRef = this;\r\n        //         cell.column = this.column;\r\n\r\n        //         if (!this.cd['destroyed']) {\r\n        //             this.cd.detectChanges();\r\n        //         }\r\n        //     }\r\n        // });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.initCellTemplateContext();\r\n    }\r\n\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.rowData && !changes.rowData.isFirstChange()) {\r\n            this.initCellTemplateContext();\r\n            this.buildCustomCellStyle();\r\n\r\n            if (this.formControl) {\r\n                const val = Utils.getValue(this.column.field, this.rowData);\r\n                this.formControl.setValue(val);\r\n            }\r\n        }\r\n    }\r\n\r\n    private initCellTemplateContext() {\r\n        this.cellContext = {\r\n            field: this.column.field,\r\n            rowIndex: this.rowIndex,\r\n            rowData: this.rowData,\r\n            column: this.column,\r\n            instance: this,\r\n            formGroup: this.dr.form,\r\n            tools: {\r\n                utils: this.dg.commonUtils,\r\n                format: this.dg.colFormatSer,\r\n                number: this.dg.colFormatSer['numberhelper'],\r\n                date: this.dg.colFormatSer['datehelper']\r\n            },\r\n        };\r\n    }\r\n\r\n    ngAfterViewInit(): void {\r\n        this.buildCustomCellStyle();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.cellSubscription) {\r\n            this.cellSubscription.unsubscribe();\r\n            this.cellSubscription = null;\r\n        }\r\n\r\n        if (this.rowUpdateSubscription) {\r\n            this.rowUpdateSubscription.unsubscribe();\r\n            this.rowUpdateSubscription = null;\r\n        }\r\n    }\r\n\r\n\r\n    private buildCustomCellStyle(rowData = null) {\r\n        const td = this.el.nativeElement.parentNode;\r\n        if (!td.id) {\r\n            td.id = TR_PREFIX + this.dr.rowId + '_' + this.rowIndex + '-' + this.column.field;\r\n        }\r\n        td.id = td.id.replace(/\\./g, '_');\r\n\r\n        if (this.column.styler) {\r\n            const _rd = rowData || this.rowData;\r\n            const cs = this.column.styler(_rd[this.column.field], _rd, this.rowIndex);\r\n            if (cs && Object.keys(cs).length) {\r\n                this.dg.renderCustomStyle(cs, td);\r\n            }\r\n        } else {\r\n            this.dg.dgs.removeCssRule('#' + td.id);\r\n        }\r\n    }\r\n\r\n    updateValue(val?: any) {\r\n        if (this.dr.form) {\r\n            // this.rowData = Object.assign(this.rowData, this.dr.form.value);\r\n            Utils.setValue(this.column.field, val, this.rowData);\r\n            // this.rowData = {...this.rowData};\r\n            const rowid = this.rowData[this.dg.idField];\r\n            const item = this.dg.data.find(n => n[this.dg.idField] === rowid);\r\n            if (item) {\r\n                Utils.setValue(this.column.field, val, item);\r\n            }\r\n\r\n            this.dfs.updateCheckedData(rowid, { [this.column.field]: val });\r\n\r\n            if (!this.cd['destroyed']) {\r\n                this.cd.detectChanges();\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { BehaviorSubject, Subject } from 'rxjs';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-19 15:48:27\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Directive, Input, ElementRef, Renderer2, OnInit, ContentChild, OnDestroy, Injector, forwardRef, Inject, AfterViewInit, NgZone, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport { filter, map, switchMap, takeLast, debounceTime } from 'rxjs/operators';\r\nimport { DatagridService } from './../../services/datagrid.service';\r\nimport { DatagridCellComponent } from './datagrid-cell.component';\r\nimport { DatagridBodyComponent } from './datagrid-body.component';\r\nimport { DatagridRowDirective } from './datagrid-row.directive';\r\nimport { DataColumn } from './../../types/data-column';\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { CELL_SELECTED_CLS, CELL_EDITING_CLS, ALLOW_EDIT_CELL_HIGHLIGHT_CLS } from '../../types/constant';\r\nimport { DomHandler } from '../../services/domhandler';\r\nimport { of, Subscription, bindCallback } from 'rxjs';\r\nimport { Utils } from '../../utils/utils';\r\n\r\n@Directive({\r\n    selector: '[cell-editable]',\r\n    exportAs: 'cellEditable'\r\n})\r\nexport class DatagridCellEditableDirective implements OnInit, OnDestroy, OnChanges, AfterViewInit {\r\n    @Input('cell-editable') rowData: any;\r\n    @Input() column: DataColumn;\r\n\r\n    private clickTimer: any;\r\n\r\n    private cellclick: any;\r\n    private celldblclick: any;\r\n    private bindCellEventSubscription: Subscription;\r\n\r\n    private editorInputKeydownEvent: any;\r\n    editor: any;\r\n    formControl: FormControl;\r\n    cellEditorRef: any;\r\n    // get editor() {\r\n    //     if (this.dc.cellEditor) {\r\n    //         const _editor = this.dc.cellEditor.componentRef.instance;\r\n    //         this.dg.pending = _editor.pending;\r\n    //         return _editor;\r\n    //     }\r\n    //     return null;\r\n    // }\r\n\r\n    // get formControl() {\r\n    //     if (this.editor) {\r\n    //         return this.editor.formControl as FormControl;\r\n    //     }\r\n    //     return null;\r\n    // }\r\n\r\n    @ContentChild(DatagridCellComponent) dc: DatagridCellComponent;\r\n    private dgb: DatagridBodyComponent;\r\n    private dr: DatagridRowDirective;\r\n    private dfs: DatagridFacadeService;\r\n    private dgs: DatagridService;\r\n\r\n    // private _readonly$ = null;\r\n    private cellEditorCreatedSubscription = null;\r\n    private cellEditorDestorySubscription = null;\r\n\r\n    constructor(\r\n        private injector: Injector, public el: ElementRef, private render: Renderer2,\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent, public ngZone: NgZone) {\r\n        this.dgb = this.injector.get(DatagridBodyComponent);\r\n        this.dr = this.injector.get(DatagridRowDirective);\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dgs = this.injector.get(DatagridService);\r\n\r\n\r\n        if (!this.cellEditorCreatedSubscription) {\r\n            this.cellEditorCreatedSubscription = this.dgs.cellEditorCreated.pipe(\r\n                filter(({ column, editorRef, cellEditorRef, templateRef }) => {\r\n                    return column.field === this.column.field && this.dg.selectedRow.id === this.dr.rowId;\r\n                })\r\n            ).subscribe(({ editorRef, cellEditorRef, templateRef }) => {\r\n                // console.log('ååæ ¼ç¼è¾å¨åå»ºOK', editorRef);\r\n                if (editorRef) {\r\n                    this['editor'] = editorRef.instance;\r\n                    this['formControl'] = this.editor.formControl as FormControl;\r\n                    this.cellEditorRef = cellEditorRef;\r\n                    this.emitBeginEdit();\r\n                } else {\r\n                    this['formControl'] = this.dr.form.get(this.column.field) as FormControl;\r\n                    this.bindEditorInputEvent();\r\n                    this.dg.beginEdit.emit({ editor: null, column: this.column, rowData: this.rowData, gridInstance: this.dg, template: templateRef });\r\n                }\r\n\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.rowData && !changes.rowData.isFirstChange()) {\r\n            this.setCellClsWithEditorType();\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initCellEvent();\r\n        this.setCellClsWithEditorType();\r\n    }\r\n\r\n    private initCellEvent() {\r\n        // this.cellclick = this.render.listen(this.el.nativeElement, 'click', (e) => this.onClickCell(e));\r\n        if (this.column && (this.column.editor || this.column.editorTemplate)) {\r\n            if (!this.dg.clickToEdit) {\r\n                this.celldblclick = this.render.listen(this.el.nativeElement, 'dblclick', (e) => {\r\n                    this.onDblClickCell(e);\r\n                });\r\n            }\r\n            this.el.nativeElement.edit = (e) => this.onClickCell(e);\r\n            this.el.nativeElement.editCell = (e) => {\r\n                this.openCellEditor();\r\n            };\r\n        } else {\r\n            this.clickTimer = 0;\r\n        }\r\n        this.el.nativeElement.gridCellData = { rowData: this.rowData, rowIndex: this.dr.rowIndex };\r\n        this.el.nativeElement.closeEdit = () => this.closeEditingCell();\r\n        this.el.nativeElement.selectCell = (e, el) => {\r\n            if (this.dg.disableRow && this.dg.disableRow(this.rowData, this.dr.rowIndex)) {\r\n                return;\r\n            }\r\n\r\n            if (this.dg.currentCell && this.dg.currentCell.cellElement.id === el.id && !this.dg.keepSelect) {\r\n                this.dg.cancelSelectCell();\r\n            } else {\r\n                this.selectCell(this.column.field, el);\r\n                this.dg.cellClick.emit({ column: this.column, rowData: this.rowData, gridInstance: this.dg, event: e });\r\n            }\r\n        };\r\n        this.el.nativeElement.cancelSelected = () => {\r\n            DomHandler.removeClass(this.el.nativeElement, CELL_SELECTED_CLS);\r\n            this.render.removeClass(this.el.nativeElement, CELL_EDITING_CLS);\r\n        };\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.cellclick) {\r\n            this.cellclick();\r\n        }\r\n\r\n        if (this.celldblclick) {\r\n            this.celldblclick();\r\n        }\r\n\r\n        this.unBindEditorInputEvent();\r\n\r\n        if (this.bindCellEventSubscription) {\r\n            this.bindCellEventSubscription.unsubscribe();\r\n            this.bindCellEventSubscription = null;\r\n        }\r\n\r\n        if (this.cellEditorCreatedSubscription) {\r\n            this.cellEditorCreatedSubscription.unsubscribe();\r\n            this.cellEditorCreatedSubscription = null;\r\n        }\r\n\r\n        if (this.cellEditorDestorySubscription) {\r\n            this.cellEditorDestorySubscription.unsubscribe();\r\n            this.cellEditorDestorySubscription = null;\r\n        }\r\n\r\n    }\r\n\r\n    private isDifferentCell() {\r\n        if (!this.dg.currentCell) {\r\n            return true;\r\n        } else {\r\n            if (!this.dg.selectedRow || this.dg.selectedRow.index !== this.dr.rowIndex) {\r\n                return true;\r\n            } else {\r\n                if (this.dr.rowIndex !== this.dg.currentCell.rowIndex) {\r\n                    return true;\r\n                } else {\r\n                    return this.dg.currentCell.field !== this.column.field;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private onClickCell(event: any) {\r\n        // å³é­å¶ä»Grid çç¼è¾å¨\r\n        document.body.click();\r\n\r\n        this.dg.beforeClickCell.emit({ rowIndex: this.dr.rowIndex, rowData: this.rowData, column: this.column, gridInstance: this.dg });\r\n\r\n        if (this.dr.disabled) {\r\n            return;\r\n        }\r\n\r\n        // 20210422\r\n        // if (this.dg.closeOtherGridEditor) {\r\n        //     document.body.click();\r\n        // }\r\n\r\n        if (this.dg.disabled) {\r\n            return;\r\n        } else {\r\n            if (!this.dg.editable || this.isReadonly()) {\r\n                if (this.dg.enableHighlightCell) {\r\n                    event.stopPropagation();\r\n                    this.dg.endEditing();\r\n                    this.selectCell(this.column.field);\r\n                }\r\n                return;\r\n            } else {\r\n                if (this.dg.editMode === 'row') {\r\n                    return;\r\n                }\r\n            }\r\n        }\r\n\r\n        if (this.dg.selectionMode === 'default' && event) {\r\n            if (event.ctrlKey || event.shiftKey) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        event.stopPropagation();\r\n        if (event.target['nodeName'] === 'INPUT') {\r\n            return;\r\n        }\r\n\r\n\r\n        if (this.dg.clickToEdit && !this.dg.dblclickRow.observers.length) {\r\n            this.dg.clickDelay = 0;\r\n        }\r\n\r\n\r\n        this.render.addClass(this.dg.el.nativeElement, 'f-datagrid-unselect');\r\n\r\n        if (!this.dg.isSingleClick && this.dg.editMode) {\r\n            this.dg.isSingleClick = true;\r\n            this.clickTimer = setTimeout(() => {\r\n                if (this.dg.isSingleClick && this.dg.editable && this.dg.editMode === 'cell') {\r\n                    this.dg.isSingleClick = false;\r\n                    clearTimeout(this.clickTimer);\r\n                    // if (!this.closeEditingCell()) {\r\n                    //     return;\r\n                    // }\r\n                    this.closeEditingCell().subscribe((f: any) => {\r\n                        if (f) {\r\n                            if (this.dg.clickToEdit) {\r\n                                this.openCellEditor();\r\n                            } else {\r\n                                this.selectCell(this.column.field);\r\n                            }\r\n                            this.render.removeClass(this.dg.el.nativeElement, 'f-datagrid-unselect');\r\n                            event.preventDefault();\r\n                        }\r\n                    });\r\n                }\r\n            }, this.dg.clickDelay);\r\n        }\r\n    }\r\n\r\n    private onDblClickCell(event: MouseEvent) {\r\n        if (this.dg.disabled || this.isReadonly()) {\r\n            return;\r\n        }\r\n\r\n        if (event.target['nodeName'] === 'INPUT' || event.target['nodeName'] === 'TEXTAREA') {\r\n            return;\r\n        }\r\n        if (this.dg.editable && this.dg.editMode === 'cell') {\r\n            // if (!this.closeEditingCell()) {\r\n            //     return;\r\n            // }\r\n            this.closeEditingCell().subscribe(f => {\r\n                if (f) {\r\n                    setTimeout(() => {\r\n                        this.openCellEditor();\r\n                    });\r\n                }\r\n            });\r\n        }\r\n        if (this.clickTimer) {\r\n            this.dg.isSingleClick = false;\r\n            clearTimeout(this.clickTimer);\r\n            this.clickTimer = null;\r\n        }\r\n    }\r\n\r\n    isReadonly(col = this.column) {\r\n        // åä¸åå¹¶çååæ ¼ä¸åè®¸ç¼è¾\r\n        if (this.dg.mergeCell && this.dg.mergeFields.indexOf(col.field) > -1) {\r\n            return true;\r\n        }\r\n        return this.getReadonlyValue(col);\r\n    }\r\n\r\n    private getReadonlyValue(col = this.column) {\r\n        if (col.readonly !== undefined) {\r\n            if (typeof col.readonly === 'boolean') {\r\n                return col.readonly;\r\n            } else if (typeof col.readonly === 'function') {\r\n                return col.readonly(this.rowData);\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n\r\n    openCellEditor() {\r\n        // å½åè¡ç¦ç¨ï¼ä¸åè®¸ç¼è¾ã\r\n        if (this.dr.disabled) {\r\n            return;\r\n        }\r\n\r\n        if ((!this.column.editor && !this.column.editorTemplate) || !this.dg.editable || this.isReadonly()) {\r\n            this.selectCell(this.column.field);\r\n            return;\r\n        }\r\n\r\n        const beforeEditEvent = this.dg.beforeEdit({ rowIndex: this.dr.rowIndex, rowData: this.rowData, column: this.column, gridInstance: this.dg });\r\n        if (!beforeEditEvent || !beforeEditEvent.subscribe) {\r\n            console.warn('please return an Observable Type.');\r\n            return;\r\n        }\r\n\r\n        if (this.dg.currentCell) {\r\n            if (!this.dg.currentCell.cellRef || this.dg.currentCell.cellRef.column.field !== this.column.field) {\r\n                this.dg.currentCell.cellRef = this.dc;\r\n            }\r\n        }\r\n\r\n\r\n        beforeEditEvent.subscribe((flag) => {\r\n            if (flag) {\r\n                if (this.isDifferentCell()) {\r\n                    this.selectCell(this.column.field);\r\n                }\r\n\r\n                this.dfs.editCell();\r\n                // this.emitBeginEdit();\r\n            } else {\r\n                this.selectCell(this.column.field);\r\n            }\r\n        });\r\n    }\r\n\r\n    private emitBeginEdit() {\r\n\r\n        const _cellEditorRef = this.cellEditorRef || this.dc.cellEditor;\r\n\r\n        this.render.removeClass(this.dg.el.nativeElement, 'f-datagrid-unselect');\r\n\r\n        if (this.dg.editMode === 'cell') {\r\n            this.dg.selectedRow.editors = [this.editor];\r\n            this.dg.currentCell.editor = this.editor;\r\n            this.dg.currentCell.cellEditorRef = _cellEditorRef;\r\n            this.bindEditorInputEvent();\r\n\r\n            this.render.addClass(this.el.nativeElement, CELL_EDITING_CLS);\r\n\r\n            // this.formControl.setValue(this.dc.value);\r\n            this.dg.beginEdit.emit({ editor: _cellEditorRef, column: this.column, rowData: this.rowData, gridInstance: this.dg });\r\n\r\n            if (this.column.editor.type === 'textarea' && this.column.editor.options && this.column.editor.options.editType === 'dialog') {\r\n                this.editor.showDialog();\r\n            }\r\n        }\r\n\r\n        if (this.dr && !this.dg.nowrap) {\r\n            this.dr.updateRowHeight();\r\n        }\r\n    }\r\n\r\n    closeEditingCell() {\r\n        if (!this.dg.isCellEditing()) {\r\n            return of(true);\r\n        }\r\n\r\n        let currentCell = null;\r\n        let editor: any = null;\r\n        if (this.dg.currentCell) {\r\n            // this.dg.currentCell.isEditing = false;\r\n            // this.dfs.getCurrentCell().isEditing = false;\r\n\r\n            currentCell = this.dg.currentCell.cellRef as DatagridCellComponent;\r\n            if (currentCell) {\r\n                if (!currentCell.isEditing) {\r\n                    return of(true);\r\n                }\r\n\r\n                if (currentCell.cellEditor && currentCell.cellEditor.componentRef && !currentCell.column.editorTemplate) {\r\n                    editor = currentCell.cellEditor.componentRef.instance;\r\n\r\n                    if (editor) {\r\n                        // æ§è¡blur äºä»¶\r\n                        if (editor.inputElement) {\r\n                            const domName = editor.inputElement.nodeName;\r\n                            const blurFn =  editor.options && editor.options.onBlur;\r\n                            if (blurFn) {\r\n                                if ((domName === 'INPUT' || domName === 'TEXTAREA') &&  this.dg['focusElement'] === editor.inputElement) {\r\n                                    blurFn({ editorRef: editor, rowData: currentCell.rowData});\r\n                                }\r\n                            }\r\n                            if (editor.inputElement.blur) {\r\n                                editor.inputElement.blur();\r\n                            }\r\n\r\n                            this.dg['focusElement'] = null;\r\n                        }\r\n\r\n                        if (editor.blur) {\r\n                            editor.blur();\r\n                        }\r\n\r\n                        if (editor.pending) {\r\n                            return of(false);\r\n                        }\r\n\r\n                        if (editor.formControl) {\r\n                            if (editor.formControl.pending) {\r\n                                return of(false);\r\n                            }\r\n\r\n                            if (editor.formControl && editor.formControl.invalid && !this.dg.endEditByInvalid) {\r\n                                return of(false);\r\n                            }\r\n                        } else {\r\n                            return of(true);\r\n                        }\r\n                    } else {\r\n                        return of(true);\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            return of(true);\r\n        }\r\n\r\n        this.dg.isSingleClick = false;\r\n        const _col_ = (editor || currentCell).column;\r\n        const afterEditEvent = this.dg.afterEdit(currentCell.rowIndex, currentCell.rowData, _col_, editor);\r\n        if (!afterEditEvent || !afterEditEvent.subscribe) {\r\n            console.warn('please return an Observable Type.');\r\n            return;\r\n        }\r\n\r\n        let cellEndEdit = of(undefined);\r\n\r\n        afterEditEvent.subscribe((flag: boolean) => {\r\n            if (flag) {\r\n                let val = currentCell.value;\r\n                if (currentCell && currentCell.formControl && val !== currentCell.formControl.value) {\r\n                    val = currentCell.formControl.value;\r\n                    currentCell.isEditing = false;\r\n                    currentCell.updateValue(val);\r\n                }\r\n                this.dfs.endEditCell();\r\n                this.dgs.onEndCellEdit(this.dfs.getCurrentCell());\r\n                this.unBindEditorInputEvent();\r\n                // ç§»é¤ç¼è¾æ ·å¼\r\n                this.render.removeClass(this.el.nativeElement, CELL_EDITING_CLS);\r\n\r\n                if (this.dg.selectedRow) {\r\n                    this.dg.selectedRow.editors = [];\r\n                }\r\n                // this.dg.selectedRow.data = this.rowData;\r\n                // æ´æ°è¡æ ·å¼æèååæ ¼æ ·å¼\r\n                this.dfs.rowUpdate$.next({ index: currentCell.rowIndex, data: currentCell.rowData, cellRef: currentCell });\r\n                this.dg.endEdit.emit({ rowIndex: currentCell.rowIndex, rowData: currentCell.rowData, column: _col_, value: val });\r\n\r\n                // æ´æ°footerData\r\n                this.dgs.refreshFooterData.emit();\r\n                cellEndEdit = of(true);\r\n                // å·æ°è¡æ°æ®\r\n                // this.dr.refresh();\r\n                if (this.dg.selectedRow && this.dg.selectedRow.dr) {\r\n                    this.dg.selectedRow.dr.refresh();\r\n                }\r\n\r\n            } else {\r\n                if (currentCell && currentCell.cellEditor) {\r\n                    editor = currentCell.cellEditor.componentRef.instance;\r\n                    editor.inputElement.focus();\r\n                    cellEndEdit = of(false);\r\n                } else {\r\n                    cellEndEdit = of(true);\r\n                }\r\n            }\r\n        });\r\n        return cellEndEdit;\r\n    }\r\n\r\n    cancelCellEditing() {\r\n        if (this.dg.currentCell && this.dg.currentCell.isEditing && this.dg.selectedRow.index > -1) {\r\n            this.dfs.resetRow(this.dg.selectedRow.id);\r\n            this.dc.rowData = this.dg.selectedRow.data;\r\n            this.formControl.reset(Utils.getValue(this.column.field, this.dc.rowData));\r\n            this.closeEditingCell();\r\n        }\r\n    }\r\n\r\n\r\n    bindEditorInputEvent() {\r\n        const ceRef = this.cellEditorRef || this.dc.cellEditor;\r\n        let input = null;\r\n        if (ceRef) {\r\n            input = ceRef.componentRef.instance.inputElement;\r\n        } else {\r\n            if (this.column.editorTemplate) {\r\n                input = this.dc.el.nativeElement.querySelector('input,textarea');\r\n            }\r\n        }\r\n        if (input) {\r\n            input.focus();\r\n            if (this.dg.selectOnEditing && this.column.editorTemplate) {\r\n                setTimeout(() => {\r\n                    if (input.select) { input.select(); }\r\n                });\r\n            }\r\n\r\n            this.editorInputKeydownEvent = this.render.listen(input, 'keydown', (e) => {\r\n                this.onKeyDownForInput(e);\r\n            });\r\n        }\r\n    }\r\n\r\n    unBindEditorInputEvent() {\r\n        if (this.editorInputKeydownEvent) {\r\n            this.editorInputKeydownEvent();\r\n            this.editorInputKeydownEvent = null;\r\n        }\r\n    }\r\n\r\n    onKeyDownForInput(e: KeyboardEvent) {\r\n        const keyCode = e.keyCode;\r\n        if (e.altKey || e.ctrlKey) {\r\n            return;\r\n        }\r\n        if ((this.editor && this.editor.stopPropagation) || keyCode === 13 || this.column.editorTemplate) {\r\n            e.stopPropagation();\r\n        }\r\n\r\n        switch (keyCode) {\r\n            case 32:  // SPACE\r\n                if (this.column.editor.type === 'switch') {\r\n                    e.preventDefault();\r\n                    this.editor.instance.updateChecked(e, false);\r\n                }\r\n                break;\r\n            case 13:  // Enter\r\n                this.closeEditingCell().pipe(\r\n                    debounceTime(100)\r\n                ).subscribe(f => {\r\n                    if (f) {\r\n                        const enterParam = { gird: this.dg, cell: this.dg.currentCell, event: e };\r\n                        if (this.column.onEnterHandler) {\r\n                            this.column.onEnterHandler(enterParam);\r\n                        } else {\r\n                            const nextTd = this.dg.currentCell.cellElement.nextElementSibling;\r\n                            if (this.dg.currentCell.lastRow && !nextTd) {\r\n                                this.dg.lastCellEnterHandle.emit(enterParam);\r\n                            }\r\n                        }\r\n                    }\r\n                });\r\n                break;\r\n            case 27: // ESC\r\n                this.cancelCellEditing();\r\n                break;\r\n            case 9: // Tab\r\n                e.stopPropagation();\r\n                this.dg.clickDelay = 0;\r\n                if (e.shiftKey) {\r\n                    this.closeEditingCell().subscribe(f => {\r\n                        if (f) {\r\n                            this.movePrevCellAndEdit();\r\n                        }\r\n                    });\r\n                } else {\r\n                    this.closeEditingCell().subscribe(f => {\r\n                        if (f) {\r\n                            this.moveNextCellAndEdit(e);\r\n                        }\r\n                    });\r\n                    e.preventDefault();\r\n                }\r\n                break;\r\n        }\r\n    }\r\n\r\n    private selectCell(field: string, tdElement?: any) {\r\n        this.closeEditingCell();\r\n        tdElement = tdElement || this.el.nativeElement;\r\n        this.clearCellSelectedClass();\r\n        if (field !== this.dg.ControlPanelFeild) {\r\n            this.render.addClass(tdElement, CELL_SELECTED_CLS);\r\n        }\r\n        // this.dr.drHover.setRowHoverCls(false);\r\n        this.dfs.setCurrentCell(this.dr, field, tdElement, this.dc);\r\n        this.moveScrollbar(tdElement);\r\n    }\r\n\r\n    private moveScrollbar(td: any) {\r\n        const tdPosLeft = td.offsetLeft + td.offsetWidth;\r\n        const containerWidth = this.dg.width - this.dgb.columnsGroup.leftFixedWidth;\r\n        const tdRect = td.getBoundingClientRect();\r\n        const scrollContainer = this.dgb.ps.elementRef.nativeElement;\r\n        const psContainer = scrollContainer.getBoundingClientRect();\r\n        const scrollTop = scrollContainer.scrollTop;\r\n        const scrollLeft = scrollContainer.scrollLeft;\r\n        const scrollbarXLeft = this.dgb.ps.elementRef.nativeElement.scrollLeft;\r\n        if (tdPosLeft > containerWidth) {\r\n            const x = tdPosLeft - containerWidth + 2;\r\n            if (x > scrollbarXLeft) {\r\n                this.dgb.ps.scrollToX(x);\r\n            }\r\n        } else {\r\n            if (tdRect.x < psContainer.x) {\r\n                const x = scrollLeft - tdRect.x;\r\n                this.dgb.ps.scrollToX(x);\r\n            }\r\n        }\r\n\r\n        const tdPosTop = tdRect.top - psContainer.top + tdRect.height;\r\n        if (tdPosTop > psContainer.height) {\r\n            const y = tdPosTop - psContainer.height;\r\n            this.dgb.ps.scrollToY(scrollTop + y);\r\n        } else {\r\n            if (tdRect.y < psContainer.y) {\r\n                this.dgb.ps.scrollToY(scrollTop - (psContainer.y - tdRect.y));\r\n            }\r\n        }\r\n    }\r\n\r\n    private moveNextCellAndEdit(event?: any) {\r\n        // if (!this.closeEditingCell()) {\r\n        //     return;\r\n        // }\r\n        const fieldIndex = this.dfs.getColumnIndex(this.column.field);\r\n        if (fieldIndex + 1 < this.dgb.columnsGroup.normalColumns.length) {\r\n            const nextColumn = this.dgb.columnsGroup.normalColumns[fieldIndex + 1];\r\n\r\n            const nextTd = this.dg.currentCell.cellElement.nextElementSibling;\r\n            if (nextColumn && ((!nextColumn.editor && !nextColumn.editorTemplate) || this.isReadonly(nextColumn))) {\r\n                if (nextTd) {\r\n                    nextTd.selectCell(event, nextTd);\r\n                }\r\n                return;\r\n            }\r\n\r\n            if (nextTd) {\r\n                nextTd.focus();\r\n                if (nextColumn.editor || nextColumn.editorTemplate) {\r\n                    nextTd.editCell();\r\n                    this.dgs.onCellEdit(nextTd);\r\n                }\r\n            }\r\n        } else {\r\n            // next row's first cell to editing\r\n            const nextTr = this.dg.currentCell.cellElement.parentElement.nextElementSibling;\r\n            if (nextTr && nextTr.tagName === 'TR') {\r\n                // nextTr.children.find(td => td.editCell).editCell();\r\n                let firstEditor = false;\r\n                let i = 0;\r\n                while (!firstEditor) {\r\n                    firstEditor = !!nextTr.children[i].editCell;\r\n                    if (!firstEditor) {\r\n                        i++;\r\n                    }\r\n                }\r\n                if (this.dg.selectionMode === 'default') {\r\n                    this.dg.clearCheckeds();\r\n                }\r\n                nextTr.children[i].editCell();\r\n            }\r\n        }\r\n    }\r\n\r\n    private movePrevCellAndEdit() {\r\n        // if (!this.closeEditingCell()) {\r\n        //     return;\r\n        // }\r\n        const fieldIndex = this.dfs.getColumnIndex(this.column.field);\r\n        if (fieldIndex - 1 >= 0) {\r\n            const nextColumn = this.dgb.columnsGroup.normalColumns[fieldIndex - 1];\r\n            if (nextColumn && this.isReadonly(nextColumn)) {\r\n                return;\r\n            }\r\n            const nextTd = this.dg.currentCell.cellElement.previousElementSibling;\r\n            if (nextTd) {\r\n                // this.selectCell(nextColumn.field, nextTd);\r\n                nextTd.focus();\r\n                if (nextColumn.editor) {\r\n                    // this.dfs.editCell();\r\n                    nextTd.click();\r\n                    this.dgs.onCellEdit(nextTd);\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    private clearCellSelectedClass() {\r\n        if (this.dg.currentCell) {\r\n            DomHandler.removeClass(this.dg.currentCell.cellElement, CELL_SELECTED_CLS);\r\n            this.render.removeClass(this.dg.currentCell.cellElement, CELL_EDITING_CLS);\r\n\r\n            const selectedCell = this.dg.el.nativeElement.querySelectorAll('.' + CELL_SELECTED_CLS);\r\n            if (selectedCell.length) {\r\n                selectedCell.forEach(n => {\r\n                    this.render.removeClass(n, CELL_SELECTED_CLS);\r\n                });\r\n            }\r\n        }\r\n\r\n        this.dg.removeCellSelectedCls();\r\n    }\r\n\r\n    private setCellClsWithEditorType() {\r\n\r\n        // è®¾ç½®å½åéä¸­ååæ ¼æ ·å¼\r\n        if (this.dg.currentCell && this.dg.enableHighlightCell) {\r\n            if (this.dg.currentCell.field === this.column.field && this.dg.currentCell.rowId === this.rowData[this.dg.idField] && !this.dc.isEditing) {\r\n                this.clearCellSelectedClass();\r\n                this.render.addClass(this.el.nativeElement, CELL_SELECTED_CLS);\r\n            }\r\n        }\r\n\r\n\r\n        if (!this.dg.enableEditCellStyle) {\r\n            return;\r\n        }\r\n\r\n        const td = this.el.nativeElement;\r\n        this.cleanOtherEditorIcon(td);\r\n        // å½åè¡ç¦ç¨ï¼ä¸åè®¸ç¼è¾ã\r\n        if (this.dr.disabled) {\r\n            return;\r\n        }\r\n\r\n        if (!this.column.editor) {\r\n            return;\r\n        }\r\n\r\n        if (this.isReadonly()) {\r\n            return;\r\n        }\r\n\r\n        const editorType = this.column.editor.type;\r\n        const cls = this.column.align === 'right' ? 'allow-edit-cell-left' : 'allow-edit-cell';\r\n        this.render.addClass(td, cls);\r\n        this.render.addClass(td, ALLOW_EDIT_CELL_HIGHLIGHT_CLS[editorType]);\r\n    }\r\n\r\n    private cleanOtherEditorIcon(td) {\r\n        const values = Object.values(ALLOW_EDIT_CELL_HIGHLIGHT_CLS);\r\n        values.forEach(v => {\r\n            if (td.className.indexOf(v) > -1) {\r\n                td.className = td.className.replace('allow-edit-cell-left', '').replace('allow-edit-cell', '');\r\n                td.className = td.className.replace(v, '');\r\n            }\r\n        });\r\n    }\r\n}\r\n","\r\n\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-20 08:19:06\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, ViewChild, ElementRef, AfterViewInit, Injector, Inject, forwardRef } from '@angular/core';\r\nimport { ChangeDetectorRef, NgZone, OnDestroy } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { DataColumn, SCROLL_X_ACTION, TR_ID_PREFIX } from '../../types';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridBodyComponent } from './datagrid-body.component';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport { IS_GROUP_ROW_FIELD, GROUP_ROW_FIELD, IS_GROUP_FOOTER_ROW_FIELD, GROUP_VISIBLE_FIELD, GROUP_LEVEL_FIELD } from '../../services/state';\r\n@Component({\r\n    selector: 'datagrid-rows',\r\n    templateUrl: './datagrid-rows.component.html',\r\n    // changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class DatagridRowsComponent implements OnInit, AfterViewInit, OnDestroy {\r\n\r\n    @Input() startRowIndex: number;\r\n    @Input() data: any;\r\n    @Input() columns: DataColumn[];\r\n    @ViewChild('tableEl') tableEl: ElementRef;\r\n    /** æ¯å¦ä¸ºå³ä¾§åºå®åãé»è®¤ä¸º false */\r\n    @Input() fixedRight = false;\r\n\r\n    isGroupRow = IS_GROUP_ROW_FIELD;\r\n    groupRow = GROUP_ROW_FIELD;\r\n    isGroupFooter = IS_GROUP_FOOTER_ROW_FIELD;\r\n    visible = GROUP_VISIBLE_FIELD;\r\n    groupLevelField = GROUP_LEVEL_FIELD;\r\n\r\n    filterConditions = '';\r\n\r\n\r\n    get groupSummaryDataInGroupRow() {\r\n        return this.dg.groupSummaryPosition === 'inGroupRow';\r\n    }\r\n\r\n    private ro: ResizeObserver = null;\r\n    private scrollToCurrentRowSubscription: Subscription;\r\n    private subscriptions: Subscription[] = [];\r\n    constructor(\r\n        public cd: ChangeDetectorRef,\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent,\r\n        @Inject(forwardRef(() => DatagridBodyComponent)) public dgb: DatagridBodyComponent,\r\n        public el: ElementRef, private injector: Injector, private ngZone: NgZone) {\r\n\r\n    }\r\n\r\n    private listenEvent() {\r\n        const _s3 = this.dg.dgs.setSelecedRow.subscribe((r: any) => {\r\n            this.detectChanges();\r\n        });\r\n        this.subscriptions.push(_s3);\r\n\r\n        const _s4 = this.dg.dfs.rowAppend$.subscribe(() => {\r\n            this.detectChanges();\r\n        });\r\n        this.subscriptions.push(_s4);\r\n\r\n        const _s5 = this.dg.dfs.rowUpdate$.subscribe((row: { index: number; data: any; }) => {\r\n            if (row) {\r\n                if (this.dg.groupRows) {\r\n                    if (this.dg.groupFooter) {\r\n                        this.dg.dfs.updateGroupFooter(row.data[this.groupRow]);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        this.subscriptions.push(_s5);\r\n\r\n        this.scrollToCurrentRowSubscription = this.dg.dgs.scrollToCurrentRow.subscribe(() => {\r\n            this.scrollToFirstSelectedRow();\r\n        });\r\n\r\n        this.dg.dfs.checkRow$.subscribe( () => {\r\n            this.detectChanges();\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.listenEvent();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.unSubscriptions();\r\n    }\r\n\r\n    private unSubscriptions() {\r\n        if (this.scrollToCurrentRowSubscription) {\r\n            this.scrollToCurrentRowSubscription.unsubscribe();\r\n            this.scrollToCurrentRowSubscription = null;\r\n        }\r\n\r\n        if (this.subscriptions && this.subscriptions.length) {\r\n            this.subscriptions.forEach(n => n.unsubscribe);\r\n            this.subscriptions = [];\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            setTimeout(() => {\r\n                // console.log(this.data);\r\n                if (!this.dg.nowrap) {\r\n                    // this.dgb.updateRowHeight();\r\n                    this.dg.calculateGridSize();\r\n                }\r\n            }, 100);\r\n        });\r\n    }\r\n\r\n    getGroupColumn(field) {\r\n        return this.dg.flatColumns.find(col => col.field === field);\r\n    }\r\n\r\n    private detectChanges() {\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    trackByField(index, item) {\r\n        return item.field;\r\n    }\r\n\r\n    isElementInViewport(el) {\r\n        const container = this.dgb.ps.instance.element.getBoundingClientRect();\r\n        const box = el.getBoundingClientRect();\r\n        const top = (box.top <= container.height + container.top);\r\n        const bottom = (box.bottom <= (container.bottom));\r\n\r\n        return (top && bottom);\r\n    }\r\n\r\n    private scrollToFirstSelectedRow() {\r\n        if (this.dg.selectedRow) {\r\n            const rowIndex = this.dg.selectedRow.index;\r\n            const rowId = TR_ID_PREFIX + this.dg.selectedRow.id;\r\n            const tr = document.querySelector(rowId);\r\n\r\n            if (rowIndex === 0) {\r\n                if (this.dgb.ps && this.dgb.ps.instance) {\r\n                    if (this.dgb.ps.instance.element.scrollTop === 0) {\r\n                        return;\r\n                    } else {\r\n                        this.dg.scrollInstance.scrollToY(0);\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n\r\n            const { top, bottom } = this.dgb.getVisibleRange();\r\n            if (rowIndex === top || rowIndex === bottom) {\r\n                return;\r\n            } else {\r\n\r\n                if (rowIndex > top && rowIndex < bottom && tr && this.isElementInViewport(tr)) {\r\n                    return;\r\n                }\r\n            }\r\n\r\n            if (tr) {\r\n                tr.scrollIntoView({ block: 'end', inline: 'nearest' });\r\n            } else {\r\n                const currentTrTop = rowIndex * this.dg.rowHeight;\r\n                if (currentTrTop) {\r\n                    this.dg.scrollInstance.scrollToY(currentTrTop);\r\n                }\r\n            }\r\n\r\n        }\r\n    }\r\n\r\n\r\n    toggleGroupRow(row, index, open) {\r\n        row.expanded = open;\r\n        this.setGroupRowsVisible(row, open);\r\n    }\r\n\r\n    private setGroupRowsVisible(row, open) {\r\n        if (row.rows) {\r\n            const groupRows = row.rows.filter(n => n[IS_GROUP_ROW_FIELD]);\r\n            const footerRows = row.rows.filter(n => n[IS_GROUP_FOOTER_ROW_FIELD]);\r\n\r\n            if (footerRows && footerRows.length) {\r\n                footerRows.forEach(n => {\r\n                    n[this.visible] = open && row.expanded;\r\n                });\r\n            }\r\n\r\n            groupRows.forEach(t => {\r\n                t[this.visible] = open && row.expanded && row[this.visible];\r\n                this.setGroupRowsVisible(t, open);\r\n            });\r\n\r\n            if (!groupRows.length) {\r\n                row.rows.forEach(t => {\r\n                    t[this.visible] = open && row.expanded && row[this.visible];\r\n                });\r\n            }\r\n        }\r\n    }\r\n\r\n    private mergeInfo(field: string, rowIndex: number) {\r\n        return this.dg.dgs.getMergeInfo(rowIndex, field, this.dg.mergeCellInfo);\r\n    }\r\n\r\n    showCell(col: DataColumn, rowIndex: number) {\r\n        const mergeInfo = this.mergeInfo(col.field, rowIndex);\r\n        let show = true;\r\n        if (mergeInfo) {\r\n            show = mergeInfo.show;\r\n        }\r\n\r\n        return show;\r\n    }\r\n\r\n    getRowSpan(col: DataColumn, rowIndex: number) {\r\n        const mergeInfo = this.mergeInfo(col.field, rowIndex);\r\n        if (!mergeInfo) {\r\n            return 1;\r\n        }\r\n        if (this.showCell(col, rowIndex)) {\r\n            col.readonly = true;\r\n            return mergeInfo.rowspan;\r\n        } else {\r\n            return 1;\r\n        }\r\n    }\r\n\r\n    getGroupSummaryData(groupId: string) {\r\n        const row = this.data.find(n =>  n['__group_parent_id__'] === groupId && n['__group_footer__']);\r\n        if (row) {\r\n            return row.data;\r\n        }\r\n        return null;\r\n    }\r\n}\r\n\r\n\r\n","import { Component } from '@angular/core';\r\n\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-09-06 08:30:18\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-09-06 08:34:35\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\n/** å¼å®¹èçæ¬ï¼xxxxxxx */\r\n@Component({\r\n    selector: 'grid-editor-textbox',\r\n    template: ''\r\n})\r\nexport class TextboxEditorComponent {}\r\n","import { QueryList } from '@angular/core';\r\n/*\r\n* @Author: ç¯çç§æ(Lucas Huang)\r\n* @Date: 2019-08-06 07:43:53\r\n* @LastEditors: ç¯çç§æ(Lucas Huang)\r\n* @LastEditTime: 2019-11-20 20:14:11\r\n* @QQ: 1055818239\r\n* @Version: v0.0.1\r\n*/\r\n\r\nimport { ComponentFactoryResolver, ViewContainerRef, OnChanges, SimpleChanges, ComponentRef, ViewChildren } from '@angular/core';\r\n\r\nimport {\r\n    Component, OnInit, Input, Renderer2, ViewChild, ElementRef,\r\n    AfterViewInit, ViewEncapsulation, Injector, ChangeDetectorRef, Directive, Optional, NgZone\r\n} from '@angular/core';\r\n\r\nimport { DataColumn } from './../../types/data-column';\r\nimport { ColumnGroup } from '../../types/data-column';\r\nimport { DatagridService } from '../../services/datagrid.service';\r\nimport { SCROLL_X_ACTION, FIXED_LEFT_SHADOW_CLS, SCROLL_X_REACH_START_ACTION, FIXED_RIGHT_SHADOW_CLS, SCROLL_X_REACH_END_ACTION, GRID_FILTER_ROW } from '../../types/constant';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridHeaderCheckboxComponent } from '../checkbox/datagrid-header-checkbox.component';\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport { DatagridFilterService } from '../../services/datagrid-filter.service';\r\nimport { of, Observable } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'datagrid-header',\r\n    templateUrl: './header.component.html',\r\n    encapsulation: ViewEncapsulation.None,\r\n    exportAs: 'dgHeader'\r\n})\r\nexport class DatagridHeaderComponent implements OnInit, AfterViewInit, OnChanges {\r\n    @Input() height = 35;\r\n    @Input() columns = [];\r\n    @Input() columnsGroup: ColumnGroup;\r\n    @Input() enableDragColumn = false;\r\n    @Input() wrapHeader = false;\r\n    @Input() enableFilterRow = false;\r\n\r\n    @Input() scrollbarMode = 'auto';\r\n\r\n    @ViewChild('header') header: ElementRef;\r\n    @ViewChild('headerContainer') headerColumnsTable: ElementRef;\r\n    @ViewChild('fixedLeft') fixedLeft: ElementRef;\r\n\r\n    private _chkall: DatagridHeaderCheckboxComponent;\r\n    @ViewChild('chkAll') set chkAll(v) {\r\n        this._chkall = v;\r\n    }\r\n\r\n    private fixedRight: ElementRef;\r\n    @ViewChild('fixedRight') set fr(val) {\r\n        if (val) {\r\n            this.fixedRight = val;\r\n        }\r\n    }\r\n\r\n    private dgs: DatagridService;\r\n    private dfs: DatagridFacadeService;\r\n    private ro: ResizeObserver | null = null;\r\n    private cfr: ComponentFactoryResolver;\r\n    private dfrs: DatagridFilterService;\r\n    private el: ElementRef;\r\n    rightFixedColumnWidth = 0;\r\n    normalColumnWidth = 0;\r\n\r\n    private cd: ChangeDetectorRef;\r\n    showOverlay = false;\r\n    disableSort = false;\r\n    private scrollX = 0;\r\n    showShadowCls = false;\r\n\r\n    top = 0;\r\n\r\n    // è¡å· ã å¤éæ¡ï¼å¨å¤è¡¨å¤´ä¸çåå¹¶è¡æ°\r\n    get rowSpan() {\r\n        return this.columns.length + (this.dg.enableFilterRow ? 1 : 0);\r\n    }\r\n\r\n\r\n    private ps;\r\n\r\n    constructor(\r\n        private render2: Renderer2, private injector: Injector,\r\n        @Optional() public dg: DatagridComponent, private ngZone: NgZone) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dgs = this.injector.get(DatagridService);\r\n        this.cfr = this.injector.get(ComponentFactoryResolver);\r\n        this.cd = this.injector.get(ChangeDetectorRef);\r\n        this.el = this.injector.get(ElementRef);\r\n        this.dfrs = this.dg.clientFilterService;\r\n\r\n\r\n        this.dgs.scorll$.subscribe((d: any) => {\r\n            if (d.type === SCROLL_X_ACTION || d.type === SCROLL_X_REACH_END_ACTION || d.type === SCROLL_X_REACH_START_ACTION) {\r\n\r\n                this.scrollX = d.x;\r\n\r\n                this.render2.setStyle(this.headerColumnsTable.nativeElement, 'transform', `translate3d(-${d.x}px, 0px, 0px)`);\r\n\r\n                if (!this.dg.groupRows) {\r\n                    if (this.fixedLeft) {\r\n                        if (d.x) {\r\n                            this.render2.addClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                        } else {\r\n                            this.render2.removeClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (d.type === SCROLL_X_REACH_START_ACTION) {\r\n                if (this.fixedLeft) {\r\n                    this.render2.removeClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                }\r\n            }\r\n\r\n        });\r\n\r\n        this.dgs.showFixedShadow.subscribe((e: any) => {\r\n            if (this.fixedRight) {\r\n                this.setFixedColumnPosition(e.showRightShadow, e.x);\r\n            }\r\n        });\r\n\r\n        this.dgs.disableHeader.subscribe((flag) => {\r\n            this.showOverlay = flag;\r\n            this.disableSort = flag;\r\n            this.cd.detectChanges();\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.dgs.checkedRowsTotalChanged$.subscribe(() => {\r\n            if (this._chkall) {\r\n                const checkedsCount = this.dfs.getCurrentPageCheckeds().length;\r\n                const isCheckAll = this.dfs.isCheckAll();\r\n                const isIndeterminate = isCheckAll || !checkedsCount;\r\n                this._chkall.chk.nativeElement.indeterminate = !isIndeterminate;\r\n                const _checked = isCheckAll && checkedsCount > 0;\r\n                this._chkall.updateStatus(_checked);\r\n            }\r\n        });\r\n\r\n        this.dgs.uncheckAll.subscribe(() => {\r\n            if (this.dg.showAllCheckbox && this._chkall) {\r\n                this._chkall.chk.nativeElement.indeterminate = false;\r\n                this._chkall.chk.nativeElement.checked = false;\r\n            }\r\n        });\r\n\r\n        this.dgs.checkAll.subscribe(() => {\r\n            if (this._chkall) {\r\n                this._chkall.chk.nativeElement.checked = true;\r\n            }\r\n        });\r\n\r\n        this.dgs.scrollbarUpdate.subscribe((ps: any) => {\r\n            this.ps = ps.scrollbarRef;\r\n            this.rightFixedColumnWidth = this.getRightFixedColWidth(this.ps);\r\n            if (this.fixedRight) {\r\n                this.setFixedColumnPosition(this.showShadowCls, 0);\r\n            }\r\n            this.cd.detectChanges();\r\n        });\r\n\r\n\r\n        this.dgs.showGridHeader.subscribe(() => {\r\n            this.setHeaderPosition();\r\n        });\r\n\r\n        this.dgs.smartFilterBarExpand.subscribe(() => {\r\n            this.setHeaderPosition();\r\n        });\r\n\r\n        this.rightFixedColumnWidth = this.getRightFixedColWidth(this.ps);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        setTimeout(() => {\r\n            this.setHeaderPosition();\r\n        });\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        // if (changes.scrollbarMode && !changes.scrollbarMode.isFirstChange()) {\r\n        //     this.rightFixedColumnWidth = this.getRightFixedColWidth(this.ps);\r\n        //     this.cd.detectChanges();\r\n        // }\r\n\r\n        if (changes.columnsGroup && !changes.columnsGroup.isFirstChange()) {\r\n            this.rightFixedColumnWidth = this.getRightFixedColWidth(this.ps);\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    private getRightFixedColWidth(ps = null) {\r\n        if (!this.columnsGroup) {\r\n            return 0;\r\n        }\r\n\r\n\r\n        let w = this.columnsGroup.rightFixedWidth;\r\n\r\n        if (!ps) {\r\n            ps = this.dg.scrollInstance.instance;\r\n        }\r\n\r\n        if (ps && ps.scrollbarYActive && this.scrollbarMode === 'allways') {\r\n            return w += this.showShadowCls ? 18 : 0;\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private setHeaderPosition() {\r\n        let top = 0;\r\n        if ((this.dg.enableFilterRow || this.dg.enableSmartFilter) && this.dg.showFilterBar) {\r\n            top += this.dg.filterBarHeight;\r\n        }\r\n\r\n        if (this.dg.showRowGroupPanel) {\r\n            top += this.dg.rowGroupPanelHeight;\r\n        }\r\n\r\n        this.top = top;\r\n        this.render2.setStyle(this.el.nativeElement, 'top', `${top}px`);\r\n    }\r\n\r\n    isShowShadow(fixedLeftWidth) {\r\n        const dgContainerWidth = this.dg.dgContainer.nativeElement.offsetWidth;\r\n        return dgContainerWidth < this.dg.colGroup.totalWidth;\r\n\r\n    }\r\n\r\n    isColspan(left, right, col, isdatafield = false) {\r\n        if (!left && !right) {\r\n            if (isdatafield) {\r\n                return !col.colspan && (!col.fixed || col.fixed === 'none');\r\n            } else {\r\n                return col.colspan && (!col.fixed || col.fixed === 'none');\r\n            }\r\n        } else if (left) {\r\n            if (isdatafield) {\r\n                return !col.colspan && col.fixed && col.fixed === 'left';\r\n            } else {\r\n                return col.colspan && col.fixed && col.fixed === 'left';\r\n            }\r\n        } else if (right) {\r\n            if (isdatafield) {\r\n                return !col.colspan && col.fixed && col.fixed === 'right';\r\n            } else {\r\n                return col.colspan && col.fixed && col.fixed === 'right';\r\n            }\r\n        }\r\n    }\r\n\r\n    setFixedColumnPosition(isShow, scrollLeft) {\r\n        this.showShadowCls = isShow;\r\n        const method = isShow ? 'addClass' : 'removeClass';\r\n        this.render2[method](this.fixedRight.nativeElement, FIXED_RIGHT_SHADOW_CLS);\r\n\r\n        const realWidth = this.columnsGroup.leftFixedWidth + this.columnsGroup.normalWidth + this.rightFixedColumnWidth;\r\n        const gridWidth = this.dg.width;\r\n        let l = this.dg.width - (this.dg.showBorder ? 2 : 0) - this.rightFixedColumnWidth;\r\n        if (gridWidth > realWidth) {\r\n            l = this.columnsGroup.leftFixedWidth + this.columnsGroup.normalWidth;\r\n        }\r\n\r\n        this.render2.setStyle(this.fixedRight.nativeElement, 'left', l + 'px');\r\n    }\r\n\r\n    onRowNumerColumnDblClick(e: MouseEvent, rntd: any) {\r\n        let maxRowNumber = this.dg.getRows().length;\r\n        if (this.dg.pagination) {\r\n            const pageSize = this.dg.pageSize;\r\n            const pageIndex = this.dg.pageIndex;\r\n            maxRowNumber = pageSize * pageIndex + pageSize;\r\n        }\r\n\r\n        this.dg.longTextArea.nativeElement.innerHTML = maxRowNumber;\r\n        const w1 = this.dg.longTextArea.nativeElement.offsetWidth;\r\n\r\n        const currentWidth = rntd.offsetWidth;\r\n\r\n        if (w1 > currentWidth) {\r\n            this.dg.lineNumberWidth = w1 + 10;\r\n            this.dfs.updateProperty('lineNumberWidth', this.dg.lineNumberWidth);\r\n            this.dfs.resizeColumns();\r\n        }\r\n    }\r\n\r\n    onSortColumnClick(e: MouseEvent, col: DataColumn) {\r\n        if (this.disableSort) {\r\n            return;\r\n        }\r\n\r\n        if (!col.sortable) {\r\n            return;\r\n        }\r\n        // ç»æç¼è¾\r\n        this.dg.cancelEdit(null);\r\n        const sortName = this.dg.sortName;\r\n        const sortOrder = this.dg.sortOrder;\r\n        let sortFields = [];\r\n        let sortOrders = [];\r\n        if (sortName) {\r\n            sortFields = sortName.split(',');\r\n            sortOrders = sortOrder.split(',');\r\n        }\r\n\r\n        const colOrder = col.order || 'asc';\r\n        let newOrder = colOrder;\r\n        const i = sortFields.findIndex(n => n === col.field);\r\n        if (i >= 0) {\r\n            const _order = sortOrders[i] === 'asc' ? 'desc' : 'asc';\r\n            newOrder = _order;\r\n            // if (this.dg.multiSort && newOrder === 'asc') {\r\n            if (newOrder === 'asc') {\r\n                newOrder = undefined;\r\n                sortFields.splice(i, 1);\r\n                sortOrders.splice(i, 1);\r\n            } else {\r\n                sortOrders[i] = _order;\r\n            }\r\n        } else {\r\n            if (this.dg.multiSort) {\r\n                sortFields.push(col.field);\r\n                sortOrders.push(colOrder);\r\n            } else {\r\n                sortFields = [col.field];\r\n                sortOrders = [colOrder];\r\n            }\r\n        }\r\n\r\n        col.order = newOrder;\r\n\r\n        this.dg.sortName = sortFields.join(',');\r\n        this.dg.sortOrder = sortOrders.join(',');\r\n        this.dfs.setSortInfo(this.dg.sortName, this.dg.sortOrder);\r\n\r\n        this.dg.beforeSortColumn(this.dg.sortName, this.dg.sortOrder, this.dg).subscribe(() => {\r\n            this.dg.onColumnSorted();\r\n        });\r\n    }\r\n}\r\n\r\n@Directive({\r\n    selector: '[filter-row-creator]'\r\n})\r\nexport class FilterRowCreateDirective implements OnInit, OnChanges {\r\n    @Input() left: boolean;\r\n    @Input() right: boolean;\r\n\r\n    private dgs: DatagridService;\r\n    private dfs: DatagridFacadeService;\r\n    private cfr: ComponentFactoryResolver;\r\n    private dfrs: DatagridFilterService;\r\n    private filterRowType: any;\r\n    private filterRowRef: ComponentRef<any>;\r\n    private cd: ChangeDetectorRef;\r\n    constructor(private vc: ViewContainerRef, private injector: Injector,\r\n        public dg: DatagridComponent, private ngZone: NgZone) {\r\n\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dgs = this.injector.get(DatagridService);\r\n        this.cfr = this.injector.get(ComponentFactoryResolver);\r\n        this.cd = this.injector.get(ChangeDetectorRef);\r\n        this.dfrs = this.dg.clientFilterService;\r\n\r\n        this.filterRowType = this.injector.get(GRID_FILTER_ROW, null);\r\n\r\n        this.dgs.clearFilter.subscribe(() => {\r\n            if (this.filterRowRef) {\r\n                this.filterRowRef.instance.clearFilterValue(false);\r\n            }\r\n        });\r\n        this.dgs.columnsChanged.subscribe(() => {\r\n            this.createFilterRow(true);\r\n        });\r\n\r\n\r\n        if (this.dfrs) {\r\n            this.dfrs.removeField.subscribe((f) => {\r\n                if (this.filterRowRef && f) {\r\n                    let flag = false;\r\n                    let _cols = [];\r\n                    if (this.left) {\r\n                        _cols = this.dg.colGroup.leftFixed || [];\r\n                    } else if (this.right) {\r\n                        _cols = this.dg.colGroup.rightFixed || [];\r\n                    } else {\r\n                        _cols = this.dg.colGroup.normalColumns || [];\r\n                    }\r\n\r\n                    flag = !!_cols.find(n => n.field === f);\r\n                    if (flag) {\r\n                        this.filterRowRef.instance.removeField(f);\r\n                    }\r\n                }\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.createFilterRow(true);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        // if (changes.columnsGroup && !changes.columnsGroup.isFirstChange()) {\r\n        //     this.createFilterRow();\r\n        // }\r\n    }\r\n\r\n    /** è¿æ»¤è¡ */\r\n    createFilterRow(rebuild = false) {\r\n        if (rebuild && this.filterRowRef) {\r\n            this.filterRowRef.destroy();\r\n            this.filterRowRef = null;\r\n        }\r\n\r\n        setTimeout(() => {\r\n            this._createFilterRow();\r\n            if (rebuild) {\r\n                this.cd.detectChanges();\r\n            }\r\n        });\r\n    }\r\n\r\n    private _createFilterRow() {\r\n        if (this.dg.enableFilterRow) {\r\n            if (!this.filterRowType) {\r\n                return;\r\n            }\r\n\r\n            let columnsData = this.dg.colGroup.normalColumns;\r\n            if (this.left) {\r\n                columnsData = this.dg.colGroup.leftFixed;\r\n            } else if (this.right) {\r\n                columnsData = this.dg.colGroup.rightFixed;\r\n            }\r\n\r\n            if (!this.filterRowRef && this.vc) {\r\n                const cf = this.cfr.resolveComponentFactory(this.filterRowType);\r\n                this.filterRowRef = this.vc.createComponent(cf);\r\n                this.filterRowRef.instance.columns = columnsData;\r\n                this.filterRowRef.instance.gridInstance = this.dg;\r\n                this.filterRowRef.instance.conditionChange.subscribe(n => {\r\n                    const conditions = n || {};\r\n                    this.dgs.onFilterChanged.emit(conditions);\r\n                });\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\n","import { Directive, Input, NgZone, ElementRef, Renderer2, AfterViewInit, OnDestroy, Optional, HostListener } from '@angular/core';\r\nimport { DataColumn } from '../../types/data-column';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport { DatagridHeaderComponent } from './datagrid-header.component';\r\nimport { fromEvent } from 'rxjs';\r\nimport { buffer, debounceTime, map, filter, takeUntil } from 'rxjs/operators';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-10 09:04:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-20 17:09:09\r\n * @QQ: 1055818239\r\n * @Version: v0.0.12\r\n */\r\n@Directive({\r\n    selector: '[resize-column]',\r\n})\r\nexport class DatagridResizeColumnDirective implements AfterViewInit, OnDestroy {\r\n    @Input('resize-column') col: DataColumn;\r\n    resizer: HTMLSpanElement;\r\n    resizerMouseDownListener: any;\r\n    documentMouseMoveListener: any;\r\n    documentMouseUpListener: any;\r\n    dblclickListener: any;\r\n    private dg: DatagridComponent;\r\n    constructor(\r\n        @Optional() public dh: DatagridHeaderComponent,\r\n        public ngzone: NgZone, public el: ElementRef, public render: Renderer2\r\n    ) {\r\n        this.dg = this.dh.dg;\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.isEnable()) {\r\n            this.render.addClass(this.el.nativeElement, 'f-datagrid-header-cell-resize');\r\n\r\n            this.resizer = document.createElement('span');\r\n            this.resizer.className = 'column-resize-bar';\r\n            this.el.nativeElement.appendChild(this.resizer);\r\n\r\n            this.ngzone.runOutsideAngular(() => {\r\n                // this.resizerMouseDownListener = this.onMouseDown.bind(this);\r\n                // this.resizer.addEventListener('mousedown', this.resizerMouseDownListener);\r\n                const mouseUp$ = fromEvent(this.resizer, 'mouseup');\r\n                this.resizerMouseDownListener = fromEvent(this.resizer, 'mousedown').pipe(\r\n                    // debounceTime(260),\r\n                    takeUntil(mouseUp$)\r\n                ).subscribe((e: any) =>\r\n                    this.onMouseDown(e)\r\n                );\r\n            });\r\n\r\n            // const mouse$ = fromEvent(this.resizer, 'click');\r\n            // const buff$ = mouse$.pipe(\r\n            //     debounceTime(250)\r\n            // );\r\n\r\n            // const click$ = mouse$.pipe(\r\n            //     buffer(buff$),\r\n            //     map(list => {\r\n            //         return {event: list[0], count: list.length};\r\n            //     }),\r\n            //     filter(x => x.count === 2),\r\n            //     map(x => x.event),\r\n            //     takeUntil(mouseUp$)\r\n            // );\r\n\r\n            // click$.subscribe((e) => {\r\n            //     this.onDblClickHandler(e);\r\n            //     // this.onMouseUp(e);\r\n            // });\r\n        }\r\n    }\r\n\r\n    @HostListener('dblclick')\r\n    onDblClickHandler() {\r\n        if (this.col.field && this.col.field !== this.dg.ControlPanelFeild) {\r\n            const thRef = this.el;\r\n            this.dg.sizeToContent(this.col, thRef);\r\n        }\r\n        return false;\r\n    }\r\n\r\n    private isEnable() {\r\n        if (this.dg.resizeColumn) {\r\n\r\n            if ( this.col.field === this.dg.ControlPanelFeild) {\r\n                this.col.resizable = false;\r\n            }\r\n\r\n            if (this.col.resizable === undefined) {\r\n                this.col.resizable = true;\r\n            }\r\n\r\n            return this.col.resizable;\r\n        }\r\n\r\n        return false;\r\n    }\r\n\r\n    bindDocumentEvents() {\r\n        this.ngzone.runOutsideAngular(() => {\r\n            this.documentMouseMoveListener = this.onMouseMove.bind(this);\r\n            document.addEventListener('mousemove', this.documentMouseMoveListener);\r\n\r\n            this.documentMouseUpListener = this.onMouseUp.bind(this);\r\n            document.addEventListener('mouseup', this.documentMouseUpListener);\r\n        });\r\n    }\r\n\r\n    unbindDocumentEvents() {\r\n        if (this.documentMouseMoveListener) {\r\n            document.removeEventListener('mousemove', this.documentMouseMoveListener);\r\n            this.documentMouseMoveListener = null;\r\n        }\r\n\r\n        if (this.documentMouseUpListener) {\r\n            document.removeEventListener('mouseup', this.documentMouseUpListener);\r\n            this.documentMouseUpListener = null;\r\n        }\r\n    }\r\n\r\n    onMouseDown(event: MouseEvent) {\r\n        event.stopPropagation();\r\n        this.dg.onColumnResizeBegin(event);\r\n        this.render.addClass(this.el.nativeElement, 'column-resizeing');\r\n        this.bindDocumentEvents();\r\n    }\r\n\r\n    onMouseMove(event: MouseEvent) {\r\n        this.dg.onColumnResize(event);\r\n    }\r\n\r\n    onMouseUp(event: MouseEvent) {\r\n        this.dg.onColumnResizeEnd(event, this.col);\r\n        this.render.removeClass(this.el.nativeElement, 'column-resizeing');\r\n        this.unbindDocumentEvents();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.resizerMouseDownListener) {\r\n            // this.resizer.removeEventListener('mousedown', this.resizerMouseDownListener);\r\n            this.resizerMouseDownListener.unsubscribe();\r\n        }\r\n\r\n        this.unbindDocumentEvents();\r\n\r\n        if (this.dblclickListener) {\r\n            this.dblclickListener();\r\n        }\r\n    }\r\n}\r\n","import { DatagridComponent } from './../../datagrid.component';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-12 15:01:21\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-11-09 15:24:45\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, ElementRef, Renderer2, ViewChild, OnDestroy, Injector, Inject, forwardRef, OnChanges, SimpleChanges, ChangeDetectorRef } from '@angular/core';\r\nimport { DatagridService } from '../../services/datagrid.service';\r\nimport { FIXED_LEFT_SHADOW_CLS, FIXED_RIGHT_SHADOW_CLS, SCROLL_X_ACTION, SCROLL_X_REACH_START_ACTION } from '../../types/constant';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'datagrid-footer',\r\n    templateUrl: './datagrid-footer.component.html'\r\n})\r\nexport class DatagridFooterComponent implements OnInit, OnChanges, OnDestroy {\r\n    private _footerData = [];\r\n    @Input() get data() {\r\n        return this._footerData;\r\n    }\r\n    set data(val: any[]) {\r\n        this._footerData = val;\r\n    }\r\n\r\n    @Input() height: number;\r\n    @Input() width: number;\r\n    @Input() columns: any[];\r\n    @Input() columnsGroup: any;\r\n\r\n    /** æ¾ç¤ºä½ç½®ï¼é»è®¤ä¸º åºé¨ */\r\n    @Input() position: 'top' | 'bottom' = 'bottom';\r\n\r\n\r\n    @ViewChild('footerContainer') footerContainer: ElementRef;\r\n    @ViewChild('footerBody') footerBody: ElementRef;\r\n    @ViewChild('fixedLeft') fixedLeft: ElementRef;\r\n    private fixedRight: ElementRef;\r\n    @ViewChild('fixedRight') set fr(val) {\r\n        if (val) {\r\n            this.fixedRight = val;\r\n        }\r\n    }\r\n    scrollXSubscription: Subscription;\r\n\r\n    private dgs: DatagridService;\r\n    private scrollX = 0;\r\n    private showShadowCls = false;\r\n    rightFixedColumnWidth = 0;\r\n    private cdRef: ChangeDetectorRef = null;\r\n\r\n    constructor(\r\n        private render: Renderer2, private injector: Injector,\r\n        @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent\r\n    ) {\r\n        this.dg = this.injector.get(DatagridComponent);\r\n        this.dgs = this.injector.get(DatagridService);\r\n        this.cdRef = this.injector.get(ChangeDetectorRef);\r\n\r\n        this.scrollXSubscription = this.dgs.scorll$.subscribe((d: any) => {\r\n            this.scrollX = d.x;\r\n            if (d.type === SCROLL_X_ACTION) {\r\n                if (!this.dg.footerTemplate) {\r\n                    this.render.setStyle(this.footerBody.nativeElement,  'transform', `translate3d(-${d.x}px, 0px, 0px)` );\r\n\r\n                    if (this.fixedLeft) {\r\n                        if (d.x) {\r\n                            this.render.addClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                        } else {\r\n                            this.render.removeClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            if (d.type === SCROLL_X_REACH_START_ACTION) {\r\n                if (this.fixedLeft) {\r\n                    this.render.removeClass(this.fixedLeft.nativeElement, FIXED_LEFT_SHADOW_CLS);\r\n                }\r\n            }\r\n        });\r\n\r\n        this.dgs.showFixedShadow.subscribe((e: any) => {\r\n            if (this.fixedRight) {\r\n                this.setFixedColumnPosition(e.showRightShadow, e.x);\r\n            }\r\n        });\r\n\r\n        this.dgs.showGridHeader.subscribe(hh => {\r\n            this.setFooterPosition(false);\r\n        });\r\n\r\n        this.dgs.scrollbarUpdate.subscribe((ps: any) => {\r\n            this.rightFixedColumnWidth = this.getRightFixedColWidth(ps.scrollbarRef);\r\n            if (this.fixedRight) {\r\n                this.setFixedColumnPosition(this.showShadowCls, 0);\r\n            }\r\n            if (this.cdRef) {\r\n                this.cdRef.detectChanges();\r\n            }\r\n        });\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.renderFooterStyle();\r\n        this.setFooterPosition(false);\r\n\r\n        this.rightFixedColumnWidth = this.getRightFixedColWidth();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.position) {\r\n            this.setFooterPosition(true);\r\n        }\r\n\r\n        if (changes.columnsGroup && !changes.columnsGroup.isFirstChange()) {\r\n            this.rightFixedColumnWidth = this.getRightFixedColWidth();\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.scrollXSubscription) {\r\n            this.scrollXSubscription.unsubscribe();\r\n            this.scrollXSubscription = null;\r\n        }\r\n    }\r\n\r\n    private getRightFixedColWidth(ps = null) {\r\n        if (!this.columnsGroup) {\r\n            return 0;\r\n        }\r\n\r\n        let w = this.columnsGroup.rightFixedWidth;\r\n\r\n        if (!ps) {\r\n            ps = this.dg.scrollInstance.instance;\r\n        }\r\n\r\n        if (ps && ps.scrollbarYActive && this.dg.scrollBarShowMode === 'allways') {\r\n            return w += 18;\r\n        }\r\n        return w;\r\n    }\r\n\r\n    private setFooterPosition(emit = true) {\r\n        if (this.position === 'bottom') {\r\n            let positionBottom = 0;\r\n            if (this.dg.pagination) {\r\n                positionBottom = this.dg.pagerHeight || 40;\r\n            }\r\n            this.render.removeStyle(this.footerContainer.nativeElement, 'top');\r\n            this.render.setStyle(this.footerContainer.nativeElement, 'bottom', `${positionBottom}px`);\r\n        }\r\n        if (this.position === 'top') {\r\n            let positionTop = 0;\r\n            if (this.dg.showHeader) {\r\n                positionTop = this.dg.realHeaderHeight || 35;\r\n            }\r\n\r\n            if (this.dg.showRowGroupPanel) {\r\n                positionTop += this.dg.rowGroupPanelHeight;\r\n            }\r\n\r\n            if (this.dg.showFilterBar) {\r\n                positionTop += this.dg.filterBarHeight;\r\n            }\r\n\r\n            this.render.removeStyle(this.footerContainer.nativeElement, 'bottom');\r\n            this.render.setStyle(this.footerContainer.nativeElement, 'top', `${positionTop}px`);\r\n        }\r\n        if (emit) {\r\n            this.dgs.footerPositionChanged.emit();\r\n        }\r\n    }\r\n\r\n    private renderFooterStyle() {\r\n        if (this.dg.footerStyler) {\r\n\r\n            const trStyleAndCls = this.dgs.getCustomStyle(this.dg.footerStyler, null);\r\n\r\n            const cssRuleID = `${this.dg.customStyleKey()} .f-datagrid-footer`;\r\n            const cssRuleId2 = `${this.dg.customStyleKey()} .f-datagrid-footer .f-datagrid-body-fixed-left,${this.dg.customStyleKey()} .f-datagrid-footer .f-datagrid-body-fixed-right`;\r\n\r\n            if (trStyleAndCls && Object.keys(trStyleAndCls).length) {\r\n                const cssRule = [];\r\n                if (trStyleAndCls.style) {\r\n                    cssRule.push(`${cssRuleID} ${JSON.stringify(trStyleAndCls.style)}`);\r\n                    cssRule.push(`${cssRuleId2} ${JSON.stringify(trStyleAndCls.style)}`);\r\n                }\r\n\r\n                this.dgs.appendCssRules(cssRule);\r\n\r\n                // this.dg.renderCustomStyle(trStyleAndCls, this.footerContainer.nativeElement, cssRule);\r\n            } else {\r\n                this.dgs.removeCssRule([cssRuleID, cssRuleId2]);\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    setFixedColumnPosition(isShow, scrollLeft) {\r\n        this.showShadowCls = isShow;\r\n        const method = isShow ? 'addClass' : 'removeClass';\r\n        this.render[method](this.fixedRight.nativeElement, FIXED_RIGHT_SHADOW_CLS);\r\n\r\n        const realWidth = this.columnsGroup.leftFixedWidth + this.columnsGroup.normalWidth + this.rightFixedColumnWidth;\r\n        const gridWidth = this.dg.width;\r\n        let l = this.dg.width - (this.dg.showBorder ? 2 : 0) - this.rightFixedColumnWidth;\r\n        if (gridWidth > realWidth) {\r\n            l = this.columnsGroup.leftFixedWidth + this.columnsGroup.normalWidth;\r\n        }\r\n        this.render.setStyle(this.fixedRight.nativeElement, 'left', l + 'px');\r\n    }\r\n}\r\n","import { Subscription } from 'rxjs';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport { NotifyService } from '@farris/ui-notify';\r\nimport { ChangeDetectorRef, Injector, Optional, OnChanges, SimpleChanges } from '@angular/core';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-17 20:20:21\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, Output, EventEmitter, ElementRef, AfterViewInit, ViewChild, HostBinding } from '@angular/core';\r\nimport { PaginationControlsComponent, PaginationControlsDirective } from '@farris/ui-pagination';\r\n\r\n@Component({\r\n    selector: 'datagrid-pager',\r\n    templateUrl: './page.component.html'\r\n})\r\nexport class DatagridPagerComponent implements OnInit, AfterViewInit, OnChanges {\r\n\r\n    @Input() id = 'farris-datagrid-pager';\r\n    /** æ¾ç¤ºé¡µç çæ°é */\r\n    @Input() maxSize = 7;\r\n    /** æ¯å¦æ¾ç¤ºé¡µç  */\r\n    @Input() directionLinks = true;\r\n\r\n    @Input() autoHide = false;\r\n\r\n    @Input() responsive = false;\r\n    /** ä¸é¡µæ ç­¾ */\r\n    @Input() previousLabel = 'ä¸é¡µ';\r\n    /** ä¸é¡µæ ç­¾ */\r\n    @Input() nextLabel = 'ä¸é¡µ';\r\n    @Input() showPageList = false;\r\n    @Input() showPageInfo = true;\r\n    @Input() showPageNumber = true;\r\n    @Input() locked = false;\r\n\r\n    @Input() selectedData = [];\r\n    @Input() viewMode: 'default' | 'simple' = 'default';\r\n    @Input() listItemFormatter: (data) => string;\r\n\r\n    @Input() showSelectedList = false;\r\n\r\n    @Input() showGotoInput = false;\r\n\r\n    @Output() pageChange = new EventEmitter();\r\n    @Output() pageSizeChange = new EventEmitter();\r\n\r\n    @Output() removeSelectedItem = new EventEmitter();\r\n    @Output() clearSelectedItem = new EventEmitter();\r\n\r\n    @ViewChild('pagerContainer') pc: ElementRef;\r\n    @ViewChild('pager') pager: PaginationControlsComponent;\r\n\r\n    get pagination(): PaginationControlsDirective {\r\n        return this.pager.paginationDirective;\r\n    }\r\n\r\n\r\n    get pageSize() {\r\n        return this.pagination.getPageSize();\r\n    }\r\n\r\n    get total() {\r\n        return this.pagination.getTotalItems();\r\n    }\r\n\r\n    get outerHeight() {\r\n        if (this.pc) {\r\n            return this.pc.nativeElement.offsetHeight;\r\n        }\r\n        return 40;\r\n    }\r\n    styles = { opacity: 1 };\r\n\r\n    mouseInSelectedList = false;\r\n    openSelectedList = false;\r\n\r\n    private selectionDataChange$: Subscription = null;\r\n\r\n    private notifySer: NotifyService;\r\n\r\n    constructor(public el: ElementRef, private cd: ChangeDetectorRef, @Optional() private inject: Injector) {\r\n        if (this.inject) {\r\n            this.notifySer = this.inject.get<NotifyService>(NotifyService, null);\r\n        }\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        this.listenCheckDataChanged();\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.selectedData && !changes.selectedData.isFirstChange()) {\r\n            if (!this.selectedData || !this.selectedData.length) {\r\n                this.closeSelectedList();\r\n            }\r\n        }\r\n\r\n        if (changes.showSelectedList && !changes.showSelectedList.isFirstChange()) {\r\n            this.listenCheckDataChanged();\r\n        }\r\n    }\r\n\r\n    private listenCheckDataChanged() {\r\n        if (this.showSelectedList) {\r\n            const dg = this.inject.get(DatagridComponent, null);\r\n            if (dg) {\r\n                this.selectionDataChange$ = dg.checkedChange.subscribe((data: any) => {\r\n                    this.selectedData = data;\r\n                    this.cd.detectChanges();\r\n                });\r\n            }\r\n        } else {\r\n            if (this.selectionDataChange$) {\r\n                this.selectionDataChange$.unsubscribe();\r\n                this.selectionDataChange$ = null;\r\n            }\r\n        }\r\n    }\r\n\r\n    onPageChange(pageIndex: any) {\r\n        if (typeof pageIndex === 'object') {\r\n            pageIndex = pageIndex.pageIndex || 1;\r\n        }\r\n        this.pageChange.emit(Number.parseInt(pageIndex, 10));\r\n    }\r\n\r\n    onPageSizeChange(pageSize: any) {\r\n        this.pageSizeChange.emit(Number.parseInt(pageSize, 10));\r\n    }\r\n\r\n    lock() {\r\n        this.locked = true;\r\n        this.styles = {opacity: 0.5 };\r\n        this.cd.detectChanges();\r\n    }\r\n    unlock() {\r\n        this.locked = false;\r\n        this.styles = {opacity: 1 };\r\n        this.cd.detectChanges();\r\n    }\r\n\r\n    onMouseEnter($event) {\r\n        $event.stopPropagation();\r\n\r\n        if (this.locked) {\r\n            return;\r\n        }\r\n\r\n        this.mouseInSelectedList = true;\r\n        if (this.selectedData && this.selectedData.length) {\r\n            this.openSelectedList = !this.openSelectedList;\r\n        } else {\r\n            this.openSelectedList = false;\r\n        }\r\n    }\r\n\r\n\r\n    closeSelectedList() {\r\n        this.openSelectedList = false;\r\n        this.mouseInSelectedList = false;\r\n        if (!this.cd['destroyed']) {\r\n            this.cd.detectChanges();\r\n        }\r\n    }\r\n\r\n    onDelSelectedItem(id: any) {\r\n        this.removeSelectedItem.emit(id);\r\n    }\r\n\r\n    onClearSelected($event) {\r\n        this.clearSelectedItem.emit();\r\n        this.closeSelectedList();\r\n    }\r\n\r\n    onSelectListPanelClose($event) {\r\n        this.closeSelectedList();\r\n    }\r\n}\r\n","import { Component, OnInit, Input } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\n\r\nconst loading_style_ring =\r\n`<svg width=\"100%\" height=\"100%\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\r\n  <circle cx=\"50\" cy=\"50\" fill=\"none\" r=\"30\" stroke=\"#2c7dff\" stroke-width=\"10\"></circle>\r\n  <circle cx=\"50\" cy=\"50\" fill=\"none\" r=\"30\" stroke=\"#d0eaff\" stroke-width=\"10\" stroke-linecap=\"square\" transform=\"rotate(178.821 50 50)\">\r\n      <animateTransform attributeName=\"transform\" type=\"rotate\"\r\n          calcMode=\"linear\" values=\"0 50 50;180 50 50;720 50 50\" keyTimes=\"0;0.5;1\" dur=\"1.6s\" begin=\"0s\"\r\n          repeatCount=\"indefinite\"></animateTransform>\r\n      <animate attributeName=\"stroke-dasharray\" calcMode=\"linear\"\r\n          values=\"9.42477796076938 179.0707812546182;150.79644737231007 37.6991118430775;9.42477796076938 179.0707812546182\"\r\n          keyTimes=\"0;0.5;1\" dur=\"1.6\" begin=\"0s\" repeatCount=\"indefinite\"></animate>\r\n  </circle>\r\n</svg>`;\r\n\r\n@Component({\r\n    selector: 'datagrid-loading',\r\n    template: `\r\n    <div style=\"width:100%;height:100%;position:absolute;top:0;left: 0;background:rgba(255,255,255,0);z-index: 90000000;pointer-events: unset;\">\r\n        <div style=\"width: 50px;height: 50px;position: relative;top: 50%;margin-top: -25px;left: 50%;margin-left: -25px;\"\r\n        [innerHTML]=\"loading\" >\r\n        </div>\r\n    </div>\r\n    `\r\n})\r\nexport class DataGridLoadingComponent implements OnInit {\r\n\r\n    @Input() loading: any;\r\n\r\n    constructor(private domSanitizer: DomSanitizer) { }\r\n\r\n    ngOnInit(): void {\r\n        if (this.loading) {\r\n            this.loading = this.domSanitizer.bypassSecurityTrustHtml(this.loading);\r\n        } else {\r\n            this.loading = this.domSanitizer.bypassSecurityTrustHtml(loading_style_ring);\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { debounce } from 'rxjs/operators';\r\nimport { Component, OnInit, EventEmitter, Output, Input, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { interval } from 'rxjs';\r\n\r\n@Component({\r\n    selector: 'pager-selected-list',\r\n    templateUrl: './selected-list.component.html',\r\n})\r\nexport class PagerSelectedListComponent implements OnInit, OnChanges {\r\n\r\n    @Input() data = [];\r\n\r\n    @Output() close = new EventEmitter();\r\n    @Output() remove = new EventEmitter();\r\n    @Output() clear = new EventEmitter();\r\n\r\n    constructor() { }\r\n\r\n    ngOnInit(): void { }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n    }\r\n\r\n    onClose($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        this.close.emit();\r\n    }\r\n\r\n    onRemoveClick($event: MouseEvent, id: any) {\r\n        $event.stopPropagation();\r\n        this.remove.emit(id);\r\n    }\r\n\r\n    onClearClick($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        this.clear.emit();\r\n    }\r\n\r\n    onClick($event: MouseEvent) {\r\n        $event.stopPropagation();\r\n        return false;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'selectedItem'})\r\nexport class SelectedItemPipe implements PipeTransform {\r\n    transform(data: any, formatter: any): any {\r\n        if (data) {\r\n            if (formatter) {\r\n                data = data.map( d => {\r\n                    return {id: d.id, text:  formatter(d.data) };\r\n                });\r\n            } else  {\r\n                data = data.map(d => {\r\n                    const txt = [];\r\n                    const keys = Object.keys(d.data);\r\n                    keys.forEach(k => {\r\n                        txt.push(d.data[k]);\r\n                    });\r\n                    return {id: d.id, text: txt.join(', ') };\r\n                });\r\n            }\r\n\r\n            return data;\r\n        }\r\n    }\r\n}\r\n","import { ErrorHandler, Injector } from '@angular/core';\r\n\r\nexport class DatagridErrorHandler implements ErrorHandler {\r\n    handleError(error: any): void {\r\n        console.error(error);\r\n    }\r\n}\r\n\r\nexport class Éµs implements ErrorHandler {\r\n    handleError(error: any): void {\r\n        console.error(error);\r\n    }\r\n}\r\n","import { Subscription } from 'rxjs';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-30 16:08:56\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport { Component, OnInit, Input, ViewChild, ElementRef, Injector, Inject, forwardRef, ChangeDetectorRef, OnDestroy, OnChanges, SimpleChanges } from '@angular/core';\r\nimport { DatagridFacadeService } from './../../services/datagrid-facade.service';\r\nimport { filter, map } from 'rxjs/operators';\r\n\r\n@Component({\r\n    selector: 'datagrid-checkbox',\r\n    template: ` <div class=\"custom-control custom-checkbox f-checkradio-single\">\r\n        <input type=\"checkbox\" #chk class=\"custom-control-input\" [disabled]=\"disabled\" [checked]=\"checked\">\r\n        <label class=\"custom-control-label\" (click)=\"handleClick($event)\"></label>\r\n    </div>`,\r\n    styles: [\r\n        `\r\n        :host {\r\n            vertical-align: middle;\r\n        }\r\n        :host .custom-checkbox {\r\n            opacity: 1;\r\n            float: none;\r\n            top: 2px;\r\n        }\r\n        `\r\n    ]\r\n})\r\nexport class DatagridCheckboxComponent implements OnInit, OnDestroy, OnChanges {\r\n    @Input() rowData: any;\r\n    @Input() rowIndex: any;\r\n    @Input() checked: boolean;\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() indeterminate = false;\r\n    @ViewChild('chk') chk: ElementRef;\r\n\r\n    private dfs: DatagridFacadeService;\r\n    private cd: ChangeDetectorRef;\r\n\r\n    checked$ = null;\r\n\r\n    subscriptions: Subscription[] = [];\r\n    constructor(private injector: Injector, @Inject(forwardRef(() => DatagridComponent)) public dg: DatagridComponent) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.cd = this.injector.get(ChangeDetectorRef);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.indeterminate) {\r\n            this.chk.nativeElement.indeterminate = true;\r\n        }\r\n        this.listenSubjects();\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.checked && !changes.checked.isFirstChange()) {\r\n            this.changeCheckedStatus(changes.checked.currentValue);\r\n        }\r\n    }\r\n\r\n    private listenSubjects() {\r\n        const rid = this.dfs.primaryId(this.rowData);\r\n        this.subscriptions.push(\r\n            this.dg.checkAll.subscribe(() => {\r\n                let flag = true;\r\n                if (this.dg.disableRow) {\r\n                    flag = !this.dg.disableRow(this.rowData, this.rowIndex);\r\n                    if (!flag) {\r\n                        flag  = this.dg.dfs.isRowChecked(rid);\r\n                    }\r\n                }\r\n                this.changeCheckedStatus(flag);\r\n            })\r\n        );\r\n\r\n        this.subscriptions.push(\r\n            this.dg.unCheckAll.subscribe((e: any) => {\r\n                if (e && e.length) {\r\n                    if (e.find(n => n[this.dg.idField] === this.rowData[this.dg.idField])) {\r\n                        this.changeCheckedStatus(false);\r\n                    }\r\n                } else {\r\n                    this.changeCheckedStatus(false);\r\n                }\r\n            })\r\n        );\r\n\r\n        const _setcheckrows = this.dg.dgs.setCheckedRows.pipe(\r\n            filter( (r: any) => {\r\n                return r.ids.includes(rid) || r.ids.includes('' + rid);\r\n            }),\r\n            map((r: any) => {\r\n                const flag = r.ids.includes(rid) || r.ids.includes('' + rid);\r\n                if (flag) {\r\n                    return flag && r.checked;\r\n                }\r\n                return false;\r\n            }),\r\n        ).subscribe( r => {\r\n            this.checked = r;\r\n            this.changeCheckedStatus(r);\r\n        });\r\n        this.subscriptions.push(_setcheckrows);\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.subscriptions && this.subscriptions.length) {\r\n            this.subscriptions.forEach(n => n.unsubscribe());\r\n            this.subscriptions = [];\r\n        }\r\n    }\r\n\r\n    handleClick(event: MouseEvent) {\r\n        if (!this.disabled) {\r\n            const beforEventParam = {\r\n                rowIndex: this.rowIndex,\r\n                rowData: this.rowData,\r\n                gridInstance: this.dg\r\n            };\r\n            this.dg.endCellEdit();\r\n            const _checked = this.chk.nativeElement.checked;\r\n            if (!_checked) {\r\n                this.dg.beforeCheck(beforEventParam).subscribe((canCheck: boolean) => {\r\n                    if (canCheck) {\r\n                        this.dfs.checkRow(this.rowIndex, this.rowData);\r\n                        this.checked = true;\r\n                        this.changeCheckedStatus(true);\r\n                    }\r\n                });\r\n            } else {\r\n                this.dg.beforeUncheck(beforEventParam).subscribe((canUncheck: boolean) => {\r\n                    if (canUncheck) {\r\n                        this.dfs.unCheckRow(this.rowIndex, this.rowData);\r\n                        this.checked = false;\r\n                        this.changeCheckedStatus(false);\r\n                        if (this.dg.showSelectedList) {\r\n                            this.dg.cd.detectChanges();\r\n                        }\r\n                    }\r\n                });\r\n            }\r\n            // this.checked = !this.checked;\r\n            // this.cd.detectChanges();\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n    private changeCheckedStatus(status: boolean) {\r\n        this.chk.nativeElement.checked = status;\r\n    }\r\n\r\n}\r\n","import { DatagridComponent } from './../../datagrid.component';\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:07\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-09-18 10:30:21\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { Component, OnInit, Input, ViewChild, ElementRef, Injector } from '@angular/core';\r\nimport { DatagridFacadeService } from './../../services/datagrid-facade.service';\r\n\r\n@Component({\r\n    selector: 'datagrid-header-checkbox',\r\n    template: ` <div class=\"custom-control custom-checkbox f-checkradio-single\">\r\n        <input type=\"checkbox\" #chk class=\"custom-control-input\" [disabled]=\"disabled\" [checked]=\"checked\">\r\n        <label class=\"custom-control-label\" (click)=\"handleClick($event)\"></label>\r\n    </div>`,\r\n    styles: [\r\n        `\r\n        :host {\r\n            vertical-align: middle;\r\n        }\r\n        :host .custom-checkbox {\r\n            opacity: 1;\r\n            float: none;\r\n            top: 2px;\r\n        }\r\n        `\r\n    ]\r\n})\r\nexport class DatagridHeaderCheckboxComponent implements OnInit {\r\n    @Input() checked: boolean;\r\n    @Input() disabled: boolean;\r\n\r\n    @Input() indeterminate = false;\r\n\r\n    @ViewChild('chk') chk: ElementRef;\r\n    private dfs: DatagridFacadeService;\r\n    private dg: DatagridComponent;\r\n\r\n    constructor(private injector: Injector) {\r\n        this.dfs = this.injector.get(DatagridFacadeService);\r\n        this.dg = this.injector.get(DatagridComponent);\r\n    }\r\n\r\n    ngOnInit(): void {\r\n        if (this.indeterminate) {\r\n            this.chk.nativeElement.indeterminate = true;\r\n        }\r\n\r\n        this.dg.dgs.changeCheckAllStatus.subscribe((status: number) => {\r\n            if (status === 2) {\r\n                this.chk.nativeElement.indeterminate = true;\r\n            } else {\r\n                this.chk.nativeElement.indeterminate = false;\r\n                this.updateStatus(!!status);\r\n            }\r\n        });\r\n    }\r\n\r\n    updateStatus(checked: boolean) {\r\n        this.checked = checked;\r\n        this.chk.nativeElement.checked = checked;\r\n    }\r\n\r\n\r\n    handleClick(event: MouseEvent) {\r\n        if (!this.dg.data || !this.dg.data.length) {\r\n            return;\r\n        }\r\n\r\n        if (!this.disabled) {\r\n            this.checked = !this.checked;\r\n\r\n            this.indeterminate = false;\r\n            this.chk.nativeElement.indeterminate = false;\r\n            if (this.checked) {\r\n                this.dfs.checkAll();\r\n                this.chk.nativeElement.checked = true;\r\n                // this.dg.checkAll.emit();\r\n            } else {\r\n                this.dfs.clearCheckeds(!this.dg.enableMorePageSelect);\r\n\r\n                if (this.dg.selectedRow && this.dg.checkOnSelect && this.dg.selectOnCheck) {\r\n                    this.dg.unSelectRow(this.dg.selectedRow.id);\r\n                }\r\n                this.chk.nativeElement.checked = false;\r\n                // this.dg.unCheckAll.emit();\r\n            }\r\n        }\r\n        event.stopPropagation();\r\n    }\r\n\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { TR_PREFIX } from './../types/constant';\r\nimport { DatagridFacadeService } from '../services/datagrid-facade.service';\r\n\r\n@Pipe({name: 'rowDataId'})\r\nexport class RowDataIdPipe implements PipeTransform {\r\n\r\n    constructor(private dfs: DatagridFacadeService) {}\r\n\r\n    transform(rowData: any, fixedRight = false, fixedLeft = false): any {\r\n        if (rowData) {\r\n            let rowID = TR_PREFIX + this.dfs.primaryId(rowData);\r\n            if (fixedRight) {\r\n                rowID += '_fixedright';\r\n            } else if (fixedLeft) {\r\n                rowID += '_fixedleft';\r\n            }\r\n            return rowID;\r\n        }\r\n        return null;\r\n    }\r\n}\r\n","import { Optional, Pipe, PipeTransform } from '@angular/core';\r\nimport { DatagridFacadeService } from './../services/datagrid-facade.service';\r\n\r\n@Pipe({name: 'formatGroupRow'})\r\nexport class FormatGroupRowPipe implements PipeTransform {\r\n\r\n    constructor(@Optional() private dfs: DatagridFacadeService) {}\r\n\r\n\r\n    transform(row: any, col: any, fn?: any): any {\r\n        if (row) {\r\n            let val = row['value'];\r\n            if (!col && this.dfs) {\r\n                col = this.dfs.getColumn(row.field);\r\n            }\r\n\r\n            if (col && col.formatter) {\r\n                if (col.formatter.type === 'enum') {\r\n                    const enumOpts: {valueField: string, textField: string, data: any} = col.formatter.options;\r\n                    const { valueField, textField, data } = {...enumOpts};\r\n                    const enumItem = data.find(item => item[valueField] === row['value']);\r\n                    val = enumItem ? enumItem[textField] : '';\r\n                }\r\n            }\r\n\r\n            return fn ? fn(row) : val;\r\n        }\r\n\r\n        return '';\r\n    }\r\n}\r\n","import { Component, OnInit, ChangeDetectorRef, ElementRef, Injector, NgZone, Input, Output, EventEmitter, OnDestroy, OnChanges, SimpleChanges, Renderer2 } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { DatagridService } from './../../services/datagrid.service';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridBodyComponent } from './datagrid-body.component';\r\nimport { ROW_INDEX_FIELD, IS_GROUP_ROW_FIELD, GROUP_ROW_FIELD, IS_GROUP_FOOTER_ROW_FIELD, GROUP_VISIBLE_FIELD } from '../../services/state';\r\nimport { DatagridFacadeService } from '../../services/datagrid-facade.service';\r\n\r\n\r\n@Component({\r\n    selector: 'fixed-left-rows',\r\n    templateUrl: 'fixed-left-rows.component.html'\r\n})\r\n\r\nexport class FixedLeftRowsComponent implements OnInit, OnDestroy {\r\n\r\n    @Input() columns = [];\r\n    @Output() toggle = new EventEmitter();\r\n    @Input() checkedRows = [];\r\n    @Input() selectedRows = [];\r\n    @Input() data = [];\r\n\r\n    /** å¯ç¨åç»æ¶ï¼æ°æ®æºä¸­èªå¨è®¾ç½®è¡ç´¢å¼å­æ®µ */\r\n    groupRowIndex = ROW_INDEX_FIELD;\r\n    isGroupRow = IS_GROUP_ROW_FIELD;\r\n    groupRow = GROUP_ROW_FIELD;\r\n    isGroupFooter = IS_GROUP_FOOTER_ROW_FIELD;\r\n    visible = GROUP_VISIBLE_FIELD;\r\n\r\n    filterConditions = '';\r\n\r\n    subscriptions: Subscription[] = [];\r\n\r\n    dgs: DatagridService = null;\r\n    render2: Renderer2;\r\n    constructor(\r\n        private cd: ChangeDetectorRef,\r\n        public dg: DatagridComponent,\r\n        public dgb: DatagridBodyComponent,\r\n        public dfs: DatagridFacadeService,\r\n        public el: ElementRef, private injector: Injector, private ngZone: NgZone) {\r\n            this.dgs = this.injector.get(DatagridService);\r\n            this.render2 = this.injector.get(Renderer2);\r\n        }\r\n\r\n    private listenSubject() {\r\n        // const _selectrow = this.dfs.selectRow$.subscribe(() => {\r\n        //     this.detectChanges();\r\n        // });\r\n        // this.subscriptions.push(_selectrow);\r\n\r\n        // const _unselectrow = this.dfs.unSelectRow$.subscribe(() => {\r\n        //     this.detectChanges();\r\n        // });\r\n        // this.subscriptions.push(_unselectrow);\r\n\r\n        const _setselectrow = this.dgs.setSelecedRow.subscribe((r: any) => {\r\n            this.detectChanges();\r\n        });\r\n        this.subscriptions.push(_setselectrow);\r\n\r\n        this.dfs.checkRow$.subscribe( () => {\r\n            this.checkedRows = this.dfs.getCheckeds();\r\n            this.detectChanges();\r\n        });\r\n\r\n        this.dfs.clearCheckeds$.subscribe( () => {\r\n            this.checkedRows = this.dfs.getCheckeds();\r\n            this.detectChanges();\r\n        });\r\n    }\r\n\r\n    ngOnInit() {\r\n        this.listenSubject();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        if (this.subscriptions && this.subscriptions.length) {\r\n            this.subscriptions.forEach(n => n.unsubscribe());\r\n            this.subscriptions = [];\r\n        }\r\n    }\r\n\r\n\r\n    private detectChanges() {\r\n        if (!this.cd['destroyed']) {\r\n            // this.cd.markForCheck();\r\n            this.cd.detectChanges();\r\n        }\r\n\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n/**\r\n * ä½¿ç¨è¯´æ\r\n * let message = \"ä»å¤©å¤©æ° {0}ï¼å¤å¤å¥½ {1}ã\"\r\n * template:\r\n * <h1>{{ message| replaceX: 'æ´æ', 'é£å' }}</h1>\r\n * resule:\r\n * <h1>ä»å¤©å¤©æ° æ´æï¼å¤å¤å¥½ é£åã</h1>\r\n */\r\n@Pipe({name: 'replaceX'})\r\nexport class ReplaceXPipe implements PipeTransform {\r\n    transform(value: any, ...args: any[]) {\r\n        args.forEach((v, i) => {\r\n            value = value.replace(`{${i}}`, v);\r\n        });\r\n\r\n        return value;\r\n    }\r\n}\r\n","import { Directive, Input, Injector, Renderer2, ElementRef, OnInit } from '@angular/core';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\n\r\n@Directive({\r\n    selector: '[group-row]',\r\n})\r\nexport class DatagridGroupRowDirective implements OnInit {\r\n    @Input('group-row') groupRow;\r\n\r\n    constructor(private injector: Injector, private render: Renderer2, private el: ElementRef, private dg: DatagridComponent) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.dg.groupStyler) {\r\n            const styler = this.dg.groupStyler(this.groupRow);\r\n            const tr = this.el.nativeElement;\r\n            if (!tr.id) {\r\n                tr.id = 'group-tr_' + this.groupRow.id;\r\n            }\r\n            this.dg.renderCustomStyle(styler, tr);\r\n        }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'showStar'})\r\nexport class ShowRequiredStarPipe implements PipeTransform {\r\n    transform(validators: any): any {\r\n        if (validators && validators.length) {\r\n            const isRequired = validators.find(v => v.type === 'required');\r\n            return isRequired;\r\n        }\r\n        return false;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'disableRow'})\r\nexport class DisableRowPipe implements PipeTransform {\r\n    transform(rowData: any, rowIndex: number, disableRowFn: (row, index) => {}): any {\r\n        if (disableRowFn) {\r\n            return disableRowFn(rowData, rowIndex);\r\n        }\r\n\r\n        return false;\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatagridFacadeService } from './../services/datagrid-facade.service';\r\n\r\n@Pipe({name: 'selectedRow'})\r\nexport class SelectedRowPipe implements PipeTransform {\r\n    constructor(private dfs: DatagridFacadeService) {}\r\n    transform(rowId: any): any {\r\n        return this.dfs.isRowSelected(rowId);\r\n    }\r\n}\r\n","import { Utils } from './utils';\r\nimport { Pipe, PipeTransform } from '@angular/core';\r\n\r\n@Pipe({name: 'fieldvalue'})\r\nexport class FieldValuePipe implements PipeTransform {\r\n    transform(field: any, rowdata: any, safe = false): any {\r\n        return Utils.getValue(field, rowdata, safe);\r\n    }\r\n}\r\n","import { DatagridComponent } from './../../datagrid.component';\r\nimport { Utils } from './../../utils/utils';\r\nimport { OnDestroy, Input, HostListener, ElementRef, Directive, Injector, OnInit, NgZone, Renderer2 } from '@angular/core';\r\nimport { CommonUtils } from '@farris/ui-common';\r\nimport { DomHandler } from '../../services/domhandler';\r\n\r\n@Directive({\r\n    selector: '[cell-tooltip]',\r\n    exportAs: 'cellTooltip'\r\n})\r\nexport class DatagridCellTooltipDirective implements OnInit, OnDestroy {\r\n    @Input('cell-tooltip') enable: boolean;\r\n    @Input() position: 'top' | 'bottom' | 'left' | 'right' | 'top-left' | 'top-center' | 'top-right' = 'top-left';\r\n    @Input() positionStyle: string;\r\n    @Input() tooltipStyleClass: string;\r\n    @Input() message: string;\r\n    @Input() delay = 1000;\r\n\r\n    @Input() cls = '';\r\n    @Input() type: 'danger' | 'success' | 'info' | 'warning' = 'info';\r\n    @Input() tipMode: 'allways' | 'auto' = 'auto';\r\n\r\n    // @HostBinding('style.width') cmpWidth = '100%';\r\n\r\n    container: any;\r\n    private commonUtils: CommonUtils;\r\n    private showTipTimer = null;\r\n\r\n\r\n    private _mouseenter = null;\r\n    private _mouseleave = null;\r\n    private _mouseclick = null;\r\n    private ngZone: NgZone = null;\r\n    private render: Renderer2 = null;\r\n    private dg: DatagridComponent;\r\n    constructor(private el: ElementRef, private injector: Injector) {\r\n        if (this.injector) {\r\n            this.commonUtils = this.injector.get(CommonUtils, new CommonUtils());\r\n            this.ngZone = this.injector.get(NgZone);\r\n            this.render = this.injector.get(Renderer2);\r\n\r\n            this.dg = this.injector.get(DatagridComponent);\r\n        } else {\r\n            this.commonUtils = new CommonUtils();\r\n        }\r\n    }\r\n\r\n    ngOnInit() {\r\n        if (this.ngZone) {\r\n            this.ngZone.runOutsideAngular(() => {\r\n                this._mouseenter = Utils.on(this.el.nativeElement, 'mouseenter', this.onMouseEnter.bind(this), { target: '.f-datagrid-cell-content', options: { capture: true }});\r\n                this._mouseleave = Utils.on(this.el.nativeElement, 'mouseleave', this.onMouseLeave.bind(this), { target: '.f-datagrid-cell-content', options: { capture: true }});\r\n                this._mouseclick = Utils.on(this.el.nativeElement, 'mousedown', this.onClick.bind(this));\r\n            });\r\n        }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.hide();\r\n        if (this._mouseenter) {\r\n            this._mouseenter();\r\n        }\r\n\r\n        if (this._mouseleave) {\r\n            this._mouseleave();\r\n        }\r\n\r\n        if (this._mouseclick) {\r\n            this._mouseclick();\r\n        }\r\n    }\r\n\r\n    onMouseEnter($event) {\r\n\r\n        const cellTiptimer = this.dg ? this.dg.cellTipTimer : 1000;\r\n\r\n        if (this.showTipTimer) {\r\n            clearTimeout(this.showTipTimer);\r\n            this.showTipTimer = null;\r\n        }\r\n        this.showTipTimer = setTimeout(() => {\r\n            this.show($event);\r\n        }, cellTiptimer);\r\n    }\r\n\r\n    onMouseLeave() {\r\n        this.hide();\r\n    }\r\n\r\n    onClick(e: MouseEvent) {\r\n        // e.stopPropagation();\r\n        this.hide();\r\n    }\r\n\r\n    private getTextContainer() {\r\n        return DomHandler.findSingle(this.container, '.f-tooltip-text');\r\n    }\r\n\r\n    private donotShowTips(target: any) {\r\n        const tdWidth = target.offsetWidth;\r\n        const tagetSty =  window.getComputedStyle(target);\r\n        const txtWidth = this.commonUtils.getTextWidth(this.message, tagetSty.font);\r\n        const { paddingLeft, paddingRight } = tagetSty;\r\n        const _width = tdWidth - (Number(paddingLeft.replace('px', '')) || 0) - (Number(paddingRight.replace('px', '')) || 0);\r\n\r\n        let tr = target.closest('tr');\r\n        if (tr) {\r\n            const trId = tr.id;\r\n            tr = document.querySelector('#'+ trId);\r\n        }\r\n\r\n        if (this.tipMode === 'auto') {\r\n            if (tr) {\r\n                return _width && _width > txtWidth;\r\n            }\r\n            return true;\r\n        } else {\r\n            return tr ? false : true;\r\n        }\r\n    }\r\n\r\n    hide() {\r\n        if (this.showTipTimer) {\r\n            clearTimeout(this.showTipTimer);\r\n            this.showTipTimer = null;\r\n        }\r\n\r\n        if (this.container && this.container.parentElement) {\r\n            document.body.removeChild(this.container);\r\n        }\r\n        this.container = null;\r\n    }\r\n\r\n    show($event: MouseEvent) {\r\n        const cellEl = $event.target as any;\r\n        this.enable = cellEl.getAttribute('cell-tooltip') === 'true';\r\n        this.message = cellEl.getAttribute('message');\r\n        this.tipMode = cellEl.getAttribute('tipMode') || 'auto';\r\n\r\n        if (!this.enable || !this.message) {\r\n            return;\r\n        }\r\n\r\n        const tipWidth = cellEl.getAttribute('tipWidth');\r\n        const tipHeight = cellEl.getAttribute('tipHeight');\r\n        this.position = cellEl.getAttribute('position') || 'top-left';\r\n\r\n        // æ£æ¥ä¸åå®¹å®½åº¦æ¯å¦è¶åºåå®½\r\n        if (this.donotShowTips($event.target)) {\r\n            return;\r\n        }\r\n\r\n        // const boxEl = this.el.nativeElement;\r\n        const boxEl = $event.target;\r\n        const elSize = this.getBoxSizeObj(boxEl);\r\n\r\n\r\n        /** å¦æå­å¨åä¸æ°å»ºï¼åªéè¦ä¿®æ¹éé¢çåå®¹ */\r\n        if (!this.container) {\r\n            this.create(elSize);\r\n        } else {\r\n            DomHandler.findSingle(this.container, '.f-tooltip-text').innerHTML = this.message;\r\n        }\r\n\r\n        this.container.style.maxWidth = `${window.innerWidth - 30}px`;\r\n        this.container.style.minWidth = '35px';\r\n\r\n        if (tipWidth) {\r\n            this.container.style.width = tipWidth;\r\n        }\r\n\r\n        if (tipHeight) {\r\n            this.container.style.height = tipHeight;\r\n        }\r\n\r\n\r\n        const offset = DomHandler.getOffset(boxEl);\r\n        const targetTop = offset.top;\r\n        const targetLeft = offset.left;\r\n        let left: number;\r\n        let top: number;\r\n        this.container.style.display = 'block';\r\n\r\n        this.changeTooltipPosition();\r\n        const arrow = DomHandler.findSingle(this.container, '.f-tooltip-arrow');\r\n        const tooltipSize = this.getTooltipSize();\r\n\r\n        // æ£æ¥åå®¹é«åº¦\r\n        if (window.innerHeight - 10 < tooltipSize.height) {\r\n            this.container.style.height = `${window.innerHeight - 20}px`;\r\n\r\n            tooltipSize.height = window.innerHeight - 25;\r\n            const textContainer = this.getTextContainer();\r\n            textContainer.style.height = `${tooltipSize.height}px`;\r\n            textContainer.style.overflow = 'hidden';\r\n        }\r\n\r\n\r\n        const n = this.updateArrowPosition(arrow, offset, $event);\r\n        switch (this.position) {\r\n            case 'right':\r\n                left = targetLeft + elSize.width;\r\n                top = n;\r\n                break;\r\n            case 'left':\r\n                left = targetLeft - tooltipSize.width;\r\n                top = n;\r\n                break;\r\n            case 'top-left':\r\n                top = targetTop - tooltipSize.height - 7;\r\n                left = n;\r\n                break;\r\n        }\r\n\r\n        if (left) {\r\n            this.container.style.left = left + 'px';\r\n        }\r\n\r\n        this.container.style.top = top + 'px';\r\n        this.container.style.zIndex = 999999;\r\n    }\r\n\r\n    private updateArrowPosition(arrow: any, elOffset: { top, left }, $event: any) {\r\n        const tooltipSize = this.getTooltipSize();\r\n        if (this.position === 'left' || this.position === 'right') {\r\n            const targetTop = elOffset.top;\r\n            const halfHeight = tooltipSize.height / 2;\r\n            let top = 10;\r\n            if (targetTop > halfHeight && window.innerHeight - targetTop > halfHeight) {\r\n                top = targetTop - tooltipSize.height / 2;\r\n            }\r\n\r\n            // è°æ´ç®­å¤´çä½ç½®\r\n            if (arrow) {\r\n                arrow.style.top = `${targetTop - top}px`;\r\n            }\r\n\r\n            return top;\r\n        } else if (this.position === 'top-left') {\r\n            let left = $event.pageX - tooltipSize.width / 2;\r\n\r\n            if (left < 10) {\r\n                left = elOffset.left;\r\n            }\r\n\r\n            if (left + tooltipSize.width > window.innerWidth) {\r\n                left = window.innerWidth - tooltipSize.width - 20;\r\n            }\r\n            // è°æ´ç®­å¤´çä½ç½®\r\n            if (arrow) {\r\n                if ($event.pageX - left > 28) {\r\n                    if ($event.pageX - left + 28 > tooltipSize.width) {\r\n                        arrow.style.left = `${tooltipSize.width - 28 }px`;\r\n                    } else {\r\n                        arrow.style.left = `${$event.pageX - left }px`;\r\n                    }\r\n                }\r\n            }\r\n\r\n            return left;\r\n        }\r\n    }\r\n\r\n    create(elSize: any) {\r\n        let styleClass = this.tooltipCls();\r\n        this.container = document.createElement('div');\r\n        if (this.tooltipStyleClass) {\r\n            styleClass += ' ' + this.tooltipStyleClass;\r\n        }\r\n        this.container.className = styleClass;\r\n\r\n        const tooltipArrow = document.createElement('div');\r\n        tooltipArrow.className = 'f-tooltip-arrow ';\r\n        this.container.appendChild(tooltipArrow);\r\n\r\n        const tooltipText = document.createElement('div');\r\n        tooltipText.className = 'f-tooltip-text ';\r\n        tooltipText.innerHTML = this.message;\r\n\r\n        const maxWidth = window.innerWidth - 50;\r\n        tooltipText.style.maxWidth = `${maxWidth}px`;\r\n\r\n        tooltipText.style.wordBreak = 'break-all';\r\n        this.container.style.textAlign = 'center';\r\n\r\n        if (this.positionStyle) {\r\n            this.container.style.position = this.positionStyle;\r\n        }\r\n\r\n        this.container.appendChild(tooltipText);\r\n        document.body.appendChild(this.container);\r\n    }\r\n\r\n    private tooltipCls() {\r\n        return 'datagrid-cell-tooltip f-tooltip ' + this.getThemeCls() + ' f-tooltip-' + this.position + ' ' + this.cls;\r\n    }\r\n\r\n    private getThemeCls() {\r\n        if (this.type) {\r\n            return 'f-tooltip-' + this.type;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    /** è·åå®¿ä¸»å°ºå¯¸ */\r\n    private getBoxSizeObj(boxEl) {\r\n        const p = boxEl.getBoundingClientRect();\r\n        return {\r\n            width: DomHandler.getOuterWidth(boxEl),\r\n            height: DomHandler.getOuterHeight(boxEl),\r\n            left: p.left,\r\n            right: p.right,\r\n            top: p.top,\r\n            bottom: p.bottom\r\n        };\r\n    }\r\n\r\n    /** è·åtooltip å®¹å¨å°ºå¯¸ */\r\n    private getTooltipSize() {\r\n        return {\r\n            width: DomHandler.getOuterWidth(this.container),\r\n            height: DomHandler.getOuterHeight(this.container)\r\n        };\r\n    }\r\n\r\n    /** è·åçªå£å°ºå¯¸ */\r\n    private getWindowSize() {\r\n        return {\r\n            width: window.innerWidth,\r\n            height: window.innerHeight\r\n        };\r\n    }\r\n\r\n    /** æ ¹æ®åå®¹çå¤å°ï¼èªå¨æ´æ¹tooltip çä½ç½® */\r\n    private changeTooltipPosition() {\r\n        const boxSize = this.getBoxSizeObj(this.el.nativeElement);\r\n        const tooltip = this.getTooltipSize();\r\n        const winSize = this.getWindowSize();\r\n\r\n        this.container.className = this.tooltipCls();\r\n\r\n        if (tooltip.width < winSize.width && tooltip.height < boxSize.top) {\r\n            // this.position = 'top-left';\r\n            return;\r\n        } else {\r\n            const elOffset = DomHandler.getOffset(this.el.nativeElement);\r\n            const elLeft = elOffset.left;\r\n            const elRight = winSize.width - elLeft - boxSize.width;\r\n\r\n            if (elLeft > elRight) {\r\n                this.position = 'left';\r\n            } else {\r\n                this.position = 'right';\r\n            }\r\n\r\n            const toolTipTextWidth = elLeft > elRight ? elLeft : elRight;\r\n            const textEl = this.getTextContainer();\r\n            textEl.style.maxWidth = `${toolTipTextWidth - 30}px`;\r\n            this.container.style.maxWidth = `${toolTipTextWidth}px`;\r\n        }\r\n    }\r\n\r\n\r\n}\r\n","import { Pipe, PipeTransform, Injector } from '@angular/core';\r\nimport { ColumnFormatService } from '@farris/ui-common/column';\r\nimport { Utils } from './../../utils/utils';\r\nimport { DataColumn } from './../../types/data-column';\r\n\r\n@Pipe({ name: 'tipmsg' , pure: false})\r\nexport class CellTootipMessagePipe implements PipeTransform {\r\n\r\n    private colFormatSer: ColumnFormatService;\r\n    constructor( private injector: Injector) {\r\n    }\r\n\r\n    transform(col: any, ...args: any[]) {\r\n        if (col.showTips) {\r\n            this.colFormatSer = this.injector.get(ColumnFormatService);\r\n            const msg = this.getCellTooltipContent(col, args[0]);\r\n            return msg;\r\n        }\r\n        return '';\r\n    }\r\n\r\n    private getCellTooltipContent(col: DataColumn, rowData) {\r\n        let txt = Utils.getValue(col.field, rowData);\r\n        if (col.tipContent) {\r\n            if ( typeof col.tipContent === 'string') {\r\n                txt = col.tipContent;\r\n            } else {\r\n                if (typeof col.tipContent === 'function') {\r\n                    txt = col.tipContent(txt, rowData, col);\r\n                }\r\n            }\r\n        } else {\r\n            if (col.formatter && (typeof col.formatter === 'function' ||\r\n                (typeof col.formatter === 'object' && Object.keys(col.formatter).length))) {\r\n                txt = this.colFormatSer.format(txt, rowData, col.formatter);\r\n            } else {\r\n                txt = Utils.escapeValue(txt);\r\n            }\r\n        }\r\n        return txt;\r\n    }\r\n}\r\n","import { LocaleService } from '@farris/ui-locale';\r\nimport { Subscription } from 'rxjs';\r\nimport { Component, OnInit, ViewEncapsulation, Injector, ChangeDetectorRef, ElementRef, ViewChild, Renderer2, Input, NgZone, OnDestroy, Optional, Host } from '@angular/core';\r\nimport { DatagridService } from './../../services/datagrid.service';\r\nimport { DatagridFilterService } from './../../services/datagrid-filter.service';\r\nimport {  } from './../../services/datagrid-facade.service';\r\nimport ResizeObserver from 'resize-observer-polyfill';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\n\r\n@Component({\r\n    selector: 'filter-toolbar',\r\n    template: `\r\n        <div class=\"f-datagrid-filter-toolbar-panel\" #filterPanel [class.show]=\"openFilterPanel\" style=\"width: auto\">\r\n            <span class=\"filter-text\" #filterPanelText [innerHTML]=\"filterText\"></span>\r\n        </div>\r\n        <div class=\"f-datagrid-filter-toolbar\" #filterToolbar>\r\n            <span class=\"title\">{{'datagrid.filter.title'| locale}}ï¼</span>\r\n            <span #filterbarTxt class=\"filter-text\" [innerHTML]=\"filterText\"> </span>\r\n            <span class=\"filter-action\" *ngIf=\"filterText !== empty \">\r\n                <span *ngIf=\"showExpand\" class=\"f-icon filter-action-item\"\r\n                    [class.f-icon-arrow-chevron-up]=\"openFilterPanel\"\r\n                    [class.f-icon-arrow-chevron-down]=\"!openFilterPanel\"\r\n                (click)=\"showFilterTextPanel()\" title=\"{{'datagrid.filter.more'|locale}}\"></span>\r\n                <span title=\"{{'datagrid.filter.clearAll'|locale}}\" class=\"f-icon f-icon-x filter-action-item filter-clear\" (click)=\"clearFilter($event)\"></span>\r\n                <span title=\"refresh\" class=\"f-icon f-icon-reload-sm filter-action-item filter-refresh\" style=\"color: #388fff\" (click)=\"refreshFilter($event)\"></span>\r\n                <span *ngIf=\"enableFilterSetting\" class=\"f-icon f-icon-cog filter-action-item\" title=\"{{'datagrid.filter.setting'|locale}}\"></span>\r\n            </span>\r\n        </div>\r\n    `,\r\n    encapsulation: ViewEncapsulation.None\r\n})\r\nexport class DatagridFilterToolbarComponent implements OnInit, OnDestroy {\r\n    empty = '[ æ  ]';\r\n    filterText = this.empty;\r\n\r\n    openFilterPanel = false;\r\n    showExpand = false;\r\n\r\n    @Input() enableFilterSetting = false;\r\n\r\n    @ViewChild('filterPanel') filterPanelRef: ElementRef;\r\n    @ViewChild('filterPanelText') filterPanelTextRef: ElementRef;\r\n    @ViewChild('filterbarTxt') filterTextRef: ElementRef;\r\n    @ViewChild('filterToolbar') filterToolbarRef: ElementRef;\r\n\r\n    get toolbarWidth() {\r\n        return this.filterToolbarRef.nativeElement.offsetWidth;\r\n    }\r\n\r\n    get filterTextContainerWidth() {\r\n        let actionW = 52;\r\n        if (this.enableFilterSetting) {\r\n            actionW = 65;\r\n        }\r\n        return this.toolbarWidth - 85 - actionW;\r\n    }\r\n\r\n    get filterTextRealWidth() {\r\n        this.render.setStyle(this.filterPanelTextRef.nativeElement, 'white-space', 'nowrap');\r\n        const w = this.filterPanelTextRef.nativeElement.scrollWidth;\r\n        this.render.setStyle(this.filterPanelTextRef.nativeElement, 'white-space', 'normal');\r\n        return w;\r\n    }\r\n\r\n    filterChangeSubscription: Subscription;\r\n    windowResizeHandler = null;\r\n    ro: ResizeObserver = null;\r\n    private dfrs: DatagridFilterService;\r\n    private dg: DatagridComponent;\r\n    constructor(\r\n        private inject: Injector,\r\n        private el: ElementRef,\r\n        private cd: ChangeDetectorRef,\r\n        private dgs: DatagridService,\r\n        private render: Renderer2,\r\n        private ngZone: NgZone,\r\n        private localeSer: LocaleService,\r\n      ) {\r\n            this.empty = this.localeSer.getValue('datagrid.filter.nofilter');\r\n            this.filterText = this.empty;\r\n        }\r\n\r\n    ngOnInit(): void {\r\n        this.dg = this.inject.get<DatagridComponent>(DatagridComponent);\r\n        this.dfrs = this.dg.clientFilterService;\r\n        this.filterChangeSubscription = this.dgs.onFilterChanged.subscribe((n) => {\r\n            this.filterText = this.dfrs.convertFilterCondition2String(n);\r\n            if (!this.filterText) {\r\n                this.filterText = this.empty;\r\n            }\r\n\r\n            this.updateExpandState();\r\n            setTimeout(() => {\r\n                this.bindEvent();\r\n            }, 100);\r\n            if (!this.showExpand) {\r\n                this.openFilterPanel = false;\r\n            }\r\n            this.cd.detectChanges();\r\n            this.dgs.onFilterTextChange(this.filterText);\r\n        });\r\n\r\n        this.ngZone.runOutsideAngular(() => {\r\n\r\n            this.ro = new ResizeObserver(() => {\r\n                setTimeout(() => {\r\n                    this.updateExpandState();\r\n                    this.cd.detectChanges();\r\n                }, 100);\r\n            });\r\n\r\n            this.ro.observe(this.el.nativeElement.closest('div.f-datagrid'));\r\n        });\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.ro.disconnect();\r\n        if (this.filterChangeSubscription) {\r\n            this.filterChangeSubscription.unsubscribe();\r\n            this.filterChangeSubscription = null;\r\n        }\r\n        if (this.windowResizeHandler) {\r\n            this.windowResizeHandler();\r\n            this.windowResizeHandler = null;\r\n        }\r\n    }\r\n\r\n    private bindEvent() {\r\n        this.ngZone.runOutsideAngular(() => {\r\n            const filterFields = this.filterToolbarRef.nativeElement.querySelectorAll('.filter-field');\r\n            this.bindFilterFieldHandler(filterFields);\r\n\r\n            const dropdownFilterFields = this.filterPanelTextRef.nativeElement.querySelectorAll('.filter-field');\r\n            this.bindFilterFieldHandler(dropdownFilterFields, false);\r\n        });\r\n    }\r\n\r\n    private bindFilterFieldHandler(filterFields: any, hidePanel = true) {\r\n        if (filterFields && filterFields.length) {\r\n            filterFields.forEach(ff => {\r\n                this.render.listen(ff, 'click', () => {\r\n                    this.removeFilterField(ff, hidePanel);\r\n                });\r\n            });\r\n        }\r\n    }\r\n\r\n    private removeFilterField(ff: any, hidePanel = true) {\r\n        const field = ff.classList[1].replace('filter-column-', '');\r\n        delete this.dg.conditions[field];\r\n        this.dfrs.removeFilterField(field);\r\n        ff.remove();\r\n        if (hidePanel) {\r\n            this.openFilterPanel = false;\r\n            this.updateExpandState();\r\n        }\r\n    }\r\n\r\n    private updateExpandState() {\r\n        this.showExpand = this.isShowExpand();\r\n    }\r\n\r\n    isShowExpand() {\r\n\r\n        if (this.filterTextContainerWidth > this.filterTextRealWidth) {\r\n            return false;\r\n        } else if (this.filterTextRealWidth > this.filterTextContainerWidth) {\r\n            return true;\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n\r\n    clearFilter($event) {\r\n        this.filterText = this.empty;\r\n        this.dgs.onClearFilter();\r\n        this.dgs.onFilterChanged.emit({});\r\n        return false;\r\n    }\r\n\r\n    refreshFilter($event) {\r\n        this.dg.filterData();\r\n        return false;\r\n    }\r\n\r\n    showFilterTextPanel() {\r\n        this.openFilterPanel = !this.openFilterPanel;\r\n        this.cd.detectChanges();\r\n    }\r\n}\r\n","import { Directive, ElementRef, Renderer2, Injector, Input, OnInit } from '@angular/core';\r\nimport { DataColumn, HeaderStyleFn } from './../../types/data-column';\r\n\r\n@Directive({\r\n    selector: '[header-style]',\r\n    exportAs: 'HeaderStyler'\r\n})\r\nexport class HeaderStyleDirective implements OnInit {\r\n    @Input('header-style') column: DataColumn;\r\n\r\n    constructor(private el: ElementRef, private render: Renderer2, private inject: Injector) {}\r\n\r\n    ngOnInit() {\r\n        this.renderCss2Element();\r\n    }\r\n\r\n    private renderCss2Element() {\r\n        if (this.column && this.column.headerStyler) {\r\n            const styler = this.column.headerStyler;\r\n            const dom = this.el.nativeElement;\r\n            const st = typeof this.column.headerStyler;\r\n\r\n            if (st === 'string') {\r\n                this.render.addClass(this.el.nativeElement, styler as string);\r\n            } else if (st === 'function') {\r\n                const r = (this.column.headerStyler as HeaderStyleFn)(this.column);\r\n                if (r.cls) {\r\n                    this.render.addClass(this.el.nativeElement, r.cls);\r\n                }\r\n                if (r.style) {\r\n                    this.renderStyle(dom, r.style);\r\n                }\r\n            } else if (st === 'object' && Object.keys(st).length) {\r\n                this.renderStyle(dom, styler);\r\n            }\r\n        }\r\n    }\r\n\r\n    private renderStyle(targetEl: any, styleObj: any) {\r\n        const cssKeys = Object.keys(styleObj);\r\n        cssKeys.forEach(k => {\r\n            this.render.setStyle(targetEl, k, styleObj[k]);\r\n        });\r\n    }\r\n\r\n}\r\n","import { DatagridComponent } from './../../datagrid.component';\r\nimport { Component, OnInit, Injector, Input } from '@angular/core';\r\n\r\n\r\n/**\r\n * èªå¨é«åº¦\r\n * ç¦ç¨åé¡µï¼ç¦ç¨åºå®è¡¨å¤´ï¼ç¦ç¨èæå è½½ï¼ç¦ç¨åºå®å\r\n * æ¯æååæ ¼ç¼è¾, æ¯ææåº, æ¯ææå¨åå®½\r\n */\r\n\r\n@Component({\r\n    selector: 'auto-height',\r\n    templateUrl: './auto-height.component.html'\r\n})\r\nexport class AutoHeightComponent implements OnInit {\r\n\r\n    @Input() columns: any[];\r\n    @Input() columnsGroup: any;\r\n    @Input() data: any;\r\n\r\n    constructor(public dg: DatagridComponent, private inject: Injector) { }\r\n\r\n    ngOnInit(): void { }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatagridFacadeService } from '../services/datagrid-facade.service';\r\n\r\n@Pipe({name: 'rowIsSelected', pure: false})\r\nexport class RowIsSelectedPipe implements PipeTransform {\r\n    constructor(private dfs: DatagridFacadeService) {}\r\n    transform(rowData: any, selections?: any[]): any {\r\n        if (!rowData) {\r\n            return false;\r\n        }\r\n        const id = this.dfs.primaryId(rowData);\r\n\r\n        if (id) {\r\n            return this.dfs.isRowSelected(id, selections);\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import { Pipe, PipeTransform } from '@angular/core';\r\nimport { DatagridFacadeService } from './../services/datagrid-facade.service';\r\n\r\n@Pipe({name: 'rowIsChecked', pure: false})\r\nexport class RowIsCheckedPipe implements PipeTransform {\r\n    constructor(private dfs: DatagridFacadeService) {}\r\n    transform(rowData: any, checkeds: any[]): any {\r\n        if (!rowData) {\r\n            return false;\r\n        }\r\n\r\n        const id = this.dfs.primaryId(rowData);\r\n        if (id) {\r\n            return this.dfs.isRowChecked(id, checkeds);\r\n        } else {\r\n            return false;\r\n        }\r\n    }\r\n}\r\n","import { DatagridComponent } from '../../datagrid.component';\r\nimport { Component, Directive, OnInit, Injector, Input, ElementRef, AfterViewInit, OnChanges, SimpleChanges, DoCheck } from '@angular/core';\r\n\r\n@Directive({\r\n    selector: '[auto-height]',\r\n})\r\nexport class AutoHeightDirective implements OnInit, AfterViewInit, OnChanges, DoCheck {\r\n\r\n    @Input('auto-height') autoHeight = false;\r\n    /** æ°æ®åè¡¨æ»é«åº¦ */\r\n    @Input() wheelHeight: number;\r\n\r\n    private _timer = null;\r\n\r\n    constructor(public dg: DatagridComponent, private inject: Injector, private el: ElementRef) { }\r\n\r\n    ngOnInit(): void {\r\n        // this.updateDatagridHeight(this.wheelHeight);\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.updateDatagridHeight(this.wheelHeight);\r\n    }\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.wheelHeight) {\r\n            this.updateDatagridHeight(this.wheelHeight);\r\n        }\r\n    }\r\n\r\n    ngDoCheck() {\r\n        // this.checkScrollbarPosition();\r\n    }\r\n\r\n    private updateDatagridHeight(wheelHeight) {\r\n        if (this.el && this.el.nativeElement && this.el.nativeElement.parentElement) {\r\n            if (this.autoHeight) {\r\n                if (!wheelHeight) {\r\n                    wheelHeight = 240;\r\n\r\n                    if (!this.dg.ds || !this.dg.ds.rows || !this.dg.ds.rows.length) {\r\n                        wheelHeight = (!this.dg.emptyDataHeight || this.dg.emptyDataHeight < 0 ) ? 240 : this.dg.emptyDataHeight;\r\n                    }\r\n                }\r\n                let h =  parseInt(wheelHeight, 10);\r\n\r\n                if (this.dg.showHeader) {\r\n\r\n                    if (!this.dg.realHeaderHeight) {\r\n                        h += this.dg.setHeaderHeight();\r\n                    } else {\r\n                        h += this.dg.realHeaderHeight;\r\n                    }\r\n                }\r\n\r\n                if (this.dg.showFooter) {\r\n                    h += this.dg.footerHeight;\r\n                }\r\n\r\n                if (this.dg.pagination) {\r\n                    const ph = this.dg.pagerHeight || 40;\r\n                    h += ph;\r\n                }\r\n\r\n                if (this.dg.showFilterBar) {\r\n                    h += this.dg.filterBarHeight;\r\n                }\r\n\r\n                const wh =  `${wheelHeight}px`;\r\n\r\n                this.el.nativeElement.parentElement.style.height = wh;\r\n                this.el.nativeElement.parentElement.parentElement.style.height = wh;\r\n\r\n\r\n                if (this.dg.dgContainer) {\r\n\r\n                    const dgHeight = `${h}px`;\r\n                    // æ´æ°grid æå¤å±çé«åº¦\r\n                    this.dg.dgContainer.nativeElement.style.height = dgHeight;\r\n                    // farris-datagrid å¢å é«åº¦\r\n                    this.dg.el.nativeElement.style.height = dgHeight;\r\n\r\n                    this.dg.height = h;\r\n                } else {\r\n                    this.dg.el.nativeElement.querySelector('.f-datagrid').style.height = `${h}px`;\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n}\r\n","import { Directive, ElementRef, Injector, OnInit, NgZone, Renderer2, OnDestroy, HostListener } from '@angular/core';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { TR_PREFIX } from '../../types/constant';\r\nimport { Utils } from '../../utils/utils';\r\n\r\n@Directive({\r\n    selector: '[row-dblclick]',\r\n})\r\nexport class DatagridRowDblClickDirective implements OnInit, OnDestroy {\r\n\r\n    // private documentRowDblclickEvent: any = null;\r\n    // private _mouseenter = null;\r\n    // private _mouseleave = null;\r\n    constructor(private el: ElementRef, private injector: Injector, private ngZone: NgZone, private render: Renderer2,\r\n                public dg: DatagridComponent) {\r\n\r\n    }\r\n\r\n    ngOnInit() {\r\n        // if (this.ngZone) {\r\n        //     this.ngZone.runOutsideAngular( () => {\r\n        //         // this.render.listen(this.el.nativeElement, 'mouseenter', this.onMouseEnter.bind(this));\r\n        //         // this.render.listen(this.el.nativeElement, 'mouseleave', this.onMouseLeave.bind(this));\r\n        //         this._mouseenter = Utils.on(this.el.nativeElement, 'mouseenter', this.onMouseEnter.bind(this), { target: '.f-datagrid-body-row', options: { capture: true }});\r\n        //         this._mouseleave = Utils.on(this.el.nativeElement, 'mouseleave', this.onMouseLeave.bind(this), { target: '.f-datagrid-body-row', options: { capture: true }});\r\n        //     });\r\n        // }\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        // if (this._mouseenter) {\r\n        //     this._mouseenter();\r\n        // }\r\n\r\n        // if (this._mouseleave) {\r\n        //     this._mouseleave();\r\n        // }\r\n    }\r\n\r\n\r\n    // onMouseEnter($event: MouseEvent) {\r\n    //     this.bindRowDblClickEvent();\r\n    // }\r\n\r\n    // onMouseLeave($event: MouseEvent) {\r\n    //     this.unbindRowDblclickEvent();\r\n    // }\r\n\r\n\r\n    // private bindRowDblClickEvent() {\r\n    //     if (!this.documentRowDblclickEvent) {\r\n    //         this.unbindRowDblclickEvent();\r\n    //         this.ngZone.runOutsideAngular(() => {\r\n    //             this.documentRowDblclickEvent = this.render.listen(this.el.nativeElement, 'dblclick', this.dblclickRowEvent.bind(this));\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n    // private unbindRowDblclickEvent() {\r\n    //     if (this.documentRowDblclickEvent) {\r\n    //         this.documentRowDblclickEvent();\r\n    //         this.documentRowDblclickEvent = null;\r\n    //     }\r\n    // }\r\n\r\n    @HostListener('dblclick', ['$event'])\r\n    dblclickRowEvent(event: any) {\r\n\r\n        const tr = event.target.closest('tr');\r\n\r\n        const rowid = tr.id.replace(TR_PREFIX, '').replace('_fixedright', '').replace('_fixedleft', '');\r\n        const rowIndex = tr.getAttribute('index');\r\n        const rowData = this.dg.dfs.findRow(rowid);\r\n\r\n        if (this.dg.disableRow) {\r\n            if (this.dg.disableRow(rowData.data, rowData.index)) {\r\n                event.stopPropagation();\r\n                return false;\r\n            }\r\n        }\r\n\r\n        if (this.dg.editable) {\r\n            if (this.dg.editMode === 'row' && this.dg.clickToEdit) {\r\n                this.dg.editRow(rowid);\r\n            } else {\r\n                this.dg.isSingleClick = false;\r\n                this.dg.dblclickRow.emit({ rowData, id: rowid, index: rowIndex, grid: this.dg, dblclick: true });\r\n            }\r\n        } else {\r\n            this.dg.dblclickRow.emit({ rowData, id: rowid, index: rowIndex, grid: this.dg,  dblclick: true });\r\n        }\r\n\r\n        event.stopPropagation();\r\n        event.preventDefault();\r\n    }\r\n}\r\n","import { Directive, ElementRef, Renderer2, Injector, Input, OnInit, AfterViewInit } from '@angular/core';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\n\r\n@Directive({\r\n    selector: '[footer-cell-styler]',\r\n})\r\nexport class FooterCellStylerDirective implements OnInit, AfterViewInit {\r\n    @Input() column: any;\r\n    @Input() rowData: any;\r\n    @Input() rowIndex: any;\r\n    @Input() isGroupFooter = false;\r\n\r\n    constructor(private el: ElementRef, private render: Renderer2, private inject: Injector, public dg: DatagridComponent) { }\r\n\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        if (this.isGroupFooter) {\r\n            this.setGroupFooterCellStyle(this.column);\r\n        } else {\r\n            this.buildCustomCellStyle(this.column, this.rowData);\r\n        }\r\n    }\r\n\r\n    private buildCustomCellStyle(column, rowData) {\r\n\r\n        const tr = this.el.nativeElement.parentNode;\r\n        if (!tr.id) {\r\n            tr.id = 'footer-row-' + this.dg.dfs.primaryId(rowData);\r\n        }\r\n\r\n        if (!this.el.nativeElement.id) {\r\n            this.el.nativeElement.id = 'footer-td_' + this.rowIndex + '_' + this.column.field;\r\n        }\r\n\r\n        if (column && column.footer && column.footer.styler) {\r\n            const _rd = rowData;\r\n            const styler = column.footer.styler;\r\n            const cs = styler(_rd[column.field], _rd);\r\n            if (cs && Object.keys(cs).length) {\r\n                this.dg.renderCustomStyle(cs, this.el.nativeElement);\r\n            } else {\r\n                this.dg.dgs.removeCssRule('#' + this.el.nativeElement.id);\r\n            }\r\n        }\r\n    }\r\n\r\n\r\n    private setGroupFooterCellStyle(col: any) {\r\n        // åç»åè®¡è¡èªå®ä¹æ ·å¼ 20210909\r\n        if (col.groupFooter && col.groupFooter.styler) {\r\n            const val = this.dg.commonUtils.getValue(col.field, this.rowData);\r\n            const _customStyles = this.dg.dgs.getCustomStyle(col.groupFooter.styler, [val, this.rowData]);\r\n            if (_customStyles) {\r\n                this.dg.renderCustomCls(_customStyles.cls, this.el.nativeElement);\r\n                if (_customStyles.style) {\r\n                    Object.keys(_customStyles.style).forEach(n => {\r\n                        this.el.nativeElement.style[n] = _customStyles.style[n];\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n    providedIn: 'root'\r\n})\r\nexport class DragDropColumnService {\r\n    private initColumns;\r\n    constructor() {}\r\n\r\n    /** åç´ ä½ç½®è°æ´\r\n     * arr: æ°ç»\r\n     * newIndex: æ°ä½ç½®ç´¢å¼\r\n     * removedIndex: èä½ç½®ç´¢å¼\r\n     */\r\n    moveItem(arr, newIndex, removedIndex) {\r\n        const removedItem = arr.splice(removedIndex, 1);\r\n        arr.splice(newIndex, 0, ...removedItem);\r\n        return arr;\r\n    }\r\n\r\n    backupColumns(columns) {\r\n        this.initColumns = columns.map( cols => {\r\n            return cols.map( n => {\r\n                return {\r\n                    id: n.id,\r\n                    field: n.field\r\n                };\r\n            });\r\n        });\r\n    }\r\n}\r\n","\r\nimport { Directive, NgZone, Injector, Renderer2, ElementRef, AfterViewInit, Input, OnChanges, SimpleChanges, OnDestroy } from '@angular/core';\r\nimport { dropHandlers, smoothDnD as SmoothDnDForHeader, DropResult, ContainerOptions, constants } from '@farris/smooth-dnd';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\nimport { DatagridHeaderComponent } from './datagrid-header.component';\r\nimport { DragDropColumnService } from './drag-drop-column.service';\r\n\r\n\r\nconst { wrapperClass, animationClass } = constants;\r\nSmoothDnDForHeader.dropHandler = dropHandlers.reactDropHandler().handler;\r\nSmoothDnDForHeader.wrapChild = false;\r\n\r\nexport interface DragStartEndInfo {\r\n    isSource: boolean;\r\n    payload: any;\r\n    willAcceptDrop: boolean;\r\n}\r\n\r\n@Directive({\r\n    selector: '[drag-column]',\r\n    providers: [\r\n        DragDropColumnService\r\n    ]\r\n})\r\nexport class DragColumnDirective implements AfterViewInit, OnChanges, OnDestroy {\r\n    private container: any;\r\n    @Input('drag-column') enableDrag = true;\r\n    @Input() groupName = '';\r\n\r\n    @Input() options: ContainerOptions = {\r\n        groupName: this.groupName,\r\n        orientation: 'horizontal',\r\n        behaviour: 'move',\r\n        dragHandleSelector: '.drag-column-bar',\r\n        dragClass: 'drag-column-moving',\r\n        dropPlaceholder: {\r\n            className: 'drop-group-field',\r\n        },\r\n        getGhostParent: () => {\r\n            return document.body;\r\n        },\r\n        getChildPayload: this.getChildPayload.bind(this),\r\n        shouldAcceptDrop: (sourceContainerOptions, payload) => {\r\n            if (typeof payload === 'number') {\r\n                return false;\r\n            }\r\n\r\n            if (sourceContainerOptions.groupName !== this.groupName) {\r\n                return false;\r\n            }\r\n\r\n            return !this.dg.isMultiHeader();\r\n        },\r\n        onDropReady: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDropReady(dropResult);\r\n            });\r\n        },\r\n        onDrop: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDrop(dropResult);\r\n            });\r\n        },\r\n        onDragEnter: () => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnter();\r\n            });\r\n        },\r\n        onDragStart: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragStart(info);\r\n            });\r\n        },\r\n        onDragEnd: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnd(info);\r\n            });\r\n        }\r\n    };\r\n\r\n    constructor(private ngzone: NgZone, private injector: Injector, private render: Renderer2,\r\n                private el: ElementRef, private header: DatagridHeaderComponent, private dg: DatagridComponent,\r\n                private dndSer: DragDropColumnService) { }\r\n\r\n\r\n    ngOnChanges(changes: SimpleChanges) {\r\n        if (changes.enableDrag && !changes.enableDrag.isFirstChange()) {\r\n            if (this.enableDrag) {\r\n                this.initDnD();\r\n            } else {\r\n                this.disposeDnd();\r\n            }\r\n        }\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.initDnD();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disposeDnd();\r\n    }\r\n\r\n    private disposeDnd() {\r\n        if (this.container) {\r\n            this.container.dispose();\r\n            this.container = null;\r\n        }\r\n    }\r\n\r\n    private initDnD() {\r\n\r\n        if (this.groupName === 'left' || this.groupName === 'right') {\r\n            const { left, right } = this.columnsGroup();\r\n            if (!left.length || !right.length || (right.length === 1 && right[0].field === '_datagrid-setting-control_')) {\r\n                return;\r\n            }\r\n        }\r\n\r\n\r\n        this.options.groupName = this.groupName;\r\n        this.disposeDnd();\r\n\r\n\r\n        if (this.enableDrag) {\r\n            this.container = SmoothDnDForHeader(\r\n                this.el.nativeElement,\r\n                this.options\r\n            );\r\n\r\n            this.dndSer.backupColumns(this.header.columns);\r\n        }\r\n    }\r\n\r\n    private getChildPayload(index) {\r\n        if (this.groupName === 'left') {\r\n            if (this.dg.showCheckbox) {\r\n                index--;\r\n            }\r\n            if (this.dg.showLineNumber) {\r\n                index--;\r\n            }\r\n        }\r\n\r\n        const groupColumns = this.columnsGroup();\r\n\r\n        if (this.groupName === 'left') {\r\n            return groupColumns.left.filter((n, i) => this.dg.columnIsVisible(n))[index];\r\n        }\r\n\r\n        return groupColumns.middle.filter((n, i) => this.dg.columnIsVisible(n))[index];\r\n    }\r\n\r\n    onDropReady(dropResult) {\r\n        // console.log('DROP READY', dropResult);\r\n    }\r\n\r\n    private onDrop(dropResult: DropResult) {\r\n\r\n        // console.log('DROP', dropResult);\r\n        const { addedIndex, payload, removedIndex } = dropResult;\r\n        if (addedIndex === null) {\r\n            return;\r\n        }\r\n\r\n        const groupColumns = this.columnsGroup();\r\n\r\n        const cols = this.dg.columns[0];\r\n        const currIndex = cols.findIndex(n => n.field === payload.field);\r\n\r\n        let newIndex = addedIndex;\r\n\r\n        const moveColumn = (columns: any) => {\r\n            if (columns) {\r\n                const targetColumn = columns.filter(n => n.visible || n.visible === undefined)[newIndex];\r\n                if (targetColumn) {\r\n                    const realTagetIndex = cols.findIndex(n => n.field === targetColumn.field);\r\n                    this.dg.columns[0] = this.dndSer.moveItem(this.dg.columns[0], realTagetIndex, currIndex);\r\n\r\n                    return true;\r\n                }\r\n            }\r\n\r\n            return false;\r\n        };\r\n\r\n        let columns = [];\r\n        if (this.groupName === 'left') {\r\n            if (this.dg.showCheckbox) {\r\n                newIndex--;\r\n            }\r\n            if (this.dg.showLineNumber) {\r\n                newIndex--;\r\n            }\r\n            columns = groupColumns.left;\r\n        } else if (this.groupName === 'center') {\r\n            columns = groupColumns.middle;\r\n        } else if (this.groupName === 'right') {\r\n            columns = groupColumns.right;\r\n        }\r\n\r\n        if (moveColumn(columns)) {\r\n            this.dg.columnsChanged(false);\r\n\r\n            if (this.dg.useControlPanel && this.dg.settingService) {\r\n                this.dg.settingService.saveUserConfig(this.dg.id);\r\n            }\r\n\r\n            this.dg.columnMoved.emit({ newColumns: this.dg.columns, grid: this.dg });\r\n        }\r\n    }\r\n\r\n    private onDragStart(info) {\r\n        // console.log('DRAG START', info);\r\n    }\r\n\r\n    private onDragEnd(info) {\r\n        // console.log('DRAG END', info);\r\n    }\r\n\r\n\r\n    private onDragEnter() {\r\n        // console.log('DRAG ENTER');\r\n    }\r\n\r\n\r\n    private columnsGroup() {\r\n        const leftColumns = this.dg.columns[0].filter(n => n.fixed === 'left');\r\n        const rightColumns = this.dg.columns[0].filter(n => n.fixed === 'right');\r\n        const middleColumns = this.dg.columns[0].filter(n => n.fixed !== 'right' && n.fixed !== 'left');\r\n\r\n        return {\r\n            left: leftColumns,\r\n            right: rightColumns,\r\n            middle: middleColumns\r\n        };\r\n    }\r\n}\r\n\r\n","\r\nimport { Directive, NgZone, Injector, Renderer2, ElementRef, AfterViewInit, Input, OnDestroy } from '@angular/core';\r\nimport { dropHandlers, smoothDnD, DropResult, ContainerOptions, constants } from '@farris/smooth-dnd';\r\nimport { DatagridComponent } from './../../datagrid.component';\r\nimport { DragStartEndInfo } from './datagrid-drag-column.directive';\r\nimport { DragDropColumnService } from './drag-drop-column.service';\r\n\r\n\r\nsmoothDnD.dropHandler = dropHandlers.reactDropHandler().handler;\r\nsmoothDnD.wrapChild = false;\r\nconst { wrapperClass, animationClass } = constants;\r\n\r\n@Directive({\r\n    selector: '[drop-column]',\r\n    providers: [\r\n        DragDropColumnService\r\n    ]\r\n})\r\nexport class DropColumnDirective implements AfterViewInit, OnDestroy {\r\n    @Input() options: ContainerOptions = {\r\n        orientation: 'horizontal',\r\n        behaviour: 'move',\r\n        dragHandleSelector: '.group-field',\r\n        dropPlaceholder: {\r\n            className: 'drop-group-field',\r\n        },\r\n        getGhostParent: () => {\r\n            return document.body;\r\n        },\r\n        shouldAcceptDrop: (sourceContainerOptions, payload) => {\r\n            // console.log(sourceContainerOptions, payload);\r\n\r\n            if (typeof payload === 'number') {\r\n                return true;\r\n            }\r\n\r\n            if (this.getGroupFields().length < 3) {\r\n                return payload.allowGrouping === undefined || payload.allowGrouping;\r\n            }\r\n            return false;\r\n        },\r\n        getChildPayload: (index) => {\r\n            return index;\r\n        },\r\n        // dragClass: 'drag-column-moving',\r\n        onDropReady: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDropReady(dropResult);\r\n            });\r\n        },\r\n        onDrop: (dropResult: DropResult) => {\r\n            this.ngzone.run(() => {\r\n                this.onDrop(dropResult);\r\n            });\r\n        },\r\n        onDragEnter: () => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnter();\r\n            });\r\n        },\r\n        onDragStart: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragStart(info);\r\n            });\r\n        },\r\n        onDragEnd: (info: DragStartEndInfo) => {\r\n            this.ngzone.run(() => {\r\n                this.onDragEnd(info);\r\n            });\r\n        }\r\n    };\r\n\r\n    private container: any;\r\n    constructor(private ngzone: NgZone, private injector: Injector, private render: Renderer2, private el: ElementRef,\r\n                private dg: DatagridComponent, private dndSer: DragDropColumnService) { }\r\n\r\n    ngAfterViewInit() {\r\n        this.initDnD();\r\n    }\r\n\r\n    ngOnDestroy() {\r\n        this.disposeDnd();\r\n    }\r\n\r\n    private disposeDnd() {\r\n        if (this.container) {\r\n            this.container.dispose();\r\n            this.container = null;\r\n        }\r\n    }\r\n\r\n    private initDnD() {\r\n        this.disposeDnd();\r\n        if (this.dg.showRowGroupPanel) {\r\n            this.container = smoothDnD(\r\n                this.el.nativeElement,\r\n                this.options\r\n            );\r\n        }\r\n    }\r\n\r\n    private onDropReady(dropResult) {\r\n        // console.log('DROP READY', dropResult);\r\n    }\r\n\r\n    private getGroupFields() {\r\n        return this.dg.groupField ? this.dg.groupField.split(',') : [];\r\n    }\r\n\r\n\r\n    private onDrop(dropResult: DropResult) {\r\n        // console.log('DROP', dropResult);\r\n        const { addedIndex, payload, removedIndex } = dropResult;\r\n\r\n        if (addedIndex === null) {\r\n            return;\r\n        }\r\n\r\n        const newGroupFields = this.getGroupFields();\r\n\r\n        if (removedIndex === null) {\r\n            if (!newGroupFields.some((v) => v === payload.field)) {\r\n                // newGroupFields.splice(0, 0, payload.field);\r\n                newGroupFields.push(payload.field);\r\n            }\r\n        } else {\r\n            this.dndSer.moveItem(newGroupFields, addedIndex, removedIndex);\r\n        }\r\n        this.dg.groupField = newGroupFields.join(',');\r\n        // this.dg.toggleVisibleColumn([this.dg.groupField], false);\r\n\r\n        if (this.dg.useControlPanel && this.dg.settingService) {\r\n            this.dg.settingService.saveUserConfig(this.dg.id).subscribe( () => {\r\n                this.dg.columnsChanged();\r\n            });\r\n        } else {\r\n            this.dg.columnsChanged();\r\n        }\r\n\r\n        this.dg.groupFieldChange.emit({ newGroupField: this.dg.groupField, grid: this.dg });\r\n    }\r\n\r\n    private onDragStart(info) {\r\n        // console.log('DRAG START', info);\r\n    }\r\n\r\n    private onDragEnd(info) {\r\n        // console.log('DRAG END', info);\r\n    }\r\n\r\n\r\n    private onDragEnter() {\r\n        // console.log('DRAG ENTER');\r\n    }\r\n}\r\n","import { Directive, ElementRef, Renderer2, Injector, Input, OnInit, AfterViewInit } from '@angular/core';\r\nimport { DatagridComponent } from '../../datagrid.component';\r\n\r\n@Directive({\r\n    selector: '[group-footer-row-styler]',\r\n})\r\nexport class GroupFooterRowStylerDirective implements OnInit, AfterViewInit {\r\n    @Input() column: any;\r\n    @Input('group-footer-row-styler') rowData: any;\r\n    @Input() rowIndex: any;\r\n\r\n    constructor(private el: ElementRef, private render: Renderer2, private inject: Injector, public dg: DatagridComponent) { }\r\n\r\n\r\n    ngOnInit() {\r\n    }\r\n\r\n    ngAfterViewInit() {\r\n        this.buildCustomGroupFooterRowStyle(this.rowData);\r\n    }\r\n\r\n    private buildCustomGroupFooterRowStyle(rowData) {\r\n\r\n        if (this.dg.groupFooterStyler) {\r\n\r\n            const cs = this.dg.dgs.getCustomStyle(this.dg.groupFooterStyler, [rowData]);\r\n            if (cs) {\r\n                this.dg.renderCustomCls(cs.cls, this.el.nativeElement);\r\n                if (cs.style) {\r\n                    Object.keys(cs.style).forEach(n => {\r\n                        this.el.nativeElement.style[n] = cs.style[n];\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","\r\n\r\n\r\n/*\r\n * @Author: ç¯çç§æ(Lucas Huang)\r\n * @Date: 2019-08-06 07:43:53\r\n * @LastEditors: ç¯çç§æ(Lucas Huang)\r\n * @LastEditTime: 2019-10-28 09:28:28\r\n * @QQ: 1055818239\r\n * @Version: v0.0.1\r\n */\r\nimport { NgModule, ModuleWithProviders, Provider, ErrorHandler } from '@angular/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HttpClientModule } from '@angular/common/http';\r\n\r\nimport { DataColumnModule } from '@farris/ui-common/column';\r\nimport { LocaleModule } from '@farris/ui-locale';\r\nimport { NotifyModule } from '@farris/ui-notify';\r\nimport { PaginationModule } from '@farris/ui-pagination';\r\nimport { SimpleFilterModule } from '@farris/ui-filter';\r\n// import { FilterPanelModule, FilterPanelComponent } from '@farris/ui-filter-panel';\r\n\r\nimport { DatagridSmartFilterModule } from './plugins/smart-filter/datagrid-smart-filter.module';\r\n\r\nimport { DatagridComponent } from './datagrid.component';\r\nimport { NgxPaginationModule } from './pagination/ngx-pagination.module';\r\nimport { DatagridPagerComponent } from './components/pager/pager.component';\r\nimport { DataGridLoadingComponent } from './components/loading.component';\r\nimport { DatagridHeaderComponent, FilterRowCreateDirective } from './components/header/datagrid-header.component';\r\nimport { DatagridCellEditableDirective } from './components/body/datagrid-cell-editable.directive';\r\nimport { DatagridCellComponent } from './components/body/datagrid-cell.component';\r\nimport { DatagridRowDirective } from './components/body/datagrid-row.directive';\r\nimport { DatagridBodyComponent } from './components/body/datagrid-body.component';\r\nimport { DatagridCellEditorDirective } from './components/columns/column-cell-edit.directive';\r\nimport { DatagridColumnDirective } from './components/columns/datagrid-column.directive';\r\nimport { GridCellEditorDirective } from './components/editors/cell-editor.directive';\r\nimport { ScrollbarModule } from './scrollbar/scrollbar.module';\r\nimport { ScrollbarConfigInterface, SCROLLBAR_CONFIG } from './scrollbar/scrollbar.interfaces';\r\n\r\nimport { DatagridRowHoverDirective } from './components/body/datagrid-row-hover.directive';\r\nimport { DatagridRowsComponent } from './components/body/datagrid-rows.component';\r\nimport { DatagridCheckboxComponent } from './components/checkbox/datagrid-checkbox.component';\r\nimport { DatagridHeaderCheckboxComponent } from './components/checkbox/datagrid-header-checkbox.component';\r\nimport { DatagridResizeColumnDirective } from './components/header/datagrid-resize-column.directive';\r\nimport { DatagridFooterComponent } from './components/footer/datagrid-footer.component';\r\nimport { SafePipe } from './utils/safe.pipe';\r\nimport { FormatCellDataPipe } from './utils/format-cell-data.pipe';\r\nimport { RowDataIdPipe } from './utils/rowid.pipe';\r\nimport { FormatGroupRowPipe } from './utils/format-group-row.pipe';\r\nimport { FixedLeftRowsComponent } from './components/body/fixed-left-rows.component';\r\n\r\n/** å¼å®¹ä¸èçæ¬ */\r\nimport { TextboxEditorComponent } from './components/editors/text-editor.component';\r\n\r\nimport { ReplaceXPipe } from './utils/rexplaceX.pipe';\r\nimport { DatagridGroupRowDirective } from './components/body/datagrid-grouprow.directive';\r\nimport { ShowRequiredStarPipe } from './utils/show-required-label.pipe';\r\nimport { DisableRowPipe } from './utils/disable-row.pipe';\r\nimport { SelectedRowPipe } from './utils/select-row.pipe';\r\nimport { FieldValuePipe } from './utils/field-value.pipe';\r\nimport { DatagridCellTooltipDirective } from './components/tooltip/cell-tooltip.directive';\r\nimport { CellTootipMessagePipe } from './components/tooltip/tip-message.pipe';\r\nimport { DatagridFilterToolbarComponent } from './components/filter-toolbar/filter-toolbar.component';\r\nimport { HeaderStyleDirective } from './components/header/header-style.directive';\r\nimport { AutoHeightComponent } from './components/auto-height/auto-height.component';\r\nimport { RowIsSelectedPipe } from './utils/row-is-selected.pipe';\r\nimport { RowIsCheckedPipe } from './utils/row-is-checked.pipe';\r\nimport { DatagridErrorHandler } from './datagrid-error-handler';\r\nimport { AutoHeightDirective } from './components/auto-height/auto-height.directive';\r\nimport { ValidatorMessagerService } from './services/validator-messager.service';\r\nimport { PagerSelectedListComponent } from './components/pager/selected-list/selected-list.component';\r\nimport { SelectedItemPipe } from './components/pager/selected-item.pipe';\r\nimport { DatagridRowDblClickDirective } from './components/body/datagrid-row-dblclick.directive';\r\nimport { FooterCellStylerDirective } from './components/footer/datagrid-footer-cell.styler.directive';\r\nimport { DragColumnDirective } from './components/header/datagrid-drag-column.directive';\r\nimport { DropColumnDirective } from './components/header/datagrid-drop-column.directive';\r\nimport { SmartFilterToolbarComponent } from './components/filter-toolbar/smart-filter-toolbar.component';\r\n\r\nimport { FarrisContextMenuModule } from '@farris/ui-context-menu';\r\nimport { GroupFooterRowStylerDirective } from './components/body/datagrid-group-footer-styler.directive';\r\n\r\nconst DEFAULT_PERFECT_SCROLLBAR_CONFIG: ScrollbarConfigInterface = {\r\n    minScrollbarLength: 20\r\n};\r\n\r\n@NgModule({\r\n    imports: [\r\n        CommonModule,\r\n        FormsModule,\r\n        ReactiveFormsModule,\r\n        HttpClientModule,\r\n        PaginationModule,\r\n        NgxPaginationModule,\r\n        ScrollbarModule,\r\n        LocaleModule.forRoot(),\r\n        DataColumnModule.forRoot(),\r\n        NotifyModule.forRoot(),\r\n        SimpleFilterModule,\r\n        DatagridSmartFilterModule,\r\n        FarrisContextMenuModule\r\n    ],\r\n    declarations: [\r\n        SafePipe,\r\n        FormatCellDataPipe,\r\n        RowDataIdPipe,\r\n        FormatGroupRowPipe,\r\n        ShowRequiredStarPipe,\r\n        FieldValuePipe,\r\n        ReplaceXPipe,\r\n        DisableRowPipe,\r\n        SelectedRowPipe,\r\n        CellTootipMessagePipe,\r\n        DatagridComponent,\r\n        DatagridHeaderComponent,\r\n        DatagridFooterComponent,\r\n        DatagridResizeColumnDirective,\r\n        DatagridCellEditableDirective,\r\n        DatagridCellComponent,\r\n        DatagridRowDirective,\r\n        DatagridBodyComponent,\r\n        DatagridPagerComponent,\r\n        DatagridCellEditorDirective,\r\n        DatagridColumnDirective,\r\n        DatagridRowsComponent,\r\n        FixedLeftRowsComponent,\r\n        DatagridRowHoverDirective,\r\n        DataGridLoadingComponent,\r\n        DatagridCheckboxComponent,\r\n        DatagridHeaderCheckboxComponent,\r\n        GridCellEditorDirective,\r\n        TextboxEditorComponent,\r\n        DatagridGroupRowDirective,\r\n        DatagridCellTooltipDirective,\r\n        DatagridFilterToolbarComponent,\r\n        HeaderStyleDirective,\r\n        AutoHeightDirective,\r\n        AutoHeightComponent,\r\n        RowIsSelectedPipe,\r\n        RowIsCheckedPipe,\r\n        SelectedItemPipe,\r\n        PagerSelectedListComponent,\r\n        DatagridRowDblClickDirective,\r\n        FooterCellStylerDirective,\r\n        DragColumnDirective,\r\n        DropColumnDirective,\r\n        FilterRowCreateDirective,\r\n        SmartFilterToolbarComponent,\r\n        GroupFooterRowStylerDirective\r\n    ],\r\n    providers: [\r\n        { provide: ErrorHandler, useClass: DatagridErrorHandler },\r\n        {\r\n            provide: SCROLLBAR_CONFIG,\r\n            useValue: DEFAULT_PERFECT_SCROLLBAR_CONFIG\r\n        },\r\n        ValidatorMessagerService\r\n    ],\r\n    exports: [\r\n        DatagridComponent,\r\n        DatagridHeaderComponent,\r\n        DatagridColumnDirective,\r\n        DatagridCellEditorDirective,\r\n        DatagridCellEditableDirective,\r\n        DatagridRowHoverDirective,\r\n        DatagridResizeColumnDirective,\r\n        TextboxEditorComponent,\r\n        FormatCellDataPipe,\r\n        RowDataIdPipe,\r\n        ReplaceXPipe,\r\n        FieldValuePipe,\r\n        CellTootipMessagePipe,\r\n        ShowRequiredStarPipe,\r\n        DatagridCellTooltipDirective,\r\n        DatagridFilterToolbarComponent,\r\n        RowIsSelectedPipe,\r\n        RowIsCheckedPipe,\r\n        DatagridRowDblClickDirective,\r\n        FooterCellStylerDirective,\r\n        DragColumnDirective,\r\n        DropColumnDirective,\r\n        FilterRowCreateDirective,\r\n        SmartFilterToolbarComponent,\r\n        DatagridSmartFilterModule,\r\n        GroupFooterRowStylerDirective,\r\n        FarrisContextMenuModule\r\n    ],\r\n    entryComponents: [\r\n        // FilterPanelComponent\r\n    ]\r\n})\r\nexport class DatagridModule {\r\n    static forRoot(editors?: Provider[]): ModuleWithProviders {\r\n        return {\r\n            ngModule: DatagridModule,\r\n            providers: editors || []\r\n        };\r\n    }\r\n}\r\n"]}