(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('@angular/forms'), require('@angular/router')) :
    typeof define === 'function' && define.amd ? define('@farris/ui-list-nav', ['exports', '@angular/core', '@angular/common', '@angular/forms', '@angular/router'], factory) :
    (factory((global.farris = global.farris || {}, global.farris['ui-list-nav'] = {}),global.ng.core,global.ng.common,global.ng.forms,global.ng.router));
}(this, (function (exports,i0,common,forms,router) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var ListNavService = /** @class */ (function () {
        function ListNavService() {
        }
        ListNavService.decorators = [
            { type: i0.Injectable, args: [{
                        providedIn: 'root'
                    },] }
        ];
        /** @nocollapse */
        ListNavService.ctorParameters = function () { return []; };
        /** @nocollapse */ ListNavService.ngInjectableDef = i0.defineInjectable({ factory: function ListNavService_Factory() { return new ListNavService(); }, token: ListNavService, providedIn: "root" });
        return ListNavService;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var listNavHeaderTemplateDirective = /** @class */ (function () {
        function listNavHeaderTemplateDirective(template) {
            this.template = template;
        }
        listNavHeaderTemplateDirective.decorators = [
            { type: i0.Directive, args: [{
                        selector: '[listNavHeader]'
                    },] }
        ];
        /** @nocollapse */
        listNavHeaderTemplateDirective.ctorParameters = function () {
            return [
                { type: i0.TemplateRef }
            ];
        };
        return listNavHeaderTemplateDirective;
    }());
    var listNavContentTemplateDirective = /** @class */ (function () {
        function listNavContentTemplateDirective(template) {
            this.template = template;
        }
        listNavContentTemplateDirective.decorators = [
            { type: i0.Directive, args: [{
                        selector: '[listNavContent]'
                    },] }
        ];
        /** @nocollapse */
        listNavContentTemplateDirective.ctorParameters = function () {
            return [
                { type: i0.TemplateRef }
            ];
        };
        return listNavContentTemplateDirective;
    }());
    var listNavFooterTemplateDirective = /** @class */ (function () {
        function listNavFooterTemplateDirective(template) {
            this.template = template;
        }
        listNavFooterTemplateDirective.decorators = [
            { type: i0.Directive, args: [{
                        selector: '[listNavFooter]'
                    },] }
        ];
        /** @nocollapse */
        listNavFooterTemplateDirective.ctorParameters = function () {
            return [
                { type: i0.TemplateRef }
            ];
        };
        return listNavFooterTemplateDirective;
    }());
    var ListNavComponent = /** @class */ (function () {
        /**是否展开navlist */
        // showList:boolean = true;
        function ListNavComponent() {
            /**
             * listnav宽度
             */
            this.listNavWidth = 218;
            // 显示入口
            this.showEntry = true;
            this.hover = false;
            this.disabled = false;
            this.position = 'left';
            this.hideNav = false;
            /**link发生变化 */
            // @Output('link-change') linkChange = new EventEmitter();
            /**
             * 收起折叠状态变化
             */
            this.navStateChange = new i0.EventEmitter();
        }
        /**
         * @return {?}
         */
        ListNavComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
            };
        /**
         * @param {?} event
         * @return {?}
         */
        ListNavComponent.prototype.toggle = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                event.stopPropagation();
                if (this.disabled) {
                    return;
                }
                this.hideNav = !this.hideNav;
                this.navStateChange.emit({ 'showNav': !this.hideNav });
            };
        /**
         * @param {?} event
         * @return {?}
         */
        ListNavComponent.prototype.hoverToggle = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                this.hideNav = !this.hideNav;
                this.navStateChange.emit({ 'showNav': !this.hideNav });
            };
        ListNavComponent.decorators = [
            { type: i0.Component, args: [{
                        selector: 'farris-list-nav',
                        template: "<div class=\"f-list-nav\" [ngClass]=\"{'f-list-nav-left': position === 'left','f-list-nav-right': position === 'right'}\">\r\n    <div class=\"f-list-nav-in\" [ngStyle]=\"{'width': !hideNav? listNavWidth +'px' : '0px','transition':'width .5s'}\">\r\n        <div class=\"f-list-nav-main\" [hidden]=\"hideNav\">\r\n            <div class=\"f-list-nav-header\" *ngIf=\"HeaderTemplate\">\r\n                <ng-container [ngTemplateOutlet]=\"HeaderTemplate\"></ng-container>\r\n            </div>\r\n            <div class=\"f-list-nav-header\" *ngIf=\"!HeaderTemplate && title\">\r\n                <div class=\"f-list-nav-title\">\r\n                    {{title}}\r\n                </div>\r\n            </div>\r\n            <div class=\"f-list-nav-content\" *ngIf=\"NavContentTemplate\">\r\n                <ng-container [ngTemplateOutlet]=\"NavContentTemplate\"></ng-container>\r\n            </div>\r\n            <div class=\"f-list-nav-footer\" *ngIf=\"NavFooterTemplate\">\r\n                <ng-container [ngTemplateOutlet]=\"NavFooterTemplate\"></ng-container>\r\n            </div>\r\n        </div>\r\n        <div class=\"f-list-nav-toggle-sidebar\" *ngIf=\"showEntry\" [ngClass]=\"{'f-list-nav-toggle-disabled': disabled,'active': hideNav}\" (click)=\"toggle($event)\">\r\n            <span class=\"triangle\"></span>\r\n        </div>\r\n    </div>\r\n    \r\n</div>",
                        styles: [".f-list-nav{height:100%;min-height:200px}.f-list-nav .f-list-nav-in{position:relative;height:100%;background-color:#fff;box-shadow:1px 1px 8px 0 rgba(0,28,64,.08)}.f-list-nav .f-list-nav-main{display:-webkit-box;display:flex;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-direction:column;height:100%;overflow-x:hidden}.f-list-nav .f-list-nav-main .f-list-nav-footer,.f-list-nav .f-list-nav-main .f-list-nav-header{flex-shrink:0}.f-list-nav .f-list-nav-main .f-list-nav-content{-webkit-box-flex:1;flex-grow:1;flex-shrink:1;flex-basis:0;overflow-y:auto}.f-list-nav .f-list-nav-main .f-list-nav-header .f-list-nav-title{padding:1rem 3rem 1rem 2.5rem;line-height:1.375rem;font-size:1rem;color:#000;border-bottom:1px solid #e9e9e9;white-space:nowrap;overflow:hidden;text-overflow:ellipsis}.f-list-nav .f-list-nav-toggle-sidebar{position:absolute;right:-.375rem;top:50%;z-index:99;margin-top:-2.375rem;width:.375rem;height:4.75rem;line-height:4.75rem;text-align:center;border-radius:0 4px 4px 0;cursor:pointer}.f-list-nav .f-list-nav-toggle-sidebar .triangle{display:inline-block;width:0;height:0}.f-list-nav .f-list-nav-toggle-sidebar.f-list-nav-toggle-disabled{cursor:not-allowed}.f-list-nav .f-list-nav-toggle-sidebar.f-list-nav-toggle-disabled:hover{background:rgba(0,28,64,.1)}.f-list-nav .f-list-nav-toggle-sidebar.f-list-nav-toggle-disabled:hover .triangle{border-right:.25rem solid #818fab}.f-list-nav.f-list-nav-left{padding-right:.375rem}.f-list-nav.f-list-nav-left .f-list-nav-toggle-sidebar .triangle{border-top:.3875rem solid transparent;border-bottom:.3875rem solid transparent;border-right:.25rem solid #818fab}.f-list-nav.f-list-nav-left .f-list-nav-toggle-sidebar:hover .triangle{border-right:.25rem solid #fff}.f-list-nav.f-list-nav-left .f-list-nav-toggle-sidebar.active .triangle{border-right:none;border-left:.25rem solid #fff}.f-list-nav.f-list-nav-right{padding-left:.375rem}.f-list-nav.f-list-nav-right .f-list-nav-toggle-sidebar{left:-.375rem}.f-list-nav.f-list-nav-right .f-list-nav-toggle-sidebar .triangle{border-top:.3875rem solid transparent;border-bottom:.3875rem solid transparent;border-left:.25rem solid #818fab}.f-list-nav.f-list-nav-right .f-list-nav-toggle-sidebar:hover .triangle{border-left:.25rem solid #fff}.f-list-nav.f-list-nav-right .f-list-nav-toggle-sidebar.active .triangle{border-left:none;border-right:.25rem solid #fff}"]
                    }] }
        ];
        /** @nocollapse */
        ListNavComponent.ctorParameters = function () { return []; };
        ListNavComponent.propDecorators = {
            HeaderTemplate: [{ type: i0.ContentChild, args: [listNavHeaderTemplateDirective, { read: i0.TemplateRef },] }],
            NavContentTemplate: [{ type: i0.ContentChild, args: [listNavContentTemplateDirective, { read: i0.TemplateRef },] }],
            NavFooterTemplate: [{ type: i0.ContentChild, args: [listNavFooterTemplateDirective, { read: i0.TemplateRef },] }],
            title: [{ type: i0.Input }],
            listNavWidth: [{ type: i0.Input }],
            showEntry: [{ type: i0.Input }],
            hover: [{ type: i0.Input }],
            disabled: [{ type: i0.Input }],
            position: [{ type: i0.Input }],
            hideNav: [{ type: i0.Input }],
            navStateChange: [{ type: i0.Output, args: ['navStateChange',] }]
        };
        return ListNavComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var ListNavModule = /** @class */ (function () {
        function ListNavModule() {
        }
        ListNavModule.decorators = [
            { type: i0.NgModule, args: [{
                        declarations: [ListNavComponent, listNavHeaderTemplateDirective, listNavContentTemplateDirective, listNavFooterTemplateDirective],
                        imports: [
                            common.CommonModule,
                            forms.FormsModule,
                            router.RouterModule
                        ],
                        exports: [ListNavComponent, listNavHeaderTemplateDirective, listNavContentTemplateDirective, listNavFooterTemplateDirective]
                    },] }
        ];
        return ListNavModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,constantProperty,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.ListNavService = ListNavService;
    exports.listNavHeaderTemplateDirective = listNavHeaderTemplateDirective;
    exports.listNavContentTemplateDirective = listNavContentTemplateDirective;
    exports.listNavFooterTemplateDirective = listNavFooterTemplateDirective;
    exports.ListNavComponent = ListNavComponent;
    exports.ListNavModule = ListNavModule;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=farris-ui-list-nav.umd.js.map