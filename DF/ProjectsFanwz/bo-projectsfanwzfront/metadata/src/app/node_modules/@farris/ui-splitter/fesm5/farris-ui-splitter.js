import { Injectable, Component, HostBinding, Input, ContentChildren, NgModule, defineInjectable } from '@angular/core';
import { AngularDraggableModule } from '@farris/ui-draggable';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SplitterService = /** @class */ (function () {
    function SplitterService() {
    }
    SplitterService.decorators = [
        { type: Injectable, args: [{
                    providedIn: 'root'
                },] }
    ];
    /** @nocollapse */
    SplitterService.ctorParameters = function () { return []; };
    /** @nocollapse */ SplitterService.ngInjectableDef = defineInjectable({ factory: function SplitterService_Factory() { return new SplitterService(); }, token: SplitterService, providedIn: "root" });
    return SplitterService;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SplitterPaneComponent = /** @class */ (function () {
    function SplitterPaneComponent() {
        this.cls = true;
    }
    /**
     * @return {?}
     */
    SplitterPaneComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    SplitterPaneComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-splitter-pane',
                    template: "\n    <ng-content></ng-content>\n  "
                }] }
    ];
    /** @nocollapse */
    SplitterPaneComponent.ctorParameters = function () { return []; };
    SplitterPaneComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class.f-component-splitter-pane',] }]
    };
    return SplitterPaneComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SplitterComponent = /** @class */ (function () {
    function SplitterComponent() {
        this.cls = true;
        this.orientation = "horizontal";
    }
    /**
     * @return {?}
     */
    SplitterComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    /**
     * @return {?}
     */
    SplitterComponent.prototype.ngAfterContentInit = /**
     * @return {?}
     */
    function () {
        // console.log(this.splitterPane)
        // const length = this.splitterPane.length;
        // const cls = 'f-col-w' + Math.floor(12 / length);
        // if (this.orientation === 'horizontal') {
        //   this.splitterPane.forEach((item, index) => {
        //     if (index < length - 1) {
        //       item.cls += 'd-flex flex-column farris-lsection ' + cls;
        //     }
        //     if (index === length - 1) {
        //       item.cls += 'farris-rsection farris-overflow-y-auto f-utils-fill';
        //     }
        //   })
        // }
    };
    SplitterComponent.decorators = [
        { type: Component, args: [{
                    selector: 'farris-splitter',
                    template: "\n    <ng-content></ng-content>\n  "
                }] }
    ];
    /** @nocollapse */
    SplitterComponent.ctorParameters = function () { return []; };
    SplitterComponent.propDecorators = {
        cls: [{ type: HostBinding, args: ['class.f-component-splitter',] }],
        orientation: [{ type: Input }],
        splitterPane: [{ type: ContentChildren, args: [SplitterPaneComponent,] }]
    };
    return SplitterComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SplitterModule = /** @class */ (function () {
    function SplitterModule() {
    }
    SplitterModule.decorators = [
        { type: NgModule, args: [{
                    declarations: [
                        SplitterComponent,
                        SplitterPaneComponent
                    ],
                    imports: [
                        AngularDraggableModule
                    ],
                    exports: [
                        SplitterComponent,
                        SplitterPaneComponent
                    ]
                },] }
    ];
    return SplitterModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingOverride,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { SplitterService, SplitterComponent, SplitterPaneComponent, SplitterModule };

//# sourceMappingURL=farris-ui-splitter.js.map